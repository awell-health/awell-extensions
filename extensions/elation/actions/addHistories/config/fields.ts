import {
  FieldType,
  NumericIdSchema,
  type Field,
} from '@awell-health/extensions-core'
import z, { type ZodTypeAny } from 'zod'

export const fields = {
  patientId: {
    id: 'patientId',
    label: 'Patient ID',
    description: 'The patient for whom the the history is being created',
    type: FieldType.NUMERIC,
    required: true,
  },
  past: {
    id: 'past',
    label: 'Past',
    description: 'Add past history item',
    type: FieldType.STRING,
    required: false,
  },
  family: {
    id: 'family',
    label: 'Family',
    description: 'Add family history item',
    type: FieldType.STRING,
    required: false,
  },
  social: {
    id: 'social',
    label: 'Social',
    description: 'Add social history item',
    type: FieldType.STRING,
    required: false,
  },
  habits: {
    id: 'habits',
    label: 'Habits',
    description: 'Add habits history item',
    type: FieldType.STRING,
    required: false,
  },
  diet: {
    id: 'diet',
    label: 'Diet',
    description: 'Add diet history item',
    type: FieldType.STRING,
    required: false,
  },
  exercise: {
    id: 'exercise',
    label: 'Exercise',
    description: 'Add exercise history item',
    type: FieldType.STRING,
    required: false,
  },
  immunization: {
    id: 'immunization',
    label: 'Immunization',
    description: 'Add immunization history item',
    type: FieldType.STRING,
    required: false,
  },
  legal: {
    id: 'legal',
    label: 'Legal',
    description: 'Add legal history item',
    type: FieldType.STRING,
    required: false,
  },
  consultation: {
    id: 'consultation',
    label: 'Consultation',
    description: 'Add consultation history item',
    type: FieldType.STRING,
    required: false,
  },
  healthMaintenance: {
    id: 'healthMaintenance',
    label: 'Health Maintenance',
    description: 'Add health maintenance history item',
    type: FieldType.STRING,
    required: false,
  },
  pastSurgical: {
    id: 'pastSurgical',
    label: 'Past Surgical',
    description: 'Add surgical history item',
    type: FieldType.STRING,
    required: false,
  },
  cognitiveStatus: {
    id: 'cognitiveStatus',
    label: 'Cognitive Status',
    description: 'Add cognitive history item',
    type: FieldType.STRING,
    required: false,
  },
  functionalStatus: {
    id: 'functionalStatus',
    label: 'Functional Status',
    description: 'Add functional history item',
    type: FieldType.STRING,
    required: false,
  },
} satisfies Record<string, Field>

export const FieldsValidationSchema = z.object({
  patientId: NumericIdSchema,
  past: z.string().optional(),
  family: z.string().optional(),
  social: z.string().optional(),
  habits: z.string().optional(),
  diet: z.string().optional(),
  exercise: z.string().optional(),
  immunization: z.string().optional(),
  legal: z.string().optional(),
  consultation: z.string().optional(),
  healthMaintenance: z.string().optional(),
  pastSurgical: z.string().optional(),
  cognitiveStatus: z.string().optional(),
  functionalStatus: z.string().optional(),
} satisfies Record<keyof typeof fields, ZodTypeAny>)
