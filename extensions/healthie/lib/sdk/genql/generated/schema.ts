// @ts-nocheck
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

export type Scalars = {
    Boolean: boolean,
    Cursor: any,
    Float: number,
    ID: string,
    ISO8601DateTime: any,
    ISO8601Duration: any,
    Int: number,
    JSON: any,
    String: string,
    Upload: any,
}


/** Accepted Insurance Plan */
export interface AcceptedInsurancePlan {
    /** Unique identifier of the plan */
    id: Scalars['ID']
    /** Connected ICD Code Object */
    insurance_plan: (InsurancePlan | null)
    __typename: 'AcceptedInsurancePlan'
}


/** Autogenerated return type of AddClaimSubmitter. */
export interface AddClaimSubmitterPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'AddClaimSubmitterPayload'
}


/** Autogenerated return type of AddCptCode. */
export interface AddCptCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'AddCptCodePayload'
}


/** Autogenerated return type of AddIcdCode. */
export interface AddIcdCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'AddIcdCodePayload'
}


/** Autogenerated return type of AddReplyToEmailAddresses. */
export interface AddReplyToEmailAddressesPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string if the mutation was successful */
    success_string: (Scalars['String'] | null)
    __typename: 'AddReplyToEmailAddressesPayload'
}


/** Specific appointment price object for provider/client */
export interface AdvanceAppointmentPrice {
    /** Appointment type ID this appointment price is associated with. */
    appointment_type_id: (Scalars['ID'] | null)
    /** The unique identifier of the price */
    id: Scalars['ID']
    /** The advance price for this appointment type */
    price: Scalars['String']
    /** User ID this appointment price is associated with. */
    user_id: Scalars['ID']
    __typename: 'AdvanceAppointmentPrice'
}


/** (DEPRECATED - NO LONGER USED) Information on the provider's affiliate abilities */
export interface Affiliate {
    /** The LeadDyno ID of the affiliate */
    affiliate_id: (Scalars['String'] | null)
    /** The referral URL of the affiliate */
    affiliate_url: (Scalars['String'] | null)
    /** The URL of the affiliate's dashboard */
    dashboard_url: (Scalars['String'] | null)
    /** Unique identifier of the affiliate */
    id: Scalars['ID']
    __typename: 'Affiliate'
}


/** An allergy/sensitivity/preference for a client */
export interface AllergySensitivity {
    /** Enum field. Options: allergy, sensitivity, preference, intolerance, ccda */
    category: Scalars['String']
    /** Type of allergy or like/dislike for preference. Options: food, drug, environmental, pet, latex, like, dislike */
    category_type: (Scalars['String'] | null)
    /** Date/Time created */
    created_at: Scalars['String']
    /** User who created this allergy */
    created_by: (User | null)
    /** The unique identifier of the allergy */
    id: Scalars['ID']
    /**
     * @deprecated Use status instead
     * If the allergy is current.
     */
    is_current: (Scalars['Boolean'] | null)
    /** If the allergy is synchronized with an external system (e.g., an E-Rx system) */
    mirrored: Scalars['Boolean']
    /** The name of the allergy/sensitivity/preference */
    name: (Scalars['String'] | null)
    /** The date of onset */
    onset_date: (Scalars['String'] | null)
    /** Description of the reaction on the allergen */
    reaction: (Scalars['String'] | null)
    /** The type of the reaction. Options are [allergy, adverse_reaction] */
    reaction_type: (Scalars['String'] | null)
    /** When true, this object must be consolidated as part of a CCDA Ingest */
    requires_consolidation: (Scalars['Boolean'] | null)
    /** The severity of the allergy. Options: mild, moderate, severe, unknown */
    severity: (Scalars['String'] | null)
    /** The allergy's current status. Options are [active, inactive, resolved] */
    status: (Scalars['String'] | null)
    /** Date/Time last updated */
    updated_at: (Scalars['String'] | null)
    __typename: 'AllergySensitivity'
}


/** Announcements created by providers for client consumption */
export interface Announcement {
    /** If true, announcement is active */
    active: Scalars['Boolean']
    /** file name of associated image */
    announcement_image_name: (Scalars['String'] | null)
    /** URL of image associated with announcement */
    announcement_image_url: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Announcement content(viewable by client) */
    description: (Scalars['String'] | null)
    /** Unique identifier of the announcement */
    id: Scalars['ID']
    /** Date and time announcement active status was changed */
    last_toggled_at: (Scalars['String'] | null)
    /** User that updated active status of this announcement most recently */
    last_toggled_by: (User | null)
    /** Name of announcement(only viewable by provider) */
    name: (Scalars['String'] | null)
    /** Title of announcement(viewable by client) */
    title: (Scalars['String'] | null)
    /** User that created this announcement */
    user: (User | null)
    /** Comma separated list of user group ids associated with this announcement */
    user_group_ids: (Scalars['String'] | null)
    /** Comma separated list of user group names associated with this announcement */
    user_group_names: (Scalars['String'] | null)
    __typename: 'Announcement'
}


/** A created API Key */
export interface ApiKey {
    /** The datetime the API Key was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Upon the initial creation of the key, this field displays the actual key to be used to authenticate. */
    displayable_key: (Scalars['String'] | null)
    /** Unique identifier of the key */
    id: Scalars['ID']
    /** A user-chosen name for the API key. */
    name: (Scalars['String'] | null)
    __typename: 'ApiKey'
}


/** API Key sorting enum */
export type ApiKeyOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NAME_ASC' | 'NAME_DESC'


/** An Apple Health Sync */
export interface AppleHealth {
    /** The unique identifier of the apple health */
    id: Scalars['ID']
    /** The last time the apple health was synced */
    last_sync_date: (Scalars['String'] | null)
    __typename: 'AppleHealth'
}


/** A tag applied to a user */
export interface AppliedTag {
    /** The time the tag was applied */
    created_at: Scalars['String']
    /** The unique identifier of the applied tag */
    id: Scalars['ID']
    /** The tag applied */
    tag: (Tag | null)
    /** The unique identifier of the tag */
    tag_id: (Scalars['String'] | null)
    /** The time the applied tag was last updated */
    updated_at: Scalars['String']
    /** The tagged user */
    user: (User | null)
    /** The ID of the tagged user */
    user_id: (Scalars['String'] | null)
    __typename: 'AppliedTag'
}


/** AppliedTag sorting enum */
export type AppliedTagOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'UNSORTED'


/** An appointment object containing information about the appointment, including the attendees, date, location, and more. */
export interface Appointment {
    /** The actual length of the appointment (in minutes). Filled in by the provider after the appointment */
    actual_duration: (Scalars['String'] | null)
    /** Get link to add appointment to google calendar */
    add_to_gcal_link: (Scalars['String'] | null)
    /** The category of the appointment */
    appointment_category: (Scalars['String'] | null)
    /** The number of people (both providers and attendees) who are in the appointment */
    appointment_inclusions_count: (Scalars['Int'] | null)
    /** A label for the appointment */
    appointment_label: (Scalars['String'] | null)
    /** the ID of the appointment location */
    appointment_location_id: (Scalars['String'] | null)
    /** The type of the appointment */
    appointment_type: (AppointmentType | null)
    /** The ID of the type of appointment this is */
    appointment_type_id: (Scalars['Int'] | null)
    /** List of assigned user groups to the group appointment */
    assigned_groups: (UserGroup[] | null)
    /** Client inclusions which includes all attendees even if they didnt show up for the appointment */
    attended_clients: (AppointmentInclusionType[] | null)
    /** All attendees for the appointment. */
    attendees: User[]
    /** Pending Appointment inclusions */
    attendees_on_waitlist: (User[] | null)
    /** The backgroundColor color of the appointment */
    backgroundColor: (Scalars['String'] | null)
    /** Returns true if the patient can reschedule the appointment */
    can_be_rescheduled: (Scalars['Boolean'] | null)
    /** True if client able to cancel an appointment */
    can_client_cancel: (Scalars['Boolean'] | null)
    /** True if client able to reschedule an appointment */
    can_client_reschedule: (Scalars['Boolean'] | null)
    /** false if the client needs to confirm the appointment, and has not */
    client_confirmed: (Scalars['Boolean'] | null)
    /** Whether the appointment updating on client side or not */
    client_updating: (Scalars['Boolean'] | null)
    /** The status of whether the provider has confirmed the appointment or not */
    confirmed: (Scalars['Boolean'] | null)
    /** True if appointment is locked */
    connected_chart_note_locked: (Scalars['Boolean'] | null)
    /** The status of the connected chart note */
    connected_chart_note_string: (Scalars['String'] | null)
    /** How the provider and attendees will connect (i.e In-Person or through the phone) */
    contact_type: (Scalars['String'] | null)
    /** The ID of conversation related to the current appointment(only for group appts 10/2020) */
    conversation_id: (Scalars['ID'] | null)
    /** The date and time that the appointment was created */
    created_at: Scalars['String']
    /** True if a credit was used for this appointment */
    credit_was_used: (Scalars['Boolean'] | null)
    /** The position of the appointment in the recurring series */
    current_position_in_recurring_series: (Scalars['Int'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The date and time of the appointment */
    date: (Scalars['String'] | null)
    /** default color of appointment based on confirmation/type */
    default_color: (Scalars['String'] | null)
    /** The time the appointment was deleted. It is blank if the appointment is not deleted. */
    deleted_at: (Scalars['String'] | null)
    /** The end time of the appointment */
    end: (Scalars['String'] | null)
    /** The type of connection to an external calendar */
    external_id_type: (Scalars['String'] | null)
    /** A URL to an external video chat site for the session */
    external_videochat_url: (Scalars['String'] | null)
    /** The custom answers filled out by the booker of the appointment */
    filled_embed_form: (FormAnswerGroup | null)
    /** Form answer group associated with appointment */
    form_answer_group: (FormAnswerGroup | null)
    /** open tok token */
    generated_token: (Scalars['String'] | null)
    /** When true, additional group charting fields are visibile in the Healthie UI */
    has_expanded_vbc_charting_fields: (Scalars['Boolean'] | null)
    /** Returns true if the apointment has inprogress job */
    has_in_progress_job: (Scalars['Boolean'] | null)
    /** The unique identifier of the appointment */
    id: Scalars['ID']
    /** ID of user that created of appointment */
    initiator_id: (Scalars['ID'] | null)
    /** When true, insurance billing will be enabled for this appointment */
    insurance_billing_enabled: (Scalars['Boolean'] | null)
    /** The status of whether this appointment is specifically meant to block availability */
    is_blocker: (Scalars['Boolean'] | null)
    /** Indicates whether it's a group appointment */
    is_group: (Scalars['Boolean'] | null)
    /** The status of whether the video chat uses Zoom or Healthie Default telehealth */
    is_zoom_chat: (Scalars['Boolean'] | null)
    /** id of last conversation between provider and client in appointment */
    last_client_conversation_id: (Scalars['ID'] | null)
    /** The ID of the provider who last updated the appointment record, if available */
    last_updated_by_id: (Scalars['ID'] | null)
    /** The Late Cancellation Fee (in cents) for this appointment */
    late_cancellation_fee: (Scalars['Int'] | null)
    /** The length of the appointment (in minutes) */
    length: (Scalars['Int'] | null)
    /** The plaintext location of the appointment (only used for in-person appointments) */
    location: (Scalars['String'] | null)
    /** Location Resource */
    locationResource: (Scalars['String'] | null)
    /** How many attendees can register for an appointment (only used for Group Appointments) */
    max_attendees: (Scalars['String'] | null)
    /** a serialized JSON string of metadata */
    metadata: (Scalars['JSON'] | null)
    /** Minimum time before the appointment when client can still cancel it */
    minimum_advance_cancel_time: (Scalars['Int'] | null)
    /** Minimum time (in minutes) before the appointment when client can still reschedule it */
    minimum_advance_reschedule_time: (Scalars['Int'] | null)
    /** The No Show Fee (in cents) for this appointment */
    no_show_fee: (Scalars['Int'] | null)
    /** Quick notes on the appointment (only visisble to providers) */
    notes: (Scalars['String'] | null)
    /** The id of the provider */
    other_party_id: (Scalars['Int'] | null)
    /** The number of times a patient rescheduled an appointment */
    patient_reschedule_count: (Scalars['Int'] | null)
    /** The status of the appointment. Can be one of “Occurred”, “No-Show”, “Re-Scheduled”, “Cancelled”, “Late Cancellation” */
    pm_status: (Scalars['String'] | null)
    /** The date and time the status of the appointment was last updated */
    pm_status_changed_at: (Scalars['String'] | null)
    /** The ID of the user who last changed the status of the appointment, if available */
    pm_status_last_changed_by_id: (Scalars['ID'] | null)
    /** Get the pricing info for this appointment */
    pricing_info: (AppointmentPricingInfoType | null)
    /** The provider for the appointment */
    provider: (User | null)
    /** Provider name */
    provider_name: (Scalars['String'] | null)
    /** All providers for the appointment. */
    providers: User[]
    /** The clients reason for scheduling the appointment */
    reason: (Scalars['String'] | null)
    /** The related recurring appointment series */
    recurring_appointment: (RecurringAppointment | null)
    /**
     * @deprecated Use recurring_appointment instead
     * The ID of the recurring appointment
     */
    recurring_appointment_id: (Scalars['String'] | null)
    /**
     * @deprecated Use recurring_appointment instead
     * The status of whether this is a repeating appointment or not
     */
    repeat: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use recurring_appointment instead
     * How often to repeat the appointment (e.g Daily or Monthly)
     */
    repeat_interval: (Scalars['String'] | null)
    /**
     * @deprecated Use recurring_appointment instead
     * How many times does the appointment repeat
     */
    repeat_times: (Scalars['Int'] | null)
    /** A requested payment for this appointment */
    requested_payment: (RequestedPayment | null)
    /** The ID of the user, used for the calendar */
    resourceId: (Scalars['String'] | null)
    /** the ID of the room */
    room_id: (Scalars['ID'] | null)
    /** A string containing info on how the appointment was scheduled */
    scheduled_by: (Scalars['String'] | null)
    /** The OpenTok session ID for the appointment */
    session_id: (Scalars['String'] | null)
    /** When true, a cms1500 should be created when the appointment status is set to occured */
    should_create_cms1500_for_occurred_appointments: (Scalars['Boolean'] | null)
    /** The start time of the appointment */
    start: (Scalars['String'] | null)
    /** The font color of the appointment */
    textColor: (Scalars['String'] | null)
    /** The status of whether the time of this appointment has been separated from the other recurring appointments in the series */
    time_recurring_override: (Scalars['Boolean'] | null)
    /** Timezone abbreviation of the date of the appointment */
    timezone_abbr: (Scalars['String'] | null)
    /** The title of the appointment */
    title: (Scalars['String'] | null)
    /** Unauthenticated link to download an ICS file for the appointment */
    unauthenticated_ics_link: (Scalars['String'] | null)
    /** The last date and time that the appointment was updated */
    updated_at: (Scalars['String'] | null)
    /** Whether the appointment is through Zoom or not */
    use_zoom: (Scalars['Boolean'] | null)
    /** The client in a 1:1 appointment */
    user: (User | null)
    /** The id of the client (if a 1:1 appointment). If a group appointment, will be nil */
    user_id: (Scalars['Int'] | null)
    /** Zoom meeting info. Appointment should have a valid zoom link and the user should have the permission to access the meeting. Otherwise returns nil */
    zoom_appointment: (ZoomAppointment | null)
    /** URLs for Zoom cloud recordings for this appointment */
    zoom_cloud_recording_urls: ((Scalars['String'] | null)[] | null)
    /** The dial-in info provided by zoom if appoint has zoom links.(separated by newline characters) */
    zoom_dial_in_info: (Scalars['String'] | null)
    /** The dial-in info provided by zoom if appoint has zoom links.(separated by break tags) */
    zoom_dial_in_info_html: (Scalars['String'] | null)
    /** An array of JSON objects containing the different dial in numbers for the Zoom call */
    zoom_dial_in_numbers_json: ((Scalars['String'] | null)[] | null)
    /** The join link for other attendees of the Zoom call */
    zoom_join_url: (Scalars['String'] | null)
    /** The Meeting ID for the Zoom call */
    zoom_meeting_id: (Scalars['String'] | null)
    /** The host link to start the Zoom call */
    zoom_start_url: (Scalars['String'] | null)
    __typename: 'Appointment'
}


/** Warnings to show provider before they book */
export interface AppointmentBookingWarning {
    /** Category of warning (e.g no credits) */
    category: (Scalars['String'] | null)
    /** Array of IDs of objects causing booking issues for a given category */
    potential_issue_ids: (Scalars['String'][] | null)
    /** Array of potential booking issues for a given category */
    potential_issues: (Scalars['String'][] | null)
    /** Subtitle describing the category */
    subtitle: (Scalars['String'] | null)
    __typename: 'AppointmentBookingWarning'
}


/** An object containing appointment type credit change event */
export interface AppointmentCreditChange {
    /** The appointment related to credit change event */
    appointment: (Appointment | null)
    /** The time when credit change event was created */
    created_at: Scalars['String']
    /** The event which caused credit change */
    credit_change_event: Scalars['String']
    /** The specific action which caused credit change */
    credit_change_event_type: (Scalars['String'] | null)
    /** The amount of credits after specific event */
    credit_quantity: Scalars['Int']
    /** The unique identifier of the credit change */
    id: Scalars['ID']
    /** The user who triggered credit change */
    initiator: (User | null)
    /** The offering related to credit change event */
    offering: (Offering | null)
    __typename: 'AppointmentCreditChange'
}


/** Appointment Data */
export interface AppointmentDataType {
    /** Appointment Frequency */
    freq: (AppointmentFrequencyDataType | null)
    /** Appointment Month */
    month: (Scalars['String'] | null)
    __typename: 'AppointmentDataType'
}


/** Appointment Frequency Data */
export interface AppointmentFrequencyDataType {
    /** Frequency of cancelled appointments */
    cancelled: (Scalars['Int'] | null)
    /** Frequency of late cancellation appointments */
    late_cancellation: (Scalars['Int'] | null)
    /** Frequency of appointments with no status */
    no_status: (Scalars['Int'] | null)
    /** Frequency of no-show appointments */
    noshow: (Scalars['Int'] | null)
    /** Frequency of occurred appointments */
    occurred: (Scalars['Int'] | null)
    /** Frequency of rescheduled appointments */
    rescheduled: (Scalars['Int'] | null)
    __typename: 'AppointmentFrequencyDataType'
}


/** Provider/Client to Appointment connection */
export interface AppointmentInclusionType {
    /** The appointment the inclusion is connected to. */
    appointment: (Appointment | null)
    /** Indicate whether a group appointment attendee have taken part in the appointment */
    attended: (Scalars['Boolean'] | null)
    /** Indicate if a group appointment attendee cancelled the appointment */
    cancelled: (Scalars['Boolean'] | null)
    /** If the client has confirmed the appointment, or don't need to (THIS IS FIELD IS CURRENTLY USED ONLY FOR GROUP APPT's) */
    confirmed: (Scalars['Boolean'] | null)
    /** The UUID of the appointment inclusion. Can be used in conjunction with appointment settings to allow unauthenticated users to modify an appointment. */
    external_uuid: (Scalars['ID'] | null)
    /** The unique identifier of the appointment inclusion */
    id: Scalars['ID']
    /** The datetime that the attendee joined the appointment */
    join_time: (Scalars['String'] | null)
    /** The datetime that the attendee left the appointment */
    leave_time: (Scalars['String'] | null)
    /** Attendee */
    user: (User | null)
    /**
     * @deprecated Use `user` field
     * Attendee ID
     */
    user_id: (Scalars['ID'] | null)
    __typename: 'AppointmentInclusionType'
}


/** A location where appointments are held */
export interface AppointmentLocation {
    /** Whether the client can select this location or not */
    clients_can_book: Scalars['Boolean']
    /** Whether the location has any rooms */
    has_rooms: (Scalars['Boolean'] | null)
    /** The unique identifier of the appointment */
    id: Scalars['ID']
    /** The location (in plain text) */
    location: (Scalars['String'] | null)
    /** The rooms at the location */
    rooms: (Room[] | null)
    __typename: 'AppointmentLocation'
}


/** Appointment sorting enum */
export type AppointmentOrderKeys = 'DATE_ASC' | 'DATE_DESC' | 'CREATED_AT_DESC' | 'CREATED_AT_ASC' | 'UPDATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UNSORTED'


/** The appointment count for the specific day */
export interface AppointmentPerDayData {
    /** The object with the total count of appointments for each status */
    count: (AppointmentFrequencyDataType | null)
    /** The day we count appointments for */
    date: (Scalars['String'] | null)
    __typename: 'AppointmentPerDayData'
}


/** Appointments for the specific type and day */
export interface AppointmentPerTypePerDayData {
    /** The array containing the appointment count for each appointment status for the specific day */
    appointments: (AppointmentPerDayData[] | null)
    /** The name of the specific appointment type */
    name: (Scalars['String'] | null)
    __typename: 'AppointmentPerTypePerDayData'
}


/** The data type for the appointment count for each appointment type per user */
export interface AppointmentPerTypePerUserData {
    /** The array containing the appointment count for each appointment type for each appointment status for the specific day */
    appointment_types: (AppointmentPerTypePerDayData[] | null)
    /** The name of the specific user who we count appointments for */
    name: (Scalars['String'] | null)
    __typename: 'AppointmentPerTypePerUserData'
}


/** Appointments for each status for the specific day */
export interface AppointmentPerUserData {
    /** The array containing the appointment count for each appointment status for the specific day */
    appointments: (AppointmentPerDayData[] | null)
    /** The name of the provider who we count appointments for */
    name: (Scalars['String'] | null)
    __typename: 'AppointmentPerUserData'
}


/** Appointment pricing info */
export interface AppointmentPricingInfoType {
    /** CPT Code ID */
    cpt_code_id: (Scalars['String'] | null)
    /** The price */
    price: (Scalars['String'] | null)
    /** The units of the price */
    units: (Scalars['String'] | null)
    __typename: 'AppointmentPricingInfoType'
}


/** Appointment Setting options that a provider can customize */
export interface AppointmentSetting {
    /** Insurance plans that are accepted by the provider */
    accepted_insurance_plans: (AcceptedInsurancePlan[] | null)
    /** Whether or not providers will be able to set pricing per appointment type */
    allow_appointment_type_pricing: (Scalars['Boolean'] | null)
    /** If true, clients will be able to cancel an appointment */
    allow_clients_to_cancel_appt: (Scalars['Boolean'] | null)
    /** If true, clients will be able to reschedule an appointment */
    allow_clients_to_reschedule_appt: Scalars['Boolean']
    /** When true, providers can specify external url (e.g., Doxy, VSee) for Video Call appointments. */
    allow_external_videochat_urls: Scalars['Boolean']
    /** When true, a client can reschedule a past appointment (on the Web/API only) */
    allow_past_appointment_rescheduling: Scalars['Boolean']
    /** Whether or not clients will have specific pricing for appointment types */
    allow_specific_client_pricing: Scalars['Boolean']
    /** Whether or not providers will have specific pricing for appointment types */
    allow_specific_provider_pricing: Scalars['Boolean']
    /** Always notify the provider when the client books */
    always_send_confirm_notification: (Scalars['Boolean'] | null)
    /** Appointment Locations for this Appointment Setting */
    appointment_locations: (AppointmentLocation[] | null)
    /** Have different appointment confirmation emails for each appointment type */
    appointment_type_confirmed_email: (Scalars['Boolean'] | null)
    /** Have different appointment reminder emails for each appointment type */
    appointment_type_reminder_email: (Scalars['Boolean'] | null)
    /** When true, and when the appointment setting is associated to a specific appointment type, the reminder settings will override the provider's normal ones */
    appointment_type_reminder_override: (Scalars['Boolean'] | null)
    /** Have different website booking emails for each appointment type */
    appointment_type_website_booking_email: (Scalars['Boolean'] | null)
    /** Seperate confirmation emails for different appointment types */
    appt_type_confirmed_email: (Scalars['Boolean'] | null)
    /** Seperate reminder emails for different appointment types */
    appt_type_reminder_email: (Scalars['Boolean'] | null)
    /** Seperate website booking emails for different appointment types */
    appt_type_website_booking_email: (Scalars['Boolean'] | null)
    /** Ask clients to confirm their appointment */
    ask_clients_to_confirm: (Scalars['Boolean'] | null)
    /** If true, clients can confirm their appointment via text */
    ask_to_confirm_via_text: (Scalars['Boolean'] | null)
    /** When true, after an appointment has been set as occurred, a CMS 1500 claim can be automatically created for the session */
    auto_create_cms1500: (Scalars['Boolean'] | null)
    /** Auto-generate a payment request when an appointment is scheduled */
    auto_invoicing: (Scalars['Boolean'] | null)
    /** when true, a scheduled charge will be created when an appointment is marked as late cancellation or no show */
    auto_schedule_charges_for_late_cancellation_no_show: (Scalars['Boolean'] | null)
    /** When true, it will be automatically submitted to the clearinghouse on the following Friday at 11:59 PM */
    auto_submit_cms1500: (Scalars['Boolean'] | null)
    /** Allow clients to book appointments at none, 20, 30, 60 intervals */
    booking_interval_restriction: (Scalars['Int'] | null)
    /** The amount of minutes to maintain between appointments (prevent back to back appointments) */
    buffer: (Scalars['String'] | null)
    /** The color schemes defined for this appointment setting */
    calendar_color_schemes: (CalendarColorScheme[] | null)
    /** Calendar interval */
    calendar_interval: (Scalars['String'] | null)
    /** Text to display above the client's calendar within Healthie */
    calendar_text: (Scalars['String'] | null)
    /** Message to show clients when they are not allowed to cancel */
    cant_cancel_message: (Scalars['String'] | null)
    /** Message to show clients when they are not allowed to cancel */
    cant_reschedule_message: (Scalars['String'] | null)
    /** Whether or not client with valid payment method will be charged for occured appointments */
    charge_for_occured_appts: (Scalars['Boolean'] | null)
    /** If true, clients will be able to call to provider */
    client_should_call_provider: (Scalars['Boolean'] | null)
    /** When false, the billing tab is hidden from clients */
    clients_have_billing: (Scalars['Boolean'] | null)
    /** Confirm all client-created appointments by default */
    confirm_by_default: (Scalars['Boolean'] | null)
    /** Contact type overrides for this appointment setting */
    contact_type_overrides: (ContactType[] | null)
    /** Show the group appointment form first */
    default_appt_form_to_group: (Scalars['Boolean'] | null)
    /** The template selected will automatically appear when a new chart note is started */
    default_charting_template_id: (Scalars['String'] | null)
    /** The template name selected */
    default_charting_template_name: (Scalars['String'] | null)
    /** The form that should be pre-selected when creating a new group charting note */
    default_group_charting_template: (CustomModuleForm | null)
    /** Use Zoom for all telehealth appointments */
    default_to_zoom: (Scalars['Boolean'] | null)
    /** Video service to use for telehealth appointments ('internal', 'zoom', or 'external') */
    default_video_service: (Scalars['String'] | null)
    /** Prevent the client from rescheduling a past appointment with one of these statuses */
    disallowed_reschedulable_statuses: ((Scalars['String'] | null)[] | null)
    /** The end time to show when setting weekly availability */
    end_time: (Scalars['String'] | null)
    /** Facebook pixel code that runs when the client completes the embdedded scheduler/purchaser */
    fb_pixel: (Scalars['String'] | null)
    /**
     * @deprecated This now always returns true
     * Assign a name to chart notes
     */
    give_notes_name: (Scalars['Boolean'] | null)
    /** If true, hide insurance getting started info */
    hide_insurance_getting_started_info: (Scalars['Boolean'] | null)
    /** Hide links to Healthie from appointment reminders */
    hide_link: (Scalars['Boolean'] | null)
    /** The unique identifier of the setting */
    id: Scalars['ID']
    /** When true, it will show the option to run an insurance eligibility check for a client */
    insurance_eligibility_integration: (Scalars['Boolean'] | null)
    /** Whether or not to send invoice to client without a valid payment card/method */
    invoice_clients_without_payment_method: (Scalars['Boolean'] | null)
    /** The fee (in cents) to use for appointments marked as late cancellation */
    late_cancellation_fee: (Scalars['Int'] | null)
    /** The maximum number of days in advance a client can book */
    max_days_in_future: (Scalars['String'] | null)
    /** Maximum time a client must wait before being able to reschedule a past appointment */
    maximum_past_reschedule_time: (Scalars['Int'] | null)
    /** Minimum time before the appointment when client still can cancel it (in minutes) */
    minimum_advance_cancel_time: (Scalars['Int'] | null)
    /** Minimum time before the appointment when client still can reschedule it (in minutes) */
    minimum_advance_reschedule_time: (Scalars['Int'] | null)
    /** Minimum time before the despired appointment type where client still can schedule it (in minutes) */
    minimum_advance_schedule_time: (Scalars['Int'] | null)
    /** The minimum days in advance a client has to book */
    minimum_days_in_advance: (Scalars['String'] | null)
    /** Minimum time a client must wait before being able to reschedule a past appointment */
    minimum_past_reschedule_time: (Scalars['Int'] | null)
    /** The fee (in cents) to use for appointments marked as no show */
    no_show_fee: (Scalars['Int'] | null)
    /**
     * @deprecated Use booking_interval_restriction instead
     * Either "even" or "hour" to restrict booking to even hours or half hours.
     */
    only_book: (Scalars['String'] | null)
    /**
     * @deprecated Use booking_interval_restriction instead
     * Whether or not to restrict booking to even hours or half hours.
     */
    only_book_even: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use booking_interval_restriction instead
     * Whether or not to restrict booking to even hours or half hours.
     */
    only_book_hour: (Scalars['Boolean'] | null)
    /** Owner of this appointment_setting */
    owner: (User | null)
    /** The maximum number of times a patient can self reschedule */
    patient_reschedule_count_cap: (Scalars['String'] | null)
    /** Appointment statuses that can be applied to an appointment. Includes default ones plus any custom */
    pm_statuses: ((Scalars['String'] | null)[] | null)
    /** Prevent clients from booking an appointment */
    prevent_client_booking: (Scalars['Boolean'] | null)
    /** Prevent clients from booking if they do not have the needed credit */
    prevent_no_credit_booking: (Scalars['Boolean'] | null)
    /** When true, replies to automatic notifications will go to the provider */
    reply_to_provider: (Scalars['Boolean'] | null)
    /** When true, providers and staff will always be asked to select an appointment location when scheduling, even if its a video chat. */
    require_selected_location_for_all_contact_types: (Scalars['Boolean'] | null)
    /** The minimum number of days beyond the current appointment date that the patient can reschedule to */
    reschedule_max_days_before_date: (Scalars['String'] | null)
    /** The maximum number of days beyond the current appointment date that the patient can reschedule to */
    reschedule_max_days_from_date: (Scalars['String'] | null)
    /** Give clients their credit back when an appointment is cancelled */
    restore_credit_on_cancel: (Scalars['Boolean'] | null)
    /** When true, clients are prevented from scheduling appointments the day of */
    same_day_appointments: (Scalars['Boolean'] | null)
    /** When false, no appointment cancel emails are sent to patients. */
    send_appointment_cancellation_email: (Scalars['Boolean'] | null)
    /** When false, no appointment update emails are sent to patients. */
    send_appointment_update_email: (Scalars['Boolean'] | null)
    /** Send clients an email when a provider schedules an appointment */
    send_booking_notice: (Scalars['Boolean'] | null)
    /** Send an email 5 minutes before a video chat starts */
    send_email_before_appointment: (Scalars['Boolean'] | null)
    /** Send email reminder to complete intake forms two days before */
    send_intake_forms_reminder: (Scalars['Boolean'] | null)
    /** Send a push notification 5 minutes before a video chat starts */
    send_push_before_appointment: (Scalars['Boolean'] | null)
    /** Send an email reminder four days before the appointment */
    send_reminder_four_days_before: (Scalars['Boolean'] | null)
    /** Send an email reminder one day before the appointment */
    send_reminder_one_day_before: (Scalars['Boolean'] | null)
    /** Send an email reminder one hour before the appointment */
    send_reminder_one_hour_before: (Scalars['Boolean'] | null)
    /** Send an email reminder three days before the appointment */
    send_reminder_three_days_before: (Scalars['Boolean'] | null)
    /** Send an email reminder two days before the appointment */
    send_reminder_two_days_before: (Scalars['Boolean'] | null)
    /** Send an email reminder two hours before the appointment */
    send_reminder_two_hours_before: (Scalars['Boolean'] | null)
    /** NOTE: Your organization MUST have its own Twilio account configured to have this feature, and have AppointmentSetting.send_email_before_appointment enabled */
    send_text_reminder_five_minutes_before: (Scalars['Boolean'] | null)
    /** Send a text reminder four days before the appointment */
    send_text_reminder_four_days_before: (Scalars['Boolean'] | null)
    /** Send a text reminder one day before the appointment */
    send_text_reminder_one_day_before: (Scalars['Boolean'] | null)
    /** Send a text reminder one hour before the appointment */
    send_text_reminder_one_hour_before: (Scalars['Boolean'] | null)
    /** Send a text reminder three days before the appointment */
    send_text_reminder_three_days_before: (Scalars['Boolean'] | null)
    /** Send a text reminder two days before the appointment */
    send_text_reminder_two_days_before: (Scalars['Boolean'] | null)
    /** Send a text reminder two hours before the appointment */
    send_text_reminder_two_hours_before: (Scalars['Boolean'] | null)
    /** When true, providers can set a default external link for video call sessions. */
    set_default_videochat_url: (Scalars['Boolean'] | null)
    /** If True, provider will see Care Plans option on a Client profile page */
    show_care_plans: (Scalars['Boolean'] | null)
    /** If true, show cms1500s */
    show_cms1500s: (Scalars['Boolean'] | null)
    /** When false, the faxing tab on the left hand side is hidden from providers */
    show_faxes: (Scalars['Boolean'] | null)
    /** If true, show the insurance authorization section on the clients profile */
    show_insurance_authorization: (Scalars['Boolean'] | null)
    /** If true, show office ally */
    show_office_ally: (Scalars['Boolean'] | null)
    /** If true, show superbills */
    show_superbills: (Scalars['Boolean'] | null)
    /** Facebook pixel code that runs when the client starts the embdedded scheduler/purchaser */
    start_fb_pixel: (Scalars['String'] | null)
    /** The start time to show when setting weekly availability */
    start_time: (Scalars['String'] | null)
    /** Set different availability for each appointment type */
    times_by_appointment_type: (Scalars['Boolean'] | null)
    /** Set different availability for each contact type */
    times_by_contact_type: (Scalars['Boolean'] | null)
    /** Set different availability for each appointment location */
    times_by_location: (Scalars['Boolean'] | null)
    /** The last date and time that the appointment setting was updated */
    updated_at: (Scalars['String'] | null)
    /** If true, cpt units and fees can be associated with appointment types */
    use_appointment_type_cpt_units_and_fees: (Scalars['Boolean'] | null)
    /** Whether or not to use the client credit system */
    use_client_credit_system: (Scalars['Boolean'] | null)
    /** If true, you can see where each client came from */
    use_client_sources: (Scalars['Boolean'] | null)
    /** If true, clients will be placed in a waiting room instead of joining the Zoom call directly */
    use_zoom_waiting_room: (Scalars['Boolean'] | null)
    /** The id of the user */
    user_id: (Scalars['String'] | null)
    /** Default video url settings */
    video_url_default: (VideoUrlDefault | null)
    __typename: 'AppointmentSetting'
}


/** The data for the appointment summary */
export interface AppointmentSummaryData {
    /** The array containing the appointment count for each appointment status for the specific day */
    appointment_history: (AppointmentPerDayData[] | null)
    /** The array containing the appointment count for each appointment status for each provider for the specific day */
    appointment_history_per_provider: (AppointmentPerUserData[] | null)
    /** The array containing the appointment count for each appointment status for each provider for each appointment type for the specific day */
    appointment_history_per_provider_and_type: (AppointmentPerTypePerUserData[] | null)
    /** The array containing the appointment count for each appointment status for each appointment type for the specific day */
    appointment_history_per_type: (AppointmentPerTypePerDayData[] | null)
    /** The count of appointments for each appointment type */
    appointments_per_type_count: (AppointmentTypeAppointmentCountData[] | null)
    /** The average amount of appointments per day */
    avg_per_day: (Scalars['Int'] | null)
    /** The difference between the current average amount of appointments and the average count of appointments in prior period */
    avg_per_day_percent_diff: (Scalars['Int'] | null)
    /** The busiest week day in selected period */
    busiest_days_of_week: ((Scalars['String'] | null)[] | null)
    /** When true, the data is in the process of being generated and stored in the cache. */
    cache_generation_in_progress: (Scalars['Boolean'] | null)
    /** The difference in contrast to previous period in percents */
    percent_diff: (Scalars['Int'] | null)
    /** The total appointment count */
    total_count: (Scalars['Int'] | null)
    __typename: 'AppointmentSummaryData'
}


/** An object containing information about the type of appointment */
export interface AppointmentType {
    /** The number of clients with advance pricing for this appointment type */
    advance_pricing_for_clients_count: (Scalars['String'] | null)
    /** The number of providers with advance pricing for this appointment type */
    advance_pricing_for_providers_count: (Scalars['String'] | null)
    /** The appointment setting associated with this appointment type. An associated appointment setting overrides the providers general one. */
    appointment_setting: (AppointmentSetting | null)
    /** The cpt code and units for this appointment type */
    appointment_type_cpt_code: (AppointmentTypeCptCodeType | null)
    /** When true, the appointment pricing will be automatically increase based on actual duration */
    auto_increase_charge_for_actual_duration: (Scalars['Boolean'] | null)
    /** Is true if upcoming availability exists */
    availability_exists_for: (Scalars['Boolean'] | null)
    /** List of available contact types for this appointment type */
    available_contact_types: ((Scalars['String'] | null)[] | null)
    /** When true, this appointment type is bookable by user groups associated through appointment_type_user_groups and appointment type is NOT bookable by ALL users */
    bookable_by_groups: (Scalars['Boolean'] | null)
    /** user groups that can book this appointment type. Associated through appointment_type_user_groups */
    bookable_groups: (UserGroup[] | null)
    /** When true, this appointment type is bookable by users without a user group */
    bookable_without_group: Scalars['Boolean']
    /** Checks to see if the client call to provider */
    client_call_provider: (Scalars['Boolean'] | null)
    /** A name to use in the client scheduling widget instead of the defalt name field. Falls back to name if not set. */
    client_display_name: (Scalars['String'] | null)
    /** The status of whether the client can self-book this type of appointment */
    clients_can_book: Scalars['Boolean']
    /** Checks to see if the client has enough credit to book */
    clients_have_credit: (Scalars['Boolean'] | null)
    /** The date the Appointment Type was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** If the provider's organization has this feature, this will customize the content of SMS reminder's Healthie sends. */
    custom_text_reminder_body: (Scalars['String'] | null)
    /** Date time appointment type was deleted */
    deleted_at: (Scalars['String'] | null)
    /** When true, the client will not be asked to add a reason when booking an appointment of this type */
    dont_ask_for_reason: (Scalars['Boolean'] | null)
    /** ID of the embedded custom module form */
    embed_question_form_id: (Scalars['String'] | null)
    /** All form requests which should be created after appointment */
    form_requests_after_appointment: (AppointmentTypeFormConnection[] | null)
    /** All form requests which should be created after appointment booking */
    form_requests_after_appointment_booking: (AppointmentTypeFormConnection[] | null)
    /** All form requests which should be created before appointment */
    form_requests_before_appointment: (AppointmentTypeFormConnection[] | null)
    /** Is true if group appointment available */
    has_available_group_appts: (Scalars['Boolean'] | null)
    /** When true, this appointment type has specific appointment settings that override the general ones */
    has_specific_appointment_settings: (Scalars['Boolean'] | null)
    /** The unique identifier of the appointment type */
    id: Scalars['ID']
    /** The status of whether appointments of this types are group appointments or not */
    is_group: Scalars['Boolean']
    /** The status of whether waitlist is enabled for an appointment or not */
    is_waitlist_enabled: Scalars['Boolean']
    /** The length of the appointment type (in minutes) */
    length: (Scalars['Int'] | null)
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. Only accessible by staff and providers */
    metadata: (Scalars['String'] | null)
    /** the name of the appointment type */
    name: (Scalars['String'] | null)
    /** A custom message to display if there are no available slots on a given day for an appointment type. */
    no_availability_message: (Scalars['String'] | null)
    /** The position of the appointment type when shown in a list of other appointment types */
    position: (Scalars['Int'] | null)
    /** The price and cpt_code_price */
    price_and_cpt_price: (PriceAndCptPriceType | null)
    /** The pricing for this appointment type */
    pricing: (Scalars['String'] | null)
    /** Get the pricing info for this appointment type */
    pricing_info: (AppointmentPricingInfoType | null)
    /** Pricing option for this appointment type */
    pricing_option: (Scalars['String'] | null)
    /** providers associated with appointment type */
    provider_appt_type_connections: (ProviderApptTypeConnection[] | null)
    /** When this setting is turned on, provider state licensing requirements will be enforced when clients try to schedule appointments. */
    require_in_state_clients: (Scalars['Boolean'] | null)
    /** Whether or not appointment type should use specific providers */
    require_specific_providers: Scalars['Boolean']
    /** position of appointment type when displayed in packages list */
    row_order: (Scalars['String'] | null)
    /** A label that includes the length of the appointment */
    time_on_label: (Scalars['String'] | null)
    /** The date the Appointment Type was updated */
    updated_at: Scalars['String']
    /** The user group associated with this appointment type. */
    user_group: (UserGroup | null)
    /** The ID of the group clients are placed in after booking */
    user_group_id: (Scalars['String'] | null)
    /** The creator of the appointment type */
    user_id: (Scalars['Int'] | null)
    /** If provider state matches users or appointment type doesn't require state license restrictions. */
    valid_state_licensing_for: (Scalars['Boolean'] | null)
    __typename: 'AppointmentType'
}


/** The count of appointments for each appointment type */
export interface AppointmentTypeAppointmentCountData {
    /** The unique identifier of the count */
    appointment_count: (Scalars['Int'] | null)
    /** The name of the appointment type for which we count appointments for */
    name: (Scalars['String'] | null)
    __typename: 'AppointmentTypeAppointmentCountData'
}


/** AppointmentTypeCptCode object */
export interface AppointmentTypeCptCodeType {
    /** Appointment Type ID */
    appointment_type_id: Scalars['ID']
    /** CPT Code ID */
    cpt_code_id: Scalars['ID']
    /** Fee (in cents) per unit */
    fee_per_unit: (Scalars['Int'] | null)
    /** The unique identifier of the object */
    id: Scalars['ID']
    /** Whether or not insurance billing is enaled for an appointment type */
    insurance_billing_enabled: (Scalars['Boolean'] | null)
    /** Units */
    units: (Scalars['String'] | null)
    __typename: 'AppointmentTypeCptCodeType'
}


/** An object containing information the clients' remaining credit for a given appointment type */
export interface AppointmentTypeCredit {
    /** The Appointment Type connected to the credit */
    appointment_type: (AppointmentType | null)
    /** the id of the appointment type */
    appointment_type_id: (Scalars['String'] | null)
    /** An Alias of ID that makes creating the form easier */
    form_id: (Scalars['String'] | null)
    /** The unique identifier of the credit */
    id: (Scalars['ID'] | null)
    /** The quantity of the credit */
    quantity: (Scalars['String'] | null)
    /** The id of the holder of the credit */
    user_id: (Scalars['Int'] | null)
    __typename: 'AppointmentTypeCredit'
}


/** An object containing event which should be taken before or after appointment */
export interface AppointmentTypeFormConnection {
    /** ID of the form for the form completion request */
    custom_module_form: (CustomModuleForm | null)
    /** The unique identifier of the form */
    id: Scalars['ID']
    /** Form requests will be sent before or after given interval, depends on `send_trigger` */
    interval: (Scalars['ISO8601Duration'] | null)
    /** Determines when action should be taken(before or after appointment) */
    send_trigger: (Scalars['String'] | null)
    __typename: 'AppointmentTypeFormConnection'
}


/** Appointment Type sorting enum */
export type AppointmentTypeOrderKeys = 'POSITION_ASC' | 'POSITION_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** The auto task generators belonging to a specific user */
export interface AutoTaskGenerator {
    /** Category of task */
    category: Scalars['String']
    /** The date and time that the task was created */
    created_at: Scalars['String']
    /** The number of days the task is due from the date it was created */
    days_due_from_created_at: (Scalars['Int'] | null)
    /** The unique identifier of the generator */
    id: Scalars['ID']
    /** True if task is active */
    is_enabled: Scalars['Boolean']
    /** Description of the number to check */
    number_description: (Scalars['String'] | null)
    /** The number to check */
    number_to_check: Scalars['Float']
    /** Description of the task */
    task_description: Scalars['String']
    /** The last date and time that the task was updated */
    updated_at: Scalars['String']
    /** The id of the user who creates the task */
    user_id: (Scalars['String'] | null)
    /** The id of the user */
    user_id_for_task: (Scalars['String'] | null)
    __typename: 'AutoTaskGenerator'
}


/** Automated Insurance Billing Setting Type */
export interface AutomatedInsuranceBillingSetting {
    /** When true, CMS1500s will be created automatically */
    auto_create_cms1500s: (Scalars['Boolean'] | null)
    /** When true, CMS1500s will be submitted automatically */
    auto_submit_cms1500s: (Scalars['Boolean'] | null)
    /** The unique identifier of the setting */
    id: Scalars['ID']
    /** When true, CPT code and units will be linked to appointment types */
    use_cpt_codes_units_and_fees_with_appointment_types: (Scalars['Boolean'] | null)
    __typename: 'AutomatedInsuranceBillingSetting'
}


/** The autoscored section for a filled form */
export interface AutoscoredSectionType {
    /** The key of the section */
    section_key: (Scalars['String'] | null)
    /** The title of the section */
    section_title: (Scalars['String'] | null)
    /** The value of the section */
    value: (Scalars['Float'] | null)
    __typename: 'AutoscoredSectionType'
}


/** An object containing availability ranges for a provider */
export interface Availability {
    /** If not nil, the specific location the availability is for */
    appointment_location_id: (Scalars['String'] | null)
    /** If not nil, the specific appointment type the availability is for */
    appointment_type_id: (Scalars['Int'] | null)
    /** If not nil, the specific contact type the availability is for */
    contact_type_id: (Scalars['Int'] | null)
    /** The 0-indexed day of the week the availability is on */
    day_of_week: (Scalars['Int'] | null)
    /** Duration between range start and range end in hours and minutes. Example:(4h 20min) */
    duration_string: (Scalars['String'] | null)
    /** The end date of the availability */
    end_on: (Scalars['String'] | null)
    /** The unique identifier of the availability */
    id: Scalars['ID']
    /** The status of whether the availability repeats every week */
    is_repeating: (Scalars['Boolean'] | null)
    /** The origin start of the availability */
    origin_start_date: (Scalars['String'] | null)
    /** The end of the datetime of the availability */
    range_end: (Scalars['String'] | null)
    /** The start of the datetime of the availability */
    range_start: (Scalars['String'] | null)
    /** Availability ID */
    repeating_availability_id: (Scalars['ID'] | null)
    /** The ID of the user, used for the calendar */
    resourceId: (Scalars['String'] | null)
    /** Timezone abbreviation of the availability time range */
    timezone_abbr: (Scalars['String'] | null)
    /** Provider this availability belongs to */
    user: (User | null)
    /** The ID of the person who the availability is for */
    user_id: (Scalars['Int'] | null)
    __typename: 'Availability'
}


/** Benefit associated with policy */
export interface Benefit {
    /** Enumerated field: Medical or Preventive. Describes the type of benefit */
    category: (Scalars['String'] | null)
    /** Coinsurance percentage due */
    coinsurance: (Scalars['String'] | null)
    /** Copay amount due */
    copay: (Scalars['String'] | null)
    /** Deductible amount for the calendar year */
    deductible_calendar_year: (Scalars['String'] | null)
    /** Deductible amount for the year to date */
    deductible_year_to_date: (Scalars['String'] | null)
    /** The unique identifier of the benefit */
    id: Scalars['ID']
    /** If true, benefits include telemedicine */
    telemedicine: (Scalars['Boolean'] | null)
    __typename: 'Benefit'
}


/** Billing */
export interface BillingItem {
    /** amount of billing item */
    amount_paid: (Scalars['String'] | null)
    /** Fee charged by stripe in cents */
    application_fee_amount: (Scalars['String'] | null)
    /** card brand and last4 digits in the event of a failed charge */
    card_source: (Scalars['String'] | null)
    /** the related charge backs */
    charge_backs: (ChargeBack[] | null)
    /** coupon code */
    coupon_code: (Scalars['String'] | null)
    /** cpt codes super bills id */
    cpt_codes_super_bills_id: (Scalars['ID'] | null)
    /** created at date */
    created_at: Scalars['String']
    /** type of currency */
    currency: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** date payment was deleted */
    deleted_at: (Scalars['String'] | null)
    /** Error message returned when payment failed */
    failure_reason: (Scalars['String'] | null)
    /** Name of person who gifted this package(if applicable). Returns nil if not an offering or if not a gift */
    gifted_by: (Scalars['String'] | null)
    /** Name of person who received this package as a gift. Returns nil if not an offering or if not a gift */
    gifted_to: (Scalars['String'] | null)
    /** The unique identifier of the billing item */
    id: Scalars['ID']
    /**
     * @deprecated Use requested_payment_id instead. This will return the same data as that
     * id of invoice
     */
    invoice_id: (Scalars['ID'] | null)
    /** canceled indicator */
    is_canceled: (Scalars['Boolean'] | null)
    /** Whether this payment was made outside of Healthie */
    is_outside_payment: (Scalars['Boolean'] | null)
    /** Whether this payment is recurring */
    is_recurring: (Scalars['Boolean'] | null)
    /** The index number of partial payment */
    item_position_number: (Scalars['Int'] | null)
    /** The payment, after refunds are taken out */
    net_payment: (Scalars['String'] | null)
    /** Nil unless the payment is an uncharged upcoming scheduled payment. Otherwise, is the payment amount that is scheduled to be charged */
    next_scheduled_payment_amount: (Scalars['String'] | null)
    /** payment note */
    note: (Scalars['String'] | null)
    /** offering connected to the payment */
    offering: (Offering | null)
    /** offering coupon connected to the payment */
    offering_coupon: (OfferingCoupon | null)
    /** id of coupon */
    offering_coupon_id: (Scalars['ID'] | null)
    /** offering id */
    offering_id: (Scalars['ID'] | null)
    /** original price */
    original_price: (Scalars['String'] | null)
    /** payment medium */
    payment_medium: (Scalars['ID'] | null)
    /** provider */
    provider: (User | null)
    /** receipt last sent at date */
    receipt_last_sent_at: (Scalars['String'] | null)
    /** recipient of this payment */
    recipient: (User | null)
    /** id of receiver */
    recipient_id: (Scalars['ID'] | null)
    /** recurring payment connected to the payment */
    recurring_payment: (RecurringPayment | null)
    /** amount of refund */
    refund_amount: (Scalars['String'] | null)
    /** date of refund */
    refund_date: (Scalars['String'] | null)
    /** the related refundings */
    refund_items: (RefundItem[] | null)
    /** Individual responsible for payment. If user_id, user exists in Healthie, if not, individual doesn't have a Healthie account */
    requested_payer: (RequestedPayer | null)
    /** the connected requested payment */
    requested_payment: (RequestedPayment | null)
    /** id of requested payment (we call them invoices in our UI) */
    requested_payment_id: (Scalars['ID'] | null)
    /** sender of this payment */
    sender: (User | null)
    /** id of sender */
    sender_id: (Scalars['ID'] | null)
    /** The description text to show for the payment */
    shown_description: (Scalars['String'] | null)
    /** The note text to show for the payment */
    shown_note: (Scalars['String'] | null)
    /** Enum status of billing item succeeded/failed */
    state: (Scalars['String'] | null)
    /** id of stripe charge */
    stripe_charge_id: (Scalars['ID'] | null)
    /** A JSON hash containing information on why Stripe was unable to process a charge */
    stripe_error: (Scalars['String'] | null)
    /** if a failed payment is retried successfully then this will reference that successful payment */
    successful_retried_payment: (BillingItem | null)
    /** updated at date */
    updated_at: (Scalars['String'] | null)
    /** User Package Selection connected to this payment */
    user_package_selection: (UserPackageSelection | null)
    __typename: 'BillingItem'
}


/** BillingItem sorting enum */
export type BillingItemOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'AMOUNT_PAID_DESC' | 'AMOUNT_PAID_ASC' | 'PATIENT_FIRST_NAME_ASC' | 'PATIENT_FIRST_NAME_DESC' | 'PROVIDER_FIRST_NAME_ASC' | 'PROVIDER_FIRST_NAME_DESC' | 'METHOD_ASC' | 'METHOD_DESC' | 'STATE_ASC' | 'STATE_DESC'


/** Body Report is a sub category of a HealthAssessment */
export interface BodyReport {
    /** amr of user */
    amr: (Scalars['String'] | null)
    /** bmi of user */
    bmi: (Scalars['String'] | null)
    /** body_fat_percent of user */
    body_fat_percent: (Scalars['String'] | null)
    /** body_weight of user */
    body_weight: (Scalars['String'] | null)
    /** c_bmi of user */
    c_bmi: (Scalars['String'] | null)
    /** fat_mass of user */
    fat_mass: (Scalars['String'] | null)
    /** lean_body_mass of user */
    lean_body_mass: (Scalars['String'] | null)
    /** rmr of user */
    rmr: (Scalars['String'] | null)
    __typename: 'BodyReport'
}


/** Brand options that a client can customize */
export interface Brand {
    /** Brand Owner's about description */
    about_description: (Scalars['String'] | null)
    /** Brand Owner's bg color */
    bg_color: (Scalars['String'] | null)
    /** Brand Owner's brand email */
    brand_email: (Scalars['String'] | null)
    /** Name of provider's brand */
    brand_name: (Scalars['String'] | null)
    /** Owner of this brand */
    brand_owner: (User | null)
    /** Whether or not brand owner has practice plus */
    brand_owner_has_practice_plus: (Scalars['Boolean'] | null)
    /** Whether or not brand owner has whitelabel */
    brand_owner_has_whitelabel: (Scalars['Boolean'] | null)
    /** Brand Owner's brand phone */
    brand_phone: (Scalars['String'] | null)
    /** Brand Owner's contact info */
    contact_description: (Scalars['String'] | null)
    /** Custom sign in path for provider with practice plus */
    custom_sign_in_path: (Scalars['String'] | null)
    /** Whether or not we should display the header text of a package embed */
    display_embed_title: (Scalars['Boolean'] | null)
    /** Brand Owner's display name */
    display_name: (Scalars['String'] | null)
    /** Whether or not we should display the package image on embed and sharing link pages */
    display_package_image: (Scalars['Boolean'] | null)
    /** Brand Owner's email background color */
    email_background_color: (Scalars['String'] | null)
    /** The primary color that will use to customize a customer's embed process */
    embed_primary_color: (Scalars['String'] | null)
    /** URL to a hosted stylesheet that will apply to Embeddable Layout */
    embeddable_layout_css_url: (Scalars['String'] | null)
    /** Brand Owner's Facebook link */
    facebook: (Scalars['String'] | null)
    /** Brand Owner's font color of choice */
    font_color: (Scalars['String'] | null)
    /** The brand's Universal GA ID */
    ga_id: (Scalars['String'] | null)
    /** The brand's Google Tag Manager ID */
    gtm_id: (Scalars['String'] | null)
    /** The unique identifier of the brand */
    id: Scalars['ID']
    /** Brand Owner's Instagram link */
    instagram: (Scalars['String'] | null)
    /** Custom HTML that replaces the content on the standard intake flow completed screen */
    intake_completed_html: (Scalars['String'] | null)
    /** Brand owner's logo */
    logo: (Scalars['Upload'] | null)
    /** Brand Owner's logo */
    logo_file_name: (Scalars['String'] | null)
    /** The URL to the logo */
    logo_url: (Scalars['String'] | null)
    /** URL to a hosted stylesheet that will apply to Main Layout */
    main_layout_css_url: (Scalars['String'] | null)
    /** Brand Owner's selected color */
    selected_color: (Scalars['String'] | null)
    /** Brand Owner's slogan */
    slogan: (Scalars['String'] | null)
    /** Brand Owner's tab accent color */
    tab_accent_color: (Scalars['String'] | null)
    /** Brand Owner's credentials */
    titles: (Scalars['String'] | null)
    /** Brand Owner's Twitter link */
    twitter: (Scalars['String'] | null)
    /** ID of Brand Owner */
    user_id: (Scalars['String'] | null)
    /** Brand Owner's website link */
    website: (Scalars['String'] | null)
    __typename: 'Brand'
}


/** Info for authentication pages for either a dietitian or partner */
export interface BrandInfo {
    /** Brand Owner's logo */
    image_url: (Scalars['String'] | null)
    /** Name of the partner */
    name: (Scalars['String'] | null)
    /** The brand associated with provider/partner */
    partner_brand: (Brand | null)
    /** if false the client signup tab is not shown */
    show_client_tab: (Scalars['Boolean'] | null)
    /** if false the client signup tab is not shown */
    show_provider_tab: (Scalars['Boolean'] | null)
    /** Header for the sign up page */
    sign_up_header: (Scalars['String'] | null)
    /** Header for the sign up page */
    sign_up_text: (Scalars['String'] | null)
    /** Custom HTML to be placed at the bottom of signup */
    signup_footer: (Scalars['String'] | null)
    /** Unique code of the brand or provider */
    unique_code: (Scalars['String'] | null)
    /** Whether the partner's users can use a username to sign in (defaults to false) */
    uses_username: (Scalars['Boolean'] | null)
    __typename: 'BrandInfo'
}


/** A Calendar Color Scheme */
export interface CalendarColorScheme {
    /** Course ID of benefit */
    appointment_setting_id: (Scalars['String'] | null)
    /** The category to color code by */
    color_code_by: (Scalars['String'] | null)
    /** Color code options that make up this color scheme */
    color_codes: (ColorCode[] | null)
    /** The default color (in case the subcategory conditions are not met) */
    default_color: (Scalars['String'] | null)
    /** The unique identifier of the scheme */
    id: Scalars['ID']
    /** The ID of the connected user */
    user_id: (Scalars['String'] | null)
    __typename: 'CalendarColorScheme'
}


/** View settings for provider calendar */
export interface CalendarViewSetting {
    /** Filter appointments by status */
    appointment_status_filter: Scalars['String']
    /** ID of appointment type to filter appointments */
    appointment_type_filter: Scalars['ID']
    /** Filter availabilities by contact type */
    availability_contact_type_filter: (Scalars['String'] | null)
    /** ID of location to filter availabilities */
    availability_location_filter: (Scalars['ID'] | null)
    /** ID of provider to filter availabilities */
    availability_provider_filter: (Scalars['ID'] | null)
    /** ID of appointment type to filter availabilities */
    availablilty_appt_type_filter: (Scalars['ID'] | null)
    /** ID of selected calendar colour scheme */
    calendar_color_scheme_filter: (Scalars['ID'] | null)
    /** Selected calendar view */
    calendar_view_filter: (Scalars['String'] | null)
    /** Filter appointments by client confirmation status */
    client_confirmation_status: (Scalars['String'] | null)
    /** Selected sorting for documents(This is not a calendar setting. Related to documents area) */
    document_area_sorting: (Scalars['String'] | null)
    /** Visibility of color schemes section */
    expand_color_schemes: (Scalars['Boolean'] | null)
    /** Visibility of appointment filters section */
    expand_filter_appointments: (Scalars['Boolean'] | null)
    /** Visibility of availability filters section */
    expand_filter_availabilities: (Scalars['Boolean'] | null)
    /** Visibility of 'Filter Providers' section in organization calendar */
    expand_filter_by_providers: (Scalars['Boolean'] | null)
    /** Visibility of 'View By Provider' section in organization calendar */
    expand_filter_providers: (Scalars['Boolean'] | null)
    /** Visibility of show section */
    expand_show_availabilities: (Scalars['Boolean'] | null)
    /** The unique identifier of the setting */
    id: Scalars['ID']
    /** ID of location to filter appointments */
    location_filter: (Scalars['ID'] | null)
    /** Visibility of one time availabilities in calendar */
    one_time_availabilities: (Scalars['Boolean'] | null)
    /** Selected organization calendar view */
    org_calendar_view_filter: (Scalars['String'] | null)
    /** Filter appointments by provider confirmation status */
    provider_confirmation_status: (Scalars['String'] | null)
    /** ID of selected provider to filter availabilities in organization calendar */
    selected_availability_provider_filter: (Scalars['ID'] | null)
    /** Comma separated IDs of providers to filter availabilities in organization calendar */
    selected_availability_providers_filter: (Scalars['String'] | null)
    /** ID of selected provider in organization calendar */
    selected_provider_filter: (Scalars['ID'] | null)
    /** Comma separated IDs of selected providers in organization calendar */
    selected_providers_filter: (Scalars['String'] | null)
    /** Visibility of all appointments */
    show_appointments: (Scalars['Boolean'] | null)
    /** Visibility of all availabilities */
    show_availabilities: (Scalars['Boolean'] | null)
    /** Visibility of all synced appointments */
    show_synced_appointments: (Scalars['Boolean'] | null)
    /** Selected calendar timezone */
    timezone: (Scalars['String'] | null)
    /** Visibility of weekly availabilities in calendar */
    weekly_availabilities: (Scalars['Boolean'] | null)
    __typename: 'CalendarViewSetting'
}


/** Call reference information associated with a policy */
export interface CallReference {
    /** Date call was made */
    date_recorded: (Scalars['String'] | null)
    /** The unique identifier of the reference call */
    id: Scalars['ID']
    /** Notes taken for this reference call */
    notes: (Scalars['String'] | null)
    /** call reference number provided by insurance company */
    reference_number: (Scalars['String'] | null)
    /** Time call was made */
    time_recorded: (Scalars['String'] | null)
    /** The ID of the patient who the call reference is for */
    user_id: (Scalars['Int'] | null)
    __typename: 'CallReference'
}


/** Marketing campaign (email/sms) sent to clients by provider */
export interface Campaign {
    /** Button label in email */
    button_text: (Scalars['String'] | null)
    /** URL in button */
    button_url: (Scalars['String'] | null)
    /** individual clients who have received this campaign */
    clients: (User[] | null)
    /** Email body */
    email_body: (Scalars['String'] | null)
    /** Greeting used before email body */
    email_greeting: (Scalars['String'] | null)
    /** Subject line of email */
    email_subject: (Scalars['String'] | null)
    /** The unique identifier of the campaign */
    id: Scalars['ID']
    /** If true, campaign hasn't been sent and has been saved as a draft */
    is_draft: (Scalars['Boolean'] | null)
    /** If true, campaign (will be/has been) sent as an email */
    is_email: Scalars['Boolean']
    /** If true, campaign (will be/has been) sent as an sms message */
    is_sms: Scalars['Boolean']
    /** Name of a campaign labeled by provider */
    name: (Scalars['String'] | null)
    /** SMS text message content */
    sms_body: (Scalars['String'] | null)
    /** Groups of users with the same tags who have received this campaign */
    tags: (Tag[] | null)
    /** Name of a campaign labeled by provider */
    user: (User | null)
    /** User groups who have received this campaign */
    user_groups: (UserGroup[] | null)
    __typename: 'Campaign'
}


/** Info on connection to Candid Health */
export interface CandidHealthConnection {
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** True if the Candid connection is turned by user */
    is_enabled: Scalars['Boolean']
    __typename: 'CandidHealthConnection'
}


/** A Care Plan */
export interface CarePlan {
    /** The name of a user group or a patient the care plan has been assigned to */
    assigned_to: (Scalars['String'] | null)
    /** Date of creation */
    created_at: Scalars['String']
    /** Provider who created care plan */
    creator: (User | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The care plan description */
    description: (Scalars['String'] | null)
    /** Associated documents */
    documents: Document[]
    /** Feature Toggle of the care plan */
    feature_toggle: (FeatureToggle | null)
    /** Associated goals */
    goals: Goal[]
    /** Shows whether a group care plan(or a single one, if patient_id argument is not passed) is active for a given user. Make sure to pass patient_id argument if you need to check the status of a group care_plan for the given user */
    group_plan_is_active_for_given_user: (Scalars['Boolean'] | null)
    /** Shows whether the patient or at least one user from the related group has not skipped email. We don't want to call care_plan_mailer if all of related users have skipped_email == true */
    has_users_with_real_emails: (Scalars['Boolean'] | null)
    /** The unique identifier of the plan */
    id: Scalars['ID']
    /** Care plan is active for the associated patient */
    is_active: (Scalars['Boolean'] | null)
    /** Indicates whether a care plan is for a group */
    is_group: (Scalars['Boolean'] | null)
    /** Care plan status */
    is_hidden: Scalars['Boolean']
    /** Indicates if care plan can be used as a template and can be assigned on other users */
    is_template: Scalars['Boolean']
    /** The name of care plan */
    name: (Scalars['String'] | null)
    /** A user the care plan has been assigned to */
    patient: (User | null)
    /** Ordered (Ascending) associated recommendations */
    recommendations: Recommendation[]
    /** Date when record was last updated */
    updated_at: Scalars['String']
    /** A user group the care plan has been assigned to */
    user_group: (UserGroup | null)
    __typename: 'CarePlan'
}


/** A connection between a care plan and a connectable item */
export interface CarePlanConnection {
    /** The ID of the connected care plan */
    care_plan_id: (Scalars['ID'] | null)
    /** The ID of the connected item */
    connectable_id: (Scalars['ID'] | null)
    /** The type of the connected item */
    connectable_type: (Scalars['String'] | null)
    /** The unique identifier of the connection */
    id: Scalars['ID']
    __typename: 'CarePlanConnection'
}


/** CarePlan sorting enum */
export type CarePlanOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'CLIENT_FIRST_NAME_DESC' | 'CLIENT_FIRST_NAME_ASC' | 'DEACTIVATED_DESC' | 'DEACTIVATED_ASC'


/** Information on an event surrounding CDA activity */
export interface CdaActivityEvent {
    /** The activity that occured */
    activity_type: (Scalars['String'] | null)
    /** The type of CDA */
    cda_type: (Scalars['String'] | null)
    /** The time of the event */
    created_at: (Scalars['String'] | null)
    /** The ID of the document */
    document_id: (Scalars['String'] | null)
    /** Self descriptive */
    id: Scalars['ID']
    /** The outbound recipient */
    outbound_recipient: (Scalars['String'] | null)
    /** The user who opened the document */
    user: (User | null)
    /** The email of the user who took the action. */
    user_email: (Scalars['String'] | null)
    __typename: 'CdaActivityEvent'
}


/** Info on connection to Change Health */
export interface ChangeClaimSubmitter {
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** True if the Change connection is turned by user */
    is_enabled: (Scalars['Boolean'] | null)
    __typename: 'ChangeClaimSubmitter'
}


/** Autogenerated return type of ChangeDevicesAvailability. */
export interface ChangeDevicesAvailabilityPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'ChangeDevicesAvailabilityPayload'
}


/** A Chargeback object, contains info on the dispute reason, status, and evidence submitted */
export interface ChargeBack {
    /** The payment in Healthie that was disputed */
    billing_item: (BillingItem | null)
    /** The date and time the chargeback was initiated */
    created_at: Scalars['String']
    /** The amount that was disputed */
    disputed_amount: (Scalars['String'] | null)
    /** Evidence to contest the chargeback */
    evidence: (ChargeBackEvidence | null)
    /** Fields that should be submitted for this chargeback */
    evidence_fields_to_submit: ((Scalars['String'] | null)[] | null)
    /** The dispute fee charged by the payment processor */
    fee: (Scalars['String'] | null)
    /** A formatted version of the reason */
    formatted_reason: (Scalars['String'] | null)
    /** A formatted version of the status */
    formatted_status: (Scalars['String'] | null)
    /** The unique identifier of the chargeback */
    id: Scalars['ID']
    /** The reason for the chargeback. Matches Stripe's list of reasons at https://stripe.com/docs/api/disputes/object?lang=ruby */
    reason: (Scalars['String'] | null)
    /** The date and time that evidence needs to be submitted by */
    response_required_by: (Scalars['String'] | null)
    /** The status of the chargeback */
    status: (Scalars['String'] | null)
    /** The total cost of the chargeback. Includes both the disputed amount and the fee */
    total_amount: (Scalars['String'] | null)
    /** The date and time the chargeback was last updated */
    updated_at: Scalars['String']
    __typename: 'ChargeBack'
}


/** A Chargeback Evidence object, contains info to contest the dispute */
export interface ChargeBackEvidence {
    /** The billing address provided by the customer. */
    billing_address: (Scalars['String'] | null)
    /** ID of the uploaded cancellation_policy. */
    cancellation_policy: (Scalars['String'] | null)
    /** An explanation of how and when the customer was shown your refund policy prior to purchase. */
    cancellation_policy_disclosure: (Scalars['String'] | null)
    /** A justification for why the customer’s subscription was not canceled. */
    cancellation_rebuttal: (Scalars['String'] | null)
    /** ID of the uploaded customer_communication. */
    customer_communication: (Scalars['String'] | null)
    /** The email address of the customer. */
    customer_email_address: (Scalars['String'] | null)
    /** The name of the customer. */
    customer_name: (Scalars['String'] | null)
    /** A description of the product or services that were sold. */
    product_description: (Scalars['String'] | null)
    /** ID of the uploaded refund_policy. */
    refund_policy: (Scalars['String'] | null)
    /** Documentation demonstrating that the customer was shown your refund policy prior to purchase. */
    refund_policy_disclosure: (Scalars['String'] | null)
    /** A justification for why the customer is not entitled to a refund. */
    refund_refusal_explanation: (Scalars['String'] | null)
    /** ID of the uploaded uncategorized_file. */
    uncategorized_file: (Scalars['String'] | null)
    /** Any additional evidence or statements. */
    uncategorized_text: (Scalars['String'] | null)
    __typename: 'ChargeBackEvidence'
}


/** Charge back sorting enum */
export type ChargeBackOrderKeys = 'CREATED_AT_DESC' | 'CREATED_AT_ASC' | 'UPDATED_AT_DESC' | 'UPDATED_AT_ASC'


/** Charting Item */
export interface ChartingItemType {
    /** The date of the item' creation */
    created_at: Scalars['String']
    /** The name of the custom module form */
    custom_module_form_name: (Scalars['String'] | null)
    /** The type of the document */
    document: (Document | null)
    /** The ID of the filler */
    filler_id: (Scalars['ID'] | null)
    /** The type of the form answer group */
    form_answer_group: (FormAnswerGroup | null)
    /** The ID of the form answer group */
    form_answer_group_id: (Scalars['ID'] | null)
    /** The unique identifier of the item */
    id: Scalars['ID']
    /** Whether the item is a document */
    is_document: (Scalars['Boolean'] | null)
    /** The name of the item */
    name: (Scalars['String'] | null)
    /** The name of the provider */
    provider_name: (Scalars['String'] | null)
    /** Whether the item is signed */
    signed: (Scalars['Boolean'] | null)
    /** Whether the item is used for a charting */
    use_for_charting: (Scalars['Boolean'] | null)
    /** Whether the item is used for a program */
    use_for_program: (Scalars['Boolean'] | null)
    __typename: 'ChartingItemType'
}


/** A charting note addendum */
export interface ChartingNoteAddendumType {
    /** The content of the addendum */
    content: (Scalars['String'] | null)
    /** The date the addendum was created */
    created_at: Scalars['String']
    /** The form answer group the addendum belongs to */
    form_answer_group: (FormAnswerGroup | null)
    /** The unique identifier of the addendum */
    id: Scalars['ID']
    /** A provider who created the addendum */
    user: (User | null)
    __typename: 'ChartingNoteAddendumType'
}


/** Chat settings for a user */
export interface ChatSetting {
    /** The text of the auto welcome message */
    auto_welcome_text: (Scalars['String'] | null)
    /** The text of the setting */
    content: (Scalars['String'] | null)
    /** The end of scheduled autoreply period */
    end_date: (Scalars['String'] | null)
    /** Whether a user should be prompted to confirm closing a chat */
    hide_close_confirmation: (Scalars['Boolean'] | null)
    /** Whether a user should be prompted to confirm opening an org chat */
    hide_org_chat_confirmation: (Scalars['Boolean'] | null)
    /** The unique identifier of the chat setting */
    id: Scalars['ID']
    /** Whether the setting is active */
    is_active: (Scalars['Boolean'] | null)
    /** Whether the setting is within recurring messaging period */
    is_recurring_active: (Scalars['Boolean'] | null)
    /** Allow users to no add an end date */
    no_end_date: (Scalars['Boolean'] | null)
    /** Whether user should receive notifications from chat while is_active is true */
    receive_notifications: (Scalars['Boolean'] | null)
    /** Whether a user should receive notifications from chat while is_recurring_active is true */
    receive_notifications_recurring: (Scalars['Boolean'] | null)
    /** Whether or not the recurring messages should be all day or for a time range */
    recurring_all_day: (Scalars['Boolean'] | null)
    /** The content for recurring autoreplies */
    recurring_content: (Scalars['String'] | null)
    /** Front-end friendly version of recurring days */
    recurring_days_data: (RecurringDaysData | null)
    /** The end of time range for recurring messages */
    recurring_end_time: (Scalars['String'] | null)
    /** Either nil, all_day, or a string representation of a time range */
    recurring_friday: (Scalars['String'] | null)
    /** Either nil, all_day, or a string representation of a time range */
    recurring_monday: (Scalars['String'] | null)
    /** Either nil, all_day, or a string representation of a time range */
    recurring_saturday: (Scalars['String'] | null)
    /** The start of time range for recurring messages */
    recurring_start_time: (Scalars['String'] | null)
    /** Either nil, all_day, or a string representation of a time range  */
    recurring_sunday: (Scalars['String'] | null)
    /** Either nil, all_day, or a string representation of a time range */
    recurring_thursday: (Scalars['String'] | null)
    /** Either nil, all_day, or a string representation of a time range */
    recurring_tuesday: (Scalars['String'] | null)
    /** Indicates whether or not recurring messaging has been set up */
    recurring_turned_on: (Scalars['Boolean'] | null)
    /** Either nil, all_day, or a string representation of a time range */
    recurring_wednesday: (Scalars['String'] | null)
    /** Whether or not a schedule message is set up */
    scheduled_turned_on: (Scalars['Boolean'] | null)
    /** Whether to send an auto welcome message */
    send_auto_welcome: (Scalars['Boolean'] | null)
    /** The beginning of scheduled autoreply period */
    start_date: (Scalars['String'] | null)
    /** The ID of the setting owner */
    user_id: (Scalars['ID'] | null)
    __typename: 'ChatSetting'
}


/** A created API Key */
export interface ClaimEligibilityCheck {
    /** A string used to identify the eligibility check in the Change system. */
    control_number: Scalars['String']
    /** The time the eligibility check was run */
    created_at: Scalars['String']
    /** The unique identifier of the check */
    id: Scalars['ID']
    /** The retrieved plan status */
    plan_status: (Scalars['String'] | null)
    /** The policy associated with this check */
    policy: (Policy | null)
    /** The ID of the associated policy */
    policy_id: Scalars['ID']
    /** A JSON object containing the eligibility details */
    response: (Scalars['String'] | null)
    __typename: 'ClaimEligibilityCheck'
}


/** Claim Eligibility Check Errors */
export interface ClaimEligibilityCheckErrors {
    /** The error code */
    code: (Scalars['String'] | null)
    /** The description of the error */
    description: (Scalars['String'] | null)
    __typename: 'ClaimEligibilityCheckErrors'
}


/** A client portal settings */
export interface ClientPortalSetting {
    /** Chat with provider */
    chat_with_provider: Scalars['Boolean']
    /** The unique identifier of the setting */
    id: Scalars['ID']
    /** If the client can schedule appointments */
    schedule_appointments: Scalars['Boolean']
    /** If the client can view and complete forms */
    view_and_complete_forms: Scalars['Boolean']
    /** If the client can view and create goals */
    view_and_create_goals: Scalars['Boolean']
    /** If the client can view and create journal entries */
    view_and_create_journal_entries: Scalars['Boolean']
    /** If the client can view and pay bills */
    view_and_pay_bills: Scalars['Boolean']
    /** If the client can view and purchase packages */
    view_and_purchase_packages: Scalars['Boolean']
    /** If the client can view and upload documents */
    view_and_upload_documents: Scalars['Boolean']
    __typename: 'ClientPortalSetting'
}


/** Info about how a client was acquire */
export interface ClientSource {
    /** The unique identifier of the source */
    id: Scalars['String']
    /** Get readable source based on ref_type */
    readable_source: (Scalars['String'] | null)
    /** The source of how a client was acquire: contain ID or a Other string */
    ref_source: (Scalars['String'] | null)
    /** If ref_source eq 'Other', than it may contain custom string or NULL */
    ref_source_other: (Scalars['String'] | null)
    /** The type of the source of how a client was acquire */
    ref_type: (Scalars['String'] | null)
    /** related insurance */
    related_insurance: (InsurancePlan | null)
    /** related object */
    related_object: (RelatedObject | null)
    /** related object */
    related_object_name: (Scalars['String'] | null)
    __typename: 'ClientSource'
}


/** A CMS1500 claim */
export interface Cms1500 {
    /** The provider agrees to accept assignment */
    accept_assignment: (Scalars['Boolean'] | null)
    /** Notes */
    additional_text: (Scalars['String'] | null)
    /** The insurance discount */
    adjustment: (Scalars['String'] | null)
    /** The amount that the client paid towards the claim */
    amount_paid: (Scalars['String'] | null)
    /** The amount that the insurance company reimbursed */
    amount_reimbursed: (Scalars['String'] | null)
    /** The billing provider for the CMS1500 */
    billing_provider: (Organization | null)
    /** The ID of the Billing Provider */
    billing_provider_id: (Scalars['String'] | null)
    /** Check numbers associated with a reimbursement from the claim. Imported via ERA */
    check_numbers: ((Scalars['String'] | null)[] | null)
    /** Amount the client owes */
    client_responsibility: (Scalars['String'] | null)
    /** True if the provider chose to remove client responsibility */
    client_responsibility_removed: (Scalars['Boolean'] | null)
    /** True if the client's signature is on file */
    client_sig_on_file: (Scalars['Boolean'] | null)
    /** Cms1500 policies in use for this claim */
    cms1500_policies: (Cms1500Policy[] | null)
    /** The client's copay for the claim */
    copay: (Scalars['String'] | null)
    /** The amount of copay still owed */
    copay_still_owed: (Scalars['String'] | null)
    /** The comma separated list of cpt codes names */
    cpt_code_names: (Scalars['String'] | null)
    /** CPT codes in use for this claim */
    cpt_codes_cms1500s: (CptCodesCms1500[] | null)
    /** The creation date of the claim */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The claim's date of service */
    date_of_service: (Scalars['String'] | null)
    /** The ID of the rendering provider */
    dietitian_id: (Scalars['String'] | null)
    /**
     * @deprecated Use CptCodesCms1500.last_fee_amount
     * Estimated fee for the specific cpt code based on previous use
     */
    estimated_cpt_fees_for_user: (CptCodesCms1500[] | null)
    /** Chart Note ID, if CMS1500 was exported from a Chart Note */
    form_answer_group_id: (Scalars['ID'] | null)
    /** ICD codes in use for this claim */
    icd_codes_cms1500s: (IcdCodesCms1500[] | null)
    /** The unique identifier of the CMS1500 */
    id: (Scalars['ID'] | null)
    /** When true, includes referrer information on the claim */
    include_referrer_information: (Scalars['Boolean'] | null)
    /** True if the insured's signature is on file */
    insured_sig_on_file: (Scalars['Boolean'] | null)
    /** The value of the nineteen field */
    nineteen_reserved: (Scalars['String'] | null)
    /** The specific Organization Info in use on this claim */
    org_info: (OrganizationInfo | null)
    /** The ID of the Organization Info */
    organization_info_id: (Scalars['String'] | null)
    /** The original reference number of the claim */
    orig_ref_number: (Scalars['String'] | null)
    /** The date that the claim was paid out to employees/contractors */
    paid_out_at: (Scalars['String'] | null)
    /** The patient for the CMS1500 */
    patient: (User | null)
    /** The patient's account number */
    patient_account_num: (Scalars['String'] | null)
    /** The ID of the patient */
    patient_id: (Scalars['String'] | null)
    /** The primary insurance plan name for the CMS1500 */
    primary_plan_name: (Scalars['String'] | null)
    /** Rejected/Denied status reason */
    reasons: (Scalars['ID'] | null)
    /** The referral info for the CMS1500 */
    referral_info: (ReferralInfo | null)
    /** The date that the claim was reimbursed */
    reimbursed_at: (Scalars['String'] | null)
    /** The provider for the CMS1500 */
    rendering_provider: (User | null)
    /** The Rendering Provider's other id number */
    rendering_provider_other_id: (Scalars['String'] | null)
    /** Other ID info in use for this render provider */
    rendering_provider_other_id_object: (OtherIdNumber | null)
    /** The resubmission code of the claim */
    resubmission_code: (Scalars['String'] | null)
    /** The service location for the CMS1500 */
    service_location: (Location | null)
    /** The ID of the service location */
    service_location_id: (Scalars['String'] | null)
    /** The status of the claim */
    status: (Scalars['String'] | null)
    /** The value of the ten d field */
    tend_reserved: (Scalars['String'] | null)
    /** Total amount the claim was billed for */
    total_charge: (Scalars['String'] | null)
    /** The last date and time that the CMS1500 was updated */
    updated_at: (Scalars['ISO8601DateTime'] | null)
    /** True if the claim reimbursement info was updated via SFTP */
    updated_by_sftp: (Scalars['Boolean'] | null)
    /** When true, uses the individual npi in all npi fields */
    use_indiv_npi: (Scalars['Boolean'] | null)
    __typename: 'Cms1500'
}


/** Cms1500 sorting enum */
export type Cms1500OrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'PRIMARY_PLAN_NAME_ASC' | 'PRIMARY_PLAN_NAME_DESC' | 'PATIENT_LAST_NAME_ASC' | 'PATIENT_LAST_NAME_DESC' | 'SERVICE_DATE_ASC' | 'SERVICE_DATE_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** A CMS1500 policy */
export interface Cms1500Policy {
    /** The cms1500 for the cms1500 policy */
    cms1500: (Cms1500 | null)
    /** The id of the cms1500 for the cms1500 policy */
    cms1500_id: (Scalars['String'] | null)
    /** The unique identifier of the policy */
    id: (Scalars['ID'] | null)
    /** The policy for the cms1500 policy */
    policy: (Policy | null)
    /** The policy id of the cms1500 for the cms1500 policy */
    policy_id: (Scalars['String'] | null)
    __typename: 'Cms1500Policy'
}


/** CognitiveStatus object */
export interface CognitiveStatus {
    /** Cognitive status */
    cognitive_status: (Scalars['String'] | null)
    /** The unique identifier of the status */
    id: Scalars['ID']
    /** Start date */
    start_date: (Scalars['String'] | null)
    /** User id */
    user_id: Scalars['ID']
    __typename: 'CognitiveStatus'
}


/** A Calendar Color Scheme */
export interface ColorCode {
    /** The ID of the calendar color scheme */
    calendar_color_scheme_id: (Scalars['String'] | null)
    /** The item to code by */
    code_by_item: (Scalars['String'] | null)
    /** The item name to code by */
    code_by_item_name: (Scalars['String'] | null)
    /** The color */
    color: (Scalars['String'] | null)
    /** The unique identifier of the color code */
    id: Scalars['ID']
    __typename: 'ColorCode'
}


/** A color code option */
export interface ColorCodeOption {
    /** The label of the color code option */
    label: (Scalars['String'] | null)
    /** The value of the color code option */
    value: (Scalars['String'] | null)
    __typename: 'ColorCodeOption'
}


/** A comment of an entry */
export interface Comment {
    /** User who created comment */
    author: (User | null)
    /** The content of this comment */
    content: (Scalars['String'] | null)
    /** The date on which the comment was posted */
    created_at: Scalars['String']
    /** User who created comment */
    creator: (User | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The id of the entry associated with the comment */
    entry_id: (Scalars['String'] | null)
    /** The unique identifier of the comment */
    id: Scalars['ID']
    /** Indicates when posting an emoji reaction */
    is_reaction: Scalars['Boolean']
    /** User who created comment */
    poster: (User | null)
    /** the owner of the comment */
    user_id: Scalars['ID']
    __typename: 'Comment'
}


/** Autogenerated return type of CompleteCcdaReconciliation. */
export interface CompleteCcdaReconciliationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'CompleteCcdaReconciliationPayload'
}


/** a completed course item */
export interface CompletedCourseItem {
    /** The ID of the completed item */
    completed_item_id: (Scalars['ID'] | null)
    /** The type of the completed item */
    completed_item_type: (Scalars['String'] | null)
    /** The ID of course related to the completed item */
    course_item_id: (Scalars['ID'] | null)
    /** The date when the completed item was created */
    created_at: Scalars['String']
    /** The unique identifier of the item */
    id: Scalars['ID']
    /** The next item after the current item */
    next_item: (CourseItem | null)
    /** The date when the completed item was updated */
    updated_at: Scalars['String']
    /** The ID of the user related to the completed item */
    user_id: (Scalars['ID'] | null)
    __typename: 'CompletedCourseItem'
}


/** An object with information about how an onboarding item was completed */
export interface CompletedOnboardingItem {
    /** The URL to go to to edit the attached object */
    attached_object_edit_url: (Scalars['String'] | null)
    /** The most relevant date to display */
    date_to_show: (Scalars['String'] | null)
    /** The unique identifier of the item */
    id: Scalars['ID']
    /** The id of the object that completed the onboarding item */
    item_id: (Scalars['String'] | null)
    /** The type of item that was completed */
    item_type: (Scalars['String'] | null)
    /** The onboarding item that was completed */
    onboarding_item: (OnboardingItem | null)
    /** The ID of the onboarding item */
    onboarding_item_id: (Scalars['String'] | null)
    /** Set to true if the user skipped this */
    skipped: Scalars['Boolean']
    /** The completed (client) */
    user: (User | null)
    /** The ID of the completer (client) */
    user_id: (Scalars['String'] | null)
    /** The URL to view */
    view_url: (Scalars['String'] | null)
    __typename: 'CompletedOnboardingItem'
}


/** Autogenerated return type of ConnectApptToCharting. */
export interface ConnectApptToChartingPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ConnectApptToChartingPayload'
}


/** A object containing information about whether a specific contact type can be booked */
export interface ContactType {
    /** ID of the connected appointment setting */
    appointment_setting_id: (Scalars['String'] | null)
    /** ID of the connected appointment type */
    appointment_type_id: (Scalars['String'] | null)
    /** An Alias of ID that makes creating the form easier */
    form_id: (Scalars['String'] | null)
    /** The unique identifier of the contact type */
    id: (Scalars['ID'] | null)
    /** The graphql_name of the contact type */
    name: (Scalars['String'] | null)
    /** Whether this contact type can be used */
    show: Scalars['Boolean']
    /** The ID of the connected user */
    user_id: (Scalars['String'] | null)
    __typename: 'ContactType'
}


/** An association between conversation holders */
export interface Conversation {
    /** The user who closed the conversation */
    closed_by: (User | null)
    /** The date the conversation was closed */
    closed_date: (Scalars['String'] | null)
    /** Display default name for community chat */
    community_chat_prefix: (Scalars['String'] | null)
    /** All ConversationMemberships associated with this conversation. */
    conversation_memberships: ConversationMembership[]
    /** The number of users in the conversation */
    conversation_memberships_count: (Scalars['Int'] | null)
    /** The time the Conversation was created */
    created_at: Scalars['String']
    /** The conversation membership for the current user */
    current_user_conversation_membership: (ConversationMembership | null)
    /** ID of dietitian */
    dietitian_id: (Scalars['ID'] | null)
    /** first four invitees to the conversation */
    first_four_invitees: (User[] | null)
    /** The unique identifier of the conversation */
    id: Scalars['ID']
    /** Whether the conversation includes multiple clients */
    includes_multiple_clients: (Scalars['Boolean'] | null)
    /** The invitees to the conversation */
    invitees: (User[] | null)
    /** Whether the conversation is hidden for the client */
    is_hidden_for_client: (Scalars['Boolean'] | null)
    /** The content of the last note, with HTML stripped */
    last_message_content: (Scalars['String'] | null)
    /** ID of the last note of conversation that was sent by the convo owner and viewed by the patient */
    last_note_viewed_id: (Scalars['String'] | null)
    /** The subject of conversation */
    name: (Scalars['String'] | null)
    /** All notes associated with this conversation. */
    notes: Note[]
    /** owner of conversation */
    owner: (User | null)
    /** ID of patient */
    patient_id: (Scalars['ID'] | null)
    /** The last time the conversation was updated */
    updated_at: Scalars['String']
    /** invitees to the conversation */
    user_groups: (UserGroup[] | null)
    __typename: 'Conversation'
}


/** ConversationMembership entry, returns basic info related to conversation participant */
export interface ConversationMembership {
    /** Toggle for archive status */
    archived: Scalars['Boolean']
    /** Conversation id of conversation membership */
    conversation_id: (Scalars['ID'] | null)
    /** Role in conversation */
    conversation_role: (Scalars['String'] | null)
    /** Conversation linked to this membership */
    convo: (Conversation | null)
    /** The time the conversation of the */
    convo_updated_at: (User | null)
    /** The date the Conversation Membership was created */
    created_at: Scalars['String']
    /** The creator of this ConversationMembership */
    creator: (User | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** URL to the avatar to display */
    display_avatar: (Scalars['String'] | null)
    /** Either the name of the owner or conversation subject? */
    display_name: (Scalars['String'] | null)
    /** The first name and last name initial of the owner */
    display_name_and_initial: (Scalars['String'] | null)
    /** Display the other user first name for non group convos */
    display_other_user_first_name: (Scalars['String'] | null)
    /** Display title or other user name for non group convos */
    display_other_user_name: (Scalars['String'] | null)
    /** The unique identifier of the membership */
    id: Scalars['ID']
    /** Get last conversation task */
    last_task: (Task | null)
    /** Datetime membership was updated */
    updated_at: Scalars['String']
    /** The creator of membership */
    user_id: (Scalars['ID'] | null)
    /** The list of users in conversation (to use in place of display name */
    user_list_as_display_name: (Scalars['String'] | null)
    /** Whether the conversation has been viewed */
    viewed: Scalars['Boolean']
    __typename: 'ConversationMembership'
}


/** Conversation Membership sorting enum */
export type ConversationMembershipOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'CONVERSATION_CREATED_AT_ASC' | 'CONVERSATION_CREATED_AT_DESC' | 'CONVERSATION_UPDATED_AT_ASC' | 'CONVERSATION_UPDATED_AT_DESC'


/** Autogenerated return type of ConvertFromJsonToForm. */
export interface ConvertFromJsonToFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ConvertFromJsonToFormPayload'
}


/** Autogenerated return type of ConvertToMetric. */
export interface ConvertToMetricPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ConvertToMetricPayload'
}


/** Autogenerated return type of CopyForms. */
export interface CopyFormsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'CopyFormsPayload'
}


/** A Course */
export interface Course {
    /** Whether the course is active */
    active: Scalars['Boolean']
    /** Course clients */
    clients: (CourseMembership[] | null)
    /** Course group memberships for the course */
    clients_groups: (CourseGroup[] | null)
    /** The number of completed memberships in the course */
    completed_course_memberships_count: (Scalars['Int'] | null)
    /** The benefits of a course */
    course_benefits: CourseBenefit[]
    /** Course group memberships for the course */
    course_groups: (CourseGroup[] | null)
    /** The items of a course */
    course_items: CourseItem[]
    /** Course memberships for the course */
    course_memberships: (CourseMembership[] | null)
    /** The number of members in the course */
    course_memberships_count: (Scalars['String'] | null)
    /** type of the course */
    course_type: Scalars['String']
    /** date course was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** date course was deleted */
    deleted_at: (Scalars['String'] | null)
    /** Description of course */
    description: (Scalars['String'] | null)
    /** end date of the course based on included items */
    end_date: (Scalars['String'] | null)
    /** HTML-formatted benefits of the course */
    formatted_benefits: (Scalars['String'] | null)
    /** The unique identifier of the course */
    id: Scalars['ID']
    /** The number of in progress memberships in the course */
    in_progress_course_memberships_count: (Scalars['Int'] | null)
    /** late enrollment for fixed type courses */
    late_enroll: (Scalars['Boolean'] | null)
    /** Name of course */
    name: (Scalars['String'] | null)
    /** The number of not started memberships in the course */
    not_started_course_memberships_count: (Scalars['Int'] | null)
    /** Offerings contains current course */
    offerings: (Offering[] | null)
    /** url for course image */
    preview_image_url: (Scalars['String'] | null)
    /** url for course video */
    preview_video_content: (Scalars['String'] | null)
    /** start date for fixed type course */
    start_date: (Scalars['String'] | null)
    /** Ungrouped Course memberships for the course */
    ungrouped_course_memberships: (CourseMembership[] | null)
    /** date course was updated */
    updated_at: (Scalars['String'] | null)
    /** Use category toggle */
    use_category: (Scalars['Boolean'] | null)
    /** Use video label toggle */
    use_video_label: (Scalars['Boolean'] | null)
    /** The user groups who have access to this course */
    user_groups: UserGroup[]
    /** User id of course */
    user_id: (Scalars['ID'] | null)
    /** The users who have access to this course */
    users: User[]
    /** The progress of users who completed the course item */
    users_course_items_progress: (Scalars['String'] | null)
    /** The users course progress */
    users_progress: (Scalars['String'] | null)
    __typename: 'Course'
}


/** A Course Benefit */
export interface CourseBenefit {
    /** Benefit of a course */
    benefit: (Scalars['String'] | null)
    /** Course ID of benefit */
    course_id: (Scalars['ID'] | null)
    /** The unique identifier of the benefit */
    id: Scalars['ID']
    __typename: 'CourseBenefit'
}


/** Completion info for group participants enrolled to the course */
export interface CourseCompletionInfoGroupsType {
    /** Count of users in the group which completed the course */
    completed: (Scalars['Int'] | null)
    /** Group name */
    label: (Scalars['String'] | null)
    /** Count of users in the group */
    total: (Scalars['Int'] | null)
    /** Group participant ids */
    user_ids: (Scalars['String'][] | null)
    /** Group ID */
    value: (Scalars['String'] | null)
    __typename: 'CourseCompletionInfoGroupsType'
}


/** Completion info for individual participants enrolled to the course */
export interface CourseCompletionInfoIndividualsType {
    /** User full_name */
    label: (Scalars['String'] | null)
    /** User ID */
    value: (Scalars['String'] | null)
    __typename: 'CourseCompletionInfoIndividualsType'
}


/** Information based on course groups & individuals completion status */
export interface CourseCompletionInfoType {
    /** Complete info for the course user_groups */
    groups: (CourseCompletionInfoGroupsType[] | null)
    /** Complete info for the course individual users */
    individuals: (CourseCompletionInfoIndividualsType[] | null)
    __typename: 'CourseCompletionInfoType'
}


/** Relationship between a user group and a course */
export interface CourseGroup {
    /** the course associated with this membership */
    course: (Course | null)
    /** The unique identifier of the group */
    id: Scalars['ID']
    /** start of course */
    start_at: (Scalars['String'] | null)
    /** When true, new group members start the course at the current time, overriding start_at */
    start_on_group_assignment: Scalars['Boolean']
    /** the user group associated with this membership */
    user_group: (UserGroup | null)
    __typename: 'CourseGroup'
}


/** A Course Item */
export interface CourseItem {
    /** whether the attached object is a video form */
    attached_object_is_video: (Scalars['Boolean'] | null)
    /** Shows if the current course item is blocked by an incomplete previous required item */
    blocked_by_prev_item: (Scalars['Boolean'] | null)
    /** category of item */
    category: (Scalars['String'] | null)
    /** Check if course item was completed by a client */
    completed_by_client: (Scalars['Boolean'] | null)
    /** The completed course item */
    completed_course_item: (CompletedCourseItem | null)
    /** The number of members who completed the item */
    completed_memberships_count: (Scalars['Int'] | null)
    /** Determines whether or not completion of the course item is necessary to access the next */
    completion_required_for_next_module: Scalars['Boolean']
    /** The associated course */
    course: (Course | null)
    /** id of course associated with item */
    course_id: (Scalars['ID'] | null)
    /** name of course that item belongs to */
    course_name: (Scalars['String'] | null)
    /** when item was created */
    created_at: Scalars['String']
    /** type of custom module of a course item (if app) */
    custom_module_type: (Scalars['String'] | null)
    /** Shows if the current course item is blocked due to course membership date restriction */
    date_restricted: (Scalars['Boolean'] | null)
    /** description of item */
    description: (Scalars['String'] | null)
    /** The path to edit the item */
    edit_url: (Scalars['String'] | null)
    /** This is the first required module that is incomplete, and will block items in higher positions */
    first_incomplete_required_module: (CourseItem | null)
    /** Course item has matrix field */
    has_matrix_field: (Scalars['Boolean'] | null)
    /** The unique identifier of the item */
    id: Scalars['ID']
    /** The ID of an incomplete form associated with the item */
    incomplete_course_item_id: (Scalars['ID'] | null)
    /** id of item */
    item_id: (Scalars['ID'] | null)
    /** type of course item */
    item_type: (Scalars['String'] | null)
    /** name of item */
    name: (Scalars['String'] | null)
    /** The next item in the course */
    next_item: (CourseItem | null)
    /** Check if course item is available to a client */
    not_available_for_client: (Scalars['Boolean'] | null)
    /** Check if course item is available to any client */
    not_available_to_any_clients: (Scalars['Boolean'] | null)
    /** The position of the course item type when shown in a list of other modules on the same day */
    position: (Scalars['Int'] | null)
    /** The previous item in the course */
    prev_item: (CourseItem | null)
    /** scheduled release? */
    scheduled_release: (Scalars['String'] | null)
    /** when item was updated */
    updated_at: Scalars['String']
    /** id of user associated with item */
    user_id: (Scalars['ID'] | null)
    /** The path to view the item */
    view_url: (Scalars['String'] | null)
    __typename: 'CourseItem'
}


/** Relationship between a user and a course */
export interface CourseMembership {
    /** the course associated with this membership */
    course: (Course | null)
    /** id of course related to this membership */
    course_id: (Scalars['ID'] | null)
    /** status of related course completion */
    course_status: Scalars['String']
    /** date membership was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The unique identifier of the membership */
    id: Scalars['ID']
    /** The next incomplete item */
    next_incomplete_item: (CourseItem | null)
    /** The incomplete item after the next incomplete item */
    next_next_incomplete_item: (CourseItem | null)
    /** start of course */
    start_at: (Scalars['String'] | null)
    /** date membership was updated */
    updated_at: Scalars['String']
    /** the user associated with this membership */
    user: (User | null)
    /** id of user related to this membership */
    user_id: (Scalars['ID'] | null)
    __typename: 'CourseMembership'
}


/** The CPT code */
export interface CptCode {
    /**
     * @deprecated Always returns nil
     * The CPT code category
     */
    category: (Scalars['String'] | null)
    /** The CPT code */
    code: (Scalars['String'] | null)
    /** The date when the CPT code was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The description of the CPT code */
    description: (Scalars['String'] | null)
    /** The name of the CPT code for use in labels */
    display_name: (Scalars['String'] | null)
    /** The unique identifier of the CPT code */
    id: Scalars['ID']
    /** Whether a CPT code marked as favorite */
    is_favorite: (Scalars['Boolean'] | null)
    /** The last fee applied to this CPT code by a provider */
    last_fee: (Scalars['Float'] | null)
    /** The date when the CPT code was updated */
    updated_at: Scalars['String']
    __typename: 'CptCode'
}


/** cpt codes cms 1500s join table */
export interface CptCodesCms1500 {
    /** cms 1500 id */
    cms1500_id: (Scalars['ID'] | null)
    /** The CPT code itself */
    cpt_code: (CptCode | null)
    /**
     * @deprecated Use cpt_code instead
     * icd code id
     */
    cpt_code_id: (Scalars['ID'] | null)
    /** date created */
    created_at: (Scalars['String'] | null)
    /** The Early and Periodic Screening, Diagnostic and Treatment */
    epsdt: (Scalars['String'] | null)
    /** Self descriptive */
    family_planning_service: (Scalars['Boolean'] | null)
    /** fee */
    fee: (Scalars['String'] | null)
    /** The unique identifier of the cms 1500 */
    id: (Scalars['ID'] | null)
    /** First Modification */
    mod1: (Scalars['String'] | null)
    /** Second Modification */
    mod2: (Scalars['String'] | null)
    /** Third Modification */
    mod3: (Scalars['String'] | null)
    /** Fourth Modification */
    mod4: (Scalars['String'] | null)
    /** Diagnostic pointers. These are used to connect Diagnosis(ICD) with appropriate Billing Item(CPT) in CMS1500 form */
    pointers: ((Scalars['String'] | null)[] | null)
    /** service date */
    service_date: (Scalars['String'] | null)
    /** The end date of service (if the line item covers a date range). Can be nil if service was delivered on one day */
    service_end_date: (Scalars['String'] | null)
    /** units */
    units: (Scalars['String'] | null)
    /** date updated */
    updated_at: (Scalars['String'] | null)
    __typename: 'CptCodesCms1500'
}


/** cpt codes policies join table */
export interface CptCodesPolicy {
    /** cpt code */
    code: (Scalars['String'] | null)
    /** id of instance of joins between cpt_code and policy */
    cpt_code_id: (Scalars['ID'] | null)
    /** date created */
    created_at: Scalars['String']
    /** cpt code description */
    description: (Scalars['String'] | null)
    /** The unique identifier of the join between cpt_code and policy. */
    id: Scalars['ID']
    /** policy id */
    policy_id: (Scalars['ID'] | null)
    /** date updated */
    updated_at: Scalars['String']
    __typename: 'CptCodesPolicy'
}


/** cpt codes super bills join table */
export interface CptCodesSuperBill {
    /** billing item id */
    billing_item_id: (Scalars['ID'] | null)
    /** cpt code */
    cpt_code: (CptCode | null)
    /** cpt code id */
    cpt_code_id: (Scalars['ID'] | null)
    /** date created */
    created_at: Scalars['String']
    /** fee */
    fee: (Scalars['String'] | null)
    /** The unique identifier of the join */
    id: Scalars['ID']
    /** First Modification */
    mod1: (Scalars['String'] | null)
    /** Second Modification */
    mod2: (Scalars['String'] | null)
    /** Third Modification */
    mod3: (Scalars['String'] | null)
    /** Fourth Modification */
    mod4: (Scalars['String'] | null)
    /** Pointers */
    pointers: (Scalars['String'][] | null)
    /** service date */
    service_date: (Scalars['String'] | null)
    /** super bill id */
    super_bill_id: (Scalars['ID'] | null)
    /** units */
    units: (Scalars['String'] | null)
    /** date updated */
    updated_at: Scalars['String']
    __typename: 'CptCodesSuperBill'
}


/** Autogenerated return type of CreateChangeAccount. */
export interface CreateChangeAccountPayload {
    /** The additional info */
    additional_info: (Scalars['String'] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'CreateChangeAccountPayload'
}


/** Autogenerated return type of CreateChangeHealthPatient. */
export interface CreateChangeHealthPatientPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'CreateChangeHealthPatientPayload'
}


/** Autogenerated return type of CreateClaimSubmitter. */
export interface CreateClaimSubmitterPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'CreateClaimSubmitterPayload'
}


/** Autogenerated return type of CreateClientViaForm. */
export interface CreateClientViaFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    form_answer_group: (FormAnswerGroup | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'CreateClientViaFormPayload'
}


/** A custom email */
export interface CustomEmail {
    /** created at */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** type of email */
    email_type: (Scalars['String'] | null)
    /** email greeting */
    greeting: (Scalars['String'] | null)
    /** The unique identifier of the email */
    id: Scalars['ID']
    /** message body */
    message_body: (Scalars['String'] | null)
    /** subject of email */
    name: (Scalars['String'] | null)
    /** reactivation_wait_days */
    reactivation_wait_days: (Scalars['String'] | null)
    /** Appointment Type, Program or Package object */
    related_object: (CustomEmailRelatedObject | null)
    /** subject of email */
    subject: (Scalars['String'] | null)
    /** updated at */
    updated_at: Scalars['String']
    /** user id of provider */
    user_id: (Scalars['ID'] | null)
    __typename: 'CustomEmail'
}


/** CustomEmail related_object union */
export type CustomEmailRelatedObject = (AppointmentType | Course | Offering) & { __isUnion?: true }


/** A custom metric for a user */
export interface CustomMetric {
    /** feature toggle id this custom metric belongs to */
    feature_toggle_id: (Scalars['Int'] | null)
    /** The high end of the normal range */
    high_warning_threshold: (Scalars['Int'] | null)
    /** The unique identifier of the metric */
    id: Scalars['ID']
    /** The low end of the normal range */
    low_warning_threshold: (Scalars['Int'] | null)
    /** The name of the custom metric */
    name: (Scalars['String'] | null)
    /** if yes, should show based on if there is custom metric override */
    should_show: (Scalars['Boolean'] | null)
    /** if yes, should show the client based on if there is a custom metric override */
    should_show_client: (Scalars['Boolean'] | null)
    /** if yes, show the custom metric */
    show: Scalars['Boolean']
    /** if yes, show the custom metric to client */
    show_client: Scalars['Boolean']
    /** if yes, track the custom metric */
    track: Scalars['Boolean']
    /** user id this custom metric belongs to */
    user_id: (Scalars['Int'] | null)
    __typename: 'CustomMetric'
}


/** A custom metric for a user */
export interface CustomMetricOverride {
    /** custom metric */
    custom_metric: (CustomMetric | null)
    /** id of the custom metric */
    custom_metric_id: (Scalars['ID'] | null)
    /** feature toggle id this custom metric belongs to */
    feature_toggle_id: (Scalars['Int'] | null)
    /** id form helper */
    form_id: (Scalars['String'] | null)
    /** The unique identifier of the override */
    id: Scalars['ID']
    /** The name of the custom metric */
    name: (Scalars['String'] | null)
    /** if yes, show the custom metric */
    show: Scalars['Boolean']
    /** if yes, show the custom metric to the client */
    show_client: Scalars['Boolean']
    /** if yes, track the custom metric */
    track: (Scalars['Boolean'] | null)
    /** user id this custom metric belongs to */
    user_id: (Scalars['Int'] | null)
    __typename: 'CustomMetricOverride'
}


/** A question in a template */
export interface CustomModule {
    /** True if there are conditionally displayed custom modules which rely on state of this module */
    controls_conditional_modules: (Scalars['Boolean'] | null)
    /** The name of the form this custom module has been originally copied from */
    copied_from_form_name: (Scalars['String'] | null)
    /** The conditional logic for showing/hiding the custom module */
    custom_module_condition: (CustomModuleConditionType | null)
    /** The template that this question is a part of */
    custom_module_form: (CustomModuleForm | null)
    /** The ID of the template the question is a part of */
    custom_module_form_id: (Scalars['String'] | null)
    /** The ID of the form section this custom module belongs to. Used for autoscoring */
    custom_module_form_section_id: (Scalars['ID'] | null)
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id: (Scalars['String'] | null)
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id_type: (Scalars['String'] | null)
    /** The name to use in the HIPAA form */
    hipaa_name: (Scalars['String'] | null)
    /** The unique identifier of the module */
    id: Scalars['ID']
    /** Whether this module is a custom module */
    is_custom: Scalars['Boolean']
    /** The label of the question */
    label: (Scalars['String'] | null)
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata: (Scalars['String'] | null)
    /** The type of question */
    mod_type: (Scalars['String'] | null)
    /** The default options for this question */
    options: (Scalars['String'] | null)
    /** The options, broken up into an array */
    options_array: ((Scalars['String'] | null)[] | null)
    /** IDs of of other modules to include in the autoscore calculation */
    other_module_ids_to_autoscore_on: ((Scalars['ID'] | null)[] | null)
    /** ID of the parent custom module */
    parent_custom_module_id: (Scalars['String'] | null)
    /** The position of the question (the lower the earlier the question is shown) */
    position: (Scalars['Float'] | null)
    /** Eventually will replace position, currently unused. The position of the question (the lower the earlier the question is shown) */
    position_integer: (Scalars['Int'] | null)
    /** Whether this question is required to be completed before the form it's in can be saved */
    required: (Scalars['Boolean'] | null)
    /** The sublabel (description) of the question */
    sublabel: (Scalars['String'] | null)
    __typename: 'CustomModule'
}


/** Condition under which to show a custom module */
export interface CustomModuleConditionType {
    /** The ID of the custom module whose value determines whether to show or hide the custom module */
    conditional_custom_module_id: (Scalars['ID'] | null)
    /** The ID of the custom module that will be shown or hidden */
    custom_module_id: (Scalars['ID'] | null)
    /** The type of filter */
    filter_type: (Scalars['String'] | null)
    /** The unique identifier of the condition */
    id: Scalars['ID']
    /** The value to check the filter against */
    value_to_filter: (Scalars['String'] | null)
    __typename: 'CustomModuleConditionType'
}


/** A template for a form, that can then be filled out */
export interface CustomModuleForm {
    /** The date on which the template was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The questions in the template */
    custom_modules: CustomModule[]
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id: (Scalars['String'] | null)
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id_type: (Scalars['String'] | null)
    /** All filled out forms for this template */
    form_answer_groups: FormAnswerGroup[]
    /** The form has matrix field */
    has_matrix_field: (Scalars['Boolean'] | null)
    /** When true, the form has modules that the user has to fill out */
    has_non_readonly_modules: (Scalars['Boolean'] | null)
    /** The unique identifier of the module form */
    id: Scalars['ID']
    /** Whether the form contains only one custom_module with mod_type 'video' and was created as part of a program */
    is_video: (Scalars['Boolean'] | null)
    /** User who last updated this form */
    last_updated_by_user: (User | null)
    /** A serialized JSON string of metadata. Maximum character limit of 10,000. */
    metadata: (Scalars['String'] | null)
    /** The given name of the template */
    name: (Scalars['String'] | null)
    /** Whether subsequent times filling out the template, will start with the template prefilled with the previous answers */
    prefill: (Scalars['Boolean'] | null)
    /** The date on which the template was updated */
    updated_at: Scalars['String']
    /** Whether or not this form was uploaded by Healthie team member */
    uploaded_by_healthie_team: Scalars['Boolean']
    /** Whether the template can be used to chart with */
    use_for_charting: Scalars['Boolean']
    /** Whether the template was made for a program */
    use_for_program: Scalars['Boolean']
    /** The owner of the template */
    user: (User | null)
    __typename: 'CustomModuleForm'
}


/** CustomModuleForm sorting enum */
export type CustomModuleFormOrderKeys = 'NAME_ASC' | 'NAME_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'USER_LAST_NAME_DESC' | 'USER_LAST_NAME_ASC' | 'TYPE_ASC' | 'TYPE_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC'


/** A custom sidebar override */
export interface CustomSidebarOverride {
    /** The icon of the image that will be display on the sidebar */
    icon: (Scalars['String'] | null)
    /** The unique identifier of the override */
    id: Scalars['ID']
    /** The label of the sidebar item that will be shown or hidden */
    label: (Scalars['String'] | null)
    /** If true, the sidebar item will be open in an iframe within the Healthie UI */
    open_in_iframe: (Scalars['Boolean'] | null)
    /** If true, the sidebar item will be displayed */
    show: (Scalars['Boolean'] | null)
    /** The link to the custom icon that will be displayed on the sidebar */
    svg_url: (Scalars['String'] | null)
    /** Where the link will open if clicked */
    target: (Scalars['String'] | null)
    /** The link that the sidebar item will direct to */
    url: (Scalars['String'] | null)
    __typename: 'CustomSidebarOverride'
}


/** Each day range is a time range and the days of the week that are in that time range */
export interface DayRangeType {
    /** The days of the week that are in this time range */
    days: ((Scalars['String'] | null)[] | null)
    /** The time range that is in this time range */
    time_range: (Scalars['String'] | null)
    __typename: 'DayRangeType'
}


/** A Dexcom Connection */
export interface DexcomConnection {
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** The last time Dexcom was synced */
    last_sync_date: (Scalars['String'] | null)
    __typename: 'DexcomConnection'
}


/** A diagnosis */
export interface Diagnosis {
    /** Active diagnosis */
    active: Scalars['Boolean']
    /** custom module id */
    custom_module_id: (Scalars['ID'] | null)
    /** End date */
    end_date: (Scalars['String'] | null)
    /** First symptom date */
    first_symptom_date: (Scalars['String'] | null)
    /** icd code */
    icd_code: (IcdCode | null)
    /** icd code id */
    icd_code_id: (Scalars['ID'] | null)
    /** icd codes cms1500s id */
    icd_codes_cms1500s_id: (Scalars['ID'] | null)
    /** icd codes super bill id */
    icd_codes_super_bill_id: (Scalars['ID'] | null)
    /** The unique identifier of the diagnosis */
    id: Scalars['ID']
    /** Primary diagnosis */
    primary: (Scalars['Boolean'] | null)
    /** Date diagnosis was last updated */
    updated_at: (Scalars['String'] | null)
    /** Owner of this diagnosis */
    user: (User | null)
    /** user id */
    user_id: (Scalars['ID'] | null)
    __typename: 'Diagnosis'
}


/** Information on the direct message attachment */
export interface DirectMessageAttachment {
    /** The file name of the attachment */
    attachment_name: (Scalars['String'] | null)
    /** The unique ID of the direct message attachment */
    id: (Scalars['ID'] | null)
    __typename: 'DirectMessageAttachment'
}


/** A discount from stripe as object */
export interface Discount {
    /** Amount off in cents */
    amount_off: (Scalars['Int'] | null)
    /** Annual discount in cents */
    annual_discount: (Scalars['String'] | null)
    /** Duration of the discount */
    duration: (Scalars['String'] | null)
    /** Duration in months */
    duration_in_months: (Scalars['Int'] | null)
    /** The unique identifier of the discount */
    id: Scalars['String']
    /** Monthly discount in cents */
    monthly_discount: (Scalars['String'] | null)
    /** The name of the discount */
    name: (Scalars['String'] | null)
    /** Percent off in cents */
    percent_off: (Scalars['Int'] | null)
    __typename: 'Discount'
}


/** A document file that contains an attachment and information about the attachment */
export interface Document {
    /** When true, the user cannot adjust settings for the document besides sharing. */
    can_only_share: (Scalars['Boolean'] | null)
    /** The date the document was made available to the given client */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The description of the document */
    description: (Scalars['String'] | null)
    /** The display name of the document */
    display_name: (Scalars['String'] | null)
    /** Include the file in new clients welcome email */
    email_on_welcome: Scalars['Boolean']
    /** A URL to download the file, good for 10 seconds */
    expiring_url: (Scalars['String'] | null)
    /** The extension of the document */
    extension: (Scalars['String'] | null)
    /** The file type of the document */
    file_content_type: (Scalars['String'] | null)
    /** The file extension in human-readable format e.g.: 'Video'/'Audio'/'Excel' etc */
    friendly_type: (Scalars['String'] | null)
    /** The unique idenitifer of the document */
    id: Scalars['ID']
    /** Include the document within the private charts section */
    include_in_charting: Scalars['Boolean']
    /** Notes on the document (not visible to the client) */
    internal_notes: (Scalars['String'] | null)
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. Only accessible by staff and providers */
    metadata: (Scalars['String'] | null)
    /** Instances of the document being viewed/opened */
    opens: (DocumentViewing[] | null)
    /** Owner of this document */
    owner: (User | null)
    /** In the case of a private document, the user that this document is for */
    rel_user: (User | null)
    /** ID of the assigned client */
    rel_user_id: (Scalars['ID'] | null)
    /** The document shared */
    shared: (Scalars['Boolean'] | null)
    /** Share the file with new clients automatically */
    shared_on_welcome: Scalars['Boolean']
    /** The number of user groups who the document is shared */
    shared_user_groups_count: (Scalars['Int'] | null)
    /** The number of users who the document is directly shared with (not through groups) */
    shared_users_count: (Scalars['Int'] | null)
    /** Share with all members of the organization */
    shared_with_dietitians: Scalars['Boolean']
    /** The date the document was updated */
    updated_at: Scalars['String']
    /** The user groups who have access to this document */
    user_groups: UserGroup[]
    /** The users who have access to this document */
    users: User[]
    __typename: 'Document'
}


/** Document sorting enum */
export type DocumentOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NAME_DESC' | 'NAME_ASC'


/** Information about a document being opened */
export interface DocumentViewing {
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The ID of the document that was opened */
    document_id: Scalars['ID']
    /** The unique identifier of the viewing */
    id: Scalars['ID']
    /** The user who opened the document */
    user: (User | null)
    /** The ID of the user who opened the document */
    user_id: Scalars['ID']
    /** When the document was opened */
    viewed_at: Scalars['String']
    __typename: 'DocumentViewing'
}


/** Dosage of a medication or prescription */
export interface DosageType {
    /** The unique identifier of the dosage */
    id: Scalars['ID']
    /** The medication's national drug code */
    ndc: (Scalars['String'] | null)
    /** The strength of the dosage */
    strength: Scalars['String']
    __typename: 'DosageType'
}


/** Only available to Internal Healthie Users -- Roles assigned to a given User */
export interface DoseSpot {
    /** State of account being approved */
    approved: Scalars['Boolean']
    /** User's Clinic ID */
    clinic_id: (Scalars['String'] | null)
    /** User's Clinic Key */
    clinic_key: (Scalars['String'] | null)
    /** Date the object was created */
    created_at: Scalars['String']
    /** User ID associated with DoseSpot */
    dosespot_user_id: (Scalars['String'] | null)
    /** The unique identifier of the type */
    id: Scalars['ID']
    /** This user is a clinic admin in dosespot */
    is_clinic_admin: (Scalars['Boolean'] | null)
    /** Number of notifications on dosespot the User has */
    notification_count: Scalars['String']
    /** ID of the user prescribing the dosespot */
    prescribing_dosespot_user_id: (Scalars['String'] | null)
    /** The dosespot status */
    registration_status: (Scalars['Boolean'] | null)
    /** Date the object was last updated */
    updated_at: Scalars['String']
    /** User ID associated with the dosespot object in Healthie */
    user_id: (Scalars['String'] | null)
    __typename: 'DoseSpot'
}


/** draft of a conversation note */
export interface Draft {
    /** content of draft */
    content: (Scalars['String'] | null)
    /** id of linked conversation membership */
    conversation_membership_id: (Scalars['ID'] | null)
    /** The unique identifier of the draft */
    id: Scalars['ID']
    __typename: 'Draft'
}


/** Allergen information */
export interface DrugAllergenType {
    /** The brand name of the allergen */
    brand_name: Scalars['String']
    /** The unique identifier of the allergen */
    id: Scalars['ID']
    /** The name of the allergen */
    name: Scalars['String']
    /** The type of allergen */
    type: DrugAllergenTypeEnum
    __typename: 'DrugAllergenType'
}


/** DrugAllergen class enum */
export type DrugAllergenTypeEnum = 'INGREDIENT' | 'CLASS'


/** Autogenerated return type of EmbedForm. */
export interface EmbedFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'EmbedFormPayload'
}


/** A step that embeds a widget */
export interface EmbedWidgetStepType {
    /** The unique identifier of the step */
    id: Scalars['String']
    /** The title of the step */
    title: (Scalars['String'] | null)
    __typename: 'EmbedWidgetStepType'
}


/** Autogenerated return type of EnableMfa. */
export interface EnableMfaPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'EnableMfaPayload'
}


/** Autogenerated return type of EnableMixpanel. */
export interface EnableMixpanelPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'EnableMixpanelPayload'
}


/** Autogenerated return type of EnableZoomFeatures. */
export interface EnableZoomFeaturesPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'EnableZoomFeaturesPayload'
}


/** A post about a client, with different category options */
export interface Entry {
    /** User who added the entry */
    added_by_user: (User | null)
    /** the user who actually put in the entry (not always the user who the entry is about) */
    added_by_user_id: (Scalars['ID'] | null)
    /** The category of this entry */
    category: (Scalars['String'] | null)
    /** All comments association with this entry. */
    comments: Comment[]
    /** The time at which this entry was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Default water intake for this entry user */
    default_water_intake_for_entry_user: (Scalars['Int'] | null)
    /** The description for the entry */
    description: (Scalars['String'] | null)
    /** A more granular 1-10 scale of how hungry the user thought they were after eating */
    ed_posthunger: (Scalars['String'] | null)
    /** A more granular 1-10 scale of how hungry the user thought they were after eating */
    ed_posthunger_string: (Scalars['String'] | null)
    /** A more granular 1-10 scale of how hungry the user thought they were before eating */
    ed_prehunger: (Scalars['String'] | null)
    /** A more granular 1-10 scale of how hungry the user thought they were before eating */
    ed_prehunger_string: (Scalars['String'] | null)
    /** The users emotions towards the meal */
    emotions: (Scalars['String'] | null)
    /** The users emotions towards the meal */
    emotions_string: (Scalars['String'] | null)
    /** If average of any type, value indicates amount of entries already included in average calculation */
    entries_in_average: (Scalars['Int'] | null)
    /** Third party external ID associated with this entry */
    external_id: (Scalars['String'] | null)
    /** Third party associated with the external ID on this entry. One option currently supported is 'AppleHealth' */
    external_id_type: (Scalars['String'] | null)
    /** True if the entry has subentries */
    has_subentries: (Scalars['Boolean'] | null)
    /** A hexadecimal value corresponding to the metric stat of a food entry */
    healthiness_info_hex_value: (Scalars['String'] | null)
    /** A boolean to check if the entry should be hidden from the main client feed */
    hide_from_main_feed: Scalars['Boolean']
    /** The unique identifier of the entry */
    id: Scalars['ID']
    /** The associated image of the entry */
    image: (Scalars['Upload'] | null)
    /** The URL of the entry's associated image */
    image_url: (Scalars['String'] | null)
    /** Meal entries of FoodEntry */
    meals: (Meal[] | null)
    /** The value of the metric for the entry */
    metric_stat: (Scalars['Float'] | null)
    /** Metric stat as a string */
    metric_stat_string: (Scalars['String'] | null)
    /** The name for this entry */
    name: (Scalars['String'] | null)
    /** Other symptom typed by the client */
    other_symptom: (Scalars['String'] | null)
    /** How hungry the poster thinks they were before eating */
    percieved_hungriness: (Scalars['Float'] | null)
    /** User who the entry is about */
    poster: (User | null)
    /** The water intake previously added */
    previous_water_intake_stat: Scalars['Int']
    /** the users reflections towards the meal */
    reflection: (Scalars['String'] | null)
    /** A name of third party source or full name of user who have created the entry */
    source: (Scalars['String'] | null)
    /** subentries of the Entry */
    subentries: (Entry[] | null)
    /** Comma-separated list of symptom names */
    symptom_names: (Scalars['String'] | null)
    /** Multiple symptoms ID selected by the client */
    symptoms: (Scalars['String'] | null)
    /** A name of third party source which actually created the entry */
    third_party_source: (Scalars['String'] | null)
    /** The type for this entry, options are - FoodEntry, WorkoutEntry, MirrorEntry, SleepEntry, NoteEntry, WaterIntakeEntry, PoopEntry', null: false */
    type: (Scalars['String'] | null)
    /** The last date and time that the entry was updated */
    updated_at: Scalars['String']
    /** A check to see if the entry has been viewed or not */
    viewed: Scalars['Boolean']
    __typename: 'Entry'
}


/** Entry sorting enum */
export type EntryOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'METRIC_STAT_ASC' | 'METRIC_STAT_DESC' | 'THIRD_PARTY_SOURCE_ASC' | 'THIRD_PARTY_SOURCE_DESC' | 'UNSORTED'


/** Autogenerated return type of ExtendPaywall. */
export interface ExtendPaywallPayload {
    additional_info: (Scalars['String'] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ExtendPaywallPayload'
}


/** An object containing info about the provider's exrernal calendar */
export interface ExternalCalendar {
    /** Send appointments to the external calendar */
    add_to_calendar: (Scalars['Boolean'] | null)
    /** A list of potential calendars */
    calendar_list: ((Scalars['String'] | null)[] | null)
    /** Email of external calendar */
    email: (Scalars['String'] | null)
    /** The type of external calerndar */
    external_type: (Scalars['String'] | null)
    /** Calendar has ran first sync */
    has_ran_first_sync: (Scalars['Boolean'] | null)
    /** Calendar has refresh token */
    has_refresh_token: (Scalars['Boolean'] | null)
    /** The unique identifier of the calendar */
    id: Scalars['ID']
    /** Pull in appointments from the external calendar */
    pull_from_calendar: (Scalars['Boolean'] | null)
    /** Calendar has pulled in location and note info otherwise it will contain 'Busy' */
    pull_in_event_details: (Scalars['Boolean'] | null)
    /** Selected calendars to pull in appointments from */
    pulled_in_calendars: ((Scalars['String'] | null)[] | null)
    /** The resource name (sync partner assigned ID) for the sync */
    resource_name: (Scalars['String'] | null)
    __typename: 'ExternalCalendar'
}


/** A family history condition record for a client */
export interface FamilyHistoryCondition {
    /** The unique identifier of the family history condition */
    id: Scalars['ID']
    /** Enum field for family relationships */
    relationships: (Scalars['String'][] | null)
    /** snomed term associated with the condition */
    snomed_term: (SnomedTerm | null)
    __typename: 'FamilyHistoryCondition'
}


/** An object containing info about the user' s fax line requests */
export interface FaxLineRequest {
    /** The area_code */
    area_code: (Scalars['String'] | null)
    /** The file type of the bill */
    bill: (Scalars['String'] | null)
    /** The city */
    city: (Scalars['String'] | null)
    /** The date and time that the fax line request was created */
    created_at: Scalars['String']
    /** The file type of the loa */
    loa: (Scalars['String'] | null)
    /** The request type */
    request_type: (Scalars['String'] | null)
    /** The state */
    state: (Scalars['String'] | null)
    __typename: 'FaxLineRequest'
}


/** An object containing details about what the client can and can't do */
export interface FeatureToggle {
    /** Activity level of the user */
    activity_level: (Scalars['String'] | null)
    /** Allow clients to sync with Apple Health */
    allow_apple_health_sync: Scalars['Boolean']
    /** Allow clients to sync with Clearstep */
    allow_clearstep_sync: Scalars['Boolean']
    /** Allow send messages to community chat */
    allow_community_chat: Scalars['Boolean']
    /** Allow clients to sync with Dexcom */
    allow_dexcom_sync: (Scalars['Boolean'] | null)
    /** Allow send messages to direct chat */
    allow_direct_chat: Scalars['Boolean']
    /** Allow clients to sync with Fitbit */
    allow_fitbit_sync: Scalars['Boolean']
    /** Allow clients to sync with Google Fit */
    allow_google_fit_sync: Scalars['Boolean']
    /** Allow clients to sync with Shapa */
    allow_shapa_sync: Scalars['Boolean']
    /** Allow clients to sync with Withings */
    allow_withings_sync: Scalars['Boolean']
    /** whether or not the eating disorder defaults are applied */
    apply_eating_disorder_default: Scalars['Boolean']
    /** The status of whether the linked user can view and schedule appointments */
    can_schedule_appointments: Scalars['Boolean']
    /** Whether or not clients can track poop in their journal entries */
    can_track_poop: Scalars['Boolean']
    /** Whether or not the client can track symptoms */
    can_track_symptoms: Scalars['Boolean']
    /** Whether or not clients can track water intake in their journal entries */
    can_track_water_intake: Scalars['Boolean']
    /** The status of whether the linked user can view care plan */
    can_view_care_plan: Scalars['Boolean']
    /** The status of whether the linked user can view and upload documents */
    can_view_documents: Scalars['Boolean']
    /** The status of whether the linked user can view and complete intake forms */
    can_view_forms: Scalars['Boolean']
    /** The status of whether the linked user can view and create goals */
    can_view_goals: Scalars['Boolean']
    /** The status of whether the linked user can view and create journal entries */
    can_view_journal_entries: Scalars['Boolean']
    /** The status of whether the linked user can view and purchase packages */
    can_view_packages: Scalars['Boolean']
    /** The status of whether the linked user can view and make payments */
    can_view_payments: Scalars['Boolean']
    /** The status of whether the linked user can view and complete programs */
    can_view_programs: Scalars['Boolean']
    /** The care plan associated with this feature toggle */
    care_plan: (CarePlan | null)
    /** The id of the care plan associated with this feature toggle */
    care_plan_id: (Scalars['ID'] | null)
    /** The date and time the entry was done */
    created_at: Scalars['String']
    /** Custom Metrics for this toggle */
    custom_metrics: (CustomMetric[] | null)
    /** Default date range selector when provider opens date picker in metrics tab */
    date_range_preference: Scalars['String']
    /** Default water intake set by provider */
    default_water_intake: Scalars['String']
    /** When true, it will not auto submit the CMS1500 to the clearing house */
    do_not_auto_submit_cms1500: Scalars['Boolean']
    /** The frequency with which clients get email notifications about their goals */
    email_notification_frequency: (Scalars['String'] | null)
    /** Food categories */
    food_categories: Scalars['String'][]
    /** If true, user has at least one entry type to track */
    has_any_entry_types: (Scalars['Boolean'] | null)
    /** CCDA is available if true */
    has_ccda: (Scalars['Boolean'] | null)
    /** The unique identifier of the feature toggle */
    id: (Scalars['ID'] | null)
    /** Food categories */
    initial_custom_metric_overrides: (CustomMetricOverride[] | null)
    /** Default date range when provider opens date picker in journal tab */
    last_journal_date_range_preference: (Scalars['String'] | null)
    /** Default from_date when provider opens date picker in journal tab */
    last_journal_from_date: (Scalars['String'] | null)
    /** Default to_date when provider opens date picker in journal tab */
    last_journal_to_date: (Scalars['String'] | null)
    /** Metric Graphs to show in line graph form */
    line_graph_metric_categories: ((Scalars['String'] | null)[] | null)
    /** Sleep Graphs to show in line graph form */
    line_graph_sleep_categories: ((Scalars['String'] | null)[] | null)
    /** Metric categories based on users toggle features */
    metric_categories: Scalars['String'][]
    /** Metric category objects (including defaults) based on users toggle features */
    metric_category_objects: (CustomMetric[] | null)
    /** Mirror categories */
    mirror_categories: Scalars['String'][]
    /** The frequency with which clients get push notifications about their goals */
    push_notification_frequency: (Scalars['String'] | null)
    /** Metrics that should be on for this feature toggle */
    returned_custom_metrics: Scalars['String'][]
    /** Send unpaid invoice reminder */
    send_unpaid_invoice_reminder: (Scalars['Boolean'] | null)
    /** The status of whether entries on graphs are seperated by the poster */
    seperate_provider_metric_from_client: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the A1C of the client */
    show_a1c_metric: (Scalars['Boolean'] | null)
    /** The status of whether the provider can view and track the client's body fat percentage */
    show_bf_percent_metric: (Scalars['Boolean'] | null)
    /** The status of whether the provider can view and track the client's blood pressure */
    show_blood_pressure_metric: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the blood sugar metrics of the client */
    show_blood_sugar_metric: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the calculated BMI of the client */
    show_bmi_graph: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the bmi-growth chart of the client */
    show_bmi_growth_chart: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the calculated BMR (using MFJ) of the client */
    show_bmr_metric: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the body temperature entries of the client */
    show_body_temperature_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can see A1C metrics of the client */
    show_client_a1c_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can view and track the client's body fat percentage */
    show_client_bf_percent_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can view and track the client's blood pressure */
    show_client_blood_pressure_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the blood sugar metrics of the client */
    show_client_blood_sugar_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the calculated BMI of the client */
    show_client_bmi_graph: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the bmi-growth chart of the client */
    show_client_bmi_growth_chart: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the calculated BMR (using MFJ) of the client */
    show_client_bmr_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the body temperature entries of the client */
    show_client_body_temperature_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the calculated BMR (using HB) of the client */
    show_client_harris_benedict: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the height-growth chart of the client */
    show_client_height_growth_chart: (Scalars['Boolean'] | null)
    /** The status of whether the client can see oxygen saturation metrics of the client */
    show_client_ox_sat_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can view and track the client's waist circumference */
    show_client_waist_circumference_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can see the weight-growth chart of the client */
    show_client_weight_growth_chart: (Scalars['Boolean'] | null)
    /** The status of whether the client can view and track the client's weight */
    show_client_weight_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track expanded (1-10) postmeal hunger level */
    show_ed_posthunger: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track expanded (1-10) premeal hunger level */
    show_ed_prehunger: (Scalars['Boolean'] | null)
    /** The status of whether the client can post food entries */
    show_food: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track the category (meal or snack) of the food */
    show_food_category: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track (1-10) emotion towards the food */
    show_food_emotion: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to post a (text) reflection towards the food */
    show_food_reflection: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the calculated BMR (using HB) of the client */
    show_harris_benedict: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track perceived healthiness */
    show_healthiness: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the height graph of the client */
    show_height_graph: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the height-growth chart of the client */
    show_height_growth_chart: (Scalars['Boolean'] | null)
    /** The status of whether the client can post metric entries */
    show_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can post selfie entries */
    show_mirror: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track normal (1-3) hunger level */
    show_normal_hunger: (Scalars['Boolean'] | null)
    /** The status of whether the client can post note entries */
    show_note: (Scalars['Boolean'] | null)
    /** The status of whether the client is asked to track (1-10) emotion towards the note */
    show_note_emotion: (Scalars['Boolean'] | null)
    /** The status of whether the client can include macro and micro nutrients for the food they track */
    show_nutrients_tracking: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the oxygen saturation of the client */
    show_ox_sat_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can post sleep entries */
    show_sleep: (Scalars['Boolean'] | null)
    /** The status of whether the provider can view and track the client's waist circumference */
    show_waist_circumference_metric: (Scalars['Boolean'] | null)
    /** The status of whether the provider can see the weight-growth chart of the client */
    show_weight_growth_chart: (Scalars['Boolean'] | null)
    /** The status of whether the provider can view and track the client's weight */
    show_weight_metric: (Scalars['Boolean'] | null)
    /** The status of whether the client can post workout entries */
    show_workout: (Scalars['Boolean'] | null)
    /** Symptom options for symptom entry type */
    symptom_options: SymptomOption[]
    /** The status of whether the client uses the metric system (versus imperial) */
    use_metric_system: (Scalars['Boolean'] | null)
    /** Associated user */
    user: (User | null)
    /** The user group associated with this feature toggle */
    user_group: (UserGroup | null)
    /** The user group associated with this feature toggle */
    user_group_id: (Scalars['ID'] | null)
    /** The user associated with this feature toggle */
    user_id: (Scalars['ID'] | null)
    /** If true, the user has active_care_plan  */
    uses_feature_toggle_from_care_plan: (Scalars['Boolean'] | null)
    /** When enabled, let's providers choose to have metrics that clients can view, but not enter */
    view_not_track: (Scalars['Boolean'] | null)
    /** Workout categories */
    workout_categories: Scalars['String'][]
    __typename: 'FeatureToggle'
}


/** Information about field that didn’t pass validation */
export interface FieldError {
    /** Field name that caused these errors */
    field: (Scalars['String'] | null)
    /** Validation message */
    message: Scalars['String']
    __typename: 'FieldError'
}


/** A Fitbit Sync */
export interface Fitbit {
    /** The unique identifier of the fitbit */
    id: Scalars['ID']
    /** Checking is active sync in current moment */
    is_enabled: Scalars['Boolean']
    /** The last time the fitbit was synced */
    last_sync_date: (Scalars['String'] | null)
    __typename: 'Fitbit'
}


/** A folder that contains documents and other folders */
export interface Folder {
    /** When true, the user cannot adjust settings for the folder besides sharing. */
    can_only_share: (Scalars['Boolean'] | null)
    /** The date the folder was made available to the given user */
    created_at: Scalars['String']
    /** If true, the current user can edit the folder */
    current_user_can_edit: (Scalars['Boolean'] | null)
    /** The description of the folder */
    description: (Scalars['String'] | null)
    /** The number of documents within this folder */
    documents_count: (Scalars['Int'] | null)
    /** Include the file in new clients welcome email */
    email_on_welcome: Scalars['Boolean']
    /** The ID of the parent folder */
    folder_id: (Scalars['String'] | null)
    /** The list of parent folders for this folder */
    folder_path: (Folder[] | null)
    /** The unique identifier of the folder */
    id: Scalars['ID']
    /** The name of the folder */
    name: (Scalars['String'] | null)
    /** Owner of this folder */
    owner: (User | null)
    /** The parent folder of this folder (nil if there is no parent) */
    parent_folder: (Folder | null)
    /** In the case of a private folder, the user that this folder is for */
    rel_user: (User | null)
    /** The ID of the connected user */
    rel_user_id: (Scalars['String'] | null)
    /** The folder is shared */
    shared: (Scalars['Boolean'] | null)
    /** Share the file with new clients automatically */
    shared_on_welcome: Scalars['Boolean']
    /** The number of user groups who the folder is shared */
    shared_user_groups_count: (Scalars['Int'] | null)
    /** The number of users who the folder is directly shared with (not through groups) */
    shared_users_count: (Scalars['Int'] | null)
    /** Share with all members of the organization */
    shared_with_dietitians: Scalars['Boolean']
    /** The number of subfolders within this folder */
    subfolders_count: (Scalars['Int'] | null)
    /** The folder has a reserved name generated by the system */
    system_generated: Scalars['Boolean']
    /** The user groups who have access to this folder */
    user_groups: UserGroup[]
    /** The users who have access to this folder */
    users: User[]
    /** The number of users who have access to this folder */
    users_count: Scalars['Int']
    __typename: 'Folder'
}


/** Folder sorting enum */
export type FolderOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NAME_DESC' | 'NAME_ASC'


/** A food object */
export interface Food {
    /** The name of the food creator */
    creator_name: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** first serving size of the food object */
    default_serving_size: (ServingSize | null)
    /** The name of the food to display */
    display_name: (Scalars['String'] | null)
    /** The id of the food in the Edamam database */
    edamam_import_id: (Scalars['String'] | null)
    /** Whether the food was imported from the FDC database */
    fdc_import: Scalars['Boolean']
    /** The unique identifier of the food */
    id: Scalars['ID']
    /** The name of the food */
    name: Scalars['String']
    /** Nutrients of the food object */
    nutrients: (FoodNutrient[] | null)
    /** Serving sizes of the food object */
    serving_sizes: (ServingSize[] | null)
    /** The ID of the user who created the food */
    user_id: (Scalars['String'] | null)
    __typename: 'Food'
}


/** A food item to be served */
export interface FoodItem {
    /** The food to be served */
    food: (Food | null)
    /** The unique identifier of the food item */
    id: Scalars['ID']
    /** The modifier for the serving size */
    modifier: (Scalars['Float'] | null)
    /** The serving size */
    serving_size: (ServingSize | null)
    __typename: 'FoodItem'
}


/** A food nutrient item object */
export interface FoodNutrient {
    /** The category of the nutrient */
    category: (Scalars['String'] | null)
    /** Whether the nutrient is imported from the FDC database */
    fdc_import: Scalars['Boolean']
    /** The unique identifier of the food */
    food_id: (Scalars['String'] | null)
    /** The unique identifier of the nutrient */
    id: Scalars['ID']
    /** The name of the nutrient */
    name: (Scalars['String'] | null)
    /** The unit of the nutrient */
    nutrient_unit: (Scalars['String'] | null)
    /** The value of the nutrient */
    nutrient_value: (Scalars['Float'] | null)
    __typename: 'FoodNutrient'
}


/** An answer in a filled form */
export interface FormAnswer {
    /** The answer to the question */
    answer: (Scalars['String'] | null)
    /** The ID of the custom module whose value determines whether to show or hide the custom module */
    conditional_custom_module_id: (Scalars['ID'] | null)
    /** The creation time of the form answer */
    created_at: Scalars['String']
    /** The type of question that was filled out */
    custom_module: (CustomModule | null)
    /** The id of the question template */
    custom_module_id: (Scalars['String'] | null)
    /** The answer to display (some conversions are made verse raw answer data) */
    displayed_answer: (Scalars['String'] | null)
    /** The type of filter */
    filter_type: (Scalars['String'] | null)
    /** The filled form that this answer is a part of */
    form_answer_group: (FormAnswerGroup | null)
    /** The unique identifier of the answer */
    id: Scalars['ID']
    /** The label of the question */
    label: (Scalars['String'] | null)
    /** The time of the last update */
    updated_at: (Scalars['ISO8601DateTime'] | null)
    /** The id of the user that the answered question is for */
    user_id: (Scalars['String'] | null)
    /** The value to check the filter against */
    value_to_filter: (Scalars['String'] | null)
    __typename: 'FormAnswer'
}


/** A completed form, with metadata about the completion, and the saved answers */
export interface FormAnswerGroup {
    /** The appointment the note is connected to */
    appointment: (Appointment | null)
    /** The autoscored sections for the filled form */
    autoscored_sections: AutoscoredSectionType[]
    /** The addendums added to the locked charting note */
    charting_note_addendums: (ChartingNoteAddendumType[] | null)
    /** The CMS1500 created from the form answer group */
    cms1500: (Cms1500 | null)
    /** The date on which the filled form was saved */
    created_at: Scalars['String']
    /** The most recent generated summary. Null if no summary has been generated */
    current_summary: (GeneratedSummary | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The form template that was filled out */
    custom_module_form: (CustomModuleForm | null)
    /** The date the form was deleted */
    deleted_at: (Scalars['String'] | null)
    /** An external ID stored on the filled form or charting note */
    external_id: (Scalars['String'] | null)
    /** The user who filled out the form */
    filler: (User | null)
    /** Whether the filled form has been saved by the user (verse a hidden draft) */
    finished: Scalars['Boolean']
    /** Signatures for the form */
    form_answer_group_signings: FormAnswerGroupSigning[]
    /** A list of connections between a form_answer_group and group appointment users */
    form_answer_group_users_connections: (FormAnswerGroupUserConnection[] | null)
    /** The visible answers for the filled form */
    form_answers: FormAnswer[]
    /** when true, the note cannot be edited */
    frozen: (Scalars['Boolean'] | null)
    /** All patients that have attended in the related group appointment */
    group_appointment_attendees: (User[] | null)
    /** The unique identifier of the group */
    id: Scalars['ID']
    /** A collection of individual charting notes related to the main group charting note */
    individual_client_notes: (IndividualClientType[] | null)
    /** Same as individual_client_notes but returns a specific instance for given user */
    individual_note: (IndividualClientType | null)
    /** Indicates whether the answer group is related to group apppointment (charting note created for group appointment) */
    is_group_appt_note: (Scalars['Boolean'] | null)
    /** The date and time when the charting note was locked */
    locked_at: (Scalars['String'] | null)
    /** The provider who have locked the charting note */
    locked_by: (User | null)
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. Only accessible by staff and providers */
    metadata: (Scalars['String'] | null)
    /** The given name of the filled form */
    name: (Scalars['String'] | null)
    /** If you have product recommendation alogrithim enabled, this will return a package containing the products recommended by the algorithim */
    offering_with_recommended_products: (Offering | null)
    /**
     * @deprecated Not used anywhere, will cause an error
     * If you have product recommendation alogrithim enabled, this will return a package containing a URL to purchase the products recommended by the algorithim
     */
    packages_with_recommended_products_purchase_url: (Scalars['String'] | null)
    /** The date that the note was actually created */
    record_created_at: (Scalars['String'] | null)
    /** The last updated date for the filled form */
    updated_at: Scalars['String']
    /** The user the form is about */
    user: (User | null)
    /** ID of the user */
    user_id: (Scalars['String'] | null)
    __typename: 'FormAnswerGroup'
}


/** FormAnswerGroup sorting enum */
export type FormAnswerGroupOrderKeys = 'RECORD_CREATED_AT_ASC' | 'RECORD_CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UNSORTED'


/** An instance representing connection between a charting note(form_answer_group) and a user signing the note */
export interface FormAnswerGroupSigning {
    /** The date and time the form was signed */
    created_at: Scalars['String']
    /** The id of the form that was signed */
    form_answer_group_id: (Scalars['String'] | null)
    /** The unique identifier of the signing */
    id: Scalars['ID']
    /** A provider who signed the form */
    user: (User | null)
    __typename: 'FormAnswerGroupSigning'
}


/** An instance representing connection between a group charting note(form_answer_group.appointment.is_group == true) and a user */
export interface FormAnswerGroupUserConnection {
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** The user associated with the connection */
    user: (User | null)
    __typename: 'FormAnswerGroupUserConnection'
}


/** A form history object */
export interface FormHistory {
    /** Action of the form history object */
    action: (FormHistoryAction | null)
    /** Date/Time created */
    created_at: (Scalars['String'] | null)
    /** The User who created form history object or dietitian of the patient */
    creator: (User | null)
    /** The unique identifier of the form history object */
    id: Scalars['ID']
    /** The patient who owns the form history object */
    patient: (User | null)
    /** The title describing form history creation */
    title: (Scalars['String'] | null)
    __typename: 'FormHistory'
}


/** Form History action enum */
export type FormHistoryAction = 'created' | 'edited' | 'opened' | 'completed' | 'skipped'


/** Form History sourceable_type enum */
export type FormHistorySourceable = 'RequestedFormCompletion' | 'OnboardingItem'


/** Forms status filter enum */
export type FormStatus = 'incomplete' | 'completed' | 'not_started'


/** Forms form type filter enum */
export type FormType = 'requested_forms' | 'recurring_forms' | 'intake_forms'


/** types of forms that can be requested */
export interface FormTypesToRequest {
    /** The unique identifier of the object */
    id: Scalars['String']
    /** Whether the form contains only one custom_module with mod_type 'video' and was created as part of a program */
    is_video: (Scalars['Boolean'] | null)
    /** Type of form to request */
    item_type: (Scalars['String'] | null)
    /** The given name of the template */
    name: (Scalars['String'] | null)
    __typename: 'FormTypesToRequest'
}


/** Fullscript Practitioner */
export interface FullscriptPractitionerType {
    /** Email address of the practitioner */
    email: (Scalars['String'] | null)
    /** External reference of the practitioner */
    external_ref: (Scalars['String'] | null)
    /** First name of the practitioner */
    first_name: (Scalars['String'] | null)
    /** The unique identifier of the practitioner */
    id: Scalars['String']
    /** Last name of the practitioner */
    last_name: (Scalars['String'] | null)
    /** The ID of the practitioner type */
    practitioner_type_id: (Scalars['String'] | null)
    __typename: 'FullscriptPractitionerType'
}


/** The type of practitioners */
export interface FullscriptPractitionerTypeType {
    /** The code for the practitioner type */
    code: (Scalars['String'] | null)
    /** The description of the practitioner type */
    description: (Scalars['String'] | null)
    /** The unique identifier of the practitioner type */
    id: Scalars['String']
    __typename: 'FullscriptPractitionerTypeType'
}


/** Fullscript Product Type */
export interface FullscriptProductType {
    /** Additional Info */
    additional_info: (Scalars['String'] | null)
    /** Dosage of the product */
    dosage: (Scalars['String'] | null)
    /** The unique identifier of the product fullscript */
    id: Scalars['String']
    /** Ordered */
    ordered: (Scalars['String'] | null)
    /** The name of the product */
    product_name: (Scalars['String'] | null)
    __typename: 'FullscriptProductType'
}


/** Fullscript Treatment Plan */
export interface FullscriptTreatmentPlanType {
    /** Date the treatment plan was activated */
    activation_date: (Scalars['String'] | null)
    /** The unique identifier of the plan */
    id: Scalars['String']
    /** Number of times the plan has been ordered */
    ordered_count: (Scalars['Int'] | null)
    /** Personal message from the practitioner */
    personal_message: (Scalars['String'] | null)
    /** The name of the practitioner */
    practitioner_name: (Scalars['String'] | null)
    /** The products recommended in the plan */
    recommendations: (FullscriptProductType[] | null)
    __typename: 'FullscriptTreatmentPlanType'
}


/** FunctionalStatus object */
export interface FunctionalStatus {
    /** Functional condition */
    functional_condition: (Scalars['String'] | null)
    /** The unique identifier of the functional status */
    id: Scalars['ID']
    /** The start date of the functional status */
    start_date: (Scalars['String'] | null)
    /** The ID of the user who created the functional status */
    user_id: Scalars['ID']
    __typename: 'FunctionalStatus'
}


/** A generated summary for an associated Healthie object */
export interface GeneratedSummary {
    /** The datetime the summary was generated */
    created_at: Scalars['ISO8601DateTime']
    /** The unique identifier of the group */
    id: Scalars['ID']
    /** A summary (most often new-line separated bullet points) of the associated object */
    summary: (Scalars['String'] | null)
    __typename: 'GeneratedSummary'
}


/** a goal */
export interface Goal {
    /** Completion Percentage of a goal for a given date range. start_range/end_range should be of the form: 'yyyy-mm-dd' */
    completion_percentage_for_range: (Scalars['Int'] | null)
    /**
     * @deprecated should use completion_percentage_for_range
     * The rate at which this goal is completed
     */
    completion_rate: (Scalars['String'] | null)
    /** The creation timestamp of the goal */
    created_at: Scalars['String']
    /** created user of goal */
    created_user_id: (Scalars['ID'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** description of goal */
    description: (Scalars['String'] | null)
    /** due date of goal */
    due_date: (Scalars['String'] | null)
    /** All goal histories associated with this goal histories. */
    goal_histories: GoalHistory[]
    /** The unique identifier of the goal */
    id: Scalars['ID']
    /** If true, the goal is complete for the given day. date should be of the form: 'yyyy-mm-dd' */
    is_completed_for_date: (Scalars['Boolean'] | null)
    /**
     * @deprecated should use is_completed_for_date field to determine if a goal is completed for a given day
     * if true, the goal is currently active
     */
    is_current: (Scalars['Boolean'] | null)
    /** if true, a template has been created based off this goal */
    is_used_as_template: (Scalars['Boolean'] | null)
    /** name of goal */
    name: (Scalars['String'] | null)
    /** parent id */
    parent_id: (Scalars['ID'] | null)
    /** The rate at which the parent goal has subgoals completed */
    parent_subgoal_completion_rate: (Scalars['String'] | null)
    /** Reminder object for a given goal */
    reminder: (Reminder | null)
    /** frequency of goal */
    repeat: (Scalars['String'] | null)
    /** The id of the template used to make this goal */
    source_template_id: (Scalars['String'] | null)
    /** start date of goal */
    start_on: Scalars['String']
    /** Streak info for goal */
    streak_info: (GoalStreakInfo[] | null)
    /**
     * @deprecated should use completion_percentage_for_range
     * The rate at which a subgoal is completed
     */
    subgoal_completion_rate: (Scalars['String'] | null)
    /** Subgoals for a given goal */
    subgoals: (Goal[] | null)
    /** count of subgoals */
    subgoals_count: (Scalars['String'] | null)
    /** Title hyperlink. Opens when the title is clicked on. */
    title_link: (Scalars['String'] | null)
    /** Owner of this goal */
    user: (User | null)
    /** user id of goal */
    user_id: (Scalars['ID'] | null)
    __typename: 'Goal'
}


/** Goal data */
export interface GoalDataType {
    /** All goals frequency count */
    all_goals_frequency_count: (Scalars['Int'] | null)
    /** All goals status count */
    all_goals_status_count: (Scalars['Int'] | null)
    /** All time goals count */
    all_time_goals_count: (Scalars['Int'] | null)
    /** Completed goals count */
    completed_goals_count: (Scalars['Int'] | null)
    /** Daily goals count */
    daily_goals_count: (Scalars['Int'] | null)
    /** Goal list */
    goals: (Goal[] | null)
    /** Goals count */
    goals_count: (Scalars['Int'] | null)
    /** Goals overall completion rate info */
    goals_overall_completion_rate_info: (GoalOverallCompletionRateInfo | null)
    /** Goals streak count */
    goals_streak_count: (Scalars['Int'] | null)
    /** Not completed goals count */
    not_completed_goals_count: (Scalars['Int'] | null)
    /** One time goals count */
    one_time_goals_count: (Scalars['Int'] | null)
    /** Weekly goals count */
    weekly_goals_count: (Scalars['Int'] | null)
    __typename: 'GoalDataType'
}


/** a goal history */
export interface GoalHistory {
    /** The date the goal is marked completed */
    completed_on: Scalars['String']
    /** The completion timestamp of the goal */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The description of the goal */
    description: (Scalars['String'] | null)
    /** goal that was completed */
    goal: (Goal | null)
    /** goal id of goal history */
    goal_id: (Scalars['ID'] | null)
    /** The unique identifier of the history */
    id: Scalars['ID']
    /** If true, the goal is a subgoal */
    is_subgoal: (Scalars['Boolean'] | null)
    /** The name of the goal */
    name: (Scalars['String'] | null)
    /** The repeat frequency of the goal */
    repeat: (Scalars['String'] | null)
    /** client of this goal */
    user: (User | null)
    /** user id of goal history */
    user_id: (Scalars['ID'] | null)
    __typename: 'GoalHistory'
}


/** a goal instance. gives a snapshot of a goal over a specific interval(start_range and end_range ) */
export interface GoalInstance {
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The date the interval starts for this goal instance */
    end_range: (Scalars['String'] | null)
    /** the relevant goal */
    goal: (Goal | null)
    /** If true, the goal was completed in between the start and end range */
    is_completed_for_interval: (Scalars['Boolean'] | null)
    /** The date the interval starts for this goal instance */
    start_range: (Scalars['String'] | null)
    __typename: 'GoalInstance'
}


/** Goal sorting enum */
export type GoalOrderKeys = 'START_DATE_ASC' | 'START_DATE_DESC' | 'FREQUENCY_ASC' | 'FREQUENCY_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'DUE_DATE_ASC' | 'DUE_DATE_DESC' | 'DUE_DATE_START_DATE_DESC'


/** Related info for a collection of goals overall completion rate */
export interface GoalOverallCompletionRateInfo {
    /** The number of times the goals were completed */
    actual_times_completed: (Scalars['Int'] | null)
    /** The actual percentage of the completion rate */
    percent: (Scalars['Int'] | null)
    /** The total number of times the goals could have been completed */
    possible_times_completed: (Scalars['Int'] | null)
    __typename: 'GoalOverallCompletionRateInfo'
}


/** Related info of a specific goal's streak */
export interface GoalStreakInfo {
    /** The length of intervals (ie: days, weeks, etc) this streak lasted */
    count: (Scalars['Int'] | null)
    /** The day this streak ended */
    end_date: (Scalars['String'] | null)
    /** The day this streak began */
    start_date: (Scalars['String'] | null)
    __typename: 'GoalStreakInfo'
}


/** a goal template */
export interface GoalTemplate {
    /** description of template from associated goal */
    description: (Scalars['String'] | null)
    /** id of the goal this template was based on */
    goal_id: (Scalars['String'] | null)
    /** id of the the relevant goal template */
    id: Scalars['String']
    /** is_healthie_default of the the relevant goal template */
    is_healthie_default: Scalars['Boolean']
    /** name of template from associated goal */
    name: (Scalars['String'] | null)
    /** frequency of template from associated goal */
    repeat: Scalars['String']
    /** Subgoal templates for a given template */
    subgoal_templates: (GoalTemplate[] | null)
    /** Title hyperlink. Opens when the title is clicked on. */
    title_link: (Scalars['String'] | null)
    /** user associated with this template */
    user: (User | null)
    /** user who owns this goal template */
    user_id: (Scalars['String'] | null)
    __typename: 'GoalTemplate'
}


/** A GoogleFit Sync */
export interface GoogleFit {
    /** The unique identifier of the Google fit */
    id: Scalars['ID']
    /** The last time the apple health was synced */
    last_sync_date: (Scalars['String'] | null)
    __typename: 'GoogleFit'
}


/** A connection between a user and a care plan */
export interface GroupCarePlanUserConnection {
    /** The care plan active status */
    active: Scalars['Boolean']
    /** The ID of the care plan */
    care_plan_id: (Scalars['ID'] | null)
    /** The unique identifier of the join */
    id: Scalars['ID']
    /** The ID of the user_group */
    user_group_id: (Scalars['ID'] | null)
    /** The ID of the client */
    user_id: (Scalars['ID'] | null)
    __typename: 'GroupCarePlanUserConnection'
}


/** Health Assessment contains in-depth help info and goals for a client */
export interface HealthAssessment {
    /** The body report for the client */
    body_report: (BodyReport | null)
    /** The date the health assessment was created */
    created_at: Scalars['String']
    /** gen */
    gender: (Scalars['String'] | null)
    /** The health report for the client */
    health_report: (HealthReport | null)
    /** The height of the client */
    height: (Scalars['String'] | null)
    /** The unique identifier of the health accessment */
    id: Scalars['ID']
    /** Is the client diabetic? */
    is_diabetic: (Scalars['Boolean'] | null)
    /** The race of the client */
    race: (Scalars['String'] | null)
    /** The recommendation for the client */
    recommendation: (HealthAssessmentRecommendation | null)
    /** The title of the health assessment */
    title: (Scalars['String'] | null)
    __typename: 'HealthAssessment'
}


/** Health Assessment Recommendation is a sub category of a HealthAssessment */
export interface HealthAssessmentRecommendation {
    /** cal_deficit of user */
    cal_deficit: (Scalars['String'] | null)
    /** carbs_cal of user */
    carbs_cal: (Scalars['String'] | null)
    /** carbs_grams of user */
    carbs_grams: (Scalars['String'] | null)
    /** Carbs percent */
    carbs_percent: (Scalars['String'] | null)
    /** current_body_fat of user */
    current_body_fat: (Scalars['String'] | null)
    /** current_body_weight of user */
    current_body_weight: (Scalars['String'] | null)
    /** current_daily_caloric_intake of user */
    current_daily_caloric_intake: (Scalars['String'] | null)
    /** current_time_to_goal of user */
    current_time_to_goal: (Scalars['String'] | null)
    /** fat_cal of user */
    fat_cal: (Scalars['String'] | null)
    /** fat_grams of user */
    fat_grams: (Scalars['String'] | null)
    /** Fat Percent */
    fat_percent: (Scalars['String'] | null)
    /** high_end_caloric_intake of user */
    high_end_caloric_intake: (Scalars['String'] | null)
    /** Ideal body fat of user */
    ideal_body_fat: (Scalars['String'] | null)
    /** ideal_body_weight of user */
    ideal_body_weight: (Scalars['String'] | null)
    /** ideal_daily_caloric_intake of user */
    ideal_daily_caloric_intake: (Scalars['String'] | null)
    /** ideal_time_to_goal of user */
    ideal_time_to_goal: (Scalars['String'] | null)
    /** low_end_caloric_intake of user */
    low_end_caloric_intake: (Scalars['String'] | null)
    /** protein_cal of user */
    protein_cal: (Scalars['String'] | null)
    /** protein_grams of user */
    protein_grams: (Scalars['String'] | null)
    /** Protei Percent */
    protein_percent: (Scalars['String'] | null)
    __typename: 'HealthAssessmentRecommendation'
}


/** Autogenerated return type of HealthAssessmentServiceSignup. */
export interface HealthAssessmentServiceSignupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    deeplink_url: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'HealthAssessmentServiceSignupPayload'
}


/** HealthConcern object */
export interface HealthConcern {
    /** The code for the health concern */
    code: (Scalars['String'] | null)
    /** The description of the health concern */
    description: (Scalars['String'] | null)
    /** The display name of the health concern */
    display_name: (Scalars['String'] | null)
    /** The effective time of the health concern */
    effective_time: (Scalars['String'] | null)
    /** The unique identifier of the  */
    id: Scalars['ID']
    __typename: 'HealthConcern'
}


/** Health Report is a sub category of a HealthAssessment */
export interface HealthReport {
    /** cancer of user */
    cancer: (Scalars['String'] | null)
    /** diabetes of user */
    diabetes: (Scalars['String'] | null)
    /** The fit score of the user */
    fit_score: (Scalars['String'] | null)
    /** lean_body_mass of user */
    heart: (Scalars['String'] | null)
    /** respiratory of user */
    respiratory: (Scalars['String'] | null)
    /** stroke of user */
    stroke: (Scalars['String'] | null)
    __typename: 'HealthReport'
}


/** Human object controls authentication for users */
export interface Human {
    /** The current user */
    current_user: (User | null)
    /** The Id of the human's currently selected user */
    current_user_id: (Scalars['ID'] | null)
    /** The email of the human */
    email: (Scalars['String'] | null)
    /** The unique identifier of the human */
    id: Scalars['ID']
    /** last date the human signed in */
    last_sign_in_at: (Scalars['String'] | null)
    __typename: 'Human'
}


/** icd code */
export interface IcdCode {
    /** The category of the ICD code */
    category: (Scalars['String'] | null)
    /** The ICD code */
    code: (Scalars['String'] | null)
    /** The date the ICD code was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The description of the ICD code */
    description: (Scalars['String'] | null)
    /** A display name - for use in labels */
    display_name: (Scalars['String'] | null)
    /** The unique identifier of the ICD code */
    id: Scalars['ID']
    /** Whether the ICD code is marked as favorite */
    is_favorite: (Scalars['Boolean'] | null)
    /** The date the ICD code was updated */
    updated_at: Scalars['String']
    __typename: 'IcdCode'
}


/** ICD Code sorting enum */
export type IcdCodeOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC' | 'CODE_ASC' | 'CODE_DESC' | 'FAVORITES_ASC' | 'FAVORITES_DESC'


/** icd codes cms 1500s join table */
export interface IcdCodesCms1500 {
    /** Active IcdCodesCms1500 */
    active: (Scalars['Boolean'] | null)
    /** cms 1500 id */
    cms1500_id: (Scalars['ID'] | null)
    /** date created */
    created_at: (Scalars['String'] | null)
    /** display name */
    display_name: (Scalars['String'] | null)
    /** End date */
    end_date: (Scalars['String'] | null)
    /** ICD codes in use for this claim */
    first_symptom_date: (Scalars['String'] | null)
    /** ICD code */
    icd_code: (IcdCode | null)
    /**
     * @deprecated Use icd_code instead
     * icd code id
     */
    icd_code_id: (Scalars['ID'] | null)
    /** The unique identifier of the CMS 1500 ICD code */
    id: (Scalars['ID'] | null)
    /** date updated */
    updated_at: (Scalars['String'] | null)
    __typename: 'IcdCodesCms1500'
}


/** icd codes individual client note join table */
export interface IcdCodesIndividualClientNote {
    /** icd code */
    icd_code: (IcdCode | null)
    /** Attached ICD Code ID */
    icd_code_id: (Scalars['ID'] | null)
    /** The unique identifier of the CMS 1500 ICD code */
    id: (Scalars['ID'] | null)
    /** Position of the diagnosis */
    position: (Scalars['Int'] | null)
    __typename: 'IcdCodesIndividualClientNote'
}


/** icd codes policies join table */
export interface IcdCodesPolicy {
    /** The ICD code */
    code: (Scalars['String'] | null)
    /** The date when the join was created */
    created_at: (Scalars['String'] | null)
    /** The description of the join */
    description: (Scalars['String'] | null)
    /** The ICD code object */
    icd_code: (IcdCode | null)
    /** The ID of the joined ICD code */
    icd_code_id: (Scalars['ID'] | null)
    /** The unique identifier of the join between ICD code and policy. */
    id: (Scalars['ID'] | null)
    /** The ID of the joined policy */
    policy_id: (Scalars['ID'] | null)
    /** The date updated */
    updated_at: (Scalars['String'] | null)
    __typename: 'IcdCodesPolicy'
}


/** icd codes super bills join table */
export interface IcdCodesSuperBill {
    /** The date the join was created */
    created_at: (Scalars['String'] | null)
    /** The joined ICD code object */
    icd_code: (IcdCode | null)
    /** The ID of the ICD code */
    icd_code_id: (Scalars['ID'] | null)
    /** The unique identifier of the join */
    id: Scalars['ID']
    /** The ID of the super bill */
    super_bill_id: (Scalars['ID'] | null)
    /** The last date when the join was updated */
    updated_at: (Scalars['String'] | null)
    __typename: 'IcdCodesSuperBill'
}


/** User immunization */
export interface Immunization {
    /** Additional notes */
    additional_notes: (Scalars['String'] | null)
    /** The cvx_code */
    cvx_code: Scalars['Int']
    /** The unique identifier of the type */
    id: Scalars['ID']
    /** Time when the immunization was received */
    received_at: Scalars['String']
    /** The immunization status */
    status: Scalars['String']
    /** The identifier of the user */
    user_id: Scalars['ID']
    /** The description of the code */
    vaccine_name: Scalars['String']
    __typename: 'Immunization'
}


/** An implantable device */
export interface ImplantableDevice {
    /** Brand name of the implantable device. */
    brand_name: (Scalars['String'] | null)
    /** Name of the company that manufactures the implantable device. */
    company_name: (Scalars['String'] | null)
    /** A string representation of the date/time when the device record was created in the database. */
    created_at: (Scalars['String'] | null)
    /** A unique identifier assigned to the device. */
    device_id: (Scalars['String'] | null)
    /** The agency that issued the device identifier. */
    device_id_issuing_agency: (Scalars['String'] | null)
    /** Dun & Bradstreet number (DUNS number) is a unique nine-digit identifier for businesses. */
    duns_number: (Scalars['String'] | null)
    /** Global Medical Device Nomenclature (GMDN) terms, a system of internationally agreed generic descriptors used to identify all medical device products. */
    gmdn_terms: (Scalars['String'] | null)
    /** The unique identifier of the implantable device type */
    id: Scalars['ID']
    /** Whether the device contains natural rubber latex or not. */
    labeled_contains_nrl: (Scalars['String'] | null)
    /** Status of the device's safety in an MRI environment (e.g., safe, conditional, unsafe). */
    mri_safety_status: (Scalars['String'] | null)
    /** Key of the device's public record. */
    public_device_record_key: (Scalars['String'] | null)
    /** Date when the public version of the device record was created or updated. */
    public_version_date: (Scalars['String'] | null)
    /** Version number of the public device record. */
    public_version_number: (Scalars['String'] | null)
    /** Status of the public version of the device record (e.g., active, retired). */
    public_version_status: (Scalars['String'] | null)
    /** A string representation of the date/time when the device record was last updated in the database. */
    updated_at: (Scalars['String'] | null)
    /** Version or model number of the device. */
    version_model_number: (Scalars['String'] | null)
    __typename: 'ImplantableDevice'
}


/** An Implantable Device User  */
export interface ImplantableDeviceUser {
    /** A boolean value representing if the Implantable Device is currently active. */
    active: (Scalars['Boolean'] | null)
    /** Unique identifier for the Implantable Device User connection record. */
    id: (Scalars['ID'] | null)
    /** Details of the Implantable Device. */
    implantable_device: (ImplantableDevice | null)
    /** Unique identifier for the associated Implantable Device record. */
    implantable_device_id: (Scalars['ID'] | null)
    /** User provided name for the Implantable Device. */
    name: (Scalars['String'] | null)
    /** Recorded UDI for this associated Implantable Device User record. */
    udi: (Scalars['String'] | null)
    /** User associated with the Implantable Device, including all User details. */
    user: (User | null)
    /** Unique identifier for the associated User record. */
    user_id: (Scalars['ID'] | null)
    __typename: 'ImplantableDeviceUser'
}


/** An object containing info about the import data request */
export interface ImportDataRequest {
    /** The file type of import */
    clients_template: (Scalars['String'] | null)
    /** The date and time that the import data request was created */
    created_at: Scalars['String']
    /** The file name */
    display_name: (Scalars['String'] | null)
    /** The file extension */
    extension: (Scalars['String'] | null)
    /** The optional comment of import */
    optional_comment: (Scalars['String'] | null)
    /** The request type */
    request_type: Scalars['String']
    __typename: 'ImportDataRequest'
}


/** Individual client note sorting enum */
export type IndividualClientNoteOrderKeys = 'ATTENDED_DESC' | 'CREATED_AT_DESC'


/** Individual client note sorting enum */
export type IndividualClientNoteSorting = 'ATTENDED_DESC' | 'CREATED_AT_DESC'


/** An object containing an individual note for certain patient associated with group charting note */
export interface IndividualClientType {
    /** The ID of related appointment_inclusion */
    appointment_inclusion_id: (Scalars['ID'] | null)
    /** True if user has attended the appointment */
    attended: (Scalars['Boolean'] | null)
    /** The content of the note */
    content: (Scalars['String'] | null)
    /** Diagnoses connected to the individual client attendance */
    icd_codes_individual_client_notes: (IcdCodesIndividualClientNote[] | null)
    /** The unique identifier of the note */
    id: Scalars['ID']
    /** The datetime that the attendee joined the appointment (comes from the related appointment inclusion) */
    join_time: (Scalars['String'] | null)
    /** The datetime that the attendee left the appointment (comes from the related appointment inclusion) */
    leave_time: (Scalars['String'] | null)
    /** The time of the last update */
    updated_at: (Scalars['ISO8601DateTime'] | null)
    /** Associated patient */
    user: (User | null)
    __typename: 'IndividualClientType'
}


/** An object containing information about the chart for an insurance authorization type */
export interface InsuranceAuthorizationChartType {
    /** The title of the earliest date value of the chart */
    earliest_date_title: (Scalars['String'] | null)
    /** The value of the earliest date value of the chart */
    earliest_date_value: (Scalars['String'] | null)
    /** The title of the latest date value of the chart */
    latest_date_title: (Scalars['String'] | null)
    /** The value of the latest date value of the chart */
    latest_date_value: (Scalars['String'] | null)
    /** The percentage width of the left section of the chart */
    left_section_width: (Scalars['String'] | null)
    /** The title of the middle date value of the chart */
    middle_date_title: (Scalars['String'] | null)
    /** The value of the middle date value of the chart */
    middle_date_value: (Scalars['String'] | null)
    /** The percentage width of the right section of the chart */
    right_section_width: (Scalars['String'] | null)
    __typename: 'InsuranceAuthorizationChartType'
}


/** An insurance authorization */
export interface InsuranceAuthorizationType {
    /** The authorization number */
    authorization_number: (Scalars['String'] | null)
    /** Chart info for the insurance authorization */
    chart_info: (InsuranceAuthorizationChartType | null)
    /** The day that visits authorized by the insurance company have no effect */
    end_on: (Scalars['String'] | null)
    /** The unique identifier of the authorization */
    id: Scalars['ID']
    /** The day that visits authorized by the insurance company take effect */
    start_on: (Scalars['String'] | null)
    /** The amount of units left */
    unit_type: (Scalars['String'] | null)
    /** The amount of units authorized by the insurance company */
    units_authorized: (Scalars['String'] | null)
    /** The amount of units left */
    units_left: (Scalars['String'] | null)
    /** Most units/hours allowed per visit */
    units_limit_per_visit: (Scalars['String'] | null)
    /** The amount of units used by the client */
    units_used: (Scalars['String'] | null)
    /** Most recent date authorization was updated */
    updated_at: (Scalars['String'] | null)
    /** The ID of the user for whom the authorization was created */
    user_id: (Scalars['ID'] | null)
    /** The amount of units authorized by the insurance company */
    visits_authorized: (Scalars['String'] | null)
    /** The amount of units left */
    visits_left: (Scalars['String'] | null)
    /** The amount of units used by the client */
    visits_used: (Scalars['String'] | null)
    __typename: 'InsuranceAuthorizationType'
}


/** An Insurance Plan */
export interface InsurancePlan {
    /** The Eligibility Payer ID for eligibility requests in Change that this maps to */
    change_healthcare_eligibility_payer_id: (Scalars['String'] | null)
    /** The Payer ID for claims requests in Change that this maps to */
    change_healthcare_payer_id: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Location of the first policy associated to the current user and insurance plan */
    default_payer_location: (Location | null)
    /** The unique identifier of the plan */
    id: Scalars['ID']
    /** Insurance Plan marked as accepted */
    is_accepted: (Scalars['Boolean'] | null)
    /** A combined string to use for labels */
    name_and_id: (Scalars['String'] | null)
    /** The Payer ID of the insurance plan */
    payer_id: (Scalars['String'] | null)
    /** The name of the insurance plan */
    payer_name: (Scalars['String'] | null)
    /**
     * @deprecated Insurance Plans do not have an associated user
     * Owner of this insurance plan
     */
    user: (User | null)
    __typename: 'InsurancePlan'
}


/** InsurancePlan sorting enum */
export type InsurancePlanOrderKeys = 'ACCEPTED' | 'PAYER_NAME_ASC'


/** The intake flow item */
export interface IntakeFlowItem {
    /** Attached object */
    attached_object_edit_url: (Scalars['String'] | null)
    /** The completed onboarding item for the given user id (from args) */
    completed_onboarding_item: (CompletedOnboardingItem | null)
    /** The form to fill out */
    custom_module_form: (CustomModuleForm | null)
    /** The relevant date to show */
    date_to_show: (Scalars['String'] | null)
    /** The display name */
    display_name: (Scalars['String'] | null)
    /** The id of the filled form that completes the request. Only present if form_type is RequestedForm */
    form_answer_group_id: (Scalars['String'] | null)
    /** Form type */
    form_type: (Scalars['String'] | null)
    /** The unique idenitifier of the item */
    id: Scalars['ID']
    /** Return the ID of the incomplete form */
    incomplete_form_id: (Scalars['String'] | null)
    /** The type of item */
    item_type: (Scalars['String'] | null)
    /** The onboarding item that was completed */
    onboarding_item: (OnboardingItem | null)
    /** Recurring form related to the request */
    recurring_form: (RecurringForm | null)
    /** The intake flow item request details */
    request_info: (IntakeFlowItemRequestInfo | null)
    /** Skipped */
    skipped: (Scalars['Boolean'] | null)
    /** Form status */
    status: (Scalars['String'] | null)
    /** Tab type */
    tab_type: (Scalars['String'] | null)
    /** View url */
    view_url: (Scalars['String'] | null)
    __typename: 'IntakeFlowItem'
}


/** The intake flow item request details */
export interface IntakeFlowItemRequestInfo {
    /** Completion date of the form */
    complete_date: (Scalars['String'] | null)
    /** User who completed the form */
    completed_by: (User | null)
    /** Info how client received the form */
    details: (Scalars['String'] | null)
    /** Requested / Auto-Requested */
    label: (Scalars['String'] | null)
    /** Request date of the form */
    request_date: (Scalars['String'] | null)
    /** User who requested the form */
    requested_by: (User | null)
    __typename: 'IntakeFlowItemRequestInfo'
}


/** IntakeFlow sorting enum */
export type IntakeFlowOrderKeys = 'DATE_ASC' | 'DATE_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'TYPE_ASC' | 'TYPE_DESC' | 'REQUEST_DATE_ASC' | 'REQUEST_DATE_DESC' | 'COMPLETE_DATE_ASC' | 'COMPLETE_DATE_DESC'


/** Intake Flow */
export interface IntakeFlowType {
    /** All forms in the intake flow */
    all_forms: (IntakeFlowItem[] | null)
    /** Completed and skipped forms in the intake flow */
    completed_skipped: (IntakeFlowItem[] | null)
    /** Forms in the intake flow */
    forms: (IntakeFlowItem[] | null)
    /** Intake flows */
    intake_flows: (IntakeFlowItem[] | null)
    /** Not started and incomplete forms in the intake flow */
    not_started_incomplete: (IntakeFlowItem[] | null)
    /** Requested forms in the intake flow */
    requested: (IntakeFlowItem[] | null)
    __typename: 'IntakeFlowType'
}


/** Integration Category */
export interface IntegrationCategoryType {
    /** The description of the integration category */
    description: (Scalars['String'] | null)
    /** The unique identifier of the category */
    id: Scalars['ID']
    /** The name of the integration category */
    name: (Scalars['String'] | null)
    /** The list of category options */
    options: (IntegrationOptionType[] | null)
    __typename: 'IntegrationCategoryType'
}


/** The option of an integration */
export interface IntegrationOptionType {
    /** The name of the status when the option is disabled */
    disabled_status_name: (Scalars['String'] | null)
    /** The label of the button to enable the option */
    enable_button_label: (Scalars['String'] | null)
    /** The url of the button to enable the option */
    enable_button_url: (Scalars['String'] | null)
    /** The name of the status when the option is enabled */
    enabled_status_name: (Scalars['String'] | null)
    /** List of connected members */
    erx_connected_members: (Scalars['String'][] | null)
    /** The unique identifier of the option */
    id: Scalars['ID']
    /** The unique identifier of the category the option belongs to */
    integration_category_id: (Scalars['ID'] | null)
    /** Whether the option is active */
    is_active: (Scalars['Boolean'] | null)
    /** Whether the option is pending */
    is_pending: (Scalars['Boolean'] | null)
    /** The long description of the option */
    long_description: (Scalars['String'] | null)
    /** The name of the option */
    name: (Scalars['String'] | null)
    /** The short description of the option */
    short_description: (Scalars['String'] | null)
    /** The type of the option */
    type: (Scalars['String'] | null)
    __typename: 'IntegrationOptionType'
}


/** Options for lab filters */
export interface LabFiltersDataType {
    /** The list of the data clients */
    clients: (User[] | null)
    /** The list of the labs */
    labs: ((Scalars['String'] | null)[] | null)
    /** The list of the normalized statuses */
    normalized_statuses: ((Scalars['String'] | null)[] | null)
    /** The list of the data providers */
    providers: (User[] | null)
    /** The list of the statuses */
    statuses: ((Scalars['String'] | null)[] | null)
    __typename: 'LabFiltersDataType'
}


/** A lab observation request */
export interface LabObservationRequest {
    /** The unique identifier of the request */
    id: Scalars['ID']
    /** The name of the lab analyte */
    lab_analyte: (Scalars['String'] | null)
    /** Lab observation results for lab request */
    lab_observation_results: (LabObservationResult | null)[]
    __typename: 'LabObservationRequest'
}


/** A lab observation result */
export interface LabObservationResult {
    /** The flag of abnormality in the observation */
    abnormal_flag: (Scalars['String'] | null)
    /** The unique identifier of the result */
    id: Scalars['ID']
    /** The notes of the lab observation */
    notes: (Scalars['String'] | null)
    /** The qualitative result of the lab observation */
    qualitative_result: (Scalars['String'] | null)
    /** The quantitative result of the lab observation */
    quantitative_result: (Scalars['String'] | null)
    /** The reference range of the lab observation */
    reference_range: (Scalars['String'] | null)
    /** The units of the lab observation measurement */
    units: (Scalars['String'] | null)
    __typename: 'LabObservationResult'
}


/** Lab Option */
export interface LabOption {
    /** The unique identifier of the option */
    id: Scalars['ID']
    /** Name of the option */
    name: (Scalars['String'] | null)
    __typename: 'LabOption'
}


/** Lab Order Object */
export interface LabOrder {
    /** abnormality in results */
    abnormal: (Scalars['Boolean'] | null)
    /** Confirmation Code of Scheduled Appointment */
    appt_confirmation_code: (Scalars['String'] | null)
    /** Date Lab Order was Placed */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Get result document */
    document: (Document | null)
    /** The unique identifier of the order */
    id: Scalars['ID']
    /** Order integration (lab_testing_api, evexia, rupa) */
    integration: Scalars['String']
    /** Name of the lab */
    lab: (Scalars['String'] | null)
    /** Name of the lab */
    lab_company: (Scalars['String'] | null)
    /** Lab options included in lab order */
    lab_options: LabOption[]
    /** Lab results */
    lab_results: LabResult[]
    /** Order ID */
    lta_id: (Scalars['String'] | null)
    /** The normalized status of the order */
    normalized_status: (Scalars['String'] | null)
    /** Provider for lab order */
    orderer: (User | null)
    /** Patient for lab order */
    patient: (User | null)
    /** Get most recent pdf document */
    pdf_document: (Document | null)
    /** Order ID on the rupa health */
    rupa_order_id: (Scalars['String'] | null)
    /** Show lab result with PDF document */
    show_pdf_messages: (Scalars['Boolean'] | null)
    /** Status of the Lab Order */
    status: (Scalars['String'] | null)
    /** Date of Test */
    test_date: (Scalars['String'] | null)
    /** Date Lab Order was updated */
    updated_at: Scalars['String']
    /** Link to view the rupa order */
    view_rupa_order_url: (Scalars['String'] | null)
    __typename: 'LabOrder'
}


/** LabOrder sorting enum */
export type LabOrderOrderKeys = 'NAME_ASC' | 'NAME_DESC' | 'LAB_ASC' | 'LAB_DESC' | 'APPT_ASC' | 'APPT_DESC' | 'CLIENT_LAST_NAME_ASC' | 'CLIENT_LAST_NAME_DESC' | 'PROVIDER_LAST_NAME_ASC' | 'PROVIDER_LAST_NAME_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** Lab Result */
export interface LabResult {
    /** Document for lab result */
    document: (Document | null)
    /** The unique identifier of the result */
    id: Scalars['ID']
    /** Lab observation requests for lab result */
    lab_observation_requests: ((LabObservationRequest | null)[] | null)
    /** The ID of the corresponding lab order */
    lab_order_id: Scalars['ID']
    /** Ordering Physician for lab result */
    ordering_physician: (User | null)
    /** Patient for lab result */
    patient: (User | null)
    /** The type of the lab result */
    result_type: (Scalars['String'] | null)
    /** The status of the result */
    status_flag: (Scalars['String'] | null)
    __typename: 'LabResult'
}


/** A location */
export interface Location {
    /** The city of the address */
    city: (Scalars['String'] | null)
    /** The Country Code of the address */
    country: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The unique identifier of the location */
    id: Scalars['ID']
    /** The first line of the address */
    line1: (Scalars['String'] | null)
    /** The second line of the address */
    line2: (Scalars['String'] | null)
    /** The name of the location */
    name: (Scalars['String'] | null)
    /** The NPI of the location */
    npi: (Scalars['String'] | null)
    /** The Other ID of the location */
    other_id: (Scalars['String'] | null)
    /** The Other ID Qualification of the location */
    other_id_qual: (Scalars['String'] | null)
    /** The place of service associated with this location */
    place_of_service: (PlaceOfService | null)
    /** The place of service id of the location */
    place_of_service_id: (Scalars['String'] | null)
    /** The state of the address (Uses the 2 letter abbreviation if in US) */
    state: (Scalars['String'] | null)
    /** The location condensed to a single line */
    to_oneline: (Scalars['String'] | null)
    /** Owner of this location */
    user: (User | null)
    /** The ID of the user */
    user_id: (Scalars['String'] | null)
    /** The zip/postal code of the address */
    zip: (Scalars['String'] | null)
    __typename: 'Location'
}


/** Location resource */
export interface LocationResourceType {
    /** The resource ID */
    resourceId: (Scalars['String'] | null)
    /** The resource title */
    resourceTitle: (Scalars['String'] | null)
    __typename: 'LocationResourceType'
}


/** Autogenerated return type of MaskAccount. */
export interface MaskAccountPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success: (Success | null)
    success_string: (Scalars['String'] | null)
    __typename: 'MaskAccountPayload'
}


/** A meal that a user has created */
export interface Meal {
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The food items that are part of the meal */
    food_items: (FoodItem[] | null)
    /** The unique identifier of the meal */
    id: Scalars['ID']
    /** The name of the meal */
    name: (Scalars['String'] | null)
    /** The user that owns the meal */
    user_id: (Scalars['String'] | null)
    __typename: 'Meal'
}


/** A meal plan */
export interface MealPlan {
    /** If true, meal plan is active (most recent) on client's Living Plate account */
    active: (Scalars['Boolean'] | null)
    /** Date meal plan was added to client's Living Plate account */
    date_added: (Scalars['String'] | null)
    /** The unique identifier of the plan */
    id: Scalars['ID']
    /** name of the meal plan on Living Plate */
    name: (Scalars['String'] | null)
    /** If one exists, name of offering that was purchased that added meal plan to client's Living Plate account */
    offering_name: (Scalars['String'] | null)
    __typename: 'MealPlan'
}


/** Medication query result */
export interface MedicationOptionType {
    /** The dosage options of the medication option */
    dosage_options: ((DosageType | null)[] | null)
    /** The dosages of the medication option */
    dosages: (Scalars['String'][] | null)
    /** The unique identifier of the medication option */
    id: Scalars['ID']
    /** The monograph of the medication option */
    monograph: (Scalars['String'] | null)
    /** The name of the medication option */
    name: Scalars['String']
    __typename: 'MedicationOptionType'
}


/** Medication belonging to client */
export interface MedicationType {
    /** Indicates if medication is still active (medication can also be inactive if current date doesn't fall between start and end date) */
    active: (Scalars['Boolean'] | null)
    /** CCDA code for this medication */
    code: (Scalars['String'] | null)
    /** Comments entered by provider */
    comment: (Scalars['String'] | null)
    /** The time the medication was created */
    created_at: Scalars['String']
    /** Directions to use medication entered by provider */
    directions: (Scalars['String'] | null)
    /** Dosage of medication entered by provider */
    dosage: (Scalars['String'] | null)
    /** last date patient should be able to use medication */
    end_date: (Scalars['String'] | null)
    /** Frequency of this medication */
    frequency: (Scalars['String'] | null)
    /** The unique identifier of the medication */
    id: Scalars['ID']
    /** If the medication is synchronized with an external system (e.g., an E-Rx system) */
    mirrored: Scalars['Boolean']
    /** Name of medication */
    name: (Scalars['String'] | null)
    /** When true, this object must be consolidated as part of a CCDA Ingest */
    requires_consolidation: (Scalars['Boolean'] | null)
    /** The way this medication is administered */
    route: (Scalars['String'] | null)
    /** First active date of medication */
    start_date: (Scalars['String'] | null)
    /** The last time the medication was updated */
    updated_at: (Scalars['String'] | null)
    /** User ID of the client this medication belongs to */
    user_id: (Scalars['ID'] | null)
    __typename: 'MedicationType'
}


/** A data point for a metric */
export interface MetricDataPointType {
    /** The time the data point was created */
    created_at: Scalars['String']
    /** The entry id of the data point */
    entry_id: (Scalars['String'] | null)
    /** The value of the data point */
    flex_value: (Scalars['String'] | null)
    /**
     * @deprecated Use flex value, which supports both string and number values
     * The value of the data point
     */
    value: (Scalars['Float'] | null)
    __typename: 'MetricDataPointType'
}


/** Metric Graph data */
export interface MetricGraphDataType {
    /** Category of the metric, e.g. "Weight" or "Steps" */
    category: (Scalars['String'] | null)
    /** Label for the category, e.g. "Weight" or "Steps" */
    category_label: (Scalars['String'] | null)
    /** Data points for the graph */
    data_points: (MetricDataPointType[] | null)
    /** False if the category has no entry */
    has_entry: (Scalars['Boolean'] | null)
    /** Maximum value of the data points */
    max: (Scalars['Float'] | null)
    /** Minimum value of the data points */
    min: (Scalars['Float'] | null)
    /** Type of xtick, e.g. "date" or "time" */
    xtick_type: (Scalars['String'] | null)
    /** Type of ytick, e.g. "date" or "time" */
    ytick_type: (Scalars['String'] | null)
    __typename: 'MetricGraphDataType'
}


/** Type of multi-factor authentication used */
export type MfaType = 'SMS' | 'EMAIL'


/** The format of a monograph */
export type MonographFormat = 'HTML' | 'XML'


/** Monthly billing items data */
export interface MonthlyBillingItemsDataType {
    /** Amount of monthly billing items */
    amount: (Scalars['Int'] | null)
    /** Month the data relates to */
    month: (Scalars['String'] | null)
    __typename: 'MonthlyBillingItemsDataType'
}


/** Multi line metric graph data type */
export interface MultiLineMetricGraphDataType {
    /** Category name */
    category: (Scalars['String'] | null)
    /** Category label */
    category_label: (Scalars['String'] | null)
    /** False if the category has no entry */
    has_entry: (Scalars['Boolean'] | null)
    /** Metric graph data */
    metric_graph_datas: (MetricGraphDataType[] | null)
    __typename: 'MultiLineMetricGraphDataType'
}


/** The mutation root of this schema. See available mutations. */
export interface Mutation {
    /** Add Change Health Submitter to Organization */
    addClaimSubmitter: (AddClaimSubmitterPayload | null)
    /** Add CPT Code and Description to the Database */
    addCptCode: (AddCptCodePayload | null)
    /** Create Dosespot E-Rx for provider account */
    addDosespot: (createDosespotPayload | null)
    /** Add ICD Code and Description to the Database */
    addIcdCode: (AddIcdCodePayload | null)
    /** Add Living Plate Integration to provider */
    addLivingPlate: (addLivingPlatePayload | null)
    /** Add a member to the Zus organization */
    addZusUser: (addZusMemberPayload | null)
    /** Apply selected tags on a specific user */
    bulkApply: (bulkApplyPayload | null)
    /** Apply care plan to the passed array of clients and/or groups */
    bulkApplyCarePlanTemplate: (bulkApplyCarePlanTemplatePayload | null)
    /** bulk create Availability */
    bulkCreateAvailability: (bulkCreateAvailabilityPayload | null)
    /** creates bulk Entries (intended for apple health only for the time being) */
    bulkCreateEntries: (bulkCreateEntriesPayload | null)
    /** Delete tasks */
    bulkDeleteTasks: (bulkDeleteTasksPayload | null)
    /** Update unseen card issues on a provider */
    bulkUpdateCardIssues: (bulkUpdateCardIssuesPayload | null)
    /** Trigger notification email or care plan activation for each user related to the selected care plans. In case of activation, a group care plan will be activated for each user of user_group(unless a user already have an active care plan). If you want to activate selected care plan for only one user(user of group) use ToggleCarePlanStatusForSpecificUser mutation */
    bulkUpdateCarePlanUsers: (bulkUpdateCarePlanUsersPayload | null)
    /** Update multiple clients at once. Will change user group for multiple clients if user_group_id passed, otherwise clients will be archived */
    bulkUpdateClients: (bulkUpdateClientsPayload | null)
    /** disabled devices in video chat */
    changeDevicesAvailability: (ChangeDevicesAvailabilityPayload | null)
    /** Delete unreconciled allergies/problems/medications */
    clearUnreconciledObjects: (clearUnreconciledObjectsPayload | null)
    /** Complete a CCDA Reconciliation, based on user choice */
    completeCcdaReconciliation: (CompleteCcdaReconciliationPayload | null)
    /** Complete the checkout for booking or buying */
    completeCheckout: (completeCheckoutPayload | null)
    /** Create CompletedCourseItem for related document */
    completeCourseDocument: (completeCourseDocumentPayload | null)
    /** Attach Appointment to Charting Note */
    connectApptToCharting: (ConnectApptToChartingPayload | null)
    /** Generating forms */
    convertFromJsonToForm: (ConvertFromJsonToFormPayload | null)
    /** Convert to Metric */
    convertToMetric: (ConvertToMetricPayload | null)
    /** Copy a Course */
    copyCourse: (copyCoursePayload | null)
    /** Copy Custom Module */
    copyCustomModule: (copyCustomModulePayload | null)
    /** copy Custom Module Form */
    copyCustomModuleForm: (copyCustomModuleFormPayload | null)
    /** Copy Forms */
    copyForms: (CopyFormsPayload | null)
    /** Copy an Offering */
    copyOffering: (copyOfferingPayload | null)
    /** Create Accepted Insurance Plans */
    createAcceptedInsurancePlan: (createAcceptedInsurancePlanPayload | null)
    /** Create a new addendum for the selected charting note */
    createAddendum: (createAddendumPayload | null)
    /** Create AllergySensitivity */
    createAllergySensitivity: (createAllergySensitivityPayload | null)
    /** Create Announcement */
    createAnnouncement: (createAnnouncementPayload | null)
    /** create API Key. This capability needs to be turned on for your account first */
    createApiKey: (createApiKeyPayload | null)
    /** Create AppleHealth */
    createAppleHealth: (createAppleHealthPayload | null)
    /** create appointment mutation for providers. Clients use the completeCheckout mutation */
    createAppointment: (createAppointmentPayload | null)
    /** create an Appointment Setting */
    createAppointmentSetting: (createAppointmentSettingPayload | null)
    /** create Appointment Type */
    createAppointmentType: (createAppointmentTypePayload | null)
    /** Create an Appointment Type CPT Code Object */
    createAppointmentTypeCptCode: (createAppointmentTypeCptCodePayload | null)
    /** Create auto task generator */
    createAutoTaskGenerator: (createAutoTaskGeneratorPayload | null)
    /** create automated insurance billing setting */
    createAutomatedInsuranceBillingSetting: (createAutomatedInsuranceBillingSettingPayload | null)
    /** Create availability */
    createAvailability: (createAvailabilityPayload | null)
    /** create billing item */
    createBillingItem: (createBillingItemPayload | null)
    /** create Brand */
    createBrand: (createBrandPayload | null)
    /** create Campaign */
    createCampaign: (createCampaignPayload | null)
    /** Create and return a care plan */
    createCarePlan: (createCarePlanPayload | null)
    /** Create Change Health Labs for provider account */
    createChangeAccount: (CreateChangeAccountPayload | null)
    /** creates ChangeHealth patient record */
    createChangeHealthPatient: (CreateChangeHealthPatientPayload | null)
    /** create an Chat Setting */
    createChatSetting: (createChatSettingPayload | null)
    /** Create Change Health Submitter Object */
    createClaimSubmitter: (CreateClaimSubmitterPayload | null)
    /** Create a Client */
    createClient: (createClientPayload | null)
    /** create a client account via a form (e.g a lead capture form) or match to an existing client by name and email. This endpoint is meant to be called unauthenticated. If you want the client to buy or book something at the same time, use the CompleteCheckout mutation. */
    createClientViaForm: (CreateClientViaFormPayload | null)
    /** create CMS1500 */
    createCms1500: (createCms1500Payload | null)
    /** Create a CognitiveStatus Object */
    createCognitiveStatus: (createCognitiveStatusPayload | null)
    /** create Comment */
    createComment: (createCommentPayload | null)
    /** create CompletedCourseItem */
    createCompletedCourseItem: (createCompletedCourseItemPayload | null)
    /** create CompletedOnboardingItem */
    createCompletedOnboardingItem: (createCompletedOnboardingItemPayload | null)
    /** Creates a Contact */
    createContact: (createContactPayload | null)
    /** create Conversation */
    createConversation: (createConversationPayload | null)
    /** create Course */
    createCourse: (createCoursePayload | null)
    /** create CourseBenefit */
    createCourseBenefit: (createCourseBenefitPayload | null)
    /** create CourseItem */
    createCourseItem: (createCourseItemPayload | null)
    /** create custom email */
    createCustomEmail: (createCustomEmailPayload | null)
    /** Create a Custom Food */
    createCustomFood: (createCustomFoodPayload | null)
    /** create Custom Module */
    createCustomModule: (createCustomModulePayload | null)
    /** create Custom Module Form */
    createCustomModuleForm: (createCustomModuleFormPayload | null)
    /** create Document */
    createDocument: (createDocumentPayload | null)
    /** Create dosespot clinician */
    createDosespotClinician: (createDosespotClinicianPayload | null)
    /** create Draft */
    createDraft: (createDraftPayload | null)
    /** create ebook */
    createEbook: (createEbookPayload | null)
    /** creates a new Entry */
    createEntry: (createEntryPayload | null)
    /** Create an External Calendar */
    createExternalCalendar: (createExternalCalendarPayload | null)
    /** Create Family History */
    createFamilyHistory: (createFamilyHistoryPayload | null)
    /** create Fax Acct Info */
    createFaxAcctInfo: (createFaxAcctInfoPayload | null)
    /** Create and return a fax line request */
    createFaxLineRequest: (createFaxLineRequestPayload | null)
    /** Create a FeatureToggle and Return FeatureToggle */
    createFeatureToggle: (createFeatureTogglePayload | null)
    /** Create Fitbit */
    createFitbit: (createFitbitPayload | null)
    /** create Folder */
    createFolder: (createFolderPayload | null)
    /** create FormAnswerGroup */
    createFormAnswerGroup: (createFormAnswerGroupPayload | null)
    /** create FormAnswerGroupSigning */
    createFormAnswerGroupSigning: (createFormAnswerGroupSigningPayload | null)
    /** Create a Fullscript practitioner account using the Fullscript API */
    createFullscriptPractitioner: (createFullscriptPractitionerPayload | null)
    /** Create a FunctionalStatus Object */
    createFunctionalStatus: (createFunctionalStatusPayload | null)
    /** create Goal */
    createGoal: (createGoalPayload | null)
    /** create Goal History */
    createGoalHistory: (createGoalHistoryPayload | null)
    /** Create GoogleFit */
    createGoogleFit: (createGoogleFitPayload | null)
    /** Create a Group */
    createGroup: (createGroupPayload | null)
    /** Create a HealthConcern Object */
    createHealthConcern: (createHealthConcernPayload | null)
    /** Create an Immunization */
    createImmunization: (createImmunizationPayload | null)
    /** Create Implantable Device User association */
    createImplantableDeviceUser: (createImplantableDeviceUserPayload | null)
    /** Create an import data request */
    createImportDataRequest: (createImportDataRequestPayload | null)
    /** create an insurance authorization */
    createInsuranceAuthorization: (createInsuranceAuthorizationPayload | null)
    /** Create Insurance Plan */
    createInsurancePlan: (createInsurancePlanPayload | null)
    /** Create Lab Order */
    createLabOrder: (createLabOrderPayload | null)
    /** create Location */
    createLocation: (createLocationPayload | null)
    /** Create a Meal */
    createMeal: (createMealPayload | null)
    /** Create Medication */
    createMedication: (createMedicationPayload | null)
    /** create Message Blast */
    createMessageBlast: (createMessageBlastPayload | null)
    /** create Note */
    createNote: (createNotePayload | null)
    /** create a Notification Contact */
    createNotificationContact: (createNotificationContactPayload | null)
    /** create offering */
    createOffering: (createOfferingPayload | null)
    /** Create an Offering Coupon */
    createOfferingCoupon: (createOfferingCouponPayload | null)
    /** create OfficeallySftpAccount */
    createOfficeallySftpAccount: (createOfficeallySftpAccountPayload | null)
    /** create OnboardingFlow */
    createOnboardingFlow: (createOnboardingFlowPayload | null)
    /** create OnboardingItem */
    createOnboardingItem: (createOnboardingItemPayload | null)
    /** creates a new entry or add to existing water intake entry for the day */
    createOrAddToWaterIntakeEntry: (createOrAddToWaterIntakeEntryPayload | null)
    /** create Organization */
    createOrganization: (createOrganizationPayload | null)
    /** Create an Organization CPT Code Object */
    createOrganizationCptCode: (createOrganizationCptCodePayload | null)
    /** create OrganizationMembership */
    createOrganizationMembership: (createOrganizationMembershipPayload | null)
    /** Creates a Patner */
    createPartner: (createPartnerPayload | null)
    /** Create a Stripe Payment Intent. Currently just used for Klarna support. When the payment succeeds, Healthie will receive a webhook and automatically complete the checkout. */
    createPaymentIntent: (createPaymentIntentPayload | null)
    /** create Permission Template */
    createPermissionTemplate: (createPermissionTemplatePayload | null)
    /** create Personalization Questionnaire */
    createPersonalizationQuestionnaire: (createPersonalizationQuestionnairePayload | null)
    /** Create favorite CPT/ICD code */
    createPreferredMedicalCode: (createPreferredMedicalCodePayload | null)
    /** Create a Procedure Object */
    createProcedure: (createProcedurePayload | null)
    /** Create a product */
    createProduct: (createProductPayload | null)
    /** Create ProviderCPTCode Objects */
    createProviderCptCodes: (createProviderCptCodesPayload | null)
    /** Create a care plan recommendation */
    createRecommendation: (createRecommendationPayload | null)
    /** Create new Referring Physician */
    createReferral: (createReferralPayload | null)
    /** Create new Referring Physician */
    createReferringPhysician: (createReferringPhysicianPayload | null)
    /** create requested form */
    createRequestedFormCompletion: (createRequestedFormPayload | null)
    /** create requested payment */
    createRequestedPayment: (createRequestedPaymentPayload | null)
    /** Create a Rupa order */
    createRupaOrder: (createRupaOrderPayload | null)
    /** Create a new saved filter */
    createSavedFilter: (createSavedFilterPayload | null)
    /** Create a sent direct message */
    createSentDirectMessage: (createSentDirectMessagePayload | null)
    /** create Sent Fax */
    createSentFax: (createSentFaxPayload | null)
    /** Create a Smart Phrase */
    createSmartPhrase: (createSmartPhrasePayload | null)
    /** Create a Smoking Status */
    createSmokingStatus: (createSmokingStatusPayload | null)
    /** Creates a new payment card */
    createStripeCustomerDetail: (createStripeCustomerDetailPayload | null)
    /** create Subscription */
    createSubscription: (createSubscriptionPayload | null)
    /** create super bill */
    createSuperBill: (createSuperBillPayload | null)
    /** Create a custom user tag */
    createTag: (createTagPayload | null)
    /** Create a task for provider */
    createTask: (createTaskPayload | null)
    /** Create a UniqueDeviceIdentifier Object */
    createUniqueDeviceIdentifier: (createUniqueDeviceIdentifierPayload | null)
    /** Creates a Visitor */
    createVisitor: (createVisitorPayload | null)
    /** Create Webhook */
    createWebhook: (createWebhookPayload | null)
    /** Enable Zus integration for provider account */
    createZus: (createZusPayload | null)
    /** Destroy Accepted Insurance Plan */
    deleteAcceptedInsurancePlan: (deleteAcceptedInsurancePlanPayload | null)
    /** Destroy AllergySensitivity */
    deleteAllergySensitivity: (deleteAllergySensitivityPayload | null)
    /** Destroy Announcement */
    deleteAnnouncement: (destroyAnnouncementPayload | null)
    /** Destroy API Key */
    deleteApiKey: (deleteApiKeyPayload | null)
    /** Destroy AppleHealth */
    deleteAppleHealth: (deleteAppleHealthPayload | null)
    /** Delete an Appointment */
    deleteAppointment: (deleteAppointmentPayload | null)
    /** Destroy an AppointmentType */
    deleteAppointmentType: (deleteAppointmentTypePayload | null)
    /** Delete a AppointmentTypeCptCode Object */
    deleteAppointmentTypeCptCode: (deleteAppointmentTypeCptCodePayload | null)
    /** Delete auto task generator */
    deleteAutoTaskGenerator: (deleteAutoTaskGeneratorPayload | null)
    /** delete Availability */
    deleteAvailability: (deleteAvailabilityPayload | null)
    /** Destroy a Billing Item */
    deleteBillingItem: (deleteBillingItemPayload | null)
    /** Destroy a Care Plan */
    deleteCarePlan: (deleteCarePlanPayload | null)
    /** Remove connection for related item(document/goal/recommendation) */
    deleteCarePlanConnection: (deleteCarePlanConnectionPayload | null)
    /** Destroy a Cms1500 */
    deleteCms1500: (deleteCms1500Payload | null)
    /** Delete a CognitivesStatus Object */
    deleteCognitiveStatus: (deleteCognitiveStatusPayload | null)
    /** Destroy a Comment */
    deleteComment: (deleteCommentPayload | null)
    /** Destroy a Conversation Membership */
    deleteConversationMembership: (deleteConversationMembershipPayload | null)
    /** Destroy a Course */
    deleteCourse: (deleteCoursePayload | null)
    /** Destroy a Course Benefit */
    deleteCourseBenefit: (deleteCourseBenefitPayload | null)
    /** Destroy a Course Group */
    deleteCourseGroup: (deleteCourseGroupPayload | null)
    /** Destroy a Course Item */
    deleteCourseItem: (deleteCourseItemPayload | null)
    /** Destroy a Course Membership */
    deleteCourseMembership: (deleteCourseMembershipPayload | null)
    /** Destroy a Custom Email */
    deleteCustomEmail: (deleteCustomEmailPayload | null)
    /** Destroy a Custom Food */
    deleteCustomFood: (deleteCustomFoodPayload | null)
    /** Destroy an CustomModule */
    deleteCustomModule: (deleteCustomModulePayload | null)
    /** Destroy an CustomModuleForm */
    deleteCustomModuleForm: (deleteCustomModuleFormPayload | null)
    /** Destroy Dexcom Connection */
    deleteDexcomConnection: (deleteDexcomConnectionPayload | null)
    /** Destroy a Document */
    deleteDocument: (deleteDocumentPayload | null)
    /** Delete Dosespot E-Rx for provider account */
    deleteDosespot: (deleteDosespotPayload | null)
    /** Destroy a Entry */
    deleteEntry: (deleteEntryPayload | null)
    /** Destroy an External Calendar */
    deleteExternalCalendar: (deleteExternalCalendarPayload | null)
    /** Delete a Family History Condition */
    deleteFamilyHistory: (deleteFamilyHistoryPayload | null)
    /** destroy Fax Acct Info */
    deleteFaxAcctInfo: (destroyFaxAcctInfoPayload | null)
    /** Destroy Fitbit */
    deleteFitbit: (deleteFitbitPayload | null)
    /** Destroy a Folder */
    deleteFolder: (deleteFolderPayload | null)
    /** Destroy a Form Answer Group */
    deleteFormAnswerGroup: (deleteFormAnswerGroupPayload | null)
    /** Delete a FunctionalsStatus Object */
    deleteFunctionalStatus: (deleteFunctionalStatusPayload | null)
    /** Destroy a Goal */
    deleteGoal: (deleteGoalPayload | null)
    /** Destroy a Goal GoalHistory */
    deleteGoalHistory: (deleteGoalHistoryPayload | null)
    /** Destroy GoogleFit */
    deleteGoogleFit: (deleteGoogleFitPayload | null)
    /** Delete a HealthConcern Object */
    deleteHealthConcern: (deleteHealthConcernPayload | null)
    /** Delete an Implantable Device User association */
    deleteImplantableDeviceUser: (deleteImplantableDeviceUserPayload | null)
    /** delete an insurance authorization */
    deleteInsuranceAuthorization: (deleteInsuranceAuthorizationPayload | null)
    /** Delete Insurance Plan */
    deleteInsurancePlan: (deleteInsurancePlanPayload | null)
    /** Destroy a Location */
    deleteLocation: (deleteLocationPayload | null)
    /** Destroy a Meal */
    deleteMeal: (deleteMealPayload | null)
    /** Destroy Medication */
    deleteMedication: (destroyMedicationPayload | null)
    /** Destroy a Note */
    deleteNote: (deleteNotePayload | null)
    /** delete a Notification Contact */
    deleteNotificationContact: (deleteNotificationContactPayload | null)
    /** Destroy an Offering */
    deleteOffering: (deleteOfferingPayload | null)
    /** Destroy an Offering Coupon */
    deleteOfferingCoupon: (deleteOfferingCouponPayload | null)
    /** Destroy a OnboardingFlow */
    deleteOnboardingFlow: (deleteOnboardingFlowPayload | null)
    /** Destroy a OnboardingItem */
    deleteOnboardingItem: (deleteOnboardingItemPayload | null)
    /** Delete a OrganizationCptCode Object */
    deleteOrganizationCptCode: (deleteOrganizationCptCodePayload | null)
    /** Destroy an organization info */
    deleteOrganizationInfo: (deleteOrganizationInfoPayload | null)
    /**
     * @deprecated Organization Memberships Cannot Be Destroyed
     * Destroy a Organization Membership
     */
    deleteOrganizationMembership: (deleteOrganizationMembershipPayload | null)
    /** delete Permission Template */
    deletePermissionTemplate: (deletePermissionTemplatePayload | null)
    /** Delete favorite CPT/ICD code */
    deletePreferredMedicalCode: (deletePreferredMedicalCodePayload | null)
    /** Delete a Procedure Object */
    deleteProcedure: (deleteProcedurePayload | null)
    /** Delete a product */
    deleteProduct: (deleteProductPayload | null)
    /** Delete a ProviderCptCode Object */
    deleteProviderCptCode: (deleteProviderCptCodePayload | null)
    /** Destroy a received fax */
    deleteReceivedFax: (deleteReceivedFaxPayload | null)
    /** Destroy a care plan recommendation */
    deleteRecommendation: (deleteRecommendationPayload | null)
    /** Delete recurring form request */
    deleteRecurringForm: (destroyRecurringFormPayload | null)
    /** Delete referral */
    deleteReferral: (deleteReferralPayload | null)
    /** Delete referring physician  */
    deleteReferringPhysician: (deleteReferringPhysicianPayload | null)
    /** Destroy a requested form */
    deleteRequestedFormCompletion: (deleteRequestedFormPayload | null)
    /** destroy requested payment */
    deleteRequestedPayment: (deleteRequestedPaymentPayload | null)
    /** Delete a saved filter */
    deleteSavedFilter: (deleteSavedFilterPayload | null)
    /** Destroy Shapa Connection */
    deleteShapaConnection: (deleteShapaConnectionPayload | null)
    /** Destroy a Smart Phrase */
    deleteSmartPhrase: (deleteSmartPhrasePayload | null)
    /** Delete a Smoking Status */
    deleteSmokingStatus: (deleteSmokingStatusPayload | null)
    /** Deletes a payment card */
    deleteStripeCustomerDetail: (deleteStripeCustomerDetailPayload | null)
    /** Destroy a Super Bill */
    deleteSuperBill: (deleteSuperBillPayload | null)
    /** Delete a custom user tag */
    deleteTag: (deleteTagPayload | null)
    /** Destroy a task */
    deleteTask: (deleteTaskPayload | null)
    /** Delete a UniqueDeviceIdentifier Object */
    deleteUniqueDeviceIdentifier: (deleteUniqueDeviceIdentifierPayload | null)
    /** Delete a Group */
    deleteUserGroup: (deleteUserGroupPayload | null)
    /** Destroy Webhook */
    deleteWebhook: (deleteWebhookPayload | null)
    /** Destroy Withings Connection */
    deleteWithingsConnection: (deleteWithingsConnectionPayload | null)
    /** Dismiss All Announcements For A User */
    dismissAllAnnouncements: (dismissAllAnnouncementsPayload | null)
    /** Dismiss Announcement */
    dismissAnnouncement: (dismissAnnouncementPayload | null)
    /** Update User Account to Dummy User Account */
    dummyUser: (dummyUserPayload | null)
    /** edit Availability */
    editAvailability: (editAvailabilityPayload | null)
    /** Embed Forms to Objects */
    embedForm: (EmbedFormPayload | null)
    /** Generate Patients Dosespot SSO for a Given Provider  */
    enableDosespotSelfSignup: (enableSelfSignupPayload | null)
    /** Adding Google Integrations */
    enableGoogleIntegrations: (enableGoogleIntegrationsPayload | null)
    /** Enable Multi Factor Authentication for the Entire Org */
    enableMfa: (EnableMfaPayload | null)
    /** Enable Mixpanel for Enterprise Client */
    enableMixpanel: (EnableMixpanelPayload | null)
    /** Enable Zoom Features */
    enableZoomFeatures: (EnableZoomFeaturesPayload | null)
    /** Expires the webhook signature */
    expireWebhookSignature: (expireWebhookSignaturePayload | null)
    /** Creates a template from existing Care Plan. Original object is not touched */
    exportCarePlanToTemplate: (exportToTemplatePayload | null)
    /** Export Client EHI data */
    exportClientEhi: (exportClientEhiPayload | null)
    /** extend paywall for a provider */
    extendPaywall: (ExtendPaywallPayload | null)
    /** Generate a PDF of charting notes for a client */
    generateChartingPdf: (generateChartingPdfPayload | null)
    /** Generate Patients Dosespot SSO for a Given Provider  */
    generateDosespotSingleSignOn: (dosespotSSOPayload | null)
    /** Sign up Healthie User in the Health Assessment Service */
    healthAssessmentServiceSignup: (HealthAssessmentServiceSignupPayload | null)
    /** Mask in as another user */
    maskAccount: (MaskAccountPayload | null)
    /** all data related to the merging account (form answers, billing items, charting notes, etc) will be associated with the selected account after merging. The selected account's client profile information will remain unchanged (name, DOB, etc) */
    mergeClients: (mergeClientsPayload | null)
    /** Pair a client with a provider */
    pairAccounts: (PairAccountsPayload | null)
    /** Import client from a CCDA file */
    parseCcdaDocument: (parseCcdaDocumentPayload | null)
    /** refetch ChangeHealth Lab Orders for a specified patient */
    refetchChangeHealthLabOrder: (RefetchChangeHealthLabOrderPayload | null)
    /** Refresh Host Links */
    refreshHostLinks: (RefreshHostLinksPayload | null)
    /** Remove applied tag on a specific user */
    removeAppliedTag: (removeAppliedTagPayload | null)
    /** Remove Card that is on File for Client */
    removeCardOnFile: (RemoveCardOnFilePayload | null)
    /** remove Draft */
    removeDraft: (removeDraftPayload | null)
    /** Remove group care plan user connection for a specific user */
    removeUserFromGroupCarePlan: (removeUserFromGroupCarePlanPayload | null)
    /** resend Sent Fax */
    resendSentFax: (resendSentFaxPayload | null)
    /** send the human a password reset email */
    resetPassword: (resetPasswordPayload | null)
    /** Restores Previous Version to be Current Version */
    restoreVersion: (restoreVersionsPayload | null)
    /** Resync existed rupa lab orders data for a specific rupa connection of the current user */
    resyncRupaLabOrders: (resyncRupaLabOrdersPayload | null)
    /** revoke token or API key. */
    revokeToken: (revokeTokenPayload | null)
    /** Run an eligibility check on a policy */
    runEligibilityCheck: (runEligibilityCheckMutationPayload | null)
    /** Trigger care plan email for given client */
    sendCarePlanEmail: (sendCarePlanEmailPayload | null)
    /** Send the trainer an email that the client wants to speak to them */
    sendSpeakToTrainerNotification: (SendSpeakToTrainerNotificationPayload | null)
    /** Send Welcome Email to Client */
    sendWelcomeEmail: (SendWelcomeEmailPayload | null)
    /** Add form answer group answers as document viewable by client */
    shareAnswersAsDocument: (shareAnswersAsDocumentPayload | null)
    /** share Course with another provider */
    shareCourse: (shareCoursePayload | null)
    /** share Custom Module Form */
    shareCustomModuleForm: (shareCustomModuleFormPayload | null)
    /** SignIn */
    signIn: (signInPayload | null)
    /** Sign up */
    signUp: (signUpPayload | null)
    /** Toggle 2 Factor Authentication for User */
    toggle2Fa: (Toggle2FaPayload | null)
    /** Add Role to User Account */
    toggleAdvancedSettings: (ToggleAdvancedSettingsPayload | null)
    /** Toggle availability by appointment type, location, or contact type */
    toggleAvailability: (ToggleAvailabilityPayload | null)
    /** Toggle BAA for external calendar */
    toggleBaa: (ToggleBaaPayload | null)
    /** Deactivate/activate a group/single Care Plan for a given user */
    toggleCarePlanStatusForSpecificUser: (toggleCarePlanStatusForSpecificUserPayload | null)
    /** toggle paywall for a provider */
    togglePaywall: (TogglePaywallPayload | null)
    /** Toggle Reason for Appointment on Appointment Type of Provider */
    toggleReasonForAppt: (ToggleReasonForApptPayload | null)
    /** Unblock an ip address */
    unblockIpAddress: (unblockIpAddressPayload | null)
    /** Unlock Charting Note */
    unlockChartingNote: (unlockChartingNotePayload | null)
    /** Update a Notification Setting to unsubscribe from a specific notification type */
    unsubscribeFromNotification: (unsubscribeFromNotificationPayload | null)
    /** Update existing addendum for the selected charting note */
    updateAddendum: (updateAddendumPayload | null)
    /** Update AllergySensitivity */
    updateAllergySensitivity: (updateAllergySensitivityPayload | null)
    /** Update Announcement */
    updateAnnouncement: (updateAnnouncementPayload | null)
    /** Update AppleHealth */
    updateAppleHealth: (updateAppleHealthPayload | null)
    /** Update the Appointment */
    updateAppointment: (updateAppointmentPayload | null)
    /** Update AppointmentInclusion */
    updateAppointmentInclusion: (updateAppointmentInclusionPayload | null)
    /** update Appointment Setting */
    updateAppointmentSetting: (updateAppointmentSettingPayload | null)
    /** Update an Appointment Type and return Appointment Type */
    updateAppointmentType: (updateAppointmentTypePayload | null)
    /** Update a AppointmentTypeCptCode Object */
    updateAppointmentTypeCptCode: (updateAppointmentTypeCptCodePayload | null)
    /** Update auto task generator */
    updateAutoTaskGenerator: (updateAutoTaskGeneratorPayload | null)
    /** update automated insurance billing setting */
    updateAutomatedInsuranceBillingSetting: (updateAutomatedInsuranceBillingSettingPayload | null)
    /** Update a BillingItem */
    updateBillingItem: (updateBillingItemPayload | null)
    /** Update a Brand and return Brand */
    updateBrand: (updateBrandPayload | null)
    /** Update Care Plan by Care Plan Template */
    updateByTemplate: (updateByTemplatePayload | null)
    /** Update and return calendar view setting */
    updateCalendarViewSetting: (updateCalendarViewSettingPayload | null)
    /** Update Calorie Levels in the Health Assessment Service */
    updateCalorieLevel: (UpdateCalorieLevelPayload | null)
    /** update Campaign */
    updateCampaign: (updateCampaignPayload | null)
    /** Update and return a Care Plan */
    updateCarePlan: (updateCarePlanPayload | null)
    /** Update ChangeHealthAccount (used for Labs) */
    updateChangeHealthAccount: (updateChangeHealthAccountPayload | null)
    /** Update ChargeBack */
    updateChargeBack: (updateChargeBackPayload | null)
    /** update Chat Setting */
    updateChatSetting: (updateChatSettingPayload | null)
    /** Create Change Health Submitter Object */
    updateClaimSubmitter: (UpdateClaimSubmitterPayload | null)
    /** Update Client */
    updateClient: (updateClientPayload | null)
    /** update CMS1500 */
    updateCms1500: (updateCms1500Payload | null)
    /** Update a CognitiveStatus Object */
    updateCognitiveStatus: (updateCognitiveStatusPayload | null)
    /** Update a Conversation and return Conversation */
    updateConversation: (updateConversationPayload | null)
    /** Update a ConversationMembership and return ConversationMembership */
    updateConversationMembership: (updateConversationMembershipPayload | null)
    /** Update a Course */
    updateCourse: (updateCoursePayload | null)
    /** update a Course Group */
    updateCourseGroup: (updateCourseGroupPayload | null)
    /** Update a CourseItem */
    updateCourseItem: (updateCourseItemPayload | null)
    /** update a Course Membership */
    updateCourseMembership: (updateCourseMembershipPayload | null)
    /** Update Currency on User Object */
    updateCurrency: (UpdateCurrencyPayload | null)
    /** Update a Custom Email */
    updateCustomEmail: (updateCustomEmailPayload | null)
    /** Update a Custom Food */
    updateCustomFood: (updateCustomFoodPayload | null)
    /** Update an Custom Module and return Custom Module */
    updateCustomModule: (updateCustomModulePayload | null)
    /** Update an Custom Module Form and return Custom Module Form */
    updateCustomModuleForm: (updateCustomModuleFormPayload | null)
    /** Update a Document and return Document */
    updateDocument: (updateDocumentPayload | null)
    /** Updates an Entry and returns an Entry */
    updateEntry: (updateEntryPayload | null)
    /** Update an External Calendar */
    updateExternalCalendar: (updateExternalCalendarPayload | null)
    /** Update Family History */
    updateFamilyHistory: (updateFamilyHistoryPayload | null)
    /** update Fax Acct Info */
    updateFaxAcctInfo: (updateFaxAcctInfoPayload | null)
    /** Update a FeatureToggle and Return FeatureToggle */
    updateFeatureToggle: (updateFeatureTogglePayload | null)
    /** Update Fitbit */
    updateFitbit: (updateFitbitPayload | null)
    /** Update a Folder and return Folder */
    updateFolder: (updateFolderPayload | null)
    /** update FormAnswerGroup */
    updateFormAnswerGroup: (updateFormAnswerGroupPayload | null)
    /** Update a FunctionalStatus Object */
    updateFunctionalStatus: (updateFunctionalStatusPayload | null)
    /** Update a Goal */
    updateGoal: (updateGoalPayload | null)
    /** Update GoogleFit */
    updateGoogleFit: (updateGoogleFitPayload | null)
    /** Updates the care plan status for groups */
    updateGroupCarePlan: (updateGroupCarePlanPayload | null)
    /** Update a HealthConcern Object */
    updateHealthConcern: (updateHealthConcernPayload | null)
    /** Update an Appointment Setting */
    updateHiddenAppointmentSettings: (UpdateHiddenSettingsPayload | null)
    /** Update a Human */
    updateHuman: (updateHumanPayload | null)
    /** Update an Immunization and return Immunization */
    updateImmunization: (updateImmunizationPayload | null)
    /** Update Implantable Device User association */
    updateImplantableDeviceUser: (updateImplantableDeviceUserPayload | null)
    /** update an insurance authorization */
    updateInsuranceAuthorization: (updateInsuranceAuthorizationPayload | null)
    /** Update Insurance Plan */
    updateInsurancePlan: (updateInsurancePlanPayload | null)
    /** Update Lab Order */
    updateLabOrder: (updateLabOrderPayload | null)
    /** update Location */
    updateLocation: (updateLocationPayload | null)
    /** Update Macronutrient Split in the Health Assessment Service */
    updateMacronutrientSplit: (UpdateMacronutrientSplitPayload | null)
    /** Update a Meal */
    updateMeal: (updateMealPayload | null)
    /** Update Medication */
    updateMedication: (updateMedicationPayload | null)
    /** Update a Note */
    updateNote: (updateNotePayload | null)
    /** Update a Note Scheduler and return NoteSchedulerType */
    updateNoteScheduler: (updateNoteSchedulerPayload | null)
    /** update a notification */
    updateNotification: (updateNotificationPayload | null)
    /** Update a Notification Contact */
    updateNotificationContact: (updateNotificationContactPayload | null)
    /** Update multiple notification records at once */
    updateNotificationRecords: (bulkUpdateNotificationRecordsPayload | null)
    /** Update a Notification Setting and return Notification Setting */
    updateNotificationSetting: (updateNotificationSettingPayload | null)
    /** update multiple notifications at once */
    updateNotifications: (bulkUpdateNotificationsPayload | null)
    /** Update an Offering */
    updateOffering: (updateOfferingPayload | null)
    /** update OfficeallySftpAccount */
    updateOfficeallySftpAccount: (updateOfficeallySftpAccountPayload | null)
    /** Update a OnboardingFlow and return OnboardingFlow */
    updateOnboardingFlow: (updateOnboardingFlowPayload | null)
    /** Update a OnboardingItem and return OnboardingItem */
    updateOnboardingItem: (updateOnboardingItemPayload | null)
    /** Update Org Owner of Organization */
    updateOrgOwner: (updateOrgOwnerPayload | null)
    /** Update Organization */
    updateOrganization: (updateOrganizationPayload | null)
    /** Update a OrganizationCptCode Object */
    updateOrganizationCptCode: (updateOrganizationCptCodePayload | null)
    /** Update org members */
    updateOrganizationMember: (updateOrganizationMemberPayload | null)
    /** Update a OrganizationMembership */
    updateOrganizationMembership: (updateOrganizationMembershipPayload | null)
    updateOrganizationUiConfiguration: (UpdateUiConfigurationPayload | null)
    /** update Permission Template */
    updatePermissionTemplate: (updatePermissionTemplatePayload | null)
    /** Update a policy */
    updatePolicy: (updatePolicyMutationPayload | null)
    /** Update a Procedure Object */
    updateProcedure: (updateProcedurePayload | null)
    /** Update a product */
    updateProduct: (updateProductPayload | null)
    /** Update ProviderCptCode Objects */
    updateProviderCptCodes: (updateProviderCptCodesPayload | null)
    /** update a received fax */
    updateReceivedFax: (updateReceivedFaxPayload | null)
    /** Update a care plan recommendation */
    updateRecommendation: (updateRecommendationPayload | null)
    /** update a recurring form */
    updateRecurringForm: (updateRecurringFormPayload | null)
    /** Update Referral */
    updateReferral: (updateReferralPayload | null)
    /** Update Referring Physician */
    updateReferringPhysician: (updateReferringPhysicianPayload | null)
    /** Add Reply To Email Addresses to User */
    updateReplyToEmailAddresses: (AddReplyToEmailAddressesPayload | null)
    /** update requested payment */
    updateRequestedPayment: (updateRequestedPaymentPayload | null)
    /** Update an existing saved filter */
    updateSavedFilter: (updateSavedFilterPayload | null)
    /** Update a Smart Phrase */
    updateSmartPhrase: (updateSmartPhrasePayload | null)
    /** Update a Smoking Status */
    updateSmokingStatus: (updateSmokingStatusPayload | null)
    /** Archive/Unarchive a Course */
    updateState: (updateStatePayload | null)
    /** Updates a payment card */
    updateStripeCustomerDetail: (updateStripeCustomerDetailPayload | null)
    /** Update Stripe Verification Details */
    updateStripeVerificationDetails: (updateStripeVerificationDetailsPayload | null)
    /** update Subscription */
    updateSubscription: (updateSubscriptionPayload | null)
    /** Update a SuperBill */
    updateSuperBill: (updateSuperBillPayload | null)
    /** Update a custom user tag */
    updateTag: (updateTagPayload | null)
    /** Update a task for provider */
    updateTask: (updateTaskPayload | null)
    /** Update multiple tasks provider */
    updateTasksBulk: (bulkUpdateTasksPayload | null)
    /** Update a UniqueDeviceIdentifier Object */
    updateUniqueDeviceIdentifier: (updateUniqueDeviceIdentifierPayload | null)
    /** Update the current user, or a patient that the current user has access to. To update other org members, use updateOrganizationMembership */
    updateUser: (updateUserPayload | null)
    /** Updates the appointment pricing for this user */
    updateUserAppointmentPricing: (updateUserAppointmentPricingPayload | null)
    /** Update User's Email Address */
    updateUserEmail: (UpdateUserEmailPayload | null)
    /** Update a Group */
    updateUserGroup: (updateUserGroupPayload | null)
    /** Update Webhook */
    updateWebhook: (updateWebhookPayload | null)
    /** Enable Zus integration for provider account */
    updateZus: (UpdatePayload | null)
    /** Upload a CMS1500 batch to CandidHealth */
    uploadBatchToCandidHealth: (uploadBatchToCandidHealthPayload | null)
    /** Upload a CMS1500 batch to ChangeHealth */
    uploadBatchToChangeHealth: (uploadBatchToChangeHealthPayload | null)
    /** Upload a CMS1500 batch to OfficeAlly */
    uploadBatchToOfficeally: (uploadBatchToOfficeallyPayload | null)
    /** Upload a CMS1500 to integrations: ChangeHealth, OfficeAlly, CandidHealth */
    uploadCms1500sToIntegrations: (uploadToIntegrationsPayload | null)
    /** Verify 2FA code for Human */
    validateVerificationToken: (validateVerificationTokenPayload | null)
    __typename: 'Mutation'
}


/** Chat message object */
export interface Note {
    /** url for note audio */
    attached_audio_url: (Scalars['String'] | null)
    /** url for note image */
    attached_image_url: (Scalars['String'] | null)
    /** note content */
    content: (Scalars['String'] | null)
    /** conversation id */
    conversation_id: (Scalars['ID'] | null)
    /** The time at which this note was created */
    created_at: Scalars['String']
    /** User who created note */
    creator: (User | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** True if this note deleted by a user */
    deleted_by_user: Scalars['Boolean']
    /** id for note document */
    document_id: (Scalars['ID'] | null)
    /** Name of attached document */
    document_name: (Scalars['String'] | null)
    /** The unique identifier of the note */
    id: Scalars['ID']
    /** Name of attached image */
    image_name: (Scalars['String'] | null)
    /** True if this note is using as auto response message */
    is_autoresponse: Scalars['Boolean']
    /** A User which created a Note on behalf of a Conversation Owner */
    on_behalf_user: (User | null)
    /**
     * @deprecated Use conversation_memberships of conversation instead
     * receiver of note
     */
    recipient_id: (Scalars['ID'] | null)
    /** Scheduled sent at */
    scheduled_at: (Scalars['String'] | null)
    /** Get associated task with a chat message */
    task: (Task | null)
    /** The time at which this note was updated or marked as deleted by a user */
    updated_at: Scalars['String']
    /** creator of note */
    user_id: (Scalars['ID'] | null)
    /** conditional to see if user recipient viewd note. In community chats, you need to pass in a viewer_id */
    viewed: (Scalars['Boolean'] | null)
    __typename: 'Note'
}


/** Note sorting enum */
export type NoteOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC'


/** Scheduled chat notes */
export interface NoteScheduler {
    /** Scheduled messsage blast: get first four users */
    first_four_invitees: (User[] | null)
    /** The unique identifier of the scheduler */
    id: Scalars['ID']
    /** The number of invitees */
    invitees_count: (Scalars['Int'] | null)
    /** Get last conversation task */
    last_task: (Task | null)
    /** The note */
    note: (Note | null)
    /** The content of the note */
    note_content: (Scalars['String'] | null)
    /** Get all directly selected user ids */
    participant_ids: ((Scalars['ID'] | null)[] | null)
    /** Get all directly selected user groups */
    selected_user_groups: (UserGroup[] | null)
    /** Get all directly selected users */
    selected_users: (User[] | null)
    /** The date and time when the scheduler was last updated. */
    updated_at: Scalars['String']
    /** Owner user of a note scheduler */
    user: (User | null)
    __typename: 'NoteScheduler'
}


/** A notification */
export interface Notification {
    /** returns the associated entry if type is EntryNotification, otherwise, nil */
    associated_entry: (Entry | null)
    /** The id of the object associated with the notification */
    associated_object: (Scalars['String'] | null)
    /** The creation time of the notification */
    created_at: Scalars['String']
    /** creator name of this notification */
    creator_user_name: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The unique identifier of the notification */
    id: Scalars['ID']
    /** The link that the notification goes to */
    link: (Scalars['String'] | null)
    /** The full link that the notification goes to */
    link_string: (Scalars['String'] | null)
    /** The message body of the notification */
    message: (Scalars['String'] | null)
    /** recipient of this notification */
    other_party: (User | null)
    /** The recipient of the notification */
    other_party_id: (Scalars['String'] | null)
    /** This turns to true if the user clicks on the notification */
    read: (Scalars['String'] | null)
    /** This turns to true if the user loads the notification */
    seen: Scalars['Boolean']
    /** The type of notification */
    type: (Scalars['String'] | null)
    /** creator of this notification */
    user: (User | null)
    /** The creator of the notification */
    user_id: (Scalars['String'] | null)
    __typename: 'Notification'
}


/** A notification contact */
export interface NotificationContact {
    /** Has personal client portal access */
    client_portal_access: Scalars['Boolean']
    /** Client portal settings */
    client_portal_setting: (ClientPortalSetting | null)
    /** contact type */
    contact_type: (Scalars['String'] | null)
    /** should a notifications of user be copied to contact */
    copy_notifications: Scalars['Boolean']
    /** contact email */
    email: (Scalars['String'] | null)
    /** is emergency contact */
    emergency: Scalars['Boolean']
    /** first name of a contact */
    first_name: (Scalars['String'] | null)
    /** full legal name with preferred */
    full_legal_name_with_preferred: (Scalars['String'] | null)
    /** full name of a contact */
    full_name: (Scalars['String'] | null)
    /** The unique identifier of the contact */
    id: Scalars['ID']
    /** last name of a contact */
    last_name: (Scalars['String'] | null)
    /** Linked user to notification contact */
    linked_client: (User | null)
    /** ID of the linked user account */
    linked_client_id: (Scalars['String'] | null)
    /** contact phone number */
    phone_number: (Scalars['String'] | null)
    /** relationship between contact and user */
    relationship: (Scalars['String'] | null)
    /** Date notification contact was last updated */
    updated_at: Scalars['String']
    /** Owner of this notification contact */
    user: (User | null)
    /** user id */
    user_id: (Scalars['ID'] | null)
    __typename: 'NotificationContact'
}


/** Notification sorting enum */
export type NotificationOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC'


/** An object containing the users preferences on notification */
export interface NotificationSetting {
    /** The unique identifier of the setting */
    id: Scalars['ID']
    /** An option of receiving pdates and special offers [email/sms] */
    marketing_communcation_preference: Scalars['String']
    /** Send an email when a course module is completed */
    notification_on_module_completion: Scalars['Boolean']
    /** Receive updates and special offers */
    receive_updates_and_offers: Scalars['Boolean']
    /** Get an email whenever a client posts a comment */
    send_comment_emails: (Scalars['Boolean'] | null)
    /** Get a push notification when there is a new comment */
    send_comment_push: (Scalars['Boolean'] | null)
    /** Send an email when a client completes a program */
    send_course_complete_email: (Scalars['Boolean'] | null)
    /** Send an email 5 minutes before the appointment */
    send_email_before_appointment: (Scalars['Boolean'] | null)
    /** Send an email when a new appointment is booked */
    send_email_on_appointment_book: (Scalars['Boolean'] | null)
    /** Send an email when an appointment is cancelled */
    send_email_on_appointment_cancel: (Scalars['Boolean'] | null)
    /** Send an email to provider when client has been assigned */
    send_email_on_client_has_been_assigned_to_you: (Scalars['Boolean'] | null)
    /** Get an email when fax delivery fails */
    send_email_on_fax_delivery_failure: (Scalars['Boolean'] | null)
    /** Get an email when a fax is received */
    send_email_on_fax_received: (Scalars['Boolean'] | null)
    /** Get an email if client completed an intake flow */
    send_email_on_intake_flow_complete: (Scalars['Boolean'] | null)
    /** Get an email if client completed an intake flow item */
    send_email_on_intake_flow_item_complete: (Scalars['Boolean'] | null)
    /** Get an email if client started an intake flow */
    send_email_on_intake_flow_start: (Scalars['Boolean'] | null)
    /** Get an email when a new document is uploaded */
    send_email_on_new_document: (Scalars['Boolean'] | null)
    /** Get an email when a new folder is created */
    send_email_on_new_folder: (Scalars['Boolean'] | null)
    /** Send an email when a client purchases a package */
    send_email_on_package_purchase: (Scalars['Boolean'] | null)
    /** Get an email when a scheduled payment fails */
    send_email_on_scheduled_payment_failed: (Scalars['Boolean'] | null)
    /** Send an email to primary account holder when subscription payment is made */
    send_email_receipt_for_subscription_payment: (Scalars['Boolean'] | null)
    /** Get an email when provider adds an emoji to a journal entry */
    send_emoji_email: (Scalars['Boolean'] | null)
    /** Get a push notification when provider adds an emoji to a journal entry */
    send_emoji_push: (Scalars['Boolean'] | null)
    /** Get an email whenever a client posts an entry */
    send_entry_emails: (Scalars['Boolean'] | null)
    /** Send an email to client when reminder to complete goal checked */
    send_goal_reminder_email: (Scalars['Boolean'] | null)
    /** Send a push notification to client when reminder to complete goal checked */
    send_goal_reminder_push: (Scalars['Boolean'] | null)
    /** Get an email whenever you get a new message in a group chat */
    send_group_message_emails: (Scalars['Boolean'] | null)
    /** Get a push notification when there is a new message in a group chat */
    send_group_message_push: (Scalars['Boolean'] | null)
    /** Sends an email to the client provider when their insurance is about to expire */
    send_insurance_expiry_notifications: (Scalars['Boolean'] | null)
    /** Get an email whenever you get a new message */
    send_message_emails: (Scalars['Boolean'] | null)
    /** Get a push notification when there is a new message */
    send_message_push: (Scalars['Boolean'] | null)
    /** Get an email when a new client is added to the organization */
    send_new_clients_emails: (Scalars['Boolean'] | null)
    /** Send an email to the client provider when client has updated their insurance information */
    send_new_insurance_added_notifications: (Scalars['Boolean'] | null)
    /** Send an email to client when new program module is available */
    send_new_module_email: (Scalars['Boolean'] | null)
    /** Send a push notification to client when new program module is available */
    send_new_module_push: (Scalars['Boolean'] | null)
    /** Get a push notification 5 minutes before the appointment */
    send_push_before_appointment: (Scalars['Boolean'] | null)
    /** The date and time of the last update of the setting */
    updated_at: (Scalars['String'] | null)
    /** The owner of the notification setting */
    user: (User | null)
    __typename: 'NotificationSetting'
}


/** Offering (or Package) */
export interface Offering {
    /** Formatted frequency string abbreviated for offering list page */
    abbreviated_frequency_times_string: (Scalars['String'] | null)
    /** Whether or not this packages has been archived */
    archived: Scalars['Boolean']
    /** Ask for a CC (even on a free package) */
    ask_for_cc: Scalars['Boolean']
    /** frequency client will be billed for package */
    billing_frequency: (Scalars['String'] | null)
    /** count of billing items for a given offering */
    billing_items_count: (Scalars['Int'] | null)
    /** True if package is allowed to be gifted to other clients. Currently only available for non-recurring offerings */
    can_be_gifted: Scalars['Boolean']
    /** If false the payment for the offering should be collected manually at a later time */
    charge_immediately: Scalars['Boolean']
    /** course id associated with this package */
    course_id: (Scalars['ID'] | null)
    /** created at */
    created_at: Scalars['String']
    /** currency used to pay for this package */
    currency: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Description of the package, not allowing nil */
    description: (Scalars['String'] | null)
    /** ID of the embedded custom module form */
    embed_question_form_id: (Scalars['String'] | null)
    /** fb_pixel */
    fb_pixel: (Scalars['String'] | null)
    /** first time payment price of package */
    first_time_payment: (Scalars['String'] | null)
    /** Formatted frequency string */
    frequency_times_string: (Scalars['String'] | null)
    /** The unique identifier of the offering */
    id: Scalars['ID']
    /** A URL to purchase the package */
    immediate_purchase_url: (Scalars['String'] | null)
    /** Whether the package includes a course that has ended */
    includes_ended_fixed_course: (Scalars['Boolean'] | null)
    /** initial payment amount of package */
    initial_payment_amount: (Scalars['String'] | null)
    /** initial price of package including applicable taxes */
    initial_price_with_taxes: (Scalars['String'] | null)
    /** selected meal plan from living plate */
    living_plate_meal_plan_id: (Scalars['String'] | null)
    /** if this offering has a living plate meal plan associated, returns a link to living plate meal plan preview */
    living_plate_meal_plan_name: (Scalars['String'] | null)
    /** if this offering has a living plate meal plan associated, returns a link to living plate meal plan preview */
    living_plate_preview_url: (Scalars['String'] | null)
    /** Number of times the package could be purchased. Unlimited if set to nil */
    max_purchases: (Scalars['String'] | null)
    /** meal plan options in offering (currently only from living plate) */
    meal_plan_options: (MealPlan[] | null)
    /** minimum_quantity */
    minimum_quantity: (Scalars['String'] | null)
    /** name of package */
    name: (Scalars['String'] | null)
    /** courses related to offering */
    offering_courses: (OfferingCourse[] | null)
    /** user groups that are specific to this offering */
    offering_group_visibilities: (OfferingGroupVisibility[] | null)
    /** offering image */
    offering_image: (OfferingImage | null)
    /** id of offering image */
    offering_image_id: (Scalars['ID'] | null)
    /** URL of the offering image to use */
    offering_image_url: (Scalars['String'] | null)
    /** appointment types related to offering */
    offering_includes: (OfferingInclude[] | null)
    /** count of offering includes associated with offering */
    offering_includes_count: Scalars['Int']
    /** lab options included in offering */
    offering_lab_options: (OfferingLabOption[] | null)
    /** Taxes on offering products */
    offering_product_taxes: (Scalars['Float'] | null)
    /** Products included in the offering */
    offering_products: (OfferingProduct[] | null)
    /** on on_purchase_ifs_tag_id */
    on_purchase_ifs_tag_id: (Scalars['String'] | null)
    /** Shows whether user group should be changed when client which is already in the user group is buying the package */
    override_group_on_purchase: Scalars['Boolean']
    /** price of package */
    price: (Scalars['String'] | null)
    /** price per minute */
    price_per_minute: (Scalars['String'] | null)
    /** repeat times */
    repeat_times: (Scalars['String'] | null)
    /** When true, the package requires appointment booking during package purchase */
    require_booking_purchase: Scalars['Boolean']
    /** position of package when displayed in packages list */
    row_order: (Scalars['String'] | null)
    /** offering image id */
    selected_image_id: (Scalars['String'] | null)
    /** show free text to customers on offerings of zero price */
    show_free_text: Scalars['Boolean']
    /** show offering toggle */
    show_offering: Scalars['Boolean']
    /** show price toggle */
    show_price: Scalars['Boolean']
    /** start_fb_pixel */
    start_fb_pixel: (Scalars['String'] | null)
    /** total of billing_items.amount_paid for a given offering */
    total_revenue: (Scalars['Float'] | null)
    /** When false, the package is at its purchase cap, and cannot be bought by a client */
    under_purchase_cap: (Scalars['Boolean'] | null)
    /** updated at */
    updated_at: Scalars['String']
    /** The user who owns the package */
    user: (User | null)
    /** user group id associated with this package */
    user_group_id: (Scalars['ID'] | null)
    /** User group name associated with this offering */
    user_group_name: (Scalars['String'] | null)
    /** id of user */
    user_id: (Scalars['ID'] | null)
    /** count of user package selections for a given offering */
    user_package_selections_count: (Scalars['Int'] | null)
    /** user pays toggle */
    user_pays: Scalars['Boolean']
    /** video associated with offering */
    video_url: (Scalars['String'] | null)
    /** Whether the package is visible to all or to a specific group or completely hidden. */
    visibility_status: Scalars['String']
    __typename: 'Offering'
}


/** Offering Coupon */
export interface OfferingCoupon {
    /** The amount off due to this offering coupon */
    amount_off: (Scalars['String'] | null)
    /** The amount off due to this offering coupon */
    amount_off_string: (Scalars['String'] | null)
    /** The time this offering coupon is applied */
    applies_to_string: (Scalars['String'] | null)
    /** The code of this offering coupon */
    code: (Scalars['String'] | null)
    /** The time at which this offering coupon was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The time at which this offering coupon was deleted */
    deleted_at: (Scalars['String'] | null)
    /** The date the promo code expires at */
    expires_at: (Scalars['String'] | null)
    /** The flat amount off due to this offering coupon */
    flat_amount_off: (Scalars['String'] | null)
    /** The unique identifier of the coupon */
    id: Scalars['ID']
    /** The coupon is expired or valid, returns true if coupon is expired */
    is_expired: Scalars['Boolean']
    /** The coupon is expired or valid, returns true if the coupon is valid */
    is_valid: Scalars['Boolean']
    /** The amount of times the offering coupon has been used */
    number_of_times_used: (Scalars['String'] | null)
    /** The owner of this Offering Coupon */
    offering_coupon_owner: (User | null)
    /** Names of offerings this coupon is connected to */
    package_connection_names: (Scalars['String'][] | null)
    /** The promo type of this offering coupon */
    promo_type: (Scalars['String'] | null)
    /** The repeat times of this offering coupon */
    repeat_times: (Scalars['String'] | null)
    /** concatenated string of ammount off string and applies to string */
    to_one_line: (Scalars['String'] | null)
    /** The time at which this offering coupon was last updated at */
    updated_at: Scalars['String']
    /** The amount of times the offering coupon can be used */
    usage_limit: (Scalars['String'] | null)
    /** The user id who created this offering coupon */
    user_id: (Scalars['String'] | null)
    __typename: 'OfferingCoupon'
}


/** OfferingCoupon sorting enum */
export type OfferingCouponOrderKeys = 'CODE_ASC' | 'CODE_DESC' | 'TYPE_ASC' | 'TYPE_DESC' | 'APPLIES_TO_ASC' | 'APPLIES_TO_DESC' | 'AMOUNT_ASC' | 'AMOUNT_DESC' | 'EXPIRES_AT_ASC' | 'EXPIRES_AT_DESC' | 'TOTAL_USAGE_ASC' | 'TOTAL_USAGE_DESC'


/** Offering Course */
export interface OfferingCourse {
    /** course */
    course: (Course | null)
    /** id of related course */
    course_id: Scalars['ID']
    /** created at */
    created_at: Scalars['String']
    /** The unique identifier of the join */
    id: Scalars['ID']
    /** id of related offering */
    offering_id: (Scalars['ID'] | null)
    /** udpated at */
    updated_at: Scalars['String']
    __typename: 'OfferingCourse'
}


/** User groups that are specific to this offering will only be visible to clients in these user groups */
export interface OfferingGroupVisibility {
    /** The unique identifier of the visibility */
    id: Scalars['ID']
    /** name of the user group */
    name: (Scalars['String'] | null)
    /** id of related offering */
    offering_id: (Scalars['ID'] | null)
    /** id of related user group */
    user_group_id: (Scalars['ID'] | null)
    __typename: 'OfferingGroupVisibility'
}


/** Offering Image */
export interface OfferingImage {
    /** created at */
    created_at: Scalars['String']
    /** The unique identifier of the offering image */
    id: Scalars['ID']
    /** image content type */
    image_content_type: (Scalars['String'] | null)
    /** image file name */
    image_file_name: (Scalars['String'] | null)
    /** image file size */
    image_file_size: (Scalars['String'] | null)
    /** when image was updated */
    image_updated_at: (Scalars['String'] | null)
    /** url for image */
    image_url: (Scalars['String'] | null)
    /** name of image */
    name: (Scalars['String'] | null)
    /** updated at */
    updated_at: Scalars['String']
    __typename: 'OfferingImage'
}


/** Offering Include */
export interface OfferingInclude {
    /** appointment type */
    appointment_type: (AppointmentType | null)
    /** id of related appointment type */
    appointment_type_id: (Scalars['ID'] | null)
    /** created at */
    created_at: Scalars['String']
    /** expires in */
    expires_in: (Scalars['String'] | null)
    /** form id */
    form_id: (Scalars['String'] | null)
    /** The unique identifier of the offering include. */
    id: Scalars['ID']
    /** whether or not the offering_include (appointment type) should be recurring */
    is_repeating: Scalars['Boolean']
    /** id of related offering */
    offering_id: (Scalars['ID'] | null)
    /** quanity of appointments in package */
    quantity: (Scalars['String'] | null)
    /** whether or not the offering book */
    required_appointment_type: Scalars['Boolean']
    /** udpated at */
    updated_at: Scalars['String']
    __typename: 'OfferingInclude'
}


/** Offering Lab Option */
export interface OfferingLabOption {
    /** created at */
    created_at: Scalars['String']
    /** The unique identifier of the lab option */
    id: Scalars['ID']
    /** lab option */
    lab_option: (LabOption | null)
    /** id of related appointment type */
    lab_option_id: (Scalars['ID'] | null)
    /** id of related offering */
    offering_id: (Scalars['ID'] | null)
    /** udpated at */
    updated_at: Scalars['String']
    __typename: 'OfferingLabOption'
}


/** Offering sorting enum */
export type OfferingOrderKeys = 'SET_ORDER' | 'PRICE_ASC' | 'PRICE_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'BEST_SELLER'


/** Offering product type */
export interface OfferingProduct {
    /** If true the quantity of the main product will be reduced, otherwise changing offering_product.quantity won't affect on the main product */
    deduct_main_quantity: (Scalars['Boolean'] | null)
    /** The unique identifier of the offering product */
    id: Scalars['ID']
    /** ID of related offering */
    offering_id: Scalars['ID']
    /** The price of included product. If offering_product.price == nil, the price will be equal to product.price */
    price: (Scalars['String'] | null)
    /** A product included into the offering */
    product: (Product | null)
    /** The quantity of included products */
    quantity: (Scalars['String'] | null)
    /** Tax amount if product has tax rate */
    tax_amount: (Scalars['String'] | null)
    /** If true tax will be added to the price */
    taxable: Scalars['Boolean']
    __typename: 'OfferingProduct'
}


/** Offerings data type */
export interface OfferingsDataType {
    /** The frequency of the offering */
    freq: (Scalars['String'] | null)
    /** The month of the offering */
    month: (Scalars['String'] | null)
    __typename: 'OfferingsDataType'
}


/** Info on SFTP connection to OfficeAlly */
export interface OfficeallySftpAccount {
    /** The OfficeAlly SFTP URL */
    ftp_url: (Scalars['String'] | null)
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** True if the SFTP connection is turned by user */
    is_enabled: (Scalars['Boolean'] | null)
    /** True if the SFTP connection is working */
    is_valid: (Scalars['Boolean'] | null)
    /** The last time we imported from the SFTP */
    last_imported_from: (Scalars['String'] | null)
    /** The SFTP OfficeAlly Username */
    username: (Scalars['String'] | null)
    __typename: 'OfficeallySftpAccount'
}


/** An onboarding flow that is comprised of onboarding items */
export interface OnboardingFlow {
    /** The date this onboarding flow was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** If true, the flow has more froms after welcome */
    has_forms_after_welcome: (Scalars['Boolean'] | null)
    /** The unique identifier of the flow */
    id: Scalars['ID']
    /** Check if current user organization has more than 1 provider */
    is_multiple_providers: (Scalars['Boolean'] | null)
    /** The name of this onboarding flow */
    name: (Scalars['String'] | null)
    /** All onboarding items that make up the onboarding flow */
    onboarding_items: OnboardingItem[]
    /** The number of onboarding items in the flow */
    onboarding_items_count: (Scalars['Int'] | null)
    /** Owner of this onboarding flow */
    user: (User | null)
    /** The user groups this onboarding flow is associated with */
    user_groups: (UserGroup[] | null)
    /** The number of user groups this onboarding flow is associated with */
    user_groups_count: (Scalars['Int'] | null)
    /** The combined name list of the user groups this onboarding flow is associated with */
    user_groups_name_string: (Scalars['String'] | null)
    __typename: 'OnboardingFlow'
}


/** OnboardingFlow sorting enum */
export type OnboardingFlowOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'FORMS_COUNT_ASC' | 'FORMS_COUNT_DESC'


/** An onboarding item that has something for the client to complete */
export interface OnboardingItem {
    /** The URL to go to to edit the attached object */
    attached_object_edit_url: (Scalars['String'] | null)
    /** Custom text above the billing info screen */
    billing_disclaimer: (Scalars['String'] | null)
    /** Return the ID of the associated completed form_answer_group */
    completed_form_id: (Scalars['String'] | null)
    /** The completed onboarding item for the given user id (from args) */
    completed_onboarding_item: (CompletedOnboardingItem | null)
    /** The relevant date to show */
    date_to_show: (Scalars['String'] | null)
    /** The display name for the onboarding item (based off the attached object) */
    display_name: (Scalars['String'] | null)
    /** Onboarding item has matrix field */
    has_matrix_field: (Scalars['Boolean'] | null)
    /** The unique identifier of the onboarding item */
    id: Scalars['ID']
    /** Return the ID of the incomplete form */
    incomplete_form_id: (Scalars['String'] | null)
    /** Show if it the last item in related onboarding flow */
    is_last_item: (Scalars['Boolean'] | null)
    /** Whether the user can skip this onboarding item */
    is_skippable: Scalars['Boolean']
    /** The ID of the associated item */
    item_id: (Scalars['String'] | null)
    /** The type of item attached to this onboarding item */
    item_type: (Scalars['String'] | null)
    /** The user group this onboarding flow is assigned to */
    onboarding_flow: (OnboardingFlow | null)
    /** ID of the onboarding flow */
    onboarding_flow_id: (Scalars['ID'] | null)
    /** Custom text above the photo ID screen */
    photo_id_disclaimer: (Scalars['String'] | null)
    /** Custom text above the insurance policy screen */
    policy_disclaimer: (Scalars['String'] | null)
    /** Owner of this onboarding item */
    user: (User | null)
    /** The URL to view the onboarding item */
    view_url: (Scalars['String'] | null)
    /** Custom text for the welcome screen */
    welcome_text: (Scalars['String'] | null)
    __typename: 'OnboardingItem'
}


/** An organization, that is an umbrella group for multiple providers */
export interface Organization {
    /** The active potential care team members of the organization */
    active_care_team_members: (User[] | null)
    /** The active users of the organization used for starting new conversations */
    active_members_for_conversation: (User[] | null)
    /** Returns organization appointment locations */
    appointment_locations: (AppointmentLocation[] | null)
    /** Can have suborgs for this org */
    can_have_suborgs: (Scalars['Boolean'] | null)
    /** The creation date of the organization */
    created_at: Scalars['String']
    /**
     * @deprecated No longer supported
     * The filled out teaching kitchen form
     */
    filled_tk_form: (FormAnswerGroup | null)
    /** The unique identifier of the organization */
    id: Scalars['ID']
    /** The location of the organization */
    location: (Location | null)
    /** The name of the organization */
    name: (Scalars['String'] | null)
    /** The NPI of the organization */
    npi: (Scalars['String'] | null)
    /** The number of users in the organization */
    num_users: (Scalars['String'] | null)
    /** The ID of the onboarding flow for org providers */
    onboarding_flow_id: (Scalars['String'] | null)
    /** The active organization memberships of the organization */
    only_active_organization_memberships: (OrganizationMembership[] | null)
    /** The active providers of the organization */
    only_active_providers: (User[] | null)
    /** The number of active providers of the organization */
    only_active_providers_count: (Scalars['Int'] | null)
    /** The active support users of the organization */
    only_active_support: (User[] | null)
    /** The number of active support user of the organization */
    only_active_support_count: (Scalars['Int'] | null)
    /** Potential Organization Roles for this Organization */
    org_roles: (Scalars['String'][] | null)
    /** Returns organization cpt codes */
    organization_cpt_codes: (OrganizationCptCodeType[] | null)
    /** The first organization info of the organization */
    organization_info: (OrganizationInfo | null)
    /** The organization infos of the organization */
    organization_infos: (OrganizationInfo[] | null)
    /** The count of organization infos of the organization */
    organization_infos_count: (Scalars['Int'] | null)
    /** The organization memberships of the organization */
    organization_memberships: (OrganizationMembership[] | null)
    /** The total count of organization memberships on this organization */
    organization_memberships_count: (Scalars['Int'] | null)
    /** The other id */
    other_id: (Scalars['String'] | null)
    /** The other ID qualifier (what type of ID it is) */
    other_id_qual: (Scalars['String'] | null)
    /** The owner of the organization */
    owner: (User | null)
    /** The ID of the org owner */
    owner_id: (Scalars['ID'] | null)
    /** The owner of the org's subscription */
    owner_subscription: (SubscriptionInstance | null)
    /** Parent organization for this org */
    parent_organization: (Organization | null)
    /** ID of the parent organization */
    parent_organization_id: (Scalars['ID'] | null)
    /** Permission templates for this org */
    permission_templates: (PermissionTemplateType[] | null)
    /** The phone number of the organization */
    phone_number: (Scalars['String'] | null)
    /** The providers of the organization */
    providers: (User[] | null)
    /** The number of providers in the organization */
    providers_count: (Scalars['Int'] | null)
    /** The number of users in the organization connected their rupa health account */
    rupa_health_members: (User[] | null)
    /** Returns organization state licenses */
    state_licenses: (Scalars['String'][] | null)
    /** Suborganizations for this org */
    suborganizations: (Organization[] | null)
    /** Returns organization tags */
    tags: (Tag[] | null)
    /** Tax ID of organization */
    tax_id: (Scalars['String'] | null)
    /** The tax is of the organization */
    tax_id_type: (Scalars['String'] | null)
    /** User groups that are in the organization */
    user_groups: (UserGroup[] | null)
    /** The users of the organization */
    users: (User[] | null)
    /** Builder ID for the Zus token */
    zus_builder_id: (Scalars['String'] | null)
    __typename: 'Organization'
}


/** OrganizationCptCode object */
export interface OrganizationCptCodeType {
    /** The CPT code id */
    cpt_code_id: Scalars['ID']
    /** date created */
    created_at: Scalars['String']
    /** The unique identifier of the join */
    id: Scalars['ID']
    /** The organization id */
    organization_id: Scalars['ID']
    /** The price per unit */
    price_per_unit: (Scalars['String'] | null)
    /** date updated */
    updated_at: Scalars['String']
    __typename: 'OrganizationCptCodeType'
}


/** Specific information for an organization */
export interface OrganizationInfo {
    /** The creation date of the organization */
    created_at: Scalars['String']
    /** The External ID of the organization */
    external_id: (Scalars['String'] | null)
    /** The unique identifier of the organization info */
    id: Scalars['ID']
    /** The number type ID of the organization */
    id_number_type: (Scalars['String'] | null)
    /** The location of the organization */
    location: (Location | null)
    /** The name of the organization */
    name: (Scalars['String'] | null)
    /** The NPI of the organization */
    npi: (Scalars['String'] | null)
    /** The associated organization */
    organization: (Organization | null)
    /** The other id */
    other_id: (Scalars['String'] | null)
    /** The other ID qualifier (what type of ID it is) */
    other_id_qual: (Scalars['String'] | null)
    /** The phone number of the organization */
    phone_number: (Scalars['String'] | null)
    /** Set billing provider as primary */
    primary: (Scalars['Boolean'] | null)
    /** The tax id of the organization */
    tax_id: (Scalars['String'] | null)
    /** The tax id type of the organization */
    tax_id_type: (Scalars['String'] | null)
    __typename: 'OrganizationInfo'
}


/** An organization membership */
export interface OrganizationMembership {
    /** Allows group level actions (e.g. send group messages in chat, assigning group to course modules, request form completions from group) */
    allow_group_level_actions: Scalars['Boolean']
    /** If true, clients who this org member has been added as a care team member will be able to schedule appointments with them. */
    allow_self_scheduling_in_care_team: (Scalars['Boolean'] | null)
    /** If true, clients who this org member has been added as a care team member for will automatically see a Chat conversation with this org member. */
    auto_create_convo_for_care_team: (Scalars['Boolean'] | null)
    /** If true, the user can access calendar quick share */
    can_access_calendar_quick_share: Scalars['Boolean']
    /** If true, the user should be able to access other active organization members conversations */
    can_access_to_members_chat: (Scalars['Boolean'] | null)
    /** If true, the user can add new clients */
    can_add_clients: Scalars['Boolean']
    /** If true, the user can add new people to the organization */
    can_add_members: Scalars['Boolean']
    /** If true, the user should be able to add other active organization members to chat */
    can_add_members_to_chat: (Scalars['Boolean'] | null)
    /** If true, the user should be able to assign a task to any member of their organization */
    can_assign_tasks_to_all_org_members: (Scalars['Boolean'] | null)
    /** If true, the user can be added to the care team members list for a client */
    can_be_care_team_member: Scalars['Boolean']
    /** If true, the user can charge clients */
    can_charge_clients: Scalars['Boolean']
    /** If true, the user can delete charting notes */
    can_delete_charting_notes: Scalars['Boolean']
    /** If true, the user can delete faxes */
    can_delete_faxes: Scalars['Boolean']
    /** If true, the user can edit appontment types */
    can_edit_appointment_types: Scalars['Boolean']
    /** If true, the user can edit calendar */
    can_edit_calendar: (Scalars['Boolean'] | null)
    /** If true, the user can edit client credit */
    can_edit_credit: (Scalars['Boolean'] | null)
    /** If true, the user can edit documents */
    can_edit_docs: (Scalars['Boolean'] | null)
    /** If true, the user can edit eduacation content */
    can_edit_education: (Scalars['Boolean'] | null)
    /** If true, the user can edit forms */
    can_edit_forms: (Scalars['Boolean'] | null)
    /** If true, the user can manage the people and roles in the organization */
    can_edit_members: (Scalars['Boolean'] | null)
    /** If true, the user can edit client packages */
    can_edit_packages: (Scalars['Boolean'] | null)
    /** If true, the user can add ,edit and delete products */
    can_edit_products: (Scalars['Boolean'] | null)
    /** If true, the user can edit settings */
    can_edit_settings: (Scalars['Boolean'] | null)
    /** If true, the user can enroll and remove clients from programs */
    can_enroll_clients_to_programs: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use `can_lock_own_charting_notes` instead
     * deprecated, use can_lock_own_charting_notes instead
     */
    can_lock_form_answer_groups: (Scalars['Boolean'] | null)
    /** If true, the user can lock charting notes other providers created */
    can_lock_others_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can lock charting notes they created */
    can_lock_own_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user should be able to mark tasks that are assigned to other org members as completed */
    can_mark_assigned_tasks_to_other_org_members_as_completed: (Scalars['Boolean'] | null)
    /** If true, the user can merge clients */
    can_merge_clients: (Scalars['Boolean'] | null)
    /** If true, view labs page and view patient lab results */
    can_order_labs: (Scalars['Boolean'] | null)
    /** If true, the user can remove clients */
    can_remove_client: (Scalars['Boolean'] | null)
    /** If true, the user should be able to rename or delete tags */
    can_rename_and_delete_tags: (Scalars['Boolean'] | null)
    /** If true, the user can request to prescribe controlled substances. Requires E-Rx */
    can_request_to_prescribe_controlled_substances: (Scalars['Boolean'] | null)
    /** If true, the user can view the billing tab */
    can_see_billing: (Scalars['Boolean'] | null)
    /** If true, the user can see all calendars in the organization */
    can_see_calendar: (Scalars['Boolean'] | null)
    /** If true, the user can see all clients in the organization */
    can_see_clients: (Scalars['Boolean'] | null)
    /** If true, the user can see documents within the entire org */
    can_see_docs: (Scalars['Boolean'] | null)
    /** If true, the user can see incoming faxes */
    can_see_faxes: (Scalars['Boolean'] | null)
    /** If true user should be able to see fullscript tab in client profile and view fullscript box in homepage */
    can_see_fullscript_tab: (Scalars['Boolean'] | null)
    /** If true, the user should be able see a button that allows them to signup for dosespot in the overview section of the client profile */
    can_see_option_to_use_erx_dosespot: (Scalars['Boolean'] | null)
    /** If true, the user can see sent faxes */
    can_see_sent_faxes: (Scalars['Boolean'] | null)
    /** If true, the user can see transfers tab in billing page */
    can_see_transfers: (Scalars['Boolean'] | null)
    /** If true, the user can set a password for organization clients */
    can_set_client_password: (Scalars['Boolean'] | null)
    /** If true, the user can share documents and folders with organizations members */
    can_share_documents_and_folders_with_org_members: (Scalars['Boolean'] | null)
    /** If true, the user can sign charting notes other providers created */
    can_sign_others_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can sign charting notes they created */
    can_sign_own_charting_notes: (Scalars['Boolean'] | null)
    /** When true, user can submit to Candid */
    can_submit_cms_1500s_to_candid_health: (Scalars['Boolean'] | null)
    /** When true, user can submit to Change */
    can_submit_cms_1500s_to_change_health: (Scalars['Boolean'] | null)
    /** If true, the user can submit CMS 1500s to Office Ally */
    can_submit_cms_1500s_to_office_ally: (Scalars['Boolean'] | null)
    /** If true, it will return all organization tasks for current user */
    can_view_all_org_members_tasks: (Scalars['Boolean'] | null)
    /** If true, the user can view/edit cms1500s */
    can_view_cms1500s: (Scalars['Boolean'] | null)
    /** If true can use goal favorites that are shared from other members of the organization */
    can_view_goal_templates: (Scalars['Boolean'] | null)
    /** If true, the user can edit appontment types */
    can_view_labs: (Scalars['Boolean'] | null)
    /** If true, the user can view org dashboard */
    can_view_org_dashboard: (Scalars['Boolean'] | null)
    /** If true, the user can view organization-level reports */
    can_view_reports: (Scalars['Boolean'] | null)
    /** If true, the user can view/edit super bills */
    can_view_super_bills: (Scalars['Boolean'] | null)
    /** If true, the user can write addendums for other org members charting notes */
    can_write_org_addendums: (Scalars['Boolean'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** E-Rx Dosespot role */
    erx_dosespot_role: (Scalars['String'] | null)
    /** If true, the user will receive notif about failed notif */
    gets_failed_fax_notif: (Scalars['Boolean'] | null)
    /** If true, the user will receive a fax notif */
    gets_fax_notif: (Scalars['Boolean'] | null)
    /** If true the user will have their own branding  */
    has_own_branding: (Scalars['Boolean'] | null)
    /** When true, user sees the primary diagnosis column for diagnoses */
    has_primary_diagnosis_column: (Scalars['Boolean'] | null)
    /** The unique identifier of the of the membership */
    id: Scalars['ID']
    /** If true, the user has been noted as being an admin */
    is_admin: (Scalars['Boolean'] | null)
    /** When true, the user can view and manage developer features like webhooks. */
    is_developer: (Scalars['Boolean'] | null)
    /** Whether the user is a provider in the organization */
    is_provider: (Scalars['Boolean'] | null)
    /** If true, the user is notified when any client activity including intake forms, journal entries, programs, documents */
    notify_any_client_activity: (Scalars['Boolean'] | null)
    /** If true the user is notified when any appontment is booked within the org */
    notify_on_book: (Scalars['Boolean'] | null)
    /** If true the user is notified when any appontment is cancelled within the org */
    notify_on_cancel: (Scalars['Boolean'] | null)
    /** if true, the user should get an email notification whenever a client payment fails or there is a chargeback. */
    notify_on_payment_failure: (Scalars['Boolean'] | null)
    /** The organization role */
    org_role: (Scalars['String'] | null)
    /** Last applied permission template */
    permission_template: (PermissionTemplateType | null)
    /** Last applying date of permission template */
    permission_template_applied_at: (Scalars['String'] | null)
    /** If true, the user can request eligibility checks */
    request_eligibility_checks: (Scalars['Boolean'] | null)
    /** If true, the user will see all org billing, not just individual */
    sees_all_billing: (Scalars['Boolean'] | null)
    /** If true, the user will see all org clients, not just individual on clients list page */
    sees_all_clients: (Scalars['Boolean'] | null)
    /** Selected licensed in values */
    selected_licensed_in_filter: (Scalars['String'][] | null)
    /** Selected locations values */
    selected_locations_filter: (Scalars['String'][] | null)
    /** Selected statuses values */
    selected_statuses_filter: (Scalars['String'][] | null)
    /** Selected statuses values */
    selected_tags_filter: (Scalars['String'][] | null)
    /** If true, the user receive email notification when any client in the organization completes an intake flow */
    send_email_on_intake_flow_complete: (Scalars['Boolean'] | null)
    /** If true, the user receive email notification when any client in the organization starts an intake flow */
    send_email_on_intake_flow_start: (Scalars['Boolean'] | null)
    /** If true, the user will share appontment types with the entire org */
    share_appointment_types: (Scalars['Boolean'] | null)
    /** If true, the user shares custom metrics with entire org */
    share_custom_metrics: (Scalars['Boolean'] | null)
    /** If true user should uses the same API access token for Fullscript */
    share_fullscript: (Scalars['Boolean'] | null)
    /** If true has their goal favorites available to other members of the organization */
    share_goal_templates: (Scalars['Boolean'] | null)
    /** If true, the user shares packages with entire org */
    share_packages: (Scalars['Boolean'] | null)
    /** If true, all active organization members will see shared smart phrases */
    share_smart_phrases: (Scalars['Boolean'] | null)
    /** If true the user will share user groups with the entire org */
    share_user_groups: (Scalars['Boolean'] | null)
    /** Show availability in the calendar by default */
    show_availability_first: (Scalars['Boolean'] | null)
    /** If true, show org link on left hand side */
    show_org_tab: (Scalars['Boolean'] | null)
    /** If true the clients are able to start a new conversation with the member */
    start_conversation_with: (Scalars['Boolean'] | null)
    /** The title of the org member */
    title: (Scalars['String'] | null)
    /** The user attached to the organization membership */
    user: (User | null)
    __typename: 'OrganizationMembership'
}


/** OrganizationMembership sorting enum */
export type OrganizationMembershipOrderKeys = 'LAST_NAME_ASC' | 'LAST_NAME_DESC' | 'FIRST_NAME_ASC' | 'FIRST_NAME_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'TYPE_ASC' | 'TYPE_DESC' | 'POSITION_ASC'


/** Roles that a user can have in an organization */
export type OrganizationMembershipRole = 'STANDARD' | 'SUPPORT'


/** Alternative ID numbers for a provider */
export interface OtherIdNumber {
    /** The unique identifier of the other id number */
    id: Scalars['ID']
    /** The label to use for the other id */
    label: (Scalars['String'] | null)
    /** The associated organization */
    organization: (Organization | null)
    /** The ID of the associated organization */
    organization_id: (Scalars['String'] | null)
    /** The other id */
    other_id: (Scalars['String'] | null)
    /** The other ID qualifier (what type of ID it is) */
    other_id_qualifier: (Scalars['String'] | null)
    /**
     * @deprecated You never need to query the user of the other_id
     * The associated user
     */
    user: (User | null)
    /** The ID of the associated user */
    user_id: (Scalars['String'] | null)
    __typename: 'OtherIdNumber'
}


/** Autogenerated return type of PairAccounts. */
export interface PairAccountsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'PairAccountsPayload'
}


/** An permission templateType */
export interface PermissionTemplateType {
    /** Allows group level actions (e.g. send group messages in chat, assigning group to course modules, request form completions from group) */
    allow_group_level_actions: Scalars['Boolean']
    /** If true, clients who this org member has been added as a care team member will be able to schedule appointments with them. */
    allow_self_scheduling_in_care_team: (Scalars['Boolean'] | null)
    /** If true, clients who this org member has been added as a care team member for will automatically see a Chat conversation with this org member. */
    auto_create_convo_for_care_team: (Scalars['Boolean'] | null)
    /** If true, the user can access calendar quick share */
    can_access_calendar_quick_share: Scalars['Boolean']
    /** If true, the user should be able to access other active organization members conversations */
    can_access_to_members_chat: (Scalars['Boolean'] | null)
    /** If true, the user can add new clients */
    can_add_clients: Scalars['Boolean']
    /** If true, the user can add new people to the organization */
    can_add_members: Scalars['Boolean']
    /** If true, the user should be able to add other active organization members to chat */
    can_add_members_to_chat: (Scalars['Boolean'] | null)
    /** If true, the user should be able to assign a task to any member of their organization */
    can_assign_tasks_to_all_org_members: (Scalars['Boolean'] | null)
    /** If true, the user can be added to the care team members list for a client */
    can_be_care_team_member: Scalars['Boolean']
    /** If true, the current user can modify this permission template */
    can_be_edited: Scalars['Boolean']
    /** If true, the user can charge clients */
    can_charge_clients: Scalars['Boolean']
    /** If true, user сan delete charting notes */
    can_delete_charting_notes: Scalars['Boolean']
    /** If true, the user can delete faxes */
    can_delete_faxes: Scalars['Boolean']
    /** If true, the user can edit appontment types */
    can_edit_appointment_types: Scalars['Boolean']
    /** If true, the user can edit calendar */
    can_edit_calendar: (Scalars['Boolean'] | null)
    /** If true, the user can edit client credit */
    can_edit_credit: (Scalars['Boolean'] | null)
    /** If true, the user can edit documents */
    can_edit_docs: (Scalars['Boolean'] | null)
    /** If true, the user can edit eduacation content */
    can_edit_education: (Scalars['Boolean'] | null)
    /** If true, the user can edit forms */
    can_edit_forms: (Scalars['Boolean'] | null)
    /** If true, the user can manage the people and roles in the organization */
    can_edit_members: (Scalars['Boolean'] | null)
    /** If true, the user can edit client packages */
    can_edit_packages: (Scalars['Boolean'] | null)
    /** If true, the user can add ,edit and delete products */
    can_edit_products: (Scalars['Boolean'] | null)
    /** If true, the user can edit settings */
    can_edit_settings: (Scalars['Boolean'] | null)
    /** If true, the user can enroll and remove clients from programs */
    can_enroll_clients_to_programs: (Scalars['Boolean'] | null)
    /** If true, the user can lock charting notes other providers created */
    can_lock_others_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can lock charting notes they created */
    can_lock_own_charting_notes: (Scalars['Boolean'] | null)
    /** If true, can mark tasks complete that are assigned to other org members */
    can_mark_assigned_tasks_to_other_org_members_as_completed: (Scalars['Boolean'] | null)
    /** If true, the user can merge clients */
    can_merge_clients: (Scalars['Boolean'] | null)
    /** If true, view labs page and view patient lab results */
    can_order_labs: (Scalars['Boolean'] | null)
    /** If true, the user can remove clients */
    can_remove_client: (Scalars['Boolean'] | null)
    /** If true, the user should be able to rename or delete tags */
    can_rename_and_delete_tags: (Scalars['Boolean'] | null)
    /** If true, the user can view the billing tab */
    can_see_billing: (Scalars['Boolean'] | null)
    /** If true, the user can see all calendars in the organization */
    can_see_calendar: (Scalars['Boolean'] | null)
    /** If true, the user can see all clients in the organization */
    can_see_clients: (Scalars['Boolean'] | null)
    /** If true, the user can see documetns within the entire org */
    can_see_docs: (Scalars['Boolean'] | null)
    /** If true, the user can see incoming faxes */
    can_see_faxes: (Scalars['Boolean'] | null)
    /** If true user should be able to see fullscript tab in client profile and view fullscript box in homepage */
    can_see_fullscript_tab: (Scalars['Boolean'] | null)
    /** If true, the user can see sent faxes */
    can_see_sent_faxes: (Scalars['Boolean'] | null)
    /** If true, the user can see transfers tab in billing page */
    can_see_transfers: (Scalars['Boolean'] | null)
    /** If true, user can set client passwords */
    can_set_client_password: (Scalars['Boolean'] | null)
    /** If true, the user can share documents and folders with organizations members */
    can_share_documents_and_folders_with_org_members: (Scalars['Boolean'] | null)
    /** If true, the user can sign charting notes other providers created */
    can_sign_others_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can sign charting notes they created */
    can_sign_own_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can submit CMS 1500s to Office Ally */
    can_submit_cms_1500s_to_office_ally: (Scalars['Boolean'] | null)
    /** If true, it will return all organization tasks for current user */
    can_view_all_org_members_tasks: (Scalars['Boolean'] | null)
    /** If true, the user can view/edit cms1500s */
    can_view_cms1500s: (Scalars['Boolean'] | null)
    /** If true can use goal favorites that are shared from other members of the organization */
    can_view_goal_templates: (Scalars['Boolean'] | null)
    /** If true, the user can edit appontment types */
    can_view_labs: (Scalars['Boolean'] | null)
    /** If true, the user can view org dashboard */
    can_view_org_dashboard: (Scalars['Boolean'] | null)
    /** If true, the user can view organization-level reports */
    can_view_reports: (Scalars['Boolean'] | null)
    /** If true, the user can view/edit super bills */
    can_view_super_bills: (Scalars['Boolean'] | null)
    /** If true, the user can write addendums for other org members charting notes */
    can_write_org_addendums: (Scalars['Boolean'] | null)
    /** The date of creation */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** If true, the user will receive notif about failed notif */
    gets_failed_fax_notif: (Scalars['Boolean'] | null)
    /** If true, the user will receive a fax notif */
    gets_fax_notif: (Scalars['Boolean'] | null)
    /** If true the user will have their own branding  */
    has_own_branding: (Scalars['Boolean'] | null)
    /** The unique identifier of the template */
    id: Scalars['ID']
    /** If true, the user has been noted as being an admin */
    is_admin: (Scalars['Boolean'] | null)
    /** Whether the user is a developer */
    is_developer: (Scalars['Boolean'] | null)
    /** Whether the user is a provider in the organization */
    is_provider: (Scalars['Boolean'] | null)
    /** Name of template */
    name: (Scalars['String'] | null)
    /** If true, the user is notified when any client activity including intake forms, journal entries, programs, documents */
    notify_any_client_activity: (Scalars['Boolean'] | null)
    /** If true the user is notified when any appontment is booked within the org */
    notify_on_book: (Scalars['Boolean'] | null)
    /** If true the user is notified when any appontment is cancelled within the org */
    notify_on_cancel: (Scalars['Boolean'] | null)
    /** If true, user will notified about all failed payments */
    notify_on_payment_failure: (Scalars['Boolean'] | null)
    /** The organization role */
    org_role: (Scalars['String'] | null)
    /** If true, the user can request eligibility checks */
    request_eligibility_checks: (Scalars['Boolean'] | null)
    /** If true, the user will see all org billing, not just individual */
    sees_all_billing: (Scalars['Boolean'] | null)
    /** If true, the user will see all org clients, not just individual on clients list page */
    sees_all_clients: (Scalars['Boolean'] | null)
    /** If true, the user receive email notification when any client in the organization completes an intake flow */
    send_email_on_intake_flow_complete: (Scalars['Boolean'] | null)
    /** If true, the user receive email notification when any client in the organization starts an intake flow */
    send_email_on_intake_flow_start: (Scalars['Boolean'] | null)
    /** If true, the user will share appontment types with the entire org */
    share_appointment_types: (Scalars['Boolean'] | null)
    /** If true, the user shares custom metrics with entire org */
    share_custom_metrics: (Scalars['Boolean'] | null)
    /** If true user should uses the same API access token for Fullscript */
    share_fullscript: (Scalars['Boolean'] | null)
    /** If true has their goal favorites available to other members of the organization */
    share_goal_templates: (Scalars['Boolean'] | null)
    /** If true, the user shares packages with entire org */
    share_packages: (Scalars['Boolean'] | null)
    /** If true, all active organization members will see shared smart phrases */
    share_smart_phrases: (Scalars['Boolean'] | null)
    /** If true the user will share user groups with the entire org */
    share_user_groups: (Scalars['Boolean'] | null)
    /** Show availability in the calendar by default */
    show_availability_first: (Scalars['Boolean'] | null)
    /** If true, show org link on left hand side */
    show_org_tab: (Scalars['Boolean'] | null)
    /** If true the clients are able to start a new conversation with the member */
    start_conversation_with: (Scalars['Boolean'] | null)
    /** Date when record was last updated */
    updated_at: (Scalars['String'] | null)
    /** The user attached to the organization membership */
    user: (User | null)
    __typename: 'PermissionTemplateType'
}


/** A pharmacy generated from Dosespot */
export interface Pharmacy {
    /** The city of the address */
    city: (Scalars['String'] | null)
    /** The unique identifier of the pharmacy */
    id: Scalars['ID']
    /** latitude coordinate of the pharmacy */
    latitude: (Scalars['String'] | null)
    /** The first line of the address */
    line1: (Scalars['String'] | null)
    /** The second line of the address */
    line2: (Scalars['String'] | null)
    /** longitude coordinate of the pharmacy */
    longitude: (Scalars['String'] | null)
    /** The name of the pharmacy */
    name: (Scalars['String'] | null)
    /** The phone number of the pharmacy */
    phone_number: (Scalars['String'] | null)
    /** The state of the address (Uses the 2 letter abbreviation if in US) */
    state: (Scalars['String'] | null)
    /** The zip/postal code of the address */
    zip: (Scalars['String'] | null)
    __typename: 'Pharmacy'
}


/** Alternative ID numbers for a provider */
export interface PlaceOfService {
    /** The code for the place of service */
    code: (Scalars['String'] | null)
    /** A combined name and code string, correctly formatted */
    code_name: (Scalars['String'] | null)
    /** The unique identifier of the place of service */
    id: Scalars['ID']
    /** The name of the place of service */
    name: (Scalars['String'] | null)
    __typename: 'PlaceOfService'
}


/** A plan that can be used for a subscription */
export interface Plan {
    /** The features of the plan */
    features: ((Scalars['String'] | null)[] | null)
    /** The header of the plan */
    header: (Scalars['String'] | null)
    /** The unique identifier of the plan */
    id: Scalars['ID']
    /** The subheader of the plan */
    subheader: (Scalars['String'] | null)
    __typename: 'Plan'
}


/** A policy */
export interface Policy {
    /** Benefits associated with policy */
    benefits: (Benefit[] | null)
    /** Call reference information associated with this policy */
    call_reference: (CallReference | null)
    /** Returns a list of errors associated with the policy after doing a Change Health Insurance Eligibility Check */
    claim_eligibility_check_errors: (ClaimEligibilityCheckErrors[] | null)
    /** CPT codes authorized for this policy */
    cpt_codes_policies: (CptCodesPolicy[] | null)
    /** Holder's date of birth */
    dob_to_use: (Scalars['String'] | null)
    /** Date policy becomes inactive */
    effective_end: (Scalars['String'] | null)
    /** Date policy becomes active */
    effective_start: (Scalars['String'] | null)
    /** policy group num */
    group_num: (Scalars['String'] | null)
    /** policy holder address */
    holder_address: (Scalars['String'] | null)
    /** policy holder dob, required */
    holder_dob: (Scalars['String'] | null)
    /** holder first name */
    holder_first: (Scalars['String'] | null)
    /** holder gender */
    holder_gender: (Scalars['String'] | null)
    /** holder last name */
    holder_last: (Scalars['String'] | null)
    /** The address of the holder */
    holder_location: (Location | null)
    /** holder location id */
    holder_location_id: (Scalars['String'] | null)
    /** holder middle initial */
    holder_mi: (Scalars['String'] | null)
    /** policy holder name */
    holder_name: (Scalars['String'] | null)
    /** holder phone number */
    holder_phone: (Scalars['String'] | null)
    /** policy holder relationship, required */
    holder_relationship: (Scalars['String'] | null)
    /** ICD codes authorized for this policy */
    icd_codes_policies: (IcdCodesPolicy[] | null)
    /** The unique identifier of the policy */
    id: Scalars['ID']
    /** Insurance authorization (eligibility) associated with policy */
    insurance_authorization: (InsuranceAuthorizationType | null)
    /** True if insurance authorization is required */
    insurance_authorization_required: (Scalars['Boolean'] | null)
    /** Document Id of insurance card image(back) */
    insurance_card_back_id: (Scalars['String'] | null)
    /** Document Id of insurance card image(front) */
    insurance_card_front_id: (Scalars['String'] | null)
    /** The insurance plan */
    insurance_plan: (InsurancePlan | null)
    /** policy plan id, required */
    insurance_plan_id: (Scalars['String'] | null)
    /** The last automated eligibility check run for this policy. */
    last_eligibility_check: (ClaimEligibilityCheck | null)
    /** The name of the policy */
    name: (Scalars['String'] | null)
    /** Notes in client profile recorded by provider user */
    notes: (Scalars['String'] | null)
    /** policy num, required */
    num: (Scalars['String'] | null)
    /** The address of the insurance plan */
    payer_location: (Location | null)
    /** payer locatoin id */
    payer_location_id: (Scalars['String'] | null)
    /** policy phone number */
    policy_phone_number: (Scalars['String'] | null)
    /** Priority of policy for client (primary, secondary, or inactive) */
    priority_type: (Scalars['String'] | null)
    /** Referral added to this policy. Optional field that should not be nil if referral_required is true */
    referral: (Referral | null)
    /** True if referral is required for policy */
    referral_required: (Scalars['Boolean'] | null)
    /** Same as client adddress toggle */
    same_address_as_client: (Scalars['Boolean'] | null)
    /** Insurance plan type? */
    type_string: (Scalars['String'] | null)
    /** Date policy was last updated */
    updated_at: (Scalars['String'] | null)
    /** Owner of this policy */
    user: (User | null)
    /** user id, required */
    user_id: (Scalars['ID'] | null)
    __typename: 'Policy'
}


/** A potential appointment slot */
export interface PotentialAppointmentSlot {
    /** The ID of the appointment this slot is for */
    appointment_id: (Scalars['String'] | null)
    /** The type of appointment the slot is for. Returns nil if not a group appointment. Returning this for many slots can potentially slow down query times. */
    appointment_type: (AppointmentType | null)
    /** The hexcode color of the slot (Not used in Healthie's default self-scheduling widget) */
    color: (Scalars['String'] | null)
    /** The date of the slot */
    date: (Scalars['String'] | null)
    /** Whether this slot has waitlist enabled */
    has_waitlist_enabled: (Scalars['Boolean'] | null)
    /** Whether this slot is fully booked */
    is_fully_booked: (Scalars['Boolean'] | null)
    /** The length of the appointment type (in minutes) */
    length: (Scalars['Int'] | null)
    /** The ID of the user who owns the slot */
    user_id: (Scalars['String'] | null)
    __typename: 'PotentialAppointmentSlot'
}


/** Preferred Medical Code */
export interface PreferredMedicalCode {
    /** ICD/CPT code description */
    code_description: (Scalars['String'] | null)
    /** ICD/CPT code */
    code_indentifier: (Scalars['String'] | null)
    /** Connected Cpt Code Object */
    cpt_code: (CptCode | null)
    /** Formatted name: 'F19.20: psychotics unspecified' */
    display_name: (Scalars['String'] | null)
    /** Connected ICD Code Object */
    icd_code: (IcdCode | null)
    /** The unique identifier of the code */
    id: Scalars['ID']
    __typename: 'PreferredMedicalCode'
}


/** Prescription created in Dosespot */
export interface Prescription {
    /** Comment entered by provider */
    comment: (Scalars['String'] | null)
    /** Date when prescription became ineffective */
    date_inactive: (Scalars['String'] | null)
    /** Date prescription was written */
    date_written: (Scalars['String'] | null)
    /** Number of days supplied prescription should last */
    days_supply: (Scalars['Int'] | null)
    /** Direction provided to patient when taking prescription. Entered by provider */
    directions: (Scalars['String'] | null)
    /** The dosage (strength) of the prescription */
    dosage: (Scalars['String'] | null)
    /** The form of the prescription. Example: tablet, capsule, teaspoon */
    dose_form: (Scalars['String'] | null)
    /** The classification of the drug */
    drug_classification: (Scalars['String'] | null)
    /** Date when prescription became effective */
    effective_date: (Scalars['String'] | null)
    /** Encounter entered by provider */
    encounter: (Scalars['String'] | null)
    /** The unique identifier of the prescription */
    id: Scalars['ID']
    /** If the prescription is urgent */
    is_urgent: (Scalars['Boolean'] | null)
    /** Date prescription was last refilled */
    last_fill_date: (Scalars['String'] | null)
    /**
     * @deprecated Deprecated by vendor, use MedicationOptionType.monograph instead
     * Monograph path entered by provider
     */
    monograph_path: (Scalars['String'] | null)
    /** The prescription's national drug code */
    ndc: (Scalars['String'] | null)
    /** If true, pharmacy has been instructed not to dispense a substitute/generic version */
    no_substitutions: (Scalars['Boolean'] | null)
    /** Over the counter drug */
    otc: (Scalars['String'] | null)
    /** Pharmacy information assigned in dosespot (Not stored in db) */
    pharmacy: (Pharmacy | null)
    /** Notes for pharmacy entered by provider */
    pharmacy_notes: (Scalars['String'] | null)
    /** The name of the prescriber */
    prescriber_name: (Scalars['String'] | null)
    /** Name and dosage of the prescription. Example: ibuprofen 200 mg tablet */
    product_name: (Scalars['String'] | null)
    /** Quantity of medication per refill */
    quantity: (Scalars['String'] | null)
    /** Number of refills prescribed */
    refills: (Scalars['String'] | null)
    /** Form in which prescription is delivered */
    route: (Scalars['String'] | null)
    /** The prescription reference number */
    rx_reference_number: (Scalars['String'] | null)
    /** The prescription rxcui */
    rxcui: (Scalars['String'] | null)
    /** The schedule of medication. Examples: PRN, QD, BID, TID, QID, Q4H, Q6H, Q8H, Q12H, Q24H, Q48H, Q72H, Q96H, QAM, QPM, QHS, QOD, QWEEK, QMONTH, QYEAR */
    schedule: (Scalars['String'] | null)
    /** Status of prescription. Example: Entered, Printed, Sending, eRxSent, Deleted  */
    status: (Scalars['String'] | null)
    /** Unit of medication. Example: tablet, capsule, teaspoon */
    unit: (Scalars['String'] | null)
    __typename: 'Prescription'
}


/** Appointment type price and cpt_code_price */
export interface PriceAndCptPriceType {
    /** The cpt_code_price for this appointment type */
    cpt_price: (Scalars['String'] | null)
    /** The price for this appointment type */
    price: (Scalars['String'] | null)
    __typename: 'PriceAndCptPriceType'
}


/** Base class for types */
export interface Problem {
    /** Code of the problem */
    code: (Scalars['String'] | null)
    /** Self-descriptive */
    id: Scalars['ID']
    /** Name of the problem */
    name: (Scalars['String'] | null)
    /** When true, this object must be consolidated as part of a CCDA Ingest */
    requires_consolidation: (Scalars['Boolean'] | null)
    __typename: 'Problem'
}


/** Procedure object */
export interface Procedure {
    /** The code of the procedure */
    code: (Scalars['String'] | null)
    /** The code system name of the procedure */
    code_system_name: (Scalars['String'] | null)
    /** The CPT code id of the procedure */
    cpt_code_id: Scalars['ID']
    /** The display name of the procedure */
    display_name: (Scalars['String'] | null)
    /** The unique identifier of the procedure */
    id: Scalars['ID']
    /** The end date time of the procedure */
    procedure_end_datetime: (Scalars['String'] | null)
    /** The start date time of the procedure */
    procedure_start_datetime: (Scalars['String'] | null)
    /** The status of the procedure */
    status: (Scalars['String'] | null)
    /** The target site of the procedure */
    target_site: (Scalars['String'] | null)
    /** The user id of the procedure */
    user_id: (Scalars['ID'] | null)
    __typename: 'Procedure'
}


/** The product */
export interface Product {
    /** The date and time when the product was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The unique identifier of the product */
    id: Scalars['ID']
    /** The name of the product */
    name: Scalars['String']
    /** The price of the product */
    price: Scalars['String']
    /** The available amount of the product */
    remaining_quantity: Scalars['String']
    /** Tax description */
    tax_description: (Scalars['String'] | null)
    /** Tax rate */
    tax_rate: (Scalars['String'] | null)
    /** If product has tax rate */
    taxable: (Scalars['Boolean'] | null)
    /** Indicates if the product has unlimited amount */
    unlimited_quantity: Scalars['Boolean']
    /** Owner of the product */
    user: (User | null)
    __typename: 'Product'
}


/** Product sorting enum */
export type ProductOrderKeys = 'NAME_ASC' | 'NAME_DESC' | 'QUANTITY_ASC' | 'QUANTITY_DESC' | 'PRICE_ASC' | 'PRICE_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC'


/** Profession */
export interface Profession {
    /** Unique identifier of the profession */
    id: Scalars['ID']
    /** The name of the profession */
    profession: Scalars['String']
    /** The category of the profession */
    profession_category: Scalars['String']
    __typename: 'Profession'
}


/** A provider appointment location object */
export interface ProviderAppointmentLocation {
    /** The unique identifier of the appointment location */
    appointment_location_id: (Scalars['ID'] | null)
    /** The unique identifier of the location */
    id: Scalars['ID']
    /** The location (in plain text) */
    location: (Scalars['String'] | null)
    __typename: 'ProviderAppointmentLocation'
}


/** Provider appointment type connection */
export interface ProviderApptTypeConnection {
    /** The appointment type ID associated with this connection */
    appointment_type_id: (Scalars['ID'] | null)
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** Name of the provider associated with this appointment type connection */
    provider_name: (Scalars['String'] | null)
    /** User ID of the provider associated with this appointment type connection */
    user_id: (Scalars['ID'] | null)
    __typename: 'ProviderApptTypeConnection'
}


/** ProviderCptCode object */
export interface ProviderCptCodeType {
    /** The CPT code ID */
    cpt_code_id: Scalars['ID']
    /** The unique identifier of the type */
    id: Scalars['ID']
    /** The price per unit */
    price_per_unit: (Scalars['String'] | null)
    /** The provider ID */
    provider_id: Scalars['ID']
    __typename: 'ProviderCptCodeType'
}


/** The query root of this schema. See available queries. */
export interface Query {
    /** Fetch advance appointment prices */
    advanceAppointmentPrices: (AdvanceAppointmentPrice[] | null)
    /** Search results for allergies, allergens, and reactions */
    allergySuggestions: ((Scalars['String'] | null)[] | null)
    /** Fetch an announcement */
    announcement: (Announcement | null)
    /** Fetch an array of announcements for a provider */
    announcements: (Announcement[] | null)
    /** Number of announcements for a provider */
    announcementsCount: (Scalars['Int'] | null)
    /** Fetch paginated API Keys collection */
    apiKeys: (ApiKey[] | null)
    /** Number of API Keys */
    apiKeysCount: (Scalars['Int'] | null)
    /** An applied tag to a user */
    appliedTag: (AppliedTag | null)
    /** Applied tags to a users */
    appliedTags: (AppliedTag[] | null)
    /** fetch an appointment by id, group appointments are (considered public) */
    appointment: (Appointment | null)
    /** Return potential booking issues for an appointment, date, time, repeats, attendees, and provider. */
    appointmentBookingWarnings: (AppointmentBookingWarning[] | null)
    /** returns metadata about appointments for provider dashboard */
    appointmentFrequencyData: (AppointmentDataType[] | null)
    /** fetch an appointment by id, group appointments are (considered public) */
    appointmentInclusion: (AppointmentInclusionType | null)
    /** fetch an appointment location by id (considered public) */
    appointmentLocation: (AppointmentLocation | null)
    /** get appointment locations that the current user can use. (considered public) */
    appointmentLocations: (AppointmentLocation[] | null)
    /** Returns a json hash of the number of appointments in each day of the month. The month is the month that the passed day is in. */
    appointmentNumberPerDayOfMonth: (Scalars['String'] | null)
    /** fetch a Appointment Setting by id (considered public) */
    appointmentSetting: (AppointmentSetting | null)
    /** fetch an appointment type by id (considered public) */
    appointmentType: (AppointmentType | null)
    /** Fetch credit history for the specific appointment type */
    appointmentTypeCreditChanges: (AppointmentCreditChange[] | null)
    /** Fetch paginated Appointment Type collection (considered public) */
    appointmentTypes: (AppointmentType[] | null)
    /** Number of appointment types (considered public) */
    appointmentTypesCount: (Scalars['Int'] | null)
    /** Fetch paginated appointment collection */
    appointments: (Appointment[] | null)
    /** Number of Appointments */
    appointmentsCount: (Scalars['Int'] | null)
    /** Data summary for appointment reports */
    appointmentsSummary: (AppointmentSummaryData | null)
    /** fetch auto task generators belonging to a specific user */
    autoTaskGenerators: (AutoTaskGenerator[] | null)
    /** fetch the automated insurance billing setting */
    automatedInsuranceBillingSetting: (AutomatedInsuranceBillingSetting | null)
    /** Fetch availabilities for range */
    availabilities: (Availability[] | null)
    /** number of availabilities */
    availabilitiesCount: (Scalars['Int'] | null)
    /** Fetch availability */
    availability: (Availability | null)
    /** (Limited availability, subject to breaking changes). JSONified Hash with summary of availability. */
    availabilitySummaryJson: (Scalars['String'] | null)
    /** Fetch available item types (for use in onboarding items) */
    availableItemTypes: (Scalars['String'] | null)
    /** Get open appointment times for a date range. Returns array of dates sorted in ascending order (considered public) */
    availableSlotsForRange: (PotentialAppointmentSlot[] | null)
    /** Get the Cms1500 Policies object for a given claim and client */
    baseCms1500ForUser: (Cms1500 | null)
    /** Get basic info about User from signup token */
    basicUserInfoFromToken: (User | null)
    /**
     * @deprecated All ICD Codes that are allowed to be used in healthecare claims
     * DEPRECATED: All ICD Codes that are allowed to be used in healthecare claims
     */
    billableIcdCodes: (IcdCode[] | null)
    /** fetch a billing item by id */
    billingItem: (BillingItem | null)
    /** Fetch paginated billing items collection */
    billingItems: (BillingItem[] | null)
    /** Number of billing items */
    billingItemsCount: (Scalars['Int'] | null)
    /** fetch a Brand by id (considered public) */
    brand: (Brand | null)
    /** fetch a Brand by custom sign in path (considered public) */
    brandFromCustomSignInPath: (Brand | null)
    /** get info used on authentication pages for either a dietitian or partner */
    brandInfo: (BrandInfo | null)
    /** Fetch a calendar view settings for current user */
    calendarViewSetting: (CalendarViewSetting | null)
    /** Fetch an array of campaigns for a provider */
    campaigns: (Campaign[] | null)
    /** Number of campaigns for a provider */
    campaignsCount: (Scalars['Int'] | null)
    /** Check if the user has access to the package buy limit feature */
    canCapOfferingPurchases: (Scalars['Boolean'] | null)
    /** fetch the current users candidhealth connection */
    candidHealthConnection: (CandidHealthConnection | null)
    /** Fetch paginated stripe customer accounts with associated errors or soon to expire credit cards */
    cardIssues: (StripeCustomerDetail[] | null)
    /** Fetch paginated stripe customer accounts with associated errors or soon to expire credit cards */
    cardIssuesCount: (Scalars['Int'] | null)
    /** fetch a single care plan */
    carePlan: (CarePlan | null)
    /** Fetch paginated care plan collection */
    carePlans: (CarePlan[] | null)
    /** Number of care plans */
    carePlansCount: (Scalars['Int'] | null)
    /** Number of care plans templates */
    carePlansTemplatesCount: (Scalars['Int'] | null)
    /** Fetch list of patient-initiated CDA activity events */
    cdaActivityEvents: (CdaActivityEvent[] | null)
    /** fetch the current users Change Health connection */
    changeClaimSubmitter: (ChangeClaimSubmitter | null)
    /** fetch a chargeback by the Healthie ID or the Stripe Dispute ID.  */
    chargeBack: (ChargeBack | null)
    /** fetch all charge backs for a user or organization */
    chargeBacks: (ChargeBack[] | null)
    /** fetch count of all charge backs */
    chargeBacksCount: (Scalars['Int'] | null)
    /** All items to include in the charting list */
    chartingItems: (ChartingItemType[] | null)
    /** All items to include in the charting list */
    chartingItemsCount: (Scalars['Int'] | null)
    /** Fetch a charting note addendum by id */
    chartingNoteAddendum: (ChartingNoteAddendumType | null)
    /** fetch a Chat Setting */
    chatSetting: (ChatSetting | null)
    /** get current video chats for a user. */
    closeToCurrentVideoChats: (Appointment[] | null)
    /** Fetch a CMS1500 by ID */
    cms1500: (Cms1500 | null)
    /** Fetch paginated Cms1500s collection */
    cms1500s: (Cms1500[] | null)
    /** Number of Cms1500s */
    cms1500sCount: (Scalars['Int'] | null)
    /** Color Code Options for a given category */
    colorCodeOptions: (ColorCodeOption[] | null)
    /** Fetch comment */
    comment: (Comment | null)
    /** Fetch comments collection */
    comments: (Comment[] | null)
    /** number of comments */
    commentsCount: (Scalars['Int'] | null)
    /** fetch a completedCourseItem by course_item_id and user_id */
    completedCourseItem: (CompletedCourseItem | null)
    /** Get the completed onboarding item by ID */
    completedOnboardingItem: (CompletedOnboardingItem | null)
    /** All Contact Types For Current User */
    contactTypes: (Scalars['String'][] | null)
    /** fetch a conversation by id */
    conversation: (Conversation | null)
    /** fetch a conversation membership by id */
    conversationMembership: (ConversationMembership | null)
    /** fetch a conversationmembership by id and invitees */
    conversationMembershipInvitees: (ConversationMembership[] | null)
    /** Fetch paginated conversationmemberships collection */
    conversationMemberships: (ConversationMembership[] | null)
    /** Number of conversationmembership */
    conversationMembershipsCount: (Scalars['Int'] | null)
    /** Fetch current user's conversations. It is normally better to use the conversationMemberships query. */
    conversations: (Conversation[] | null)
    /** Number of conversation */
    conversationsCount: (Scalars['Int'] | null)
    /** fetch a course by id (considered public) */
    course: (Course | null)
    /** fetch clients belonging to a course by course_id */
    courseClients: (CourseMembership[] | null)
    /** total number of clients for a specific course */
    courseClientsCount: (Scalars['Int'] | null)
    /** Get course completion info for users and user_groups */
    courseCompletetionInfo: (CourseCompletionInfoType | null)
    /** Course group memberships for the course */
    courseGroupClients: (User[] | null)
    /** Total clients in course group memberships */
    courseGroupClientsCount: (Scalars['Int'] | null)
    /** fetch a courseitem by id (considered public) */
    courseItem: (CourseItem | null)
    /** get all custom custom emails for a current user */
    courseItemCustomEmails: (CustomEmail[] | null)
    /** get all documents for current user, can optionally include the attached org document by providing course_id and course_item_id. */
    courseItemDocuments: (Document[] | null)
    /** get all custom module forms for a current user */
    courseItemForms: (CustomModuleForm[] | null)
    /** Course items info for the course membership */
    courseItems: (CourseItem[] | null)
    /** fetch a courseMembership by id */
    courseMembership: (CourseMembership | null)
    /** Fetch paginated course membership collection */
    courseMemberships: (CourseMembership[] | null)
    /** Number of course memberships */
    courseMembershipsCount: (Scalars['Int'] | null)
    /** Fetch paginated course collection */
    courses: (Course[] | null)
    /** Number of course */
    coursesCount: (Scalars['Int'] | null)
    /** All CPT Codes */
    cptCodes: (CptCode[] | null)
    /** CPT Codes count */
    cptCodesCount: (Scalars['Int'] | null)
    /** fetch the current user. */
    currentUser: (User | null)
    /** fetch the current users notifications count. */
    currentUserNotificationsCount: (UserNotificationsCount | null)
    /** get current video chats for a user. */
    currentVideoChats: (Appointment[] | null)
    /** Custom Email object */
    customEmail: (CustomEmail | null)
    /** A HTML string containing mailer template for certain email type */
    customEmailPreview: (Scalars['String'] | null)
    /** Fetch paginated custom emails collection */
    customEmails: (CustomEmail[] | null)
    /** Number of custom emails */
    customEmailsCount: (Scalars['Int'] | null)
    /** fetch a custom module form by ID (templates are considered public) */
    customModuleForm: (CustomModuleForm | null)
    /** All form templates for the current user */
    customModuleForms: (CustomModuleForm[] | null)
    /** Fetch paginated count for provider custom module forms */
    customModuleFormsCount: (Scalars['Int'] | null)
    /** get open appointment times for a range (considered public) */
    daysAvailableForRange: ((Scalars['String'] | null)[] | null)
    /** fetch a document by id */
    document: (Document | null)
    /** Get Document Viewings for a specific document. A 'View' is when a document is downloaded or opened in a new tab */
    documentViewings: (DocumentViewing[] | null)
    /** Number of instances for a document viewings for a specific document */
    documentViewingsCount: (Scalars['Int'] | null)
    /** Fetch paginated documents collection */
    documents: (Document[] | null)
    /** Number of documents */
    documentsCount: (Scalars['Int'] | null)
    /** Fetch User Info on DoseSpot Object */
    dosespotUserInfo: (DoseSpot | null)
    /** Fetch the iframe link to prescribe for a given patient (patient must have valid phone_number, dob, location.line1, location.city, location.state, and location.zip) */
    dosespot_ui_link: (Scalars['String'] | null)
    /** draft by conversation_membership id */
    draft: (Draft | null)
    /** Fetch an allergen by ID */
    drugAllergen: (DrugAllergenType | null)
    /** Search for allergens by name */
    drugAllergens: (DrugAllergenType[] | null)
    /** Fetch a link from Fullscript to create a treatment plan for a given user */
    dynamicLink: (Scalars['String'] | null)
    /** fetch embed steps based off of params */
    embedWidgetSteps: (EmbedWidgetStepType[] | null)
    /** Fetch paginated entries collection */
    entries: (Entry[] | null)
    /** Number of entries */
    entriesCount: (Scalars['Int'] | null)
    /** fetch an entry by id */
    entry: (Entry | null)
    /** fetch a featureToggle by id */
    featureToggle: (FeatureToggle | null)
    /** fetch a featureToggle by id */
    featureToggleForEditing: (FeatureToggle | null)
    /** fetch a folder by id */
    folder: (Folder | null)
    /** Fetch paginated folders collection */
    folders: (Folder[] | null)
    /** Number of folders */
    foldersCount: (Scalars['Int'] | null)
    /** Fetch food items */
    foodSearch: (Food[] | null)
    /** Get size of food items that matches the keyword */
    foodSearchCount: (Scalars['Int'] | null)
    /** Fetch a form answer group by id */
    formAnswerGroup: (FormAnswerGroup | null)
    /** All filled forms for a given set of arguments */
    formAnswerGroups: (FormAnswerGroup[] | null)
    /** The number of filled forms for a given set of a arguments */
    formAnswerGroupsCount: (Scalars['Int'] | null)
    /** Form histories owned by a patient and related to a sourceable form (RequsetedFormCompletion / OnboardingItem) */
    formHistories: FormHistory[]
    /** Total count of form histories owned by a patient and related to a sourceable form (RequsetedFormCompletion / OnboardingItem) */
    formHistoriesCount: Scalars['Int']
    /** Fetch available forms to request */
    formTypesToRequest: (FormTypesToRequest[] | null)
    /** Fullscript practitioners that share the same clinic id as organization owner */
    fullscriptPractitionerTypes: (FullscriptPractitionerTypeType[] | null)
    /** Fullscript practitioners that share the same clinic id as organization owner */
    fullscriptPractitioners: (FullscriptPractitionerType[] | null)
    /** fetch a goal by id */
    goal: (Goal | null)
    /** All completed goals for a given set of users */
    goalHistories: (GoalHistory[] | null)
    /** All completed goals for a given set of users */
    goalHistoriesCount: (Scalars['Int'] | null)
    /** Fetch goal history */
    goalHistory: (GoalHistory | null)
    /** A goal's instances */
    goalInstances: (GoalInstance[] | null)
    /** Number of instances for a goal */
    goalInstancesCount: (Scalars['Int'] | null)
    /** Goal templates for given user */
    goalTemplates: (GoalTemplate[] | null)
    /** Number of Goal templates for given user */
    goalTemplatesCount: (Scalars['Int'] | null)
    /** All goals, either for a given user or for all of the providers clients */
    goals: (Goal[] | null)
    /** Number of goal */
    goalsCount: (Scalars['Int'] | null)
    /** All goals data */
    goalsData: (GoalDataType | null)
    /**
     * @deprecated Use goalsOverallCompletionRateInfo instead
     * Overall completion percentage of goals
     */
    goalsOverallCompletionRate: (Scalars['Int'] | null)
    /** Overall completion percentage of goals */
    goalsOverallCompletionRateInfo: (GoalOverallCompletionRateInfo | null)
    /** Overall completion percentage of goals */
    goalsStreakCount: (Scalars['Int'] | null)
    /** When true, the user can set up question conditions in the form builder */
    hasConditionalQuestionEditing: (Scalars['Boolean'] | null)
    /** When true, the user can add sublabels to questions in the form builder */
    hasSubLabels: (Scalars['Boolean'] | null)
    /** Fetch a single health assessment */
    healthAssessment: (HealthAssessment | null)
    /** Fetch Health Assessments */
    healthAssessments: (HealthAssessment[] | null)
    /** Fetch ICD Code by ID */
    icdCode: (IcdCode | null)
    /** All ICD Codes */
    icdCodes: (IcdCode[] | null)
    /** Count of all ICD Codes */
    icdCodesCount: (Scalars['Int'] | null)
    /** fetch import data request by user_id */
    importDataRequest: (ImportDataRequest | null)
    /** A new CMS1500 form with some objects already prefilled */
    initialCms1500: (Cms1500 | null)
    /** Initial form answers for a given user and template */
    initialFormAnswers: (FormAnswer[] | null)
    /** appointment types related to offering */
    initializedOfferingIncludes: (OfferingInclude[] | null)
    /** Insurance Authorization belonging to a client */
    insuranceAuthorization: (InsuranceAuthorizationType | null)
    /** Get all potential insurance plans */
    insurancePlans: (InsurancePlan[] | null)
    /** Get all potential insurance plans */
    insurancePlansCount: (Scalars['Int'] | null)
    /** Fetch intake flow */
    intakeFlow: (IntakeFlowType | null)
    /** Fetch list of  available integrations */
    integrationsList: (IntegrationCategoryType[] | null)
    /** Initial date of service for a new form answer group */
    intitialServiceDate: (Scalars['String'] | null)
    /** get the base price for the invoice based off the associated item */
    invoiceBasePrice: (Scalars['String'] | null)
    invoiceTemplates: (RequestedPaymentTemplate[] | null)
    /** Get options for lab filters */
    labFiltersData: (LabFiltersDataType | null)
    /** Fetch all lab options (considered public) */
    labOptions: (LabOption[] | null)
    /** Fetch onboarding flows collection */
    labOrder: (LabOrder | null)
    /** Fetch lab orders collection */
    labOrders: (LabOrder[] | null)
    /** Number of lab orders related to the current user */
    labOrdersCount: (Scalars['Int'] | null)
    /** Fetch a laboratory result by ID */
    labResult: (LabResult | null)
    /** Fetch most recent conversationMembership */
    lastCM: (ConversationMembership | null)
    /** The 6 most recently active clients */
    lastClientActivities: (User[] | null)
    /** has loadMoreNotes been called */
    loadMoreNotesCalled: (Scalars['Boolean'] | null)
    /** fetch a location by id */
    location: (Location | null)
    /** Get location resources */
    locationResources: (LocationResourceType[] | null)
    /** Get locations for a given user (or current user) */
    locations: (Location[] | null)
    /** A count of available locations for the current user */
    locationsCount: (Scalars['Int'] | null)
    /** Fetch user meals */
    mealSearch: (Meal[] | null)
    /** Get size of user meals that matches the keyword */
    mealSearchCount: (Scalars['Int'] | null)
    /** Meal plan options from user Living Plate account. Nil if no Living Plate account associated */
    meal_plan_options: (MealPlan[] | null)
    /** Fetch a medication by ID */
    medication: (MedicationType | null)
    medication_option: (MedicationOptionType | null)
    /** Fetch an array of medications options. Considered Public */
    medication_options: (MedicationOptionType[] | null)
    /** Fetch an array of medications for a given patient */
    medications: (MedicationType[] | null)
    /** Fetch count of medications for a given patient */
    medications_count: (Scalars['Int'] | null)
    /** Fetch data for the metric graphs for a given user */
    metricGraphData: (MetricGraphDataType | null)
    /** Fetch data for the metric graphs for a given user */
    metricGraphsData: MetricGraphDataType[]
    minimumOfferingPrice: (Scalars['String'] | null)
    /** returns metadata about montly payments */
    monthlyBillingItemsData: (MonthlyBillingItemsDataType[] | null)
    /** Fetch data for multi line metric graphs for a given user */
    multiLineMetricGraphData: (MultiLineMetricGraphDataType | null)
    /** String containing info for the user about the client upgrade price */
    newClientPriceString: (Scalars['String'] | null)
    /** String containing info for the user about the org upgrade price */
    newOrganizationPriceString: (Scalars['String'] | null)
    /** String containing info for the user about the org upgrade price when adding a new support user */
    newOrganizationSupportPriceString: ((Scalars['String'] | null)[] | null)
    /** Fetch closest appointment */
    nextAppointment: (Appointment | null)
    /** get open appointment times for a range (considered public) */
    nextAvailableSlot: (Scalars['String'] | null)
    /** fetch a courseitem by id (considered public) */
    nextCourseItem: (CourseItem | null)
    /** fetch a note by id */
    note: (Note | null)
    /** get the viewed status of a note */
    noteViewedStatus: (Scalars['Boolean'] | null)
    /** Fetch note scheduler by id */
    note_scheduler: (NoteScheduler | null)
    /** Fetch paginated note collection for given conversation */
    notes: (Note[] | null)
    /** Number of notes */
    notesCount: (Scalars['Int'] | null)
    /** get count of notifications for a given user (or for the current user) */
    notificationCount: (Scalars['Int'] | null)
    /** fetch a Notification Setting by id */
    notificationSetting: (NotificationSetting | null)
    /** get notifications for a given user (or for the current user) */
    notifications: (Notification[] | null)
    /** fetch an offering by id (considered public) */
    offering: (Offering | null)
    /** Fetch paginated list of users associated with an offering */
    offeringBillingItems: (BillingItem[] | null)
    /** Number of users associated with an offering */
    offeringBillingItemsCount: (Scalars['Int'] | null)
    /** Fetch paginated coupon offerings collection */
    offeringCoupons: (OfferingCoupon[] | null)
    /** Number of offering coupons */
    offeringCouponsCount: (Scalars['Int'] | null)
    /** get all user groups relating to offerings */
    offeringGroupVisibilities: (OfferingGroupVisibility[] | null)
    /** All OfferingImage that have no user_id */
    offeringImages: (OfferingImage[] | null)
    /** Fetch paginated offerings collection (considered public) */
    offerings: (Offering[] | null)
    /** Number of offerings (considered public) */
    offeringsCount: (Scalars['Int'] | null)
    /** returns metadata about offerings purchased */
    offeringsData: (OfferingsDataType[] | null)
    /** fetch the current users officeally sftp connection */
    officeallySftpAccount: (OfficeallySftpAccount | null)
    /** Fetch an onboarding flow by id or uuid */
    onboardingFlow: (OnboardingFlow | null)
    /** Fetch onboarding flows collection */
    onboardingFlows: (OnboardingFlow[] | null)
    /** Number of onboarding flows */
    onboardingFlowsCount: (Scalars['Int'] | null)
    /** fetch an onboarding item by id (considered public) */
    onboardingItem: (OnboardingItem | null)
    /** Returns all cpt codes associated with org providers */
    orgProvidersCptCodes: (ProviderCptCodeType[] | null)
    /** fetch an organization by id, by provider id, or by the current_user, demographic org info is (considered public) */
    organization: (Organization | null)
    /** Fetch organization info by id */
    organizationInfo: (OrganizationInfo | null)
    /** fetch members of organization */
    organizationMembers: (User[] | null)
    /** org members count */
    organizationMembersCount: (Scalars['Int'] | null)
    /** Get the organization membership info of the current user, basic org member info is (considered public) */
    organizationMembership: (OrganizationMembership | null)
    /** Get the organization memberships */
    organizationMemberships: (OrganizationMembership[] | null)
    /** fetch an Other Id Number by id */
    otherIdNumber: (OtherIdNumber | null)
    /** A collection of Other ID's and its Qualifiers for given user */
    otherIdNumbers: (OtherIdNumber[] | null)
    /** returns true if the there are more transfers to load */
    paginate_transfers: (Scalars['Boolean'] | null)
    /** Fetch permission template */
    permissionTemplate: (PermissionTemplateType | null)
    /** Get Permission Templates */
    permissionTemplates: (PermissionTemplateType[] | null)
    /** Number of permission templates */
    permissionTemplatesCount: (Scalars['Int'] | null)
    /**
     * @deprecated Use `pharmacy` instead
     * Fetch a pharmacy given dosespot pharmacy id
     */
    pharamcy: (Pharmacy | null)
    /** Fetch an array of pharmacies given search parameters */
    pharmacies: (Pharmacy[] | null)
    /** Fetch a pharmacy given dosespot pharmacy id */
    pharmacy: (Pharmacy | null)
    /** fetch all place of services */
    placeOfServices: (PlaceOfService[] | null)
    /** fetch a Plan by id (considered public) */
    plan: (Plan | null)
    /** fetch a policy by id */
    policy: (Policy | null)
    /** Fetch collection of preferred CPT/ICD codes */
    preferred_medical_codes: (PreferredMedicalCode[] | null)
    /** Fetch a prescriptions for a given patient and prescription id pulled from Dosespot */
    prescription: (Prescription | null)
    /** Fetch an array of prescriptions for a given patient pulled from Dosespot */
    prescriptions: (Prescription[] | null)
    /** fetch a courseitem by id (considered public) */
    prevCourseItem: (CourseItem | null)
    /** Fetch paginated product collection */
    products: (Product[] | null)
    /** Number of products */
    productsCount: (Scalars['Int'] | null)
    /** fetch a provider by id */
    provider: (User | null)
    /** get provider appointment locations. */
    providerAppointmentLocations: (AppointmentLocation[] | null)
    /** Returns all cpt codes associated with this provider */
    providerCptCodes: (ProviderCptCodeType[] | null)
    /** Fetch generic custom modules for use in the form builder */
    questionBankModules: (CustomModule[] | null)
    /** Fetch receipt_line_items collection by super_bill_id */
    receiptLineItems: (ReceiptLineItem[] | null)
    /** Fetch received direct message via ID */
    receivedDirectMessage: (ReceivedDirectMessage | null)
    /** Fetch Received Direct Meessages */
    receivedDirectMessages: (ReceivedDirectMessage[] | null)
    /** Fetch number of Received Direct Meessages */
    receivedDirectMessagesCount: (Scalars['Int'] | null)
    /** Fetch Received Fax by ID */
    receivedFax: (ReceivedFax | null)
    /** Fetch paginated Received Faxes collection */
    receivedFaxes: (ReceivedFax[] | null)
    /** Number of Received Faxes */
    receivedFaxesCount: (Scalars['Int'] | null)
    /** Fetch recent food items */
    recentFoods: (Food[] | null)
    /** Fetch recurring forms collection */
    recurringForms: (RecurringForm[] | null)
    /** Fetch a recurring payment by id */
    recurringPayment: (RecurringPayment | null)
    /** Fetch active recurring_payments */
    recurringPayments: (RecurringPayment[] | null)
    /** Fetch Referral by ID */
    referral: (Referral | null)
    /** Get referring physician based on id */
    referringPhysician: (ReferringPhysician | null)
    /** all referring physicians based on current user */
    referringPhysicians: (ReferringPhysician[] | null)
    /** Number of referring physicians */
    referringPhysiciansCount: (Scalars['Int'] | null)
    /** fetch a requested form completion by id */
    requestedFormCompletion: (RequestedFormCompletion | null)
    /** Fetch requested form completions collection */
    requestedFormCompletions: (RequestedFormCompletion[] | null)
    /** fetch a requested payment (invoice) by id */
    requestedPayment: (RequestedPayment | null)
    /** Fetch paginated Requested Payments collection */
    requestedPayments: (RequestedPayment[] | null)
    /** Number of Requested Payments */
    requestedPaymentsCount: (Scalars['Int'] | null)
    /** Fetch specific saved filter */
    savedFilter: (SavedFilter | null)
    /** Fetch all saved filters for a user or organization */
    savedFilters: (SavedFilter[] | null)
    /** Fetch user's scheduled message blasts */
    scheduledMessageBlasts: (NoteScheduler[] | null)
    /** Fetch collection of all scheduled packages */
    scheduledUserPackageSelections: (ScheduledUserPackageSelection[] | null)
    /** SDK configuration */
    sdkConfig: SDKConfig
    /** Fetch sent direct message via ID */
    sentDirectMessage: (SentDirectMessage | null)
    /** Fetch number of Sent Direct Messages */
    sentDirectMessages: (SentDirectMessage[] | null)
    /** Fetch number of Sent Direct Meessages */
    sentDirectMessagesCount: (Scalars['Int'] | null)
    /** Fetch sent Fax by ID */
    sentFax: (SentFax | null)
    /** Fetch paginated Sent Faxes collection */
    sentFaxes: (SentFax[] | null)
    /** Number of Sent Faxes */
    sentFaxesCount: (Scalars['Int'] | null)
    /** Fetch notification list for a specific client or list of clients. */
    sentNotificationRecords: (SentNotificationRecord[] | null)
    /** Get number of SentNotificationRecord entries */
    sentNotificationRecordsCount: (Scalars['Int'] | null)
    /** Fetch paginated Webhooks collection */
    sentWebhooks: (SentWebhook[] | null)
    /** Number of Webhooks */
    sentWebhooksCount: (Scalars['Int'] | null)
    /** Fetch serving sizes for a food */
    servingSizes: (ServingSize[] | null)
    /** A HTML string of charting note answers */
    shareNotePreview: (Scalars['String'] | null)
    /** Should current user see scheduled chat tab */
    showScheduledTab: (Scalars['Boolean'] | null)
    /** Get the signed stream name for a given stream name */
    signedStreamName: (Scalars['String'] | null)
    /** Fetch user smart phrases */
    smartPhrases: (SmartPhrase[] | null)
    /** Get size of user smart phrases that matches the keyword */
    smartPhrasesCount: (Scalars['Int'] | null)
    /** initial cpt codes for a new super bill */
    startingSuperBillCptCodes: (CptCodesSuperBill[] | null)
    /** initial icd10 codes for a new super bill */
    startingSuperBillIcd10s: (IcdCodesSuperBill[] | null)
    /** Return providers' state licenses */
    stateLicenses: (StateLicense[] | null)
    /** Default Stripe bank account object associated to a practitioner stripe account */
    stripeBankAccount: (StripeBankAccountType | null)
    /** Information about the user's stripe company */
    stripeCompany: (StripeCompanyType | null)
    /** An array containing infoformation about countries that stripe supports */
    stripeCountries: (StripeCountry[] | null)
    /** An object containing info about a country that stripe supports */
    stripeCountry: (StripeCountry | null)
    /** Fetch all stripe payment cards for user */
    stripeCustomerDetails: (StripeCustomerDetail[] | null)
    /** All subgoals for a given goal */
    subGoals: (Goal[] | null)
    /** Number of subgoals */
    subGoalsCount: (Scalars['Int'] | null)
    /** Get the current users subscription */
    subscription: (SubscriptionInstance | null)
    /** fetch a superbill by id */
    superBill: (SuperBill | null)
    /** Fetch paginated super bills collection */
    superBills: (SuperBill[] | null)
    /** Number of super bills */
    superBillsCount: (Scalars['Int'] | null)
    /** A collection of tags related to current patient/provider/organization */
    tags: (Tag[] | null)
    /** Number of tags */
    tagsCount: (Scalars['Int'] | null)
    task: (Task | null)
    /** All tasks assigned to a provider or client */
    tasks: (Task[] | null)
    /** All tasks assigned to a provider or client */
    tasksCount: (Scalars['Int'] | null)
    /** @deprecated use availableSlotsForRange. */
    timesForRange: ((Scalars['String'] | null)[] | null)
    /** fetch transactions for the current user */
    transactions: (TransactionType[] | null)
    /** fetch transfers for the current user */
    transfers: (TransferType[] | null)
    /** Fetch an array of treatment plans and recommended products from Fullscript given a user id */
    treatmentPlans: (FullscriptTreatmentPlanType[] | null)
    /** Get the users completed onboarding items, that are not part of the users current flow */
    unassociatedCompletedOnboardingItems: (CompletedOnboardingItem[] | null)
    /** fetch ungrouped course memberhips belonging to a a specific course */
    ungroupedCourseMemberships: (CourseMembership[] | null)
    /** count of ungrouped course memberhips for a specific course */
    ungroupedCourseMembershipsCount: (Scalars['Int'] | null)
    /** fetch a user by id */
    user: (User | null)
    /** fetch a user group by id */
    userGroup: (UserGroup | null)
    /** Fetch paginated user groups collection */
    userGroups: (UserGroup[] | null)
    /** Number of user groups */
    userGroupsCount: (Scalars['Int'] | null)
    /** Fetch collection of all purchased packages */
    userPackageSelections: (UserPackageSelection[] | null)
    userPackageSelectionsCount: (Scalars['Int'] | null)
    /** Fetch paginated patients collection (use organizationMembers query for providers) */
    users: (User[] | null)
    /** Number of users */
    usersCount: (Scalars['Int'] | null)
    /** Check if a coupon is valid, and return the new price (considered public) */
    validateCoupon: (ValidateOfferingCoupon | null)
    /** Check if a reset passwrd token is valid */
    validateResetPasswordToken: (Scalars['Boolean'] | null)
    /** Check if a signup token is valid */
    validateSignupToken: (Scalars['Boolean'] | null)
    waterIntakeEntry: (Entry | null)
    /** Fetch possible Webhook event types */
    webhookEventTypes: (Scalars['String'][] | null)
    /** Fetch paginated Webhooks collection */
    webhooks: (Webhook[] | null)
    /** Number of Webhooks */
    webhooksCount: (Scalars['Int'] | null)
    /** Whitelabel setting to use */
    whitelabelSetting: (WhitelabelSetting | null)
    /** Generate a JWT to be used in the client-side Zoom SDK. This is just available on production, and requires your account to be approved by Healthie. The JWT is valid for 1 day. */
    zoomSdkJwt: (Scalars['String'] | null)
    __typename: 'Query'
}


/** receipt line item */
export interface ReceiptLineItem {
    /** Date of service (as a date) */
    created_at: Scalars['String']
    /** description of line item */
    description: (Scalars['String'] | null)
    /** The unique identifier of the line item */
    id: Scalars['ID']
    /** previous price */
    previous_price: (Scalars['String'] | null)
    /** price of line item */
    price: (Scalars['String'] | null)
    /** id of super bill */
    super_bill_id: (Scalars['ID'] | null)
    /** updated at */
    updated_at: Scalars['String']
    __typename: 'ReceiptLineItem'
}


/** A Received Direct Message */
export interface ReceivedDirectMessage {
    /** The number of attachments for the received direct message */
    attachments_count: (Scalars['Int'] | null)
    /** The XML data contained in the attach CDA file */
    cda_xml: (Scalars['String'] | null)
    /** The received date of the direct message */
    created_at: (Scalars['String'] | null)
    /** Array of direct message attachments */
    direct_message_attachments: (DirectMessageAttachment[] | null)
    /** When true, the message has an attached CDA */
    has_cda: (Scalars['Boolean'] | null)
    /** The unique identifier of the fax */
    id: Scalars['ID']
    /** The listed recipient */
    listed_recipient: (Scalars['String'] | null)
    /** The listed sender */
    listed_sender: (Scalars['String'] | null)
    /** The message body of the direct message */
    message_body: (Scalars['String'] | null)
    /** The subject */
    subject: (Scalars['String'] | null)
    __typename: 'ReceivedDirectMessage'
}


/** ReceivedDirectMessage sorting enum */
export type ReceivedDirectMessageOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** A Received Fax */
export interface ReceivedFax {
    /** The archived status of the fax */
    archived: Scalars['Boolean']
    /** Any user added comments on the fax */
    comments: (Scalars['String'] | null)
    /** The received date of the fax */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The number of the sender of the fax */
    from_number: (Scalars['String'] | null)
    /** The unique identifier of the fax */
    id: Scalars['ID']
    /** Returns the referral provider name if fax number is found */
    referring_provider_name: (Scalars['String'] | null)
    /** Whether the received fax has been viewed by the current user */
    viewed_by_current_user: (Scalars['Boolean'] | null)
    __typename: 'ReceivedFax'
}


/** ReceivedFax sorting enum */
export type ReceivedFaxOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NUMBER_ASC' | 'NUMBER_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** A Care Plan Recommendation */
export interface Recommendation {
    /** The unique identifier of the recommendation */
    id: Scalars['ID']
    /** Recommendation text */
    recommendation_body: (Scalars['String'] | null)
    /** The type of recommendation (1)Activity, (2)Nutrition, (3)Supplement, (4)Other */
    recommendation_type: (Scalars['String'] | null)
    /** Sanitized recommendation_body */
    sanitized_body: (Scalars['String'] | null)
    __typename: 'Recommendation'
}


/** A Recurring Appointment */
export interface RecurringAppointment {
    /** The unique identifier of the recurring appointment */
    id: Scalars['ID']
    /** Auto-register clients for all appointments in series */
    join_all: Scalars['Boolean']
    /** Interval between each appointment in the series */
    repeat_interval: (Scalars['String'] | null)
    /** Count of the appointment recurrences */
    repeat_times: (Scalars['String'] | null)
    __typename: 'RecurringAppointment'
}


/** Each data point has a time range and the days that are in that time range */
export interface RecurringDaysData {
    /** The days that are in the time range */
    day_ranges: (DayRangeType[] | null)
    /** The unique identifier of the recurring days data */
    id: Scalars['ID']
    __typename: 'RecurringDaysData'
}


/** A Recurring Form */
export interface RecurringForm {
    /** Associated custom module form */
    custom_module_form: (CustomModuleForm | null)
    /** The ID of the form itself */
    form_id: (Scalars['String'] | null)
    /** The type of form */
    form_type: Scalars['String']
    /** Whether the user or group is connected to the recurring form */
    has_connected_recipient: (Scalars['Boolean'] | null)
    /** The unique identifier of the recurring form */
    id: Scalars['ID']
    /** The interval of recurrence. Can be: '23:12' / 'Monday, Tuesday' / '31st' */
    interval: (Scalars['String'] | null)
    /** The type of recurrence('Daily'(1) / 'Weekly'(2) / 'Monthly'(3)) */
    interval_type: (Scalars['String'] | null)
    /** Wherther the recurrence is active or not */
    is_active: Scalars['Boolean']
    /** The day when reccurence ends */
    recurrence_end_at: (Scalars['String'] | null)
    /** Get user_group assigned to the recurring form */
    userGroups: (UserGroup[] | null)
    /** The ID of the provider who set up recurrence */
    user_id: (Scalars['String'] | null)
    /** Get patients assigned to the recurring form */
    users: (User[] | null)
    /** The identifiers of associated users and groups: ['1', '2', 'group-5', 'group-13'] */
    users_and_groups: (Scalars['String'] | null)[]
    __typename: 'RecurringForm'
}


/** Recurring Payment */
export interface RecurringPayment {
    /** The amount of recurring payment */
    amount_paid: (Scalars['String'] | null)
    /** The amount to be paid for the next payment */
    amount_to_pay: (Scalars['String'] | null)
    /** The ID of the appointment associated with this recurring payment */
    appointment_id: (Scalars['ID'] | null)
    /** The frequency the payment should be made */
    billing_frequency: (Scalars['String'] | null)
    /** The number of billing items */
    billing_items_count: (Scalars['String'] | null)
    /** The date on which the recurring payment is canceled */
    canceled_at: (Scalars['String'] | null)
    /** The provider who canceled the recurring payment */
    canceled_by: (User | null)
    /** The date on which the recurring payment is created */
    created_at: Scalars['String']
    /** Includes the next payment date, returns true if next payment date is set and payments remanining is greater than zero */
    has_next_payment_date: (Scalars['Boolean'] | null)
    /** Whether or not this recurring payment has scheduled billing item */
    has_scheduled_billing_item: (Scalars['Boolean'] | null)
    /** The unique identifier of the recurring payment */
    id: Scalars['ID']
    /** If the recurring payment has been canceled */
    is_canceled: Scalars['Boolean']
    /** Whether or not the recurring payments has been paused */
    is_paused: Scalars['Boolean']
    /** The last billing item for this recurring payment */
    last_billing_item: (BillingItem | null)
    /** The date of the next payment */
    next_payment_date: (Scalars['String'] | null)
    /** The next payment date if the recurring payment is restarted */
    next_restart_payment_date: (Scalars['String'] | null)
    /** The ID of the coupon */
    offering_coupon_id: (Scalars['ID'] | null)
    /** The offering ID */
    offering_id: (Scalars['ID'] | null)
    /** The name of the offering associated with recurring payment */
    offering_name: (Scalars['String'] | null)
    /** The original price */
    original_price: (Scalars['String'] | null)
    /** The date on which the recurring payment is paused */
    paused_at: (Scalars['String'] | null)
    /**  The provider who paused the recurring payment */
    paused_by: (User | null)
    /** Count remaining payments or returns Until Canceled */
    payments_remaining: (Scalars['String'] | null)
    /** The ID of the receiver */
    recipient_id: (Scalars['ID'] | null)
    /** The number of times the payment should repeat */
    repeat_tiems: (Scalars['String'] | null)
    /** The ID oft the sender */
    sender_id: (Scalars['ID'] | null)
    /** The date payments should begin */
    start_at: (Scalars['String'] | null)
    /** The updated at date */
    updated_at: (Scalars['String'] | null)
    __typename: 'RecurringPayment'
}


/** A referral */
export interface Referral {
    /** created at */
    created_at: Scalars['String']
    /** The unique identifier of the referral */
    id: Scalars['ID']
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata: (Scalars['String'] | null)
    /** The reason the client was referred to the physician */
    referral_reason: (Scalars['String'] | null)
    /** The referring physician */
    referring_physician: (ReferringPhysician | null)
    /** id of the referring physician */
    referring_physician_id: (Scalars['ID'] | null)
    /** updated at */
    updated_at: Scalars['String']
    /** The referred client */
    user: (User | null)
    /** id of the referred client */
    user_id: (Scalars['ID'] | null)
    __typename: 'Referral'
}


/** The referral information for a CMS1500 claim */
export interface ReferralInfo {
    /** The state the auto accident occurred in */
    auto_accident_state: (Scalars['String'] | null)
    /** The date of current illness, injury, or pregnancy */
    case_date: (Scalars['String'] | null)
    /** The qualifier for case_date */
    case_qualifier: (Scalars['String'] | null)
    /**
     * @deprecated You are no longer able to get the cms1500 from the referral info
     * The associated CMS1500
     */
    cms1500: (Cms1500 | null)
    /** The id of the associated CMS1500 */
    cms1500_id: (Scalars['String'] | null)
    /** Options that the condition can be related to */
    condition_related_to: ((Scalars['String'] | null)[] | null)
    /** The end of the hospitalization period */
    hospitalization_end: (Scalars['String'] | null)
    /** The start of the hospitalization period */
    hospitalization_start: (Scalars['String'] | null)
    /** The unique identifier of the referral info */
    id: (Scalars['ID'] | null)
    /** This field identifies additional date information about the patient's condition or treatment. */
    other_associated_date: (Scalars['String'] | null)
    /** The qualifier for other_associated_date */
    other_associated_qualifier: (Scalars['String'] | null)
    /** The prior authorization number */
    prior_auth_number: (Scalars['String'] | null)
    /** The first name of the referring provider */
    ref_provider_first: (Scalars['String'] | null)
    /** The last name of the referring provider */
    ref_provider_last: (Scalars['String'] | null)
    /** The middle name of the referring provider */
    ref_provider_middle: (Scalars['String'] | null)
    /** The NPI of the referring provider */
    ref_provider_npi: (Scalars['String'] | null)
    /** The other id of the referring provider */
    ref_provider_other_id: (Scalars['String'] | null)
    /** The other id qualifier of the referring provider */
    ref_provider_other_id_qual: (Scalars['String'] | null)
    /** The qualifications of the referring provider */
    ref_provider_qual: (Scalars['String'] | null)
    /** The date of the referral */
    referral_date: (Scalars['String'] | null)
    /** The associated referring physician */
    referring_physician: (ReferringPhysician | null)
    /** The id of associated referring physician */
    referring_physician_id: (Scalars['ID'] | null)
    /** The end of the unable to work period */
    unable_to_work_end: (Scalars['String'] | null)
    /** The start of the unable to work period */
    unable_to_work_start: (Scalars['String'] | null)
    __typename: 'ReferralInfo'
}


/** a referring physician */
export interface ReferringPhysician {
    accepts_insurance: (Scalars['Boolean'] | null)
    /** Business Name of physician */
    business_name: (Scalars['String'] | null)
    /** created at */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** email of physician */
    email: (Scalars['String'] | null)
    /** fax number of physician */
    fax_number: (Scalars['String'] | null)
    /** first name of physician */
    first_name: (Scalars['String'] | null)
    /** full name of physician */
    full_name: (Scalars['String'] | null)
    /** The unique identifier of the physician */
    id: Scalars['ID']
    /** last name of physician */
    last_name: (Scalars['String'] | null)
    /** The associated location */
    location: (Location | null)
    /** location id */
    location_id: (Scalars['ID'] | null)
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata: (Scalars['String'] | null)
    /** Dietitian's notes */
    notes: (Scalars['String'] | null)
    /** npi of physician */
    npi: (Scalars['String'] | null)
    /** Saved Other ID associated with this provider */
    other_id: (Scalars['String'] | null)
    /** Qualifier for Other ID */
    other_id_qualifier: (Scalars['String'] | null)
    /** phone number of physician */
    phone_number: (Scalars['String'] | null)
    /** The user who entered the referring physician */
    provider: User
    /** Associated users */
    referrals: (Referral[] | null)
    /** Associated users count */
    referrals_count: (Scalars['Int'] | null)
    /** Physician's speciality */
    speciality: (Scalars['String'] | null)
    /** updated at */
    updated_at: Scalars['String']
    /** Physician's website */
    website: (Scalars['String'] | null)
    __typename: 'ReferringPhysician'
}


/** ReferringPhysician sorting enum */
export type ReferringPhysicianOrderKeys = 'NAME_ASC' | 'NAME_DESC' | 'BUSINESS_NAME_ASC' | 'BUSINESS_NAME_DESC' | 'SPECIALITY_ASC' | 'SPECIALITY_DESC' | 'CITY_ASC' | 'CITY_DESC' | 'CLIENTS_REFERRED_ASC' | 'CLIENTS_REFERRED_DESC'


/** Autogenerated return type of RefetchChangeHealthLabOrder. */
export interface RefetchChangeHealthLabOrderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'RefetchChangeHealthLabOrderPayload'
}


/** Autogenerated return type of RefreshHostLinks. */
export interface RefreshHostLinksPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'RefreshHostLinksPayload'
}


/** A refinding item of a related billing item */
export interface RefundItem {
    /** The ID of the billing_item */
    billing_item_id: (Scalars['String'] | null)
    /** The currency */
    currency: (Scalars['String'] | null)
    /** The unique identifier of the refund */
    id: Scalars['ID']
    /** The refund amount */
    refund_amount: (Scalars['String'] | null)
    /** The refund date */
    refund_date: (Scalars['String'] | null)
    /** The status of refunding */
    status: (Scalars['String'] | null)
    __typename: 'RefundItem'
}


/** A Related Object */
export interface RelatedObject {
    /** A combined string to use for labels */
    full_name: (Scalars['String'] | null)
    /** The Healthie unique identifier */
    id: Scalars['ID']
    __typename: 'RelatedObject'
}


/** A reminder object */
export interface Reminder {
    /** The unique identifier of the reminder */
    id: Scalars['ID']
    /** Interval of a reminder ex. daily */
    interval_type: Scalars['String']
    /** Value of the reminder interval ex. monday */
    interval_value: (Scalars['String'] | null)
    /** True if reminder is active */
    is_enabled: Scalars['Boolean']
    __typename: 'Reminder'
}


/** Autogenerated return type of RemoveCardOnFile. */
export interface RemoveCardOnFilePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'RemoveCardOnFilePayload'
}


/** The selected date range for specific report */
export interface ReportsDateFilterSelection {
    /** The selected date range for appointments */
    appointments: (Scalars['String'] | null)
    /** The selected date range for authorizations */
    authorization: (Scalars['String'] | null)
    /** The selected date range for bank transfers */
    bank_transfers: (Scalars['String'] | null)
    /** The selected date range for client activities */
    client_activity: (Scalars['String'] | null)
    /** The selected date range for client blood sugar metrics */
    client_blood_sugar_metrics: (Scalars['String'] | null)
    /** The selected date range for client credits */
    client_credits: (Scalars['String'] | null)
    /** The selected date range for clients list */
    client_list: (Scalars['String'] | null)
    /** The selected date range for client metrics */
    client_metrics: (Scalars['String'] | null)
    /** The selected date range for client statuses */
    client_status: (Scalars['String'] | null)
    /** The selected date range for cms 1500s */
    cms_1500s: (Scalars['String'] | null)
    /** The unique identifier of the selection */
    id: Scalars['ID']
    /** The selected date range for payments */
    payments: (Scalars['String'] | null)
    /** The selected date range for superbills */
    superbills: (Scalars['String'] | null)
    __typename: 'ReportsDateFilterSelection'
}


/** A request, from a provider to a client, to fill out a form */
export interface RequestedFormCompletion {
    /** The form to fill out */
    custom_module_form: (CustomModuleForm | null)
    /** The ID of the form to fill out */
    custom_module_form_id: (Scalars['String'] | null)
    /** The relevant date to show */
    date_to_show: (Scalars['String'] | null)
    /** The filled form that completes the request */
    form_answer_group: (FormAnswerGroup | null)
    /** The id of the filled form that completes the request */
    form_answer_group_id: (Scalars['String'] | null)
    /** The unique identifier of the form */
    id: Scalars['ID']
    /** type of form requested */
    item_type: Scalars['String']
    /** The recipient (client) */
    recipient: (User | null)
    /** The ID of the recipient (client) */
    recipient_id: (Scalars['String'] | null)
    /** Recurring Form related to the request */
    recurring_form: (RecurringForm | null)
    /** The sender (provider) */
    sender: (User | null)
    /** The ID of the sender (provider) */
    sender_id: (Scalars['String'] | null)
    /** The status of the request */
    status: (Scalars['String'] | null)
    __typename: 'RequestedFormCompletion'
}


/** The status of the requested form */
export interface RequestedFormStatusType {
    /** Used to return something after request if the job has been triggered */
    status: (Scalars['String'] | null)
    __typename: 'RequestedFormStatusType'
}


/** A Requested Payer for the Invoice */
export interface RequestedPayer {
    /** The address of the requested payer */
    address: (Scalars['String'] | null)
    /** The email of the requested payer */
    email: (Scalars['String'] | null)
    /** The unique identifier of the requested payer */
    id: Scalars['ID']
    /** The name of the requested payer */
    name: (Scalars['String'] | null)
    __typename: 'RequestedPayer'
}


/** A request, from a provider to a client, to make a payment */
export interface RequestedPayment {
    /** The appointment associated with this requested payment */
    appointment: (Appointment | null)
    /** The ID of the appointment associated with this requested payment */
    appointment_id: (Scalars['String'] | null)
    /** The id of the filled form that completes the request */
    billing_item_id: (Scalars['String'] | null)
    /** The payments that completes the request */
    billing_items: BillingItem[]
    /** The ID of the CMS1500 to pay for */
    cms1500_id: (Scalars['String'] | null)
    /** The CMS1500 service date */
    cms1500_service_date: (Scalars['String'] | null)
    /** The currency of the requested payment (invoice) */
    currency: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The relevant date to show */
    date_to_show: (Scalars['String'] | null)
    /**
     * @deprecated use debt_decimal instead
     * Balance to pay
     */
    debt: (Scalars['Int'] | null)
    /** The debt, including decimals */
    debt_decimal: (Scalars['Float'] | null)
    /** The details of the invoice (based off of associated item) */
    details: (Scalars['String'] | null)
    /** The datetime that the share email was last sent, nil if never */
    email_sent_at: (Scalars['String'] | null)
    /** The unique identifier of the payment */
    id: Scalars['ID']
    /** The generated invoice ID */
    invoice_id: (Scalars['String'] | null)
    /** The type of invoice */
    invoice_type: (Scalars['String'] | null)
    /** True if requested payment was manually paid */
    is_manually_paid: (Scalars['Boolean'] | null)
    /** True if the invoice is still in preview mode */
    is_preview: Scalars['Boolean']
    /** Extra details on the invoice */
    notes: (Scalars['String'] | null)
    /** The offering to purchase */
    offering: (Offering | null)
    /** The ID of the offering to buy */
    offering_id: (Scalars['String'] | null)
    /** The requested payer. This will return null if the requested payer exists as a client in Healthie */
    other_requested_payer: (RequestedPayer | null)
    /** The datetime that the invoice was paid */
    paid_at: (Scalars['String'] | null)
    /** Percent from total price which has been paid (if status == Partial) */
    paid_percent: (Scalars['Int'] | null)
    /** price of payment requested */
    price: (Scalars['String'] | null)
    /** The recipient (client) */
    recipient: (User | null)
    /** The ID of the recipient (client) */
    recipient_id: (Scalars['String'] | null)
    /** Individual responsible for payment. If user_id, the user exists in Healthie, otherwise the individual doesn't have a Healthie account. */
    requested_payer: (RequestedPayer | null)
    /** The ID of the requested payer */
    requested_payer_id: (Scalars['String'] | null)
    /** The template used to create this requested payment */
    requested_payment_template: (RequestedPaymentTemplate | null)
    /** The sender (provider) */
    sender: (User | null)
    /** The ID of the sender (provider) */
    sender_id: (Scalars['String'] | null)
    /** The service date */
    service_date: (Scalars['String'] | null)
    /** The services provided */
    services_provided: (Scalars['String'] | null)
    /** The status of the request */
    status: (Scalars['String'] | null)
    /** User Package Selection connected to this requested payment */
    user_package_selection: (UserPackageSelection | null)
    __typename: 'RequestedPayment'
}


/** RequestedPayment sorting enum */
export type RequestedPaymentOrderKeys = 'CLIENT_NAME_ASC' | 'CLIENT_NAME_DESC' | 'PROVIDER_NAME_ASC' | 'PROVIDER_NAME_DESC' | 'PRICE_ASC' | 'PRICE_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'TYPE_ASC' | 'TYPE_DESC' | 'INVOICE_ID_ASC' | 'INVOICE_ID_DESC'


/** Requested payment template */
export interface RequestedPaymentTemplate {
    /** Whether the template is active or not */
    active_template: Scalars['Boolean']
    /** The unique identifier of the template */
    id: Scalars['ID']
    /** The name of the template */
    name: (Scalars['String'] | null)
    /** The requested payment of the template */
    requested_payment: (RequestedPayment | null)
    __typename: 'RequestedPaymentTemplate'
}


/** A room at a location */
export interface Room {
    /** Unique ID for this room */
    id: Scalars['ID']
    /** When true, there can only be one appointment at a time in the room */
    limit_to_one: Scalars['Boolean']
    /** Name of the room */
    name: (Scalars['String'] | null)
    __typename: 'Room'
}


/** Configuration for the SDK */
export interface SDKConfig {
    /** Stripe's publishable key */
    stripe_publishable_key: Scalars['String']
    __typename: 'SDKConfig'
}


/** A set of filter options saved for quick loading in the calendar */
export interface SavedFilter {
    /** JSON-formatted options to use for setting filter */
    filter_data: Scalars['JSON']
    /** Unique ID for this filter */
    id: Scalars['ID']
    /** Name of the filter */
    name: Scalars['String']
    /** The organization_id that has access to the filter */
    organization_id: (Scalars['String'] | null)
    /** The user that created the filter */
    user_id: Scalars['String']
    /** The unique UUID/string of the filter, used for sharing */
    uuid: Scalars['String']
    __typename: 'SavedFilter'
}


/** Billing items that are scheduled and will have a user package selection associated with them */
export interface ScheduledUserPackageSelection {
    /** The unique identifier of the room */
    id: Scalars['ID']
    /** Related offering */
    offering: (Offering | null)
    /** Related recurring_payment */
    recurring_payment: (RecurringPayment | null)
    /** Related user */
    user: (User | null)
    __typename: 'ScheduledUserPackageSelection'
}


/** Autogenerated return type of SendSpeakToTrainerNotification. */
export interface SendSpeakToTrainerNotificationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'SendSpeakToTrainerNotificationPayload'
}


/** Autogenerated return type of SendWelcomeEmail. */
export interface SendWelcomeEmailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'SendWelcomeEmailPayload'
}


/** A Received Direct Message */
export interface SentDirectMessage {
    /** The number of attachments for the received direct message */
    attachments_count: (Scalars['Int'] | null)
    /** The received date of the direct message */
    created_at: (Scalars['String'] | null)
    /** When true, the message has an attached CDA */
    has_cda: (Scalars['Boolean'] | null)
    /** The unique identifier of the fax */
    id: Scalars['ID']
    /** The body of the direct message */
    message_body: (Scalars['String'] | null)
    /** The outbound recipient */
    outbound_recipient: (Scalars['String'] | null)
    /** ID of the related patient */
    patient_id: (Scalars['String'] | null)
    /** The status */
    status: (Scalars['String'] | null)
    /** The subject of the direct message */
    subject: (Scalars['String'] | null)
    __typename: 'SentDirectMessage'
}


/** SentDirectMessage sorting enum */
export type SentDirectMessageOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** A Sent Fax */
export interface SentFax {
    /** The creation date of the fax */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Where the fax was sent */
    destination_number: (Scalars['String'] | null)
    /** The unique identifier of the fax */
    id: Scalars['ID']
    /** The ids of the chart notes sent with the fax */
    parsed_form_answer_group_ids: (Scalars['ID'][] | null)
    /** The patient that the fax is in regards to */
    patient: (User | null)
    /** False if no document ids or form answer group ids (fax existed before the addition of document ids column) */
    resendable: (Scalars['Boolean'] | null)
    /** The sender of the fax */
    sender: (User | null)
    /** The status of the fax */
    status: (Scalars['String'] | null)
    /** The display string of the fax status */
    status_display_string: (Scalars['String'] | null)
    /** The updated date of the sent fax */
    updated_at: (Scalars['String'] | null)
    __typename: 'SentFax'
}


/** SentFax sorting enum */
export type SentFaxOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NUMBER_ASC' | 'NUMBER_DESC' | 'STATUS' | 'STATUS_ASC' | 'STATUS_DESC' | 'CLIENT_LAST_NAME_ASC' | 'CLIENT_LAST_NAME_DESC' | 'SENDER_LAST_NAME_ASC' | 'SENDER_LAST_NAME_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** A Sent Notification */
export interface SentNotificationRecord {
    /** The enumerated values: [:sms, :push, :email] */
    category: Scalars['String']
    /** The time when the record was created */
    created_at: Scalars['String']
    /** The enumerated values: [:sent, :delivered, :bounced] */
    delivery_status: Scalars['String']
    /** The unique identifier of the record */
    id: Scalars['ID']
    /** Description of notification context. (Ex: 'Follow-up Session on Nov 16 at 1:00 PM EST with Joe Smith') */
    notification_description: (Scalars['String'] | null)
    /** Examples: 'appointment_reminder', 'folder_shared', 'reminder_to_work_on_a_goal' */
    notification_type: (Scalars['String'] | null)
    /** The type categorizing notification_type into subgroups. Accepted values: [appointments, billing, chat_messages, accounting, documents, forms, goals, journals, packages, programs] */
    representation_type: (Scalars['String'] | null)
    /** The ID of the user this notification was sent to */
    user_id: (Scalars['ID'] | null)
    __typename: 'SentNotificationRecord'
}


/** The record of a sent webhook */
export interface SentWebhook {
    /** The datetime that the webhook was sent */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The type of webhook */
    event_type: (Scalars['String'] | null)
    /** Whether the webhook is enabled or not */
    http_response_status: (Scalars['String'] | null)
    /** The unique identifier of the webhook */
    id: Scalars['ID']
    /** The id of the resource the sent webhook related to */
    resource_id: (Scalars['ID'] | null)
    /** The type of resource the sent webhook related to */
    resource_id_type: (Scalars['String'] | null)
    /** The URL that the webhook was sent to */
    url: (Scalars['String'] | null)
    /** The configured webhook thst was sent */
    webhook_id: (Scalars['ID'] | null)
    __typename: 'SentWebhook'
}


/** SentWebhook sorting enum */
export type SentWebhookOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'EVENT_TYPE_ASC' | 'EVENT_TYPE_DESC' | 'URL_ASC' | 'URL_DESC'


/** A serving size object */
export interface ServingSize {
    /** The number of servings */
    amount: (Scalars['Float'] | null)
    /** The calories of serving size */
    calories: (Scalars['Float'] | null)
    /** Whether or not this serving size was imported from the USDA database */
    fdc_import: Scalars['Boolean']
    /** The food id of the food this serving size belongs to */
    food_id: (Scalars['String'] | null)
    /** The id of the food portion this serving size belongs to */
    food_portion_id: (Scalars['ID'] | null)
    /** The unique identifier of the serving size */
    id: Scalars['ID']
    /** percentage of 100g. For example if modifier is 2.5 then this serving size is 250g */
    modifier: (Scalars['Float'] | null)
    /** The nutrients of this serving size */
    nutrients: (FoodNutrient[] | null)
    /** The type of serving (i.e grams, scoop, spoonful) */
    unit: (Scalars['String'] | null)
    __typename: 'ServingSize'
}


/** A Shapa Connection */
export interface ShapaConnection {
    /** The unique identifier of the connection */
    id: Scalars['ID']
    /** The last time Shapa was synced */
    last_sync_date: (Scalars['String'] | null)
    __typename: 'ShapaConnection'
}


/** The type of offered signed stream names */
export type SignedStreamName = 'NOTES' | 'CONVERSATION_MEMBERSHIPS'


/** A smart phrase object */
export interface SmartPhrase {
    /** The time when the smart phrase was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The unique identifier of the smatr phrase */
    id: Scalars['ID']
    /** The name of the smart phrase */
    name: (Scalars['String'] | null)
    /** The content of the smart phrase */
    phrase: (Scalars['String'] | null)
    /** The smart phrase owner */
    user: (User | null)
    __typename: 'SmartPhrase'
}


/** Smoking Status object */
export interface SmokingStatus {
    /** The unique identifier of the status */
    id: Scalars['ID']
    /** The smoking status code */
    smoking_status_code: (Scalars['String'] | null)
    /** The end date of the status */
    status_end_datetime: (Scalars['String'] | null)
    /** The start date of the status */
    status_start_datetime: (Scalars['String'] | null)
    /** The id of the user the status belongs to */
    user_id: (Scalars['ID'] | null)
    __typename: 'SmokingStatus'
}


/** Snomed terms */
export interface SnomedTerm {
    /** id for snomed term */
    concept_id: (Scalars['String'] | null)
    /** snomed term name */
    term: (Scalars['String'] | null)
    __typename: 'SnomedTerm'
}


/** Specialty */
export interface Specialty {
    /** The unique identifier of the specialty */
    id: Scalars['ID']
    /** The name of the specialty */
    specialty: Scalars['String']
    /** The name of the specialty category */
    specialty_category: Scalars['String']
    __typename: 'Specialty'
}


/** Information on an SsoConnection */
export interface SsoConnection {
    /** Whether or not to allow Just-In-Time provisioning */
    allow_jit_provisioning: (Scalars['Boolean'] | null)
    /** The type of user this SSO is for (either patient or staff) */
    for_user_type: (Scalars['String'] | null)
    /** The unique identifier of the SSO connection */
    id: Scalars['ID']
    /** The label to display on the sign in button */
    label: (Scalars['String'] | null)
    /** The URL to take the user to to sign in via SSO */
    sign_in_url: (Scalars['String'] | null)
    /** The URL to take the user to to sign out via SSO */
    sign_out_url: (Scalars['String'] | null)
    __typename: 'SsoConnection'
}


/** A state license object */
export interface StateLicense {
    /** The full name of the state */
    full_state_name: (Scalars['String'] | null)
    /** The unique identifier of the state license */
    id: Scalars['ID']
    /** The abbreviation of the state */
    state: (Scalars['String'] | null)
    __typename: 'StateLicense'
}


/** A Stripe bank account */
export interface StripeBankAccountType {
    /** The name of the account holder */
    account_holder_name: (Scalars['String'] | null)
    /** The type of the account holder (Individual or Company) */
    account_holder_type: (Scalars['String'] | null)
    /** The last 4 digits of the bank account number */
    accounts_number_last_4: (Scalars['String'] | null)
    /** The city of the business address */
    city: (Scalars['String'] | null)
    /** The country of the business address */
    country: (Scalars['String'] | null)
    /** The currency the bank account is in */
    currency: (Scalars['String'] | null)
    /** The date of birth of the company's business representative */
    dob: (Scalars['String'] | null)
    /** The ID of the bank account object (generated by Stripe) */
    id: (Scalars['String'] | null)
    /** If the holder has verified government issued id */
    id_image_provided: (Scalars['Boolean'] | null)
    /** The first line of the business address */
    line1: (Scalars['String'] | null)
    /** The second line of the business address */
    line2: (Scalars['String'] | null)
    /** The last 4 digits of the routing number */
    routing_number_last_4: (Scalars['String'] | null)
    /** If the holder has a verified social security number */
    ssn_last_4_provided: (Scalars['Boolean'] | null)
    /** The state of the business address */
    state: (Scalars['String'] | null)
    /** If the holder has a verified business tax ID */
    tax_id_provided: (Scalars['Boolean'] | null)
    /** The zip code of the business address */
    zip: (Scalars['String'] | null)
    __typename: 'StripeBankAccountType'
}


/** A Stripe company address object */
export interface StripeCompanyAddressType {
    /** The city or town of the address. */
    city: (Scalars['String'] | null)
    /** The two-letter country code of the address. */
    country: (Scalars['String'] | null)
    /** The first line of the address. */
    line1: (Scalars['String'] | null)
    /** The second line of the address. */
    line2: (Scalars['String'] | null)
    /** The postal code of the address. */
    postal_code: (Scalars['String'] | null)
    /** The state or province of the address. */
    state: (Scalars['String'] | null)
    __typename: 'StripeCompanyAddressType'
}


/** A Stripe company */
export interface StripeCompanyType {
    /** The company address */
    address: (StripeCompanyAddressType | null)
    /** Whether the company directors have been provided */
    directors_provided: (Scalars['Boolean'] | null)
    /** Whether the company executives have been provided */
    executives_provided: (Scalars['Boolean'] | null)
    /** The legal name of the company */
    name: (Scalars['String'] | null)
    /** Whether the company owners have been provided */
    owners_provided: (Scalars['Boolean'] | null)
    /** The company phone number */
    phone: (Scalars['String'] | null)
    /** Whether the company tax ID has been provided */
    tax_id_provided: (Scalars['Boolean'] | null)
    /** The verification status of the company */
    verification: (Scalars['String'] | null)
    __typename: 'StripeCompanyType'
}


/** A Stripe country */
export interface StripeCountry {
    /** The accepted currencies for this country */
    accepted_currencies: ((Scalars['String'] | null)[] | null)
    /** The country code */
    country_code: (Scalars['String'] | null)
    /** The currency of the country */
    currency: (Scalars['String'] | null)
    /** A custom field 1 */
    field1: (Scalars['String'] | null)
    /** A custom field 2 */
    field2: (Scalars['String'] | null)
    /** The name of the country */
    name: (Scalars['String'] | null)
    __typename: 'StripeCountry'
}


/** Details of the client's credit card */
export interface StripeCustomerDetail {
    /** The name of the bank the bank account is with (nil for 'Card' source types) */
    bank_type: (Scalars['String'] | null)
    /** The brand of the card */
    card_type: (Scalars['String'] | null)
    /** The type of card indicated by the user. Defaults to personal, Options are 'hsa', 'fsa', and 'personal' */
    card_type_label: (Scalars['String'] | null)
    /** Stripe card country */
    country: (Scalars['String'] | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The expiration date of the card */
    expiration: (Scalars['String'] | null)
    /** Whether the card is expiring next month */
    expiring_next_month: (Scalars['Boolean'] | null)
    /** The unique identifier of the customer detail object */
    id: Scalars['ID']
    /** The last 4 digits of the credit card */
    last_four: (Scalars['String'] | null)
    /** The status of the payment method */
    source_status: (Scalars['String'] | null)
    /** The type of payment method (either 'Card' or 'Bank Account') */
    source_type: (Scalars['String'] | null)
    /** The ID of the client (in Stripe) */
    stripe_id: (Scalars['String'] | null)
    /** The client associated with stripe account(in Healthie) */
    user: (User | null)
    /** The ID of the client (in Healthie) */
    user_id: (Scalars['String'] | null)
    /** Stripe card address zip */
    zip: (Scalars['String'] | null)
    __typename: 'StripeCustomerDetail'
}


/** StripeCustomerDetails sorting enum */
export type StripeCustomerDetailOrderKeys = 'EXPIRATION_DATE_DESC' | 'EXPIRATION_DATE_ASC' | 'PATIENT_FIRST_NAME_ASC' | 'PATIENT_FIRST_NAME_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC'


/** An invoice from stripe as object */
export interface StripeInvoice {
    /** The list of add-ons applied to the invoice. */
    add_ons: (StripePlan[] | null)
    /** The amount of the invoice, as a positive or negative integer in the smallest currency unit (e.g., 100 cents to charge $1.00 or -100 to credit $1.00). The value is multiplied by the quantity to get the full amount. If the total is zero, this field will be absent. */
    applied_balance: (StripePlan | null)
    /** The base amount of the invoice, not including any discounts, in cents. */
    base_plan: (StripePlan | null)
    /** The list of credits applied to the invoice. */
    credits: (StripePlan[] | null)
    /** The discount applied to the invoice. */
    discount: (Discount | null)
    /** The unique identifier of the invoice */
    id: Scalars['String']
    /** The end of the period the invoice covers. */
    period_end: (Scalars['String'] | null)
    /** The start of the period the invoice covers. */
    period_start: (Scalars['String'] | null)
    /** The total amount of the invoice, including all discounts and add-ons. */
    total: (Scalars['String'] | null)
    __typename: 'StripeInvoice'
}


/** A discount from stripe as object */
export interface StripePlan {
    /** The amount in cents to be charged on the interval specified */
    amount: (Scalars['String'] | null)
    /** The annual cost of the plan */
    annual_cost: (Scalars['String'] | null)
    /** The description of the plan */
    description: (Scalars['String'] | null)
    /** The unique identifier of the plan */
    id: Scalars['String']
    /** The interval when the plan is charged */
    interval: (Scalars['String'] | null)
    __typename: 'StripePlan'
}


/** Subscriptions for events tracking */
export interface Subscription {
    /** Track changes in appointments where user is participated */
    appointmentUserDevicesSubscription: (Appointment | null)
    /** Track changes in conversations */
    conversationChangedSubscription: (Conversation | null)
    /** Track new members of conversations */
    conversationMembershipAddedSubscription: (ConversationMembership | null)
    /** Track new updates to members of conversations */
    conversationMembershipUpdatedSubscription: (ConversationMembership | null)
    /** Track modifications of form answer groups */
    formAnswerGroupModifiedSubscription: (FormAnswerGroup | null)
    /** Track clients added to group appointment */
    groupAppointmentClientsAddedSubscription: (Appointment | null)
    /** Track added notes */
    noteAddedSubscription: (Note | null)
    /** Track user updates */
    userUpdatedSubscription: (UserNotificationsCount | null)
    /** Track video chats */
    videoChatsSubscription: (VideoChatsSubscriptionPayload | null)
    __typename: 'Subscription'
}


/** a subscription object */
export interface SubscriptionInstance {
    /** When a customer cancels, or is set to cancel, this will be a datetime of when access will cease */
    access_will_stop_at: (Scalars['String'] | null)
    /** Amount difference if switching to annual/monthly */
    amount_saved_if_plan_switched: (Scalars['Int'] | null)
    /** Amount savings from monthly to annual */
    amount_savings_on_base_plan: (Scalars['String'] | null)
    /** Total cost of subscription for the year */
    annual_total: (Scalars['String'] | null)
    /** Expiration of credit card on Stripe */
    card_expiration: (Scalars['String'] | null)
    /** Returns true if card is expired */
    card_expired: (Scalars['Boolean'] | null)
    /** Type of credit card on Stripe (Mastercard, Visa, Amex, etc.) */
    card_type: (Scalars['String'] | null)
    /** Number of clients under the user that owns the subscription */
    client_count: (Scalars['Int'] | null)
    /** Cost per month of annual plan */
    cost_of_annual_base_plan: (Scalars['String'] | null)
    /** Shows how many days are left in the users trial */
    days_left_in_trial: (Scalars['Int'] | null)
    /** Discounts currently active on Stripe account */
    discounts: (Discount[] | null)
    /** Array of discounts applied in Stripe (most possible is 2) */
    discounts_if_switched: (Discount[] | null)
    /** Returns true if there is already a scheduled subscription change on this account */
    has_scheduled_change: (Scalars['Boolean'] | null)
    /** The unique identifier of the subscription */
    id: Scalars['ID']
    /** The interval of the subscription */
    interval: (Scalars['String'] | null)
    /** Example of next invoice if switching plan */
    invoice_if_switched: (StripeInvoice | null)
    /** Returns true if the user is trialing */
    is_trialing: (Scalars['Boolean'] | null)
    /** Last four digits of credit card on Stripe */
    last_four: (Scalars['String'] | null)
    /** Last attempted invoice in Stripe */
    last_invoice: (StripeInvoice | null)
    /** When the user is scheduled to be locked out due to non-payment */
    locked_out_at: (Scalars['String'] | null)
    /** Total cost of subscription for the month */
    month_total: (Scalars['String'] | null)
    /** Cost per month of annual plan */
    monthly_cost_of_annual_base_plan: (Scalars['String'] | null)
    /** Cost per month for base plan */
    monthly_cost_of_base_plan: (Scalars['String'] | null)
    /** The number of providers that the subscription covers */
    paid_for_providers: (Scalars['String'] | null)
    /** The number of support staff that the subscription covers */
    paid_for_support: (Scalars['String'] | null)
    /** Percent difference if switching to annual/monthly */
    percent_change_if_plan_switched: (Scalars['Int'] | null)
    /** Percent savings from monthly to annual */
    percent_savings_on_base_plan: (Scalars['Int'] | null)
    /** Array of line items applied to Stripe subscription other than base plan (i.e fax line, extra providers, office ally etc.) */
    plan_add_ons: (StripePlan[] | null)
    /** The ID of the plan in Healthie */
    plan_id: (Scalars['String'] | null)
    /** Name of the plan in Stripe */
    plan_name: (Scalars['String'] | null)
    /** Returns true if the user is set to cancel */
    set_to_cancel: (Scalars['Boolean'] | null)
    /** Remaining balance on stripe customer */
    stripe_balance: (Scalars['String'] | null)
    /** The ID of the customer in Stripe */
    stripe_id: (Scalars['String'] | null)
    /** Stripe Subscription plan name */
    stripe_plan: (Scalars['String'] | null)
    /** The ID of the subscription in Stripe */
    stripe_subscription_id: (Scalars['String'] | null)
    /** Upcoming invoice in Stripe */
    upcoming_invoice: (StripeInvoice | null)
    /** Owner of this subscription */
    user: (User | null)
    /** The ID of the user who owns the subscription */
    user_id: (Scalars['String'] | null)
    __typename: 'SubscriptionInstance'
}


/** Base class for types */
export interface Success {
    human_id: (Scalars['String'] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'Success'
}


/** SuperBill */
export interface SuperBill {
    /** address */
    address: (Scalars['String'] | null)
    /** amount of super bill */
    amount_paid: (Scalars['String'] | null)
    /** amount due after amount paid is subtracted from total fee */
    balance_due: (Scalars['String'] | null)
    /** Returns cpt codes names list comma separated */
    cpt_code_names: (Scalars['String'] | null)
    /** CPT codes in use for this super bill */
    cpt_codes_super_bills: (CptCodesSuperBill[] | null)
    /** date super bill was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** date superbill was deleted */
    deleted_at: (Scalars['String'] | null)
    /** id of dietitian */
    dietitian_id: (Scalars['ID'] | null)
    /** ICD codes in use for this super bill */
    icd_codes_super_bills: (IcdCodesSuperBill[] | null)
    /** The unique identifier of the bill */
    id: Scalars['ID']
    /** license number */
    license_num: (Scalars['String'] | null)
    /** location */
    location: (Location | null)
    /** location id */
    location_id: (Scalars['ID'] | null)
    /** npi number */
    npi: (Scalars['String'] | null)
    /** patient of this superbill */
    patient: (User | null)
    /** dob of patient */
    patient_dob: (Scalars['String'] | null)
    /** id of patient */
    patient_id: (Scalars['ID'] | null)
    /** location */
    patient_location: (Location | null)
    /** patient location id */
    patient_location_id: (Scalars['ID'] | null)
    /** name of patient */
    patient_name: (Scalars['String'] | null)
    /** phone number of patient */
    patient_phone: (Scalars['String'] | null)
    /** place of service */
    place_of_service: (PlaceOfService | null)
    /** place of service id */
    place_of_service_id: (Scalars['ID'] | null)
    /** city */
    prov_city: (Scalars['String'] | null)
    /** email */
    prov_email: (Scalars['String'] | null)
    /** address line one */
    prov_line1: (Scalars['String'] | null)
    /** address line one */
    prov_line2: (Scalars['String'] | null)
    /** phone */
    prov_phone: (Scalars['String'] | null)
    /** state */
    prov_state: (Scalars['String'] | null)
    /** zip */
    prov_zip: (Scalars['String'] | null)
    /** provider */
    provider: (User | null)
    /** name of provider */
    provider_name: (Scalars['String'] | null)
    /** receipt line items of this super bill */
    receipt_line_items: (ReceiptLineItem[] | null)
    /** name of referrer */
    referrer_name: (Scalars['String'] | null)
    /** npi of referrer */
    referrer_npi: (Scalars['String'] | null)
    /** Date of service (as a date) */
    service_date: (Scalars['String'] | null)
    /** status */
    status: (Scalars['String'] | null)
    /** tax id */
    tax_id: (Scalars['String'] | null)
    /** total fee for superbill */
    total_fee: (Scalars['String'] | null)
    /** date super bill was updated */
    updated_at: Scalars['String']
    __typename: 'SuperBill'
}


/** SuperBill sorting enum */
export type SuperBillOrderKeys = 'NAME_ASC' | 'NAME_DESC' | 'SERVICE_DATE_ASC' | 'SERVICE_DATE_DESC' | 'AMOUNT_PAID_ASC' | 'AMOUNT_PAID_DESC' | 'AMOUNT_BILLED_ASC' | 'AMOUNT_BILLED_DESC' | 'STATUS' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC'


/** A Symptom Option */
export interface SymptomOption {
    /** Custom Symptoms use numeric IDs. Standard symptoms just use the symptom name */
    id: Scalars['ID']
    /** The symptom name */
    name: Scalars['String']
    /** The symptom value */
    value: Scalars['Int']
    __typename: 'SymptomOption'
}


/** A custom tag that can be applied on a user */
export interface Tag {
    /** The number of active users who have the tag */
    active_users_count: (Scalars['Int'] | null)
    /** The name of the user who created the tag */
    added_by: (Scalars['String'] | null)
    /** The number of archived users who have the tag */
    archived_users_count: (Scalars['Int'] | null)
    /** The time when the tag was created */
    created_at: Scalars['String']
    /** The unique identifier of the tag */
    id: Scalars['ID']
    /** A human-readable name of the tag */
    name: Scalars['String']
    /** The number of org members who have the tag */
    org_members_count: (Scalars['Int'] | null)
    /** The array of tagged users */
    tagged_users: (User[] | null)
    /** The last time the tag was updated */
    updated_at: Scalars['String']
    /** The user who created the tag */
    user: (User | null)
    __typename: 'Tag'
}


/** Tag sorting enum */
export type TagOrderKeys = 'NAME_ASC' | 'NAME_DESC' | 'ACTIVE_USERS_DESC' | 'ACTIVE_USERS_ASC' | 'ADDED_BY_DESC' | 'ADDED_BY_ASC' | 'ORG_MEMBERS_ASC' | 'ORG_MEMBERS_DESC'


/** Tasks for providers to create, complete, and optionally assign to client profiles */
export interface Task {
    /** The client tagged to this task */
    client: (User | null)
    /** The indentifier of the client tagged on this task */
    client_id: (Scalars['ID'] | null)
    /** If true, user has marked task complete */
    complete: (Scalars['Boolean'] | null)
    /** Date and time this task was completed */
    completed_at: (Scalars['String'] | null)
    /** User ID of the user who completed this task */
    completed_by_id: (Scalars['ID'] | null)
    /** Details describing this task */
    content: (Scalars['String'] | null)
    /** Date and time this task was created */
    created_at: Scalars['String']
    /** ID of an auto generator */
    created_by_generator_id: (Scalars['String'] | null)
    /** User id of user who created this task */
    created_by_id: (Scalars['ID'] | null)
    /** The user who created this task */
    creator: (User | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** Date and time this task was is due to be complete */
    due_date: (Scalars['String'] | null)
    /** If true, hide completed task from top nav bar */
    hidden: Scalars['Boolean']
    /** The unique identifier of the task */
    id: Scalars['ID']
    /** Get associated chat message with a task */
    note: (Note | null)
    /** Get relative path to view the note */
    note_path: (Scalars['String'] | null)
    /** Order in which tasks are displayed (ascending) */
    position: (Scalars['Int'] | null)
    /** Level of urgency for this task(0 = standard priority, 1 = high priority) */
    priority: Scalars['Int']
    /** ID of additional relation */
    ref_source: (Scalars['String'] | null)
    /** Reminder object for a given goal */
    reminder: (Reminder | null)
    /** If truem, user has viewed this task in top navbar  */
    seen: Scalars['Boolean']
    /** Indicates to smart task */
    smart: Scalars['Boolean']
    /** Get category of smart task */
    smart_category: (Scalars['String'] | null)
    /** The last date and time that the task was updated */
    updated_at: (Scalars['ISO8601DateTime'] | null)
    /** The user assigned to complete this task */
    user: (User | null)
    /** User ID of the user assigned to this task */
    user_id: (Scalars['ID'] | null)
    __typename: 'Task'
}


/** Task sorting enum */
export type TaskOrderKeys = 'TASK_ASC' | 'TASK_DESC' | 'CREATOR_ASC' | 'CREATOR_DESC' | 'ASSIGNEE_ASC' | 'ASSIGNEE_DESC' | 'CREATED_ASC' | 'CREATED_DESC' | 'PRIORITY_ASC' | 'PRIORITY_DESC' | 'DUE_DATE_ASC' | 'DUE_DATE_DESC' | 'CLIENT_NAME_DESC' | 'CLIENT_NAME_ASC' | 'COMPLETED_AT_ASC' | 'COMPLETED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'


/** Autogenerated return type of Toggle2Fa. */
export interface Toggle2FaPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'Toggle2FaPayload'
}


/** Autogenerated return type of ToggleAdvancedSettings. */
export interface ToggleAdvancedSettingsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ToggleAdvancedSettingsPayload'
}


/** Autogenerated return type of ToggleAvailability. */
export interface ToggleAvailabilityPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ToggleAvailabilityPayload'
}


/** Autogenerated return type of ToggleBaa. */
export interface ToggleBaaPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ToggleBaaPayload'
}


/** Autogenerated return type of TogglePaywall. */
export interface TogglePaywallPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'TogglePaywallPayload'
}


/** Autogenerated return type of ToggleReasonForAppt. */
export interface ToggleReasonForApptPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'ToggleReasonForApptPayload'
}


/** A transaction */
export interface TransactionType {
    /** The currency of the transaction */
    currency: (Scalars['String'] | null)
    /** The amount for the transaction after fees */
    displayed_amount: (Scalars['String'] | null)
    /** Charge ID associated to transaction. Can be matched with billing_item.stripe_charge_id */
    source_name: (Scalars['String'] | null)
    __typename: 'TransactionType'
}


/** Transfer sorting enum */
export type TransferOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'AMOUNT_DESC' | 'AMOUNT_ASC' | 'STATUS_DESC' | 'STATUS_ASC' | 'EXPECTED_TO_HAPPEN_ASC' | 'EXPECTED_TO_HAPPEN_DESC' | 'TRANSACTIONS_COUNT_ASC' | 'TRANSACTIONS_COUNT_DESC'


/** A transfer */
export interface TransferType {
    /** The amount for the transfer */
    amount: (Scalars['String'] | null)
    /** The currency of the transfer */
    currency: (Scalars['String'] | null)
    /** The amount to display (formatted and with currency symbol) */
    displayed_amount: (Scalars['String'] | null)
    /** The expected to happen date to display */
    displayed_expected_to_happen: (Scalars['String'] | null)
    /** The initiation date to display */
    displayed_initiated: (Scalars['String'] | null)
    /** The date that the transfer is expected to complete */
    expected_to_happen: (Scalars['String'] | null)
    /** Total of all fees deducted from all transactions */
    fees: (Scalars['String'] | null)
    /** Stripe ID for this transfer */
    id: Scalars['String']
    /** The initiation time of the transfer */
    initiated: (Scalars['String'] | null)
    /** The status for the transfer */
    status: (Scalars['String'] | null)
    /** Number of transactions */
    transactions_count: (Scalars['Int'] | null)
    /** The type of transfer */
    type: (Scalars['String'] | null)
    __typename: 'TransferType'
}


/** UniqueDeviceIdentifier object */
export interface UniqueDeviceIdentifier {
    /** The assigning authority for the device code */
    assigning_authority: (Scalars['String'] | null)
    /** The device code */
    device_code: (Scalars['String'] | null)
    /** The display name for the device code */
    display_name: (Scalars['String'] | null)
    /** The unique identifier of the identifier */
    id: Scalars['ID']
    /** The scoping entity for the device code */
    scoping_entity: (Scalars['String'] | null)
    /** The UDI code for the device */
    udi_code: (Scalars['String'] | null)
    __typename: 'UniqueDeviceIdentifier'
}


/** Autogenerated return type of UpdateCalorieLevel. */
export interface UpdateCalorieLevelPayload {
    assessment: (HealthAssessment | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'UpdateCalorieLevelPayload'
}


/** Autogenerated return type of UpdateClaimSubmitter. */
export interface UpdateClaimSubmitterPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'UpdateClaimSubmitterPayload'
}


/** Autogenerated return type of UpdateCurrency. */
export interface UpdateCurrencyPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'UpdateCurrencyPayload'
}


/** Autogenerated return type of UpdateHiddenSettings. */
export interface UpdateHiddenSettingsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'UpdateHiddenSettingsPayload'
}


/** Autogenerated return type of UpdateMacronutrientSplit. */
export interface UpdateMacronutrientSplitPayload {
    assessment: (HealthAssessment | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'UpdateMacronutrientSplitPayload'
}


/** Autogenerated return type of Update. */
export interface UpdatePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'UpdatePayload'
}


/** Autogenerated return type of UpdateUiConfiguration. */
export interface UpdateUiConfigurationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organization: (Organization | null)
    __typename: 'UpdateUiConfigurationPayload'
}


/** Autogenerated return type of UpdateUserEmail. */
export interface UpdateUserEmailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'UpdateUserEmailPayload'
}


/** An user entry, returns basic user information */
export interface User {
    /** Access Token (for iCal) */
    access_token: (Scalars['String'] | null)
    /** The status of whether the user is active or not (if false, patient is archived) */
    active: Scalars['Boolean']
    /** Active care plan for the user */
    active_care_plan: (CarePlan | null)
    /** Active group care plan for the user */
    active_group_care_plan: (CarePlan | null)
    /** All active patients associated with this user. */
    active_patients: User[]
    /** A number of all active patients associated with this user. */
    active_patients_count: (Scalars['Int'] | null)
    /** A collection of tags applied on the specific user */
    active_tags: (Tag[] | null)
    /** Additional tabs to display within the provider's view of the client profile */
    additional_client_profile_items: CustomSidebarOverride[]
    /** Additional links to display within gear menu in patient's header */
    additional_header_dropdown_items: CustomSidebarOverride[]
    /** additional phone number for user */
    additional_phone_number: (Scalars['String'] | null)
    /** additional unique record identifier for user */
    additional_record_identifier: (Scalars['String'] | null)
    /** Additional links to display on patient sidebar */
    additional_sidebar_items: CustomSidebarOverride[]
    /** Appointment prices associated with this user */
    advance_appointment_prices: (AdvanceAppointmentPrice[] | null)
    /**
     * @deprecated NO LONGER USED
     * The user's lead dyno affiliate info
     */
    affiliate: (Affiliate | null)
    /** The age of the user (in years) */
    age: (Scalars['String'] | null)
    /** All Verification fields left for the provider to fill out */
    all_verification_fields: ((Scalars['String'] | null)[] | null)
    /** Allergies, Sensitivities, Intolerances, and Preferences reported by client */
    allergy_sensitivities: (AllergySensitivity[] | null)
    /** Allow the user to send messages in community chat */
    allow_community_chat: (Scalars['Boolean'] | null)
    /** Allow the user to send direct messages in chat */
    allow_direct_chat: (Scalars['Boolean'] | null)
    /** All announcements associated with this user. For a dietitian it returns all announcements created including those created in organization if applicable. For a patient it returns announcements generated by his/her dietitian. */
    announcements: Announcement[]
    /** If the user has incomplete onboarding steps */
    any_incomplete_onboarding_steps: (Scalars['Boolean'] | null)
    /** If the user has courses shared with them */
    any_shared_courses: (Scalars['Boolean'] | null)
    /** If the user has docs shared with them */
    any_shared_documents: (Scalars['Boolean'] | null)
    /** If the user has courses shared with them */
    any_shared_incomplete_courses: (Scalars['Boolean'] | null)
    /** Whether the user has docs shared with them that they have not viewed */
    any_unviewed_documents: (Scalars['Boolean'] | null)
    /** AppleHealth for the user */
    apple_health: (AppleHealth | null)
    /** Appointment Locations for the user */
    appointment_locations: (AppointmentLocation[] | null)
    /** Appointment Settings for the user */
    appointment_setting: (AppointmentSetting | null)
    /** All Appointment Type Credits for this user */
    appointment_type_credits: AppointmentTypeCredit[]
    /** All available appointment types for the provider. */
    appointment_types: AppointmentType[]
    /** Appointments for the user */
    appointments: (Appointment[] | null)
    /** Datetime of archival. This field will only be populated with archived changes made after Aug 7, 2023 */
    archived_at: (Scalars['String'] | null)
    /** If true, user has seen popup explaining how to assign providers and clients to tasks */
    assign_tasks_seen: (Scalars['Boolean'] | null)
    /** Tasks assigned by the user to other users */
    assigned_tasks: (Task[] | null)
    /** When false, the user is opted out of the automatic charge feature. */
    auto_charge_enabled: Scalars['Boolean']
    /** All available contact types for the provider. */
    available_contact_types: (Scalars['String'] | null)
    /** The link to the avatar image (nil if no image has been uploaded) */
    avatar_url: (Scalars['String'] | null)
    /** The status of the user's bank account */
    bank_account_verified_status: (Scalars['String'] | null)
    /** If user still has verification steps for stripe, returns deadline timestamp */
    bank_verification_deadline: (Scalars['String'] | null)
    /** All Billing Items for this user */
    billing_items: BillingItem[]
    /** If a user has seen the message blast alert */
    blast_seen: (Scalars['Boolean'] | null)
    /** Displays bmi percentile for growth charts */
    bmi_percentile: (Scalars['String'] | null)
    /** Displays standard by which bmi percentile is calculated */
    bmi_percentile_standard: (Scalars['String'] | null)
    /** The brand that the user made */
    brand: (Brand | null)
    /** The URL of the brand's alternative logo */
    brand_alt_logo_url: (Scalars['String'] | null)
    /** The URL of the brand logo */
    brand_logo_url: (Scalars['String'] | null)
    /** The Brand Name Of the User */
    brand_name: (Scalars['String'] | null)
    /** The name of the Brand */
    branded_name: (Scalars['String'] | null)
    /** Broken synced calendar */
    broken_synced_cal: (ExternalCalendar | null)
    /** HTML String to display on top of the calendar */
    calendar_text: (Scalars['String'] | null)
    /** Calendar timezone */
    calendar_timezone: (Scalars['String'] | null)
    /** Call references made for a patient's insurances */
    call_references: (CallReference[] | null)
    /** If true, has Zus credential */
    can_access_zus: (Scalars['Boolean'] | null)
    /** Allow the user to add clients */
    can_add_clients: (Scalars['Boolean'] | null)
    /** If the provider can add members */
    can_add_members: (Scalars['Boolean'] | null)
    /** If true this user to archive clients */
    can_archive_clients: (Scalars['Boolean'] | null)
    /** Allow this user to charge clients */
    can_charge_clients: (Scalars['Boolean'] | null)
    /** Allow the user to Check Eligibility */
    can_check_eligibility: (Scalars['Boolean'] | null)
    /** If true, the user can delete charting notes */
    can_delete_charting_notes: (Scalars['Boolean'] | null)
    /** If true this user to delete faxes */
    can_delete_faxes: (Scalars['Boolean'] | null)
    /** If true,  the user to edit Appointment Types */
    can_edit_appointment_types: (Scalars['Boolean'] | null)
    /** If true, the user can edit brand */
    can_edit_brand: (Scalars['Boolean'] | null)
    /** If true, the user can edit client credit */
    can_edit_credit: (Scalars['Boolean'] | null)
    /** If true, the user can edit org documents */
    can_edit_docs: (Scalars['Boolean'] | null)
    /** If the provider can edit forms */
    can_edit_forms: (Scalars['Boolean'] | null)
    /** If the provider can edit members */
    can_edit_members: (Scalars['Boolean'] | null)
    /** If true, the user to edit org calendar */
    can_edit_org_calendar: (Scalars['Boolean'] | null)
    /** If true, the user can edit packages */
    can_edit_packages: (Scalars['Boolean'] | null)
    /** If true, the user can add, edit and delete products */
    can_edit_products: (Scalars['Boolean'] | null)
    /** If true, the user can add or remove clients within programs */
    can_edit_program_clients: (Scalars['Boolean'] | null)
    /** If true, the user can edit programs */
    can_edit_programs: (Scalars['Boolean'] | null)
    /** Allow the user to edit account settings */
    can_edit_settings: (Scalars['Boolean'] | null)
    /** If the provider organization can have suborgs */
    can_have_suborgs: (Scalars['Boolean'] | null)
    /** If the user can add suborgs */
    can_insert_suborgs: (Scalars['Boolean'] | null)
    /** If true, the user can lock other providers charting notes */
    can_lock_others_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can lock their own charting notes */
    can_lock_own_charting_notes: (Scalars['Boolean'] | null)
    /** If the provider can mark tasks that are assigned to other org members as completed */
    can_mark_assigned_tasks_to_other_org_members_as_completed: (Scalars['Boolean'] | null)
    /** If true, the user can merge clients */
    can_merge_clients: (Scalars['Boolean'] | null)
    /** If true, can order new lab using labs widget */
    can_order_labs: (Scalars['Boolean'] | null)
    /** Allow this user to schedule appointments (Linked accounts) */
    can_schedule_appointments: (Scalars['Boolean'] | null)
    /** If true, user can see products tab in client profile and see fullscript box on homepage if not linked to fullscript */
    can_see_fullscript_tab: (Scalars['Boolean'] | null)
    /** Show insurance info for a client */
    can_see_insurance_authorization: (Scalars['Boolean'] | null)
    /** When true, the user should see option to use erx dosespot */
    can_see_option_to_use_erx_dosespot: (Scalars['Boolean'] | null)
    /** If true, can view transfer tab in billing page */
    can_see_transfers: (Scalars['Boolean'] | null)
    /** If true, the user can sign other providers charting notes */
    can_sign_others_charting_notes: (Scalars['Boolean'] | null)
    /** If true, the user can sign their own charting notes */
    can_sign_own_charting_notes: (Scalars['Boolean'] | null)
    /** If true, can access to labs widget */
    can_view_labs: (Scalars['Boolean'] | null)
    /** If True, the user will be able to add addendums for an other org member locked form answer groups */
    can_write_org_addendums: (Scalars['Boolean'] | null)
    /** If true, the user cannot access org settings */
    cannot_access_org_member_settings: (Scalars['Boolean'] | null)
    /**
     * @deprecated Use can_lock_own_charting_notes instead
     * If True, the user will not be able to lock form answer groups
     */
    cannot_lock_form_answer_groups: (Scalars['Boolean'] | null)
    /** Fetch paginated stripe customer accounts with associated errors or soon to expire credit cards */
    card_issues_count: (Scalars['Int'] | null)
    /** A JSON object containing validation errors for the patient's CDA file */
    cda_validation_errors_json: (Scalars['String'] | null)
    /** The Patient's CDA */
    cda_xml: (Scalars['String'] | null)
    /** Hash for Chameleon */
    chameleon_hash: (Scalars['String'] | null)
    /** When true, user will be able to check insurance eligibility via Change Healthcare */
    change_healthcare_insurance_eligibility_connected: (Scalars['Boolean'] | null)
    /** Clearstep Connection for the user. If the Shapa integration is enabled, then the Clearstep integration should automatically appear as enabled */
    clearstep_connection: (ShapaConnection | null)
    /** Info about how a user was acquired */
    client_source: (ClientSource | null)
    /** Completed Tasks of organzation if user has permission, or user if not */
    completed_tasks: (Task[] | null)
    /** Whether the user has accepted the lab order waiver */
    consented_to_labs: (Scalars['Boolean'] | null)
    /** course membership scoped by specific course */
    course_membership_via_course: (CourseMembership | null)
    /** All course memberships for this user */
    course_memberships: (CourseMembership[] | null)
    /**
     * @deprecated This field has a typo. use User.course_memberships instead
     * All course memberships for this user
     */
    course_membrships: CourseMembership[]
    /** The date this user created an account */
    created_at: (Scalars['String'] | null)
    /** The credit balance of the user */
    credit_balance: (Scalars['String'] | null)
    /** The most recent generated summary. Null if no summary has been generated */
    current_summary: (GeneratedSummary | null)
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** All custom custom emails associated with this user. */
    custom_custom_emails: (CustomEmail[] | null)
    /** Custom Metric of the user */
    custom_metrics: CustomMetric[]
    /** The default currency for the user */
    default_currency: (Scalars['String'] | null)
    /** When set for a client, the provider's Dosespot iFrame will launch into this clinic. When null, the Dosespot iframe will launch into the provider's default clinic. This will error unless the provider is connected to that clinic in Dosespot. Only used for patients. */
    default_dosespot_clinic_id: (Scalars['ID'] | null)
    /** Default external videochat URL for scheduling with this user */
    default_external_video_url: (Scalars['String'] | null)
    /** The id of the users default onboarding flow */
    default_onboarding_flow: (OnboardingFlow | null)
    /** The id of the users default onboarding flow */
    default_onboarding_flow_id: (Scalars['String'] | null)
    /** Patient's default pharmacy. Only applicable to dosespot users */
    default_pharmacy: (Pharmacy | null)
    /** Default stripe payment card */
    default_stripe_customer_detail_id: (Scalars['ID'] | null)
    /** Check that user has no video or audio devices (or both) */
    devices_unavailability: (Scalars['Boolean'] | null)
    /** Dexcom Connection for the user */
    dexcom_connection: (DexcomConnection | null)
    /** diagnoses for the user */
    diagnoses: (Diagnosis[] | null)
    /** Dietitian of this user */
    dietitian: (User | null)
    /** The Dietitian ID of the Client */
    dietitian_id: (Scalars['String'] | null)
    /** Dismisses a small advertisement about the ability to sync calendars */
    dimissed_calendar_prompt: (Scalars['Boolean'] | null)
    /** Dismisses a notice warn about charting note addendum */
    dismissed_charting_note_addendum_warning: (Scalars['Boolean'] | null)
    /** If true, do not show fullscript box in provider homepage */
    dismissed_fullscript: (Scalars['Boolean'] | null)
    /** Dismisses the warning while insurance eligibility checking should not be shown */
    dismissed_insurance_eligibility_warning: (Scalars['Boolean'] | null)
    /** Dismisses the warning while locking a charting note should not be shown */
    dismissed_lock_charting_note_warning: (Scalars['Boolean'] | null)
    /** If true, do not show fullscript box in provider homepage */
    dismissed_products_tab: (Scalars['Boolean'] | null)
    /** The Brand that controls the look of the website for the user */
    displayed_brand: (Brand | null)
    /** date of birth of user */
    dob: (Scalars['String'] | null)
    /** An ID used for document, course, and conversation sharing */
    doc_share_id: (Scalars['String'] | null)
    /** Number of notifications from Dosespot (e-prescriptions) */
    dosespot_notification_count: (Scalars['Int'] | null)
    /** Dosespot assigned ID for this patient. nil if the patient is not connected to Dosespot */
    dosespot_patient_id: (Scalars['String'] | null)
    /** The email of this user */
    email: (Scalars['String'] | null)
    /** The erx dosespot role */
    erx_dosespot_role: (Scalars['String'] | null)
    /** Amount of money waiting to be paid out, as a float */
    estimated_future_payouts: (Scalars['Float'] | null)
    /** Patient cards that have expired (requires can_see_billing for org level patients) */
    expired_client_cards_count: (Scalars['Int'] | null)
    /** Patient cards that will expire by next recurring payment (requires can_see_billing for org level patients) */
    expiring_client_cards_count: (Scalars['Int'] | null)
    /** Family history conditions for user */
    family_history_conditions: (FamilyHistoryCondition[] | null)
    /** Fax line request data */
    fax_line_request: (FaxLineRequest | null)
    /** Fax number belonging to the user */
    fax_number: (Scalars['String'] | null)
    /** Feature Toggle of the user */
    feature_toggle: (FeatureToggle | null)
    /** Date of the first client entry */
    first_client_entry_date: (Scalars['String'] | null)
    /** The first (preferred) name of this user */
    first_name: (Scalars['String'] | null)
    /** The first name and last initial of the user */
    first_name_last_initial: (Scalars['String'] | null)
    /** Fitbit for the user */
    fitbit: (Fitbit | null)
    /** The number of food entries the user has */
    food_entries_count: (Scalars['String'] | null)
    /** All filled out forms for this user */
    form_answer_groups: (FormAnswerGroup[] | null)
    /** Formatted string of money waiting to be paid out, including currency symbol */
    formatted_estimated_future_payouts: (Scalars['String'] | null)
    /** The full legal name of this user */
    full_legal_name: (Scalars['String'] | null)
    /**
     * The full legal name of this user with preferred name in parentheses. e.g 'Jonathan (Jon) Jones'
     * 
     */
    full_legal_name_with_preferred: (Scalars['String'] | null)
    /** The full name of the user */
    full_name: (Scalars['String'] | null)
    /** Fullscript for the user */
    fullscript: (fullscript | null)
    /** Practitioner id for the user's Fullscript account */
    fullscript_practitioner_id: (Scalars['String'] | null)
    /** gender of user */
    gender: (Scalars['String'] | null)
    /** Gender identity of user (typically nil unless gender field is 'Other') */
    gender_identity: (Scalars['String'] | null)
    /** User gender identity code */
    gender_identity_code: (Scalars['String'] | null)
    /** id of generated reports folder */
    generated_reports_folder_id: (Scalars['String'] | null)
    /** The Number of goals the user has */
    goals_count: (Scalars['String'] | null)
    /** The Google Calendar Account for this user */
    google_calendar: (ExternalCalendar | null)
    /** Google Fit for the user */
    google_fit: (GoogleFit | null)
    /** The name of the patients user group */
    group_name: (Scalars['String'] | null)
    /** When true, the user can see client portal setting in notification contact form */
    has_access_to_client_portal_setting_in_notification_contact: (Scalars['Boolean'] | null)
    /** When true, the user can access CMS 1500 content in the CMS 1500 tab */
    has_access_to_cms_1500s_content: (Scalars['Boolean'] | null)
    /** When true, the user can see insurance billing automation features */
    has_access_to_insurance_billing_automation: (Scalars['Boolean'] | null)
    /** When true, the user can see the connect button to sign up on dosespot on the settings integrations section */
    has_access_to_sign_up_on_dosespot: (Scalars['Boolean'] | null)
    /**
     * @deprecated Megazap is now enabled by default, so this is always true
     * When true, the user can see the zus megazap component
     */
    has_access_to_zus_megazap_component: (Scalars['Boolean'] | null)
    /** If true, the user's account can take ACH payments */
    has_ach: (Scalars['Boolean'] | null)
    /** If true, user has at least one entry type to track */
    has_any_entry_types: (Scalars['Boolean'] | null)
    /** If the user's organization has API access */
    has_api_access: (Scalars['Boolean'] | null)
    /** If true, the user has access to download the mobile app */
    has_available_mobile_app: (Scalars['Boolean'] | null)
    /** (Considered public) If true, the user has bookable appts */
    has_bookable_appts: (Scalars['Boolean'] | null)
    /** (Considered public) If true, the user has bookable packages */
    has_bookable_packages: (Scalars['Boolean'] | null)
    /** Whether the user has CCDA feature available */
    has_ccda: (Scalars['Boolean'] | null)
    /** True if the user has change health connection */
    has_change_health: (Scalars['Boolean'] | null)
    /** If true, the user has complted their intake forms */
    has_completed_intake_forms: (Scalars['Boolean'] | null)
    /** If courses exist for an organization or provider */
    has_courses: (Scalars['Boolean'] | null)
    /** If true, the user has created a password */
    has_created_password: (Scalars['Boolean'] | null)
    /** Allow the user to change the color of their calendar */
    has_custom_color_schemes: (Scalars['Boolean'] | null)
    /** Check if user has any custom food item */
    has_custom_food: (Scalars['Boolean'] | null)
    /** Check if user has any created meals */
    has_custom_meals: (Scalars['Boolean'] | null)
    /** When true, the user can set scheduling priority levels for providers */
    has_custom_scheduling_prioritization: (Scalars['Boolean'] | null)
    /** When true, the user can have custom text for SMS reminders for specific appointment types */
    has_custom_text_reminders: (Scalars['Boolean'] | null)
    /** If the user is marked as a developer and can modify webhooks and api keys. */
    has_developer_access: (Scalars['Boolean'] | null)
    /** If true, user is a provider with a dosespot account linked */
    has_dosespot: (Scalars['Boolean'] | null)
    /** If True, the user has enterprise plan */
    has_enterprise_plan: (Scalars['Boolean'] | null)
    /** If True, the user has expanded vbc charting fields */
    has_expanded_vbc_charting_fields: (Scalars['Boolean'] | null)
    /** True if the user can add external videochat URLs */
    has_external_videochat_urls: (Scalars['Boolean'] | null)
    /** If true, the user has connected their Fullscript account to Healthie */
    has_fullscript: (Scalars['Boolean'] | null)
    /** If true, the user have available appointment slots in future */
    has_future_availabilities: (Scalars['Boolean'] | null)
    /** True if the user has access to goal title links */
    has_goal_title_links: (Scalars['Boolean'] | null)
    /** Can the user receive inbound faxes? */
    has_inbound_faxing: (Scalars['Boolean'] | null)
    /** Allow this user to access increased branding */
    has_increased_branding: (Scalars['Boolean'] | null)
    /** Insurance Pay checks to see if there IS an insurance policy for the client */
    has_insurance_pay: (Scalars['Boolean'] | null)
    /** If true, patient's most recent demographic information(phone, dob, location, gender, name) could not be updated in dosespot because information is invalid */
    has_invalid_dosespot_info: (Scalars['Boolean'] | null)
    /** True if the user has any lab orders */
    has_lab_orders: (Scalars['Boolean'] | null)
    /** Whether users has a lab order from lab_testing_api */
    has_lab_testing_api_orders: (Scalars['Boolean'] | null)
    /** If true, user is a provider with a living plate linked */
    has_living_plate: (Scalars['Boolean'] | null)
    /** When true, the user can have a custom email sent out when an appointment is marked as no-show */
    has_marked_as_no_show_email: (Scalars['Boolean'] | null)
    /** When true, the user can have a custom email sent out when an appointment is marked as rescheduled */
    has_marked_as_rescheduled_email: (Scalars['Boolean'] | null)
    /** True if user is able to see conversations of all organization members */
    has_org_chat_access: (Scalars['Boolean'] | null)
    /** Check to see if the user has any other active org members */
    has_other_org_members: (Scalars['Boolean'] | null)
    /** When true, the user has their own appointment setting */
    has_own_appointment_setting: (Scalars['Boolean'] | null)
    /** When true, the user has their own custom emails */
    has_own_custom_emails: (Scalars['Boolean'] | null)
    /** When true, the provider can control settings around allow rescheduling past appointments. */
    has_past_rescheduling_settings: (Scalars['Boolean'] | null)
    /** Whether or not this user has plus plan and above */
    has_plus_or_above_plan: (Scalars['Boolean'] | null)
    /** True if the user has PP features */
    has_practice_plus: (Scalars['Boolean'] | null)
    /** Has had payment in the last 30 days */
    has_recent_payments: (Scalars['Boolean'] | null)
    /** True if the user has rupa connection */
    has_rupa_health: (Scalars['Boolean'] | null)
    /** Self Pay checks to see if there is NOT an insurance policy for the client */
    has_self_pay: (Scalars['Boolean'] | null)
    /** If true, user has shared appointment settings with at least one memember in org */
    has_shared_appt_setting_with_org: (Scalars['Boolean'] | null)
    /** If the provider controls settings around enforcing state licensing restrictions for appointments */
    has_state_licensing_restrictions: (Scalars['Boolean'] | null)
    /** If true, suborganization owner has stripe account from the parent organization owner */
    has_stripe_id_from_parent_org: (Scalars['Boolean'] | null)
    /** Whether the user has a synced calendar */
    has_synced_cal: (Scalars['Boolean'] | null)
    /** When true, the user can set appointment settings for specific appointment types */
    has_type_specific_appointment_settings: (Scalars['Boolean'] | null)
    /** Check to see if the user has any user groups */
    has_user_groups: (Scalars['Boolean'] | null)
    /** Check to see if the user can switch to another user */
    has_user_switch_options: (Scalars['Boolean'] | null)
    /** True if the user is allowed to use Zoom */
    has_zoom_access: (Scalars['Boolean'] | null)
    /** Heads Up Health SSO link for user; always returns nil if Heads Up Health add-on is not enabled */
    heads_up_health_sso_link: (Scalars['String'] | null)
    /** height of user */
    height: (Scalars['Float'] | null)
    /** Displays height percentile for growth charts */
    height_percentile: (Scalars['String'] | null)
    /** Displays standard by which height percentile is calculated */
    height_percentile_standard: (Scalars['String'] | null)
    /** String of height including units */
    height_str: (Scalars['String'] | null)
    /** Hash for Help Scout */
    helpscout_hash: (Scalars['String'] | null)
    /** ID of the human */
    human_id: (Scalars['ID'] | null)
    /** The unique identifier of the user */
    id: Scalars['ID']
    /** A collection of immunizations for this client */
    immunizations: (Immunization[] | null)
    /** Implantable device users for the user */
    implantable_devices_users: (ImplantableDeviceUser[] | null)
    /** True if User organization with multiple providers */
    in_multiple_providers_org: (Scalars['Boolean'] | null)
    /** If a user is in an org */
    in_org: (Scalars['Boolean'] | null)
    /** Incomplete Tasks of organization if user has permissions, or user if not */
    incomplete_tasks: (Task[] | null)
    /** Insurance Authorization for this user */
    insurance_authorization: (InsuranceAuthorizationType | null)
    /**
     * @deprecated NO LONGER USED
     * Hash for intercom
     */
    intercom_hash: (Scalars['String'] | null)
    /** The invite code for the provider */
    invite_code: (Scalars['String'] | null)
    /** Get filter string for user invoices */
    invoices_filter: (Scalars['String'] | null)
    /** Check if the user is an active provider in an organization */
    is_active_provider: (Scalars['Boolean'] | null)
    /** True if chat autoresponding is active */
    is_chat_autoresponding: (Scalars['Boolean'] | null)
    /** boolean for if the user has ever logged in to Healthie as a provider */
    is_first_time_provider: (Scalars['Boolean'] | null)
    /** If true, the user is in an organization */
    is_org: (Scalars['Boolean'] | null)
    /** True if the user an organization admin */
    is_org_admin: (Scalars['Boolean'] | null)
    /** If true, the user is in an organization with more than one user */
    is_org_with_multiple_users: (Scalars['Boolean'] | null)
    /** the status of whether the user is the owner of their org or not */
    is_owner: (Scalars['Boolean'] | null)
    /** the status of whether the user is a patient or not */
    is_patient: (Scalars['Boolean'] | null)
    /** Whether a user is a super admin */
    is_super_admin: (Scalars['Boolean'] | null)
    /** Whether the user is trialing */
    is_trialing: (Scalars['String'] | null)
    /** If the user aware they switched providers on specific login (can only do for current user) */
    knows_about_provider: (Scalars['Boolean'] | null)
    /**
     * @deprecated NO LONGER USED
     * The client-side Kustomer API Key. (Only applies to specific custom whitelabels)
     */
    kustomer_api_key: (Scalars['String'] | null)
    /** last date user was active through web or mobile */
    last_active: (Scalars['String'] | null)
    /** last date the user was active */
    last_activity: (Scalars['String'] | null)
    /** String of the last date the user was active */
    last_activity_string: (Scalars['String'] | null)
    /** The User's last active appointment object */
    last_app: (Appointment | null)
    /** the last payment made by client */
    last_billing_item: (BillingItem | null)
    /** id of last conversation */
    last_conversation_id: (Scalars['String'] | null)
    /** The last name of this user */
    last_name: (Scalars['String'] | null)
    /** last date the user signed in */
    last_sign_in_at: (Scalars['String'] | null)
    /** Last time allergy/sensitivity was updated */
    last_updated_allergy: (AllergySensitivity | null)
    /** The last weighing date of the user */
    last_weighing_date: (Scalars['String'] | null)
    /** Link to most recent roadmap article on helpscout */
    latest_article_link: (Scalars['String'] | null)
    /** Last product roadmap article number */
    latest_article_number: (Scalars['Int'] | null)
    /** The legal first name of this user */
    legal_name: (Scalars['String'] | null)
    /** license number of user */
    license_num: (Scalars['String'] | null)
    /** Graphs to show in line graph form */
    line_graph_metric_categories: ((Scalars['String'] | null)[] | null)
    /** A collections of users who are in relationship with this client */
    linked_relatives: (NotificationContact[] | null)
    /** Link automatically signs user into Living plate dashboard without entering login credentials */
    living_plate_magic_link: (Scalars['String'] | null)
    /** The address of this user */
    location: (Location | null)
    /** All available locations for the client. */
    locations: (Location[] | null)
    /** Fetch count of medications for a given patient */
    medications_count: (Scalars['Int'] | null)
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata: (Scalars['String'] | null)
    /** The number of metric entries the user has */
    metric_entries_count: (Scalars['String'] | null)
    /** The number of mirror entries the user has */
    mirror_entries_count: (Scalars['String'] | null)
    /** The amount of money the user owes. If the user is a provider this will return 0 */
    money_owed: (Scalars['String'] | null)
    /** All tasks assigned to user */
    my_tasks: (Task[] | null)
    /** The full name of the user */
    name: (Scalars['String'] | null)
    /** The User's next upcoming active appointment object */
    next_app: (Appointment | null)
    /**
     * @deprecated use next_appt_date instead
     * The User's next upcoming active appointment date (method)
     */
    next_appointment: (Scalars['String'] | null)
    /** The Users next upcoming active appointment date (field) */
    next_appt_date: (Scalars['String'] | null)
    /** The next onboarding item that the user has to fill */
    next_onboarding_step: (OnboardingItem | null)
    /** Recurring payment with next upcoming payment date */
    next_recurring_payment: (RecurringPayment | null)
    /** The next step preventing the user from moving forward. nil if user has completed all steps */
    next_required_step: (Scalars['String'] | null)
    /** If True, the user has non paid plan */
    non_paid: (Scalars['Boolean'] | null)
    /** notification contacts for the user */
    notification_contacts: (NotificationContact[] | null)
    /** Notification Settings for the user */
    notification_setting: (NotificationSetting | null)
    /** NPI of the user */
    npi: (Scalars['String'] | null)
    /** Number of entries for the client */
    num_entries: (Scalars['String'] | null)
    /** All offering_coupons associated with this provider. */
    offering_coupons: (OfferingCoupon[] | null)
    /** All available offerings for the provider. */
    offerings: Offering[]
    /** User onc gender identity */
    onc_gender_identity: (Scalars['String'] | null)
    /** The number open payments for the user */
    open_payments_count: (Scalars['Int'] | null)
    /** Returns name of the org if exists, otherwise returns full name */
    org_name_or_self_name: (Scalars['String'] | null)
    /** The user of the organization token */
    organization: (Organization | null)
    /** The organization membership of the user */
    organization_membership: (OrganizationMembership | null)
    /** Single Other ID number for the user */
    other_id_number: (OtherIdNumber | null)
    /** All other id numbers for this user */
    other_id_numbers: (OtherIdNumber[] | null)
    /** Other organization members. */
    other_org_members: User[]
    /** Other organization members for sharing */
    other_org_members_for_sharing: User[]
    /** The IDs of other care team members for the client */
    other_provider_ids: ((Scalars['ID'] | null)[] | null)
    /** The Outlook Calendar Account for this user */
    outlook: (ExternalCalendar | null)
    /** Status paid for fax */
    paid_for_fax_status: (Scalars['String'] | null)
    /**
     * @deprecated NO LONGER USED.
     * boolean for If a user is a part of the journify organization
     */
    part_of_journify: (Scalars['Boolean'] | null)
    /** When true, the user is a patient and has auto submit cms1500 enabled */
    patient_has_cms1500_auto_submission_enabled: (Scalars['Boolean'] | null)
    /** All patients associated with this user. */
    patients: User[]
    /** The number of all active patients associated with this user. */
    patients_count: (Scalars['Int'] | null)
    /** the number of notifications belonging to a patient */
    patients_notification_count: (Scalars['Int'] | null)
    /** All patients with a credit card on file associated with this user. */
    patients_with_cc: User[]
    /** When true, the user will never be prompted to change their timezone */
    permanently_disable_tz_prompt: (Scalars['Boolean'] | null)
    /** The phone number of the user */
    phone_number: (Scalars['String'] | null)
    /** Place of service for this user */
    place_of_service: (PlaceOfService | null)
    /** All policies associated with this user */
    policies: (Policy[] | null)
    /** All policies associated with this user */
    policiesOrderAscending: (Policy[] | null)
    /** Preferred language based on language code */
    preferred_language: (Scalars['String'] | null)
    /** User preferred language code */
    preferred_language_code: (Scalars['String'] | null)
    /** Fetch count of prescriptions for a given patient pulled from Dosespot */
    prescriptions_count: (Scalars['Int'] | null)
    /** Displays administrator account as other user account */
    pretend_to_be: (Scalars['String'] | null)
    /** The primary ethnicity value based on ethnicity code */
    primary_ethnicity: (Scalars['String'] | null)
    /** User primary ethnicity code */
    primary_ethnicity_code: (Scalars['String'] | null)
    /** User primary race */
    primary_race: (Scalars['String'] | null)
    /** User primary race code */
    primary_race_code: (Scalars['String'] | null)
    /** Problems for the user */
    problems: ((Problem | null)[] | null)
    /** Professions of the user */
    professions: (Profession[] | null)
    /** Pronouns that the client identifies with */
    pronouns: (Scalars['String'] | null)
    /** Provider appointment locations */
    provider_appointment_locations: (ProviderAppointmentLocation[] | null)
    /** When true, the user is a provider and has auto submit cms1500 enabled */
    provider_has_cms1500_auto_submission_enabled: (Scalars['Boolean'] | null)
    /** All providers associated with the client */
    providers: (User[] | null)
    /** Meal Plans from Living Plate */
    purchased_meal_plans: (MealPlan[] | null)
    /** qualifications of the user */
    qualifications: (Scalars['String'] | null)
    /** quicks notes for a given user */
    quick_notes: (Scalars['String'] | null)
    /** All reactivation custom emails associated with this user. */
    reactivation_emails: (CustomEmail[] | null)
    /** unique record identifier for user */
    record_identifier: (Scalars['String'] | null)
    /** referrals for the user */
    referrals: (Referral[] | null)
    /** An array of referring physicians associated to all referrals associated with a client */
    referring_physicians: (ReferringPhysician[] | null)
    /** NPI of the referring provider */
    referring_provider_id: (Scalars['String'] | null)
    /** Name of the referring provider */
    referring_provider_name: (Scalars['String'] | null)
    /** NPI of the referring provider */
    referring_provider_npi: (Scalars['String'] | null)
    /** The date range filter selections for each report */
    reports_date_filter_selection: (ReportsDateFilterSelection | null)
    /** The number of forms that have been requested for the user */
    requested_form_count: (Scalars['Int'] | null)
    /** If true, the user is a patient with required fields to create dosespot patient. If false, then either the provider doesn't have a linked dosespot account, or the patient has all required fields. */
    required_dosespot_fields: (Scalars['String'] | null)
    /** User subscription has been inactive and needs to be reactivated before allowing acccess */
    requires_reactivation: (Scalars['Boolean'] | null)
    /** User subscription has been inactive for 91+ days and should receive 7 day trial upon reactivation */
    requires_shortened_trial: (Scalars['Boolean'] | null)
    /** Patient ID on the rupa health */
    rupa_patient_id: (Scalars['String'] | null)
    /** Providers with higher priority will be chosen first when availability is generated for self-scheduling. Defaults to 0 */
    scheduling_priority: (Scalars['String'] | null)
    /** The secondary ethnicity value based on ethnicity code */
    secondary_ethnicity: (Scalars['String'] | null)
    /** User secondary ethnicity code */
    secondary_ethnicity_code: (Scalars['String'] | null)
    /** User secondary race */
    secondary_race: (Scalars['String'] | null)
    /** User secondary race code */
    secondary_race_code: (Scalars['String'] | null)
    /** True if user is up to date with all product roadmap articles */
    seen_last_article: (Scalars['Boolean'] | null)
    /** A link that takes a user to set their password. This will return null if the user has set a password, or the authenticated user is not an admin */
    set_password_link: (Scalars['String'] | null)
    /** Sex of the user (Stated on ID card for insurance purposes) */
    sex: (Scalars['String'] | null)
    /** Sexual orientation of the user */
    sexual_orientation: (Scalars['String'] | null)
    /** The sexual orientation code of the user, corresponds to sexual orientation */
    sexual_orientation_code: (Scalars['String'] | null)
    /** The sexual orientation value if other */
    sexual_orientation_other: (Scalars['String'] | null)
    /** Shapa Connection for the user */
    shapa_connection: (ShapaConnection | null)
    /** An ID that includes the shard the user is on. Matches ID unless user is on a custom shard */
    shard_aware_id: Scalars['ID']
    /** Show appointments tab on the sidebar */
    show_appointments_tab: (Scalars['Boolean'] | null)
    /** Show "Billing Dropdown" on patient sidebar */
    show_billing_dropdown_item: (Scalars['Boolean'] | null)
    /** Show billing tab on the sidebar */
    show_billing_tab: (Scalars['Boolean'] | null)
    /** Show brand link in the header */
    show_brand_tab: (Scalars['Boolean'] | null)
    /** Allow this user to view care plan (Linked accounts) */
    show_care_plan_area: (Scalars['Boolean'] | null)
    /** Show chat tab on the sidebar */
    show_chat_tab: (Scalars['Boolean'] | null)
    /** If to show the client credits in the UI */
    show_client_appointment_credits: (Scalars['Boolean'] | null)
    /** Show Cms1500s tab on the sidebar */
    show_cms1500s_tab: (Scalars['Boolean'] | null)
    /** Show the option to view the dashboard */
    show_dashboard: (Scalars['Boolean'] | null)
    /** Show documents tab on the sidebar */
    show_documents_tab: (Scalars['Boolean'] | null)
    /** Show education tab on the sidebar */
    show_education_tab: (Scalars['Boolean'] | null)
    /** Display DOB next to the name of the client */
    show_expanded_label: (Scalars['Boolean'] | null)
    /** Show forms tab on the sidebar */
    show_forms_tab: (Scalars['Boolean'] | null)
    /** Allow this user to view goals (Linked accounts) */
    show_goals_area: (Scalars['Boolean'] | null)
    /** If true, user will be able to view Grow settings page */
    show_grow: (Scalars['Boolean'] | null)
    /** Show "Integrations" option in gear menu */
    show_integrations_dropdown_item: (Scalars['Boolean'] | null)
    /** Allow this user to view journal entries (Linked accounts) */
    show_journal_entries_area: (Scalars['Boolean'] | null)
    /** Show the organization tab on sidebar */
    show_org_tab: (Scalars['Boolean'] | null)
    /** Show packages tab on the sidebar */
    show_packages_tab: (Scalars['Boolean'] | null)
    /** Show "Update Payment Methods" option in gear menu */
    show_payment_methods_dropdown_item: (Scalars['Boolean'] | null)
    /** Show payments tab on the sidebar */
    show_payments_tab: (Scalars['Boolean'] | null)
    /** Show received fax tab on the sidebar */
    show_received_fax_tab: (Scalars['Boolean'] | null)
    /** Show reports tab on the sidebar */
    show_reports_tab: (Scalars['Boolean'] | null)
    /** Show scheduled tab on the chat page */
    show_scheduled_chat_tab: (Scalars['Boolean'] | null)
    /** Show sent fax tab on the sidebar */
    show_sent_fax_tab: (Scalars['Boolean'] | null)
    /** Show subscription link in the settings dropdown */
    show_subscription_link: (Scalars['Boolean'] | null)
    /** If a user has seen the message blast alert */
    show_superbill_org_select: (Scalars['Boolean'] | null)
    /** Show Superbill tab on the sidebar */
    show_superbills_tab: (Scalars['Boolean'] | null)
    /** The total number of sidebar notifications to be displayed for the user */
    sidebar_notification_count: (Scalars['Int'] | null)
    /** True if the user skipped adding a bank account */
    skipped_bank_account: (Scalars['Boolean'] | null)
    /** The status of whether the user has a real email or not */
    skipped_email: (Scalars['Boolean'] | null)
    /** Specialties of the user */
    specialties: (Specialty[] | null)
    /** The SSN of the user */
    ssn: (Scalars['String'] | null)
    /** Returns a user state licenses */
    state_licenses: (StateLicense[] | null)
    /** Stripe Info of the client */
    stripe_customer_detail: (StripeCustomerDetail | null)
    /** Stripe credit cards of the client */
    stripe_customer_details: (StripeCustomerDetail[] | null)
    /** The stripe id of the user (Used to look up bank account details for provider) */
    stripe_id: (Scalars['String'] | null)
    /** ID of account representative in Stripe. Nil if not staff/provider */
    stripe_person_id: (Scalars['String'] | null)
    /** Returns the subscription for this user.  Nil if not staff/provider */
    subscription: (SubscriptionInstance | null)
    /** Address to use on super bills */
    super_bill_address: (Scalars['String'] | null)
    /** Providers location to use on super bills */
    super_bill_location: (Location | null)
    /** Patient location to use on super bills */
    super_bill_patient_location: (Location | null)
    /** Provider's phone number to use on super bills */
    super_bill_phone_number: (Scalars['String'] | null)
    /** Other users this account can switch to */
    switchable_users: (User[] | null)
    /** Number of other users this account can switch to */
    switchable_users_count: (Scalars['Int'] | null)
    /** Number of tasks */
    tasks_count: (Scalars['Int'] | null)
    /** tax id of user */
    tax_id: (Scalars['String'] | null)
    /** The user's timezone */
    timezone: (Scalars['String'] | null)
    /** Access token */
    token: (Scalars['String'] | null)
    /** Total active packages credits */
    total_active_packages_with_credits: (Scalars['Int'] | null)
    /** Total clients with appointment credits greater than 0 */
    total_clients_with_appt_type_credits: (Scalars['Int'] | null)
    /** Total count of the user lab orders objects */
    total_lab_orders: (Scalars['Int'] | null)
    /** The authenticated human if an account is masked */
    true_human_id: (Scalars['String'] | null)
    /** The number unconfirmed appointments for the user */
    unconfirmed_appointment_count: (Scalars['Int'] | null)
    /** The number of unseen conversations for the user */
    unread_convo_count: (Scalars['Int'] | null)
    /** The number of unscheduled lab orders */
    unscheduled_lab_orders_count: (Scalars['Int'] | null)
    /** The number of unseen appointment notfications */
    unseen_appt_notification_count: (Scalars['Int'] | null)
    /** The number of unseen comment notfications */
    unseen_comment_notification_count: (Scalars['Int'] | null)
    /** The number of unseen document notfications */
    unseen_document_notification_count: (Scalars['Int'] | null)
    /** The number of unseen entry notfications */
    unseen_entry_notification_count: (Scalars['Int'] | null)
    /** The number of unseen goal notfications */
    unseen_goal_notification_count: (Scalars['Int'] | null)
    /** The number of unseen note notfications */
    unseen_note_notification_count: (Scalars['Int'] | null)
    /**
     * @deprecated use unseen_notifications_count_mobile
     * The number of unseen notifications for the user (mobile only)
     */
    unseen_notification_count: (Scalars['Int'] | null)
    /** The number of unseen notifications for the user (web only) */
    unseen_notifications_count: (Scalars['Int'] | null)
    /** The number of unseen notifications for the user (this field only used by mobile) [identical to :unseen_notification_count] */
    unseen_notifications_count_mobile: (Scalars['Int'] | null)
    /** The number of unseen payment notfications */
    unseen_payment_notification_count: (Scalars['Int'] | null)
    /** Number of unseen bounced notification records */
    unseen_sent_notification_records_count: (Scalars['Int'] | null)
    /** All active upcoming appointments of the user */
    upcoming_appointments: (Appointment[] | null)
    /** All active upcoming payments of the user */
    upcoming_payments: (RecurringPayment[] | null)
    /** Date user was last updated */
    updated_at: (Scalars['String'] | null)
    /** File name of uploaded avatar image */
    uploaded_avatar_file_name: (Scalars['String'] | null)
    /** User Group of this user */
    user_group: (UserGroup | null)
    /** The ID of the patient's user group */
    user_group_id: (Scalars['String'] | null)
    /** All user groups associated with this provider. */
    user_groups: UserGroup[]
    /** A number of user groups associated with this provider. */
    user_groups_count: Scalars['Int']
    /** User of who sent this member an invite */
    user_who_invited_member: (User | null)
    /** Verification fields left for the provider to fill out */
    verification_fields: ((Scalars['String'] | null)[] | null)
    /** The last weight of the user */
    weight: (Scalars['String'] | null)
    /** Displays weight percentile for growth charts */
    weight_percentile: (Scalars['String'] | null)
    /** Displays standard by which weight percentile is calculated */
    weight_percentile_standard: (Scalars['String'] | null)
    /** Withings Connection for the user */
    withings_connection: (WithingsConnection | null)
    /** The number of workout entries the user has */
    workout_entries_count: (Scalars['String'] | null)
    /** If user has Zus, returns Zus proxy token */
    zus_proxy_token: (Scalars['String'] | null)
    __typename: 'User'
}


/** A user group, returns basic info about the user group */
export interface UserGroup {
    /** The date the user group was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** An ID used for document, course, and conversation sharing */
    doc_share_id: (Scalars['String'] | null)
    /** The unique identifier of the user group */
    id: Scalars['ID']
    /** The invite code */
    invite_code: (Scalars['String'] | null)
    /** The name of the user group */
    name: (Scalars['String'] | null)
    /** Onboarding Flow of this user group */
    onboarding_flow: (OnboardingFlow | null)
    /** The id of the associated onboarding flow */
    onboarding_flow_id: (Scalars['String'] | null)
    /** Recurring Form Names for this user group */
    recurring_forms: (RecurringForm[] | null)
    /** Recurring Forms Count for this user group */
    recurring_forms_count: (Scalars['Int'] | null)
    /** Owner of this user group */
    user: (User | null)
    /** ids of user in group */
    user_ids: ((Scalars['String'] | null)[] | null)
    /** All patients associated with this user group. */
    users: User[]
    /** The number of users in the group */
    users_count: (Scalars['Int'] | null)
    /** Users in user group with course membership */
    users_with_membership: (User[] | null)
    __typename: 'UserGroup'
}


/** UserGroup sorting enum */
export type UserGroupOrderKeys = 'INVITE_CODE_ASC' | 'INVITE_CODE_DESC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'NAME_ASC' | 'NAME_DESC' | 'USERS_COUNT_ASC' | 'USERS_COUNT_DESC'


/** Counts of different types of notifications for a user */
export interface UserNotificationsCount {
    /** The number of unread conversation notifications */
    conversation_notification_count: (Scalars['Int'] | null)
    /** The unique identifier of the counter */
    id: (Scalars['ID'] | null)
    /** The number of unscheduled lab orders */
    unscheduled_lab_orders_count: (Scalars['Int'] | null)
    __typename: 'UserNotificationsCount'
}


/** User sorting enum */
export type UserOrderKeys = 'EMAIL_ASC' | 'EMAIL_DESC' | 'FIRST_NAME_ASC' | 'FIRST_NAME_DESC' | 'LAST_NAME_DESC' | 'LAST_NAME_ASC' | 'CREATED_AT_DESC' | 'CREATED_AT_ASC' | 'UPDATED_AT_DESC' | 'UPDATED_AT_ASC' | 'GROUP_NAME_ASC' | 'GROUP_NAME_DESC' | 'PROVIDER_NAME_ASC' | 'PROVIDER_NAME_DESC' | 'NEXT_APPT_DATE_ASC' | 'NEXT_APPT_DATE_DESC'


/** A user package selection */
export interface UserPackageSelection {
    /** The related billing item */
    billing_item: (BillingItem | null)
    /** The id of the related billing item */
    billing_item_id: (Scalars['ID'] | null)
    /** The time when the user package selection was created */
    created_at: Scalars['String']
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The unique identifier of the user package selection */
    id: Scalars['ID']
    /** The amount of the first payment for a package, including promo discounts */
    initial_price_with_offering_coupon: (Scalars['String'] | null)
    /** The related offering */
    offering: (Offering | null)
    /** The id of the related offering coupon */
    offering_coupon_id: (Scalars['ID'] | null)
    /** The related recurring payment */
    recurring_payment: (RecurringPayment | null)
    /** The related requested payment */
    requested_payment: (RequestedPayment | null)
    /** The id of the related requested payment */
    requested_payment_id: (Scalars['ID'] | null)
    /** The related user */
    user: (User | null)
    __typename: 'UserPackageSelection'
}


/** Information based on if an offering coupon is valid */
export interface ValidateOfferingCoupon {
    /** The reason why the promo code was not successfully applied */
    fail_reason: (Scalars['String'] | null)
    /** Discount amount for first payment */
    first_amount: (Scalars['String'] | null)
    /** The size of the discount with the promo code applied to the first payment (in case offering has a different first payment amount) */
    new_first_price: (Scalars['String'] | null)
    /** The new price with a promo code applied */
    new_price: (Scalars['String'] | null)
    /** Indicates number of discount periods */
    repeat_times: (Scalars['String'] | null)
    /** Indicates necessary of displaying CC form */
    still_ask_for_cc: (Scalars['Boolean'] | null)
    __typename: 'ValidateOfferingCoupon'
}


/** Video chat info for subscriptions */
export interface VideoChat {
    /** The type of contact for the video chat */
    contact_type: (Scalars['String'] | null)
    /** The date of the video chat */
    date: (Scalars['ISO8601DateTime'] | null)
    /** The ID of the video chat */
    id: Scalars['ID']
    /** Whether the video chat is a group chat */
    is_group: (Scalars['Boolean'] | null)
    /** The name of the video chat provider */
    provider_name: (Scalars['String'] | null)
    /** The user who created the video chat */
    user: (User | null)
    __typename: 'VideoChat'
}


/** Autogenerated return type of VideoChatsSubscription. */
export interface VideoChatsSubscriptionPayload {
    /** Updates of the current chat */
    current_video_chat: (VideoChat | null)
    /** Information about an ended chat */
    ended_video_chat: (VideoChat | null)
    /** Information about an upcoming chat */
    upcoming_video_chat: (VideoChat | null)
    __typename: 'VideoChatsSubscriptionPayload'
}


/** A default video URL */
export interface VideoUrlDefault {
    /** The default URL to use for anyone with the connected appointment setting */
    default_url: Scalars['String']
    /** The unique identifier of the url */
    id: Scalars['ID']
    /** The ID of the connected user */
    user_id: Scalars['ID']
    /** The options for the connected video URL */
    video_url_options: (VideoUrlOption[] | null)
    __typename: 'VideoUrlDefault'
}


/** A video URL option */
export interface VideoUrlOption {
    /** The unique identifier of the option */
    id: Scalars['ID']
    /** The default URL to use for the connected provider */
    url: (Scalars['String'] | null)
    /** The ID of the connected provider */
    url_by_item_id: (Scalars['String'] | null)
    __typename: 'VideoUrlOption'
}


/** Info about a visitor to the site */
export interface Visitor {
    /** Message from visitor */
    about_me: (Scalars['String'] | null)
    /** Email of the visitor */
    email: (Scalars['String'] | null)
    /** First name of visitor */
    first_name: (Scalars['String'] | null)
    /** The unique identifier of the visitor */
    id: Scalars['ID']
    /** Last name of visitor */
    last_name: (Scalars['String'] | null)
    /** Phone number of visitor */
    phone_number: (Scalars['String'] | null)
    __typename: 'Visitor'
}


/** A configured webhook */
export interface Webhook {
    /** Pagination cursor */
    cursor: Scalars['Cursor']
    /** The type of webhook */
    event_type: (Scalars['String'] | null)
    /** The unique identifier of the webhook */
    id: Scalars['ID']
    /** Whether the webhook is enabled or not */
    is_enabled: Scalars['Boolean']
    /** The secret key used to sign the webhook */
    signature_secret: (Scalars['String'] | null)
    /** The URL that the webhook will be sent to */
    url: (Scalars['String'] | null)
    /** The date and time that the customer was wamed about the webhook failing */
    warned_at: (Scalars['ISO8601DateTime'] | null)
    /** The events that the webhook is subscribed to */
    webhook_events: (WebhookEvent[] | null)
    __typename: 'Webhook'
}


/** The events that the webhook is subscribed to */
export interface WebhookEvent {
    /** The date and time that the webhook was created */
    created_at: Scalars['ISO8601DateTime']
    /** The type of webhook */
    event_type: Scalars['String']
    /** The date and time that the webhook first failed */
    first_failed_at: (Scalars['ISO8601DateTime'] | null)
    /** The unique identifier of the webhook */
    id: Scalars['ID']
    /** The date and time that the webhook last failed */
    last_failed_at: (Scalars['ISO8601DateTime'] | null)
    /** The number of times the webhook has been retried */
    retry_count: Scalars['Int']
    /** The date and time that the webhook was last updated */
    updated_at: Scalars['ISO8601DateTime']
    /** The webhook that the event is associated with */
    webhook: Webhook
    __typename: 'WebhookEvent'
}


/** Webhook sorting enum */
export type WebhookOrderKeys = 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'EVENT_TYPE_ASC' | 'EVENT_TYPE_DESC' | 'URL_ASC' | 'URL_DESC'


/** Info for Whitelabeling */
export interface WhitelabelSetting {
    /** Amplitude API Key */
    amplitude_api_key: (Scalars['String'] | null)
    /** URL of whitelabeled Android app */
    android_app_link: (Scalars['String'] | null)
    /** The branded URL of the backend (used in certain whitelabel setups) */
    branded_backend_url: (Scalars['String'] | null)
    /** Branded email of whitelabel */
    branded_email: (Scalars['String'] | null)
    /** Branded favicon url of whitelabel */
    branded_favicon_url: (Scalars['String'] | null)
    /** Branded logo url of whitelabel */
    branded_logo_url: (Scalars['String'] | null)
    /** Branded name of whitelabel */
    branded_name: (Scalars['String'] | null)
    /** URL of whitelabel site */
    branded_url: (Scalars['String'] | null)
    /** URL of whitelabeled Food icon */
    food_icon_url: (Scalars['String'] | null)
    /** The unique identifier of the setting */
    id: Scalars['ID']
    /** The number of minutes of allowable inactivity */
    inactivity_minutes_timeout: (Scalars['String'] | null)
    /** URL of whitelabeled iOS app */
    ios_app_link: (Scalars['String'] | null)
    /** URL of whitelabeled Metric icon */
    metric_icon_url: (Scalars['String'] | null)
    /** Mixpanel Project Token */
    mixpanel_project_token: (Scalars['String'] | null)
    /** The namespace that the whitelabel setting is in. */
    namespace: (Scalars['String'] | null)
    /** The whitelabel's patient SSO connection */
    patient_sso_connection: (SsoConnection | null)
    /** The whitelabel's patient SSO connections */
    patient_sso_connections: (SsoConnection[] | null)
    /** JSON hash of whitelabel replacement words */
    replacement_words_json: (Scalars['String'] | null)
    /** URL of whitelabeled Selfie icon */
    selfie_icon_url: (Scalars['String'] | null)
    /** The whitelabel's staff SSO connection */
    staff_sso_connection: (SsoConnection | null)
    /** The whitelabel's staff SSO connections */
    staff_sso_connections: (SsoConnection[] | null)
    /** URL of whitelabeled Workout icon */
    workout_icon_url: (Scalars['String'] | null)
    __typename: 'WhitelabelSetting'
}


/** A Withings Connection */
export interface WithingsConnection {
    /** The unique identifier of the connections */
    id: Scalars['ID']
    /** The last time Withings was synced */
    last_sync_date: (Scalars['String'] | null)
    __typename: 'WithingsConnection'
}


/** Zoom meeting retrieved from Zoom API */
export interface ZoomAppointment {
    /** The total number of minutes attended by the meeting's host and participants */
    duration: (Scalars['Int'] | null)
    /** End time of meeting */
    end_time: (Scalars['String'] | null)
    /** The unique identifier of the zoom appointment */
    id: (Scalars['ID'] | null)
    /** The number of meeting participants */
    participants_count: (Scalars['Int'] | null)
    /** Start time of meeting */
    start_time: (Scalars['String'] | null)
    /** The meeting's duration, in minutes */
    total_minutes: (Scalars['Int'] | null)
    __typename: 'ZoomAppointment'
}


/** Autogenerated return type of addLivingPlate. */
export interface addLivingPlatePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'addLivingPlatePayload'
}


/** Autogenerated return type of addZusMember. */
export interface addZusMemberPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'addZusMemberPayload'
}


/** Autogenerated return type of bulkApplyCarePlanTemplate. */
export interface bulkApplyCarePlanTemplatePayload {
    carePlans: ((CarePlan | null)[] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'bulkApplyCarePlanTemplatePayload'
}


/** Autogenerated return type of bulkApply. */
export interface bulkApplyPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tags: ((Tag | null)[] | null)
    __typename: 'bulkApplyPayload'
}


/** Autogenerated return type of bulkCreateAvailability. */
export interface bulkCreateAvailabilityPayload {
    availabilities: ((Availability | null)[] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'bulkCreateAvailabilityPayload'
}


/** Autogenerated return type of bulkCreateEntries. */
export interface bulkCreateEntriesPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    entries: ((Entry | null)[] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'bulkCreateEntriesPayload'
}


/** Autogenerated return type of bulkDeleteTasks. */
export interface bulkDeleteTasksPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tasks: ((Task | null)[] | null)
    __typename: 'bulkDeleteTasksPayload'
}


/** Autogenerated return type of bulkUpdateCardIssues. */
export interface bulkUpdateCardIssuesPayload {
    card_issues: ((StripeCustomerDetail | null)[] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'bulkUpdateCardIssuesPayload'
}


/** Autogenerated return type of bulkUpdateCarePlanUsers. */
export interface bulkUpdateCarePlanUsersPayload {
    carePlans: ((CarePlan | null)[] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'bulkUpdateCarePlanUsersPayload'
}


/** Autogenerated return type of bulkUpdateClients. */
export interface bulkUpdateClientsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    users: ((User | null)[] | null)
    __typename: 'bulkUpdateClientsPayload'
}


/** Autogenerated return type of bulkUpdateNotificationRecords. */
export interface bulkUpdateNotificationRecordsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'bulkUpdateNotificationRecordsPayload'
}


/** Autogenerated return type of bulkUpdateNotifications. */
export interface bulkUpdateNotificationsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    current_user: (User | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notifications: ((Notification | null)[] | null)
    __typename: 'bulkUpdateNotificationsPayload'
}


/** Autogenerated return type of bulkUpdateTasks. */
export interface bulkUpdateTasksPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tasks: ((Task | null)[] | null)
    __typename: 'bulkUpdateTasksPayload'
}


/** Autogenerated return type of clearUnreconciledObjects. */
export interface clearUnreconciledObjectsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'clearUnreconciledObjectsPayload'
}


/** Autogenerated return type of completeCheckout. */
export interface completeCheckoutPayload {
    appointment: (Appointment | null)
    /** An array of all group appointments that were registered for. Used in conjunction with appointment_ids argument. */
    appointments: ((Appointment | null)[] | null)
    billingItem: (BillingItem | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    formAnswerGroupSaved: (Scalars['Boolean'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    patientEmail: (Scalars['String'] | null)
    /** Returns true if client booking appointment is newly created and has never logged into their account or booked future appointments */
    reassignClientProvider: (Scalars['Boolean'] | null)
    userPackageSelection: (UserPackageSelection | null)
    widgetCompletedSubheaderHtml: (Scalars['String'] | null)
    __typename: 'completeCheckoutPayload'
}


/** Autogenerated return type of completeCourseDocument. */
export interface completeCourseDocumentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** New CompletedCourseItem */
    completedCourseItem: (CompletedCourseItem | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'completeCourseDocumentPayload'
}


/** Autogenerated return type of copyCourse. */
export interface copyCoursePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    course: (Course | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'copyCoursePayload'
}


/** Autogenerated return type of copyCustomModuleForm. */
export interface copyCustomModuleFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModuleForm: (CustomModuleForm | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'copyCustomModuleFormPayload'
}


/** Autogenerated return type of copyCustomModule. */
export interface copyCustomModulePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModule: (CustomModule | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'copyCustomModulePayload'
}


/** Autogenerated return type of copyOffering. */
export interface copyOfferingPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    offering: (Offering | null)
    __typename: 'copyOfferingPayload'
}


/** Autogenerated return type of createAcceptedInsurancePlan. */
export interface createAcceptedInsurancePlanPayload {
    accepted_insurance_plans: ((AcceptedInsurancePlan | null)[] | null)
    appointment_setting: (AppointmentSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAcceptedInsurancePlanPayload'
}


/** Autogenerated return type of createAddendum. */
export interface createAddendumPayload {
    addendum: (ChartingNoteAddendumType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAddendumPayload'
}


/** Autogenerated return type of createAllergySensitivity. */
export interface createAllergySensitivityPayload {
    allergy_sensitivity: (AllergySensitivity | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    duplicate_allergy: (AllergySensitivity | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAllergySensitivityPayload'
}


/** Autogenerated return type of createAnnouncement. */
export interface createAnnouncementPayload {
    announcement: (Announcement | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAnnouncementPayload'
}


/** Autogenerated return type of createApiKey. */
export interface createApiKeyPayload {
    api_key: (Scalars['String'] | null)
    api_key_object: (ApiKey | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createApiKeyPayload'
}


/** Autogenerated return type of createAppleHealth. */
export interface createAppleHealthPayload {
    apple_health: (AppleHealth | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAppleHealthPayload'
}


/** Autogenerated return type of createAppointment. */
export interface createAppointmentPayload {
    appointment: (Appointment | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAppointmentPayload'
}


/** Autogenerated return type of createAppointmentSetting. */
export interface createAppointmentSettingPayload {
    appointmentSetting: (AppointmentSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAppointmentSettingPayload'
}


/** Autogenerated return type of createAppointmentTypeCptCode. */
export interface createAppointmentTypeCptCodePayload {
    appointment_type_cpt_code: (AppointmentTypeCptCodeType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAppointmentTypeCptCodePayload'
}


/** Autogenerated return type of createAppointmentType. */
export interface createAppointmentTypePayload {
    appointmentType: (AppointmentType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAppointmentTypePayload'
}


/** Autogenerated return type of createAutoTaskGenerator. */
export interface createAutoTaskGeneratorPayload {
    auto_task_generator: (AutoTaskGenerator | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAutoTaskGeneratorPayload'
}


/** Autogenerated return type of createAutomatedInsuranceBillingSetting. */
export interface createAutomatedInsuranceBillingSettingPayload {
    automated_insurance_billing_setting: (AutomatedInsuranceBillingSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAutomatedInsuranceBillingSettingPayload'
}


/** Autogenerated return type of createAvailability. */
export interface createAvailabilityPayload {
    availability: (Availability | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createAvailabilityPayload'
}


/** Autogenerated return type of createBillingItem. */
export interface createBillingItemPayload {
    billingItem: (BillingItem | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    stripeError: (Scalars['String'] | null)
    __typename: 'createBillingItemPayload'
}


/** Autogenerated return type of createBrand. */
export interface createBrandPayload {
    brand: (Brand | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createBrandPayload'
}


/** Autogenerated return type of createCampaign. */
export interface createCampaignPayload {
    campaign: (Campaign | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCampaignPayload'
}


/** Autogenerated return type of createCarePlan. */
export interface createCarePlanPayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCarePlanPayload'
}


/** Autogenerated return type of createChatSetting. */
export interface createChatSettingPayload {
    chatSetting: (ChatSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createChatSettingPayload'
}


/** Autogenerated return type of createClient. */
export interface createClientPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'createClientPayload'
}


/** Autogenerated return type of createCms1500. */
export interface createCms1500Payload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cms1500: (Cms1500 | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCms1500Payload'
}


/** Autogenerated return type of createCognitiveStatus. */
export interface createCognitiveStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cognitive_status: (CognitiveStatus | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCognitiveStatusPayload'
}


/** Autogenerated return type of createComment. */
export interface createCommentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    comment: (Comment | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCommentPayload'
}


/** Autogenerated return type of createCompletedCourseItem. */
export interface createCompletedCourseItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    completedCourseItem: (CompletedCourseItem | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    redirect_url: (Scalars['String'] | null)
    __typename: 'createCompletedCourseItemPayload'
}


/** Autogenerated return type of createCompletedOnboardingItem. */
export interface createCompletedOnboardingItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    completed_onboarding_item: (CompletedOnboardingItem | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCompletedOnboardingItemPayload'
}


/** Autogenerated return type of createContact. */
export interface createContactPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    visitor: (Visitor | null)
    __typename: 'createContactPayload'
}


/** Autogenerated return type of createConversation. */
export interface createConversationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    conversation: (Conversation | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createConversationPayload'
}


/** Autogenerated return type of createCourseBenefit. */
export interface createCourseBenefitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseBenefit: (CourseBenefit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCourseBenefitPayload'
}


/** Autogenerated return type of createCourseItem. */
export interface createCourseItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseItem: (CourseItem | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    redirect_url: (Scalars['String'] | null)
    __typename: 'createCourseItemPayload'
}


/** Autogenerated return type of createCourse. */
export interface createCoursePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    course: (Course | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCoursePayload'
}


/** Autogenerated return type of createCustomEmail. */
export interface createCustomEmailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customEmail: (CustomEmail | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCustomEmailPayload'
}


/** Autogenerated return type of createCustomFood. */
export interface createCustomFoodPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customFood: (Food | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCustomFoodPayload'
}


/** Autogenerated return type of createCustomModuleForm. */
export interface createCustomModuleFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModuleForm: (CustomModuleForm | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCustomModuleFormPayload'
}


/** Autogenerated return type of createCustomModule. */
export interface createCustomModulePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModule: (CustomModule | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createCustomModulePayload'
}


/** Autogenerated return type of createDocument. */
export interface createDocumentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    currentUser: (User | null)
    document: (Document | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createDocumentPayload'
}


/** Autogenerated return type of createDosespotClinician. */
export interface createDosespotClinicianPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    dosespot_user: (DoseSpot | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createDosespotClinicianPayload'
}


/** Autogenerated return type of createDosespot. */
export interface createDosespotPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'createDosespotPayload'
}


/** Autogenerated return type of createDraft. */
export interface createDraftPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    draft: (Draft | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createDraftPayload'
}


/** Autogenerated return type of createEbook. */
export interface createEbookPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    visitor: (Visitor | null)
    __typename: 'createEbookPayload'
}


/** Autogenerated return type of createEntry. */
export interface createEntryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    entry: (Entry | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createEntryPayload'
}


/** Autogenerated return type of createExternalCalendar. */
export interface createExternalCalendarPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    external_calendar: (ExternalCalendar | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createExternalCalendarPayload'
}


/** Autogenerated return type of createFamilyHistory. */
export interface createFamilyHistoryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    duplicate_family_history_condition: (FamilyHistoryCondition | null)
    family_history_condition: (FamilyHistoryCondition | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFamilyHistoryPayload'
}


/** Autogenerated return type of createFaxAcctInfo. */
export interface createFaxAcctInfoPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'createFaxAcctInfoPayload'
}


/** Autogenerated return type of createFaxLineRequest. */
export interface createFaxLineRequestPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    faxLineRequest: (FaxLineRequest | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFaxLineRequestPayload'
}


/** Autogenerated return type of createFeatureToggle. */
export interface createFeatureTogglePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    feature_toggle: (FeatureToggle | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFeatureTogglePayload'
}


/** Autogenerated return type of createFitbit. */
export interface createFitbitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    fitbit: (Fitbit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFitbitPayload'
}


/** Autogenerated return type of createFolder. */
export interface createFolderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    folder: (Folder | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFolderPayload'
}


/** Autogenerated return type of createFormAnswerGroup. */
export interface createFormAnswerGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    form_answer_group: (FormAnswerGroup | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFormAnswerGroupPayload'
}


/** Autogenerated return type of createFormAnswerGroupSigning. */
export interface createFormAnswerGroupSigningPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    formAnswerGroupSigning: (FormAnswerGroupSigning | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFormAnswerGroupSigningPayload'
}


/** Autogenerated return type of createFullscriptPractitioner. */
export interface createFullscriptPractitionerPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    fullscript_practitioner: (FullscriptPractitionerType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFullscriptPractitionerPayload'
}


/** Autogenerated return type of createFunctionalStatus. */
export interface createFunctionalStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    functional_status: (FunctionalStatus | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createFunctionalStatusPayload'
}


/** Autogenerated return type of createGoalHistory. */
export interface createGoalHistoryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    goalHistory: (GoalHistory | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createGoalHistoryPayload'
}


/** Autogenerated return type of createGoal. */
export interface createGoalPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    goal: (Goal | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createGoalPayload'
}


/** Autogenerated return type of createGoogleFit. */
export interface createGoogleFitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    google_fit: (GoogleFit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createGoogleFitPayload'
}


/** Autogenerated return type of createGroup. */
export interface createGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user_group: (UserGroup | null)
    __typename: 'createGroupPayload'
}


/** Autogenerated return type of createHealthConcern. */
export interface createHealthConcernPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    health_concern: (HealthConcern | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createHealthConcernPayload'
}


/** Autogenerated return type of createImmunization. */
export interface createImmunizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    immunization: (Immunization | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createImmunizationPayload'
}


/** Autogenerated return type of createImplantableDeviceUser. */
export interface createImplantableDeviceUserPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    implantable_device_user: (ImplantableDeviceUser | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createImplantableDeviceUserPayload'
}


/** Autogenerated return type of createImportDataRequest. */
export interface createImportDataRequestPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    importDataRequest: (ImportDataRequest | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createImportDataRequestPayload'
}


/** Autogenerated return type of createInsuranceAuthorization. */
export interface createInsuranceAuthorizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    insuranceAuthorization: (InsuranceAuthorizationType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createInsuranceAuthorizationPayload'
}


/** Autogenerated return type of createInsurancePlan. */
export interface createInsurancePlanPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    insurance_plan: (InsurancePlan | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createInsurancePlanPayload'
}


/** Autogenerated return type of createLabOrder. */
export interface createLabOrderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    currentUserNotificationsCount: (UserNotificationsCount | null)
    lab_order: (LabOrder | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createLabOrderPayload'
}


/** Autogenerated return type of createLocation. */
export interface createLocationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    location: (Location | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createLocationPayload'
}


/** Autogenerated return type of createMeal. */
export interface createMealPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    meal: (Meal | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createMealPayload'
}


/** Autogenerated return type of createMedication. */
export interface createMedicationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    medication: (MedicationType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createMedicationPayload'
}


/** Autogenerated return type of createMessageBlast. */
export interface createMessageBlastPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    message: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createMessageBlastPayload'
}


/** Autogenerated return type of createNote. */
export interface createNotePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    note: (Note | null)
    __typename: 'createNotePayload'
}


/** Autogenerated return type of createNotificationContact. */
export interface createNotificationContactPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notificationContact: (NotificationContact | null)
    __typename: 'createNotificationContactPayload'
}


/** Autogenerated return type of createOfferingCoupon. */
export interface createOfferingCouponPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    offeringCoupon: (OfferingCoupon | null)
    __typename: 'createOfferingCouponPayload'
}


/** Autogenerated return type of createOffering. */
export interface createOfferingPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    offering: (Offering | null)
    __typename: 'createOfferingPayload'
}


/** Autogenerated return type of createOfficeallySftpAccount. */
export interface createOfficeallySftpAccountPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    officeally_sftp_account: (OfficeallySftpAccount | null)
    __typename: 'createOfficeallySftpAccountPayload'
}


/** Autogenerated return type of createOnboardingFlow. */
export interface createOnboardingFlowPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    onboardingFlow: (OnboardingFlow | null)
    __typename: 'createOnboardingFlowPayload'
}


/** Autogenerated return type of createOnboardingItem. */
export interface createOnboardingItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    onboardingItem: (OnboardingItem | null)
    __typename: 'createOnboardingItemPayload'
}


/** Autogenerated return type of createOrAddToWaterIntakeEntry. */
export interface createOrAddToWaterIntakeEntryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    entry: (Entry | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createOrAddToWaterIntakeEntryPayload'
}


/** Autogenerated return type of createOrganizationCptCode. */
export interface createOrganizationCptCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organization_cpt_code: (OrganizationCptCodeType | null)
    __typename: 'createOrganizationCptCodePayload'
}


/** Autogenerated return type of createOrganizationMembership. */
export interface createOrganizationMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organizationMembership: (OrganizationMembership | null)
    __typename: 'createOrganizationMembershipPayload'
}


/** Autogenerated return type of createOrganization. */
export interface createOrganizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organization: (Organization | null)
    __typename: 'createOrganizationPayload'
}


/** Autogenerated return type of createPartner. */
export interface createPartnerPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    visitor: (Visitor | null)
    __typename: 'createPartnerPayload'
}


/** Autogenerated return type of createPaymentIntent. */
export interface createPaymentIntentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    intentClientSecret: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createPaymentIntentPayload'
}


/** Autogenerated return type of createPermissionTemplate. */
export interface createPermissionTemplatePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    newPermissionTemplate: (PermissionTemplateType | null)
    __typename: 'createPermissionTemplatePayload'
}


/** Autogenerated return type of createPersonalizationQuestionnaire. */
export interface createPersonalizationQuestionnairePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    was_saved: (Scalars['Boolean'] | null)
    __typename: 'createPersonalizationQuestionnairePayload'
}


/** Autogenerated return type of createPreferredMedicalCode. */
export interface createPreferredMedicalCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    preferred_medical_codes: ((PreferredMedicalCode | null)[] | null)
    __typename: 'createPreferredMedicalCodePayload'
}


/** Autogenerated return type of createProcedure. */
export interface createProcedurePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    procedure: (Procedure | null)
    __typename: 'createProcedurePayload'
}


/** Autogenerated return type of createProduct. */
export interface createProductPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    product: (Product | null)
    __typename: 'createProductPayload'
}


/** Autogenerated return type of createProviderCptCodes. */
export interface createProviderCptCodesPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'createProviderCptCodesPayload'
}


/** Autogenerated return type of createRecommendation. */
export interface createRecommendationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    recommendation: (Recommendation | null)
    __typename: 'createRecommendationPayload'
}


/** Autogenerated return type of createReferral. */
export interface createReferralPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    referral: (Referral | null)
    __typename: 'createReferralPayload'
}


/** Autogenerated return type of createReferringPhysician. */
export interface createReferringPhysicianPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    duplicated_physician: (ReferringPhysician | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    referring_physician: (ReferringPhysician | null)
    __typename: 'createReferringPhysicianPayload'
}


/** Autogenerated return type of createRequestedForm. */
export interface createRequestedFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    requestedFormCompletion: (RequestedFormCompletion | null)
    requestedFormCompletionStatus: (RequestedFormStatusType | null)
    __typename: 'createRequestedFormPayload'
}


/** Autogenerated return type of createRequestedPayment. */
export interface createRequestedPaymentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    requestedPayment: (RequestedPayment | null)
    __typename: 'createRequestedPaymentPayload'
}


/** Autogenerated return type of createRupaOrder. */
export interface createRupaOrderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    rupa_order_url: (Scalars['String'] | null)
    __typename: 'createRupaOrderPayload'
}


/** Autogenerated return type of createSavedFilter. */
export interface createSavedFilterPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    savedFilter: (SavedFilter | null)
    __typename: 'createSavedFilterPayload'
}


/** Autogenerated return type of createSentDirectMessage. */
export interface createSentDirectMessagePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    sent_direct_message: (SentDirectMessage | null)
    __typename: 'createSentDirectMessagePayload'
}


/** Autogenerated return type of createSentFax. */
export interface createSentFaxPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    sent_fax: (SentFax | null)
    __typename: 'createSentFaxPayload'
}


/** Autogenerated return type of createSmartPhrase. */
export interface createSmartPhrasePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    smartPhrase: (SmartPhrase | null)
    __typename: 'createSmartPhrasePayload'
}


/** Autogenerated return type of createSmokingStatus. */
export interface createSmokingStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    smokingStatus: (SmokingStatus | null)
    __typename: 'createSmokingStatusPayload'
}


/** Autogenerated return type of createStripeCustomerDetail. */
export interface createStripeCustomerDetailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    stripeError: (Scalars['String'] | null)
    stripe_customer_detail: (StripeCustomerDetail | null)
    __typename: 'createStripeCustomerDetailPayload'
}


/** Autogenerated return type of createSubscription. */
export interface createSubscriptionPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    subscription: (SubscriptionInstance | null)
    __typename: 'createSubscriptionPayload'
}


/** Autogenerated return type of createSuperBill. */
export interface createSuperBillPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    superBill: (SuperBill | null)
    __typename: 'createSuperBillPayload'
}


/** Autogenerated return type of createTag. */
export interface createTagPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tag: (Tag | null)
    __typename: 'createTagPayload'
}


/** Autogenerated return type of createTask. */
export interface createTaskPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    task: (Task | null)
    __typename: 'createTaskPayload'
}


/** Autogenerated return type of createUniqueDeviceIdentifier. */
export interface createUniqueDeviceIdentifierPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    unique_device_identifier: (UniqueDeviceIdentifier | null)
    __typename: 'createUniqueDeviceIdentifierPayload'
}


/** Autogenerated return type of createVisitor. */
export interface createVisitorPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    visitor: (Visitor | null)
    __typename: 'createVisitorPayload'
}


/** Autogenerated return type of createWebhook. */
export interface createWebhookPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    webhook: (Webhook | null)
    __typename: 'createWebhookPayload'
}


/** Autogenerated return type of createZus. */
export interface createZusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'createZusPayload'
}


/** Autogenerated return type of deleteAcceptedInsurancePlan. */
export interface deleteAcceptedInsurancePlanPayload {
    accepted_insurance_plan: (AcceptedInsurancePlan | null)
    appointment_setting: (AppointmentSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAcceptedInsurancePlanPayload'
}


/** Autogenerated return type of deleteAllergySensitivity. */
export interface deleteAllergySensitivityPayload {
    allergy_sensitivity: (AllergySensitivity | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAllergySensitivityPayload'
}


/** Autogenerated return type of deleteApiKey. */
export interface deleteApiKeyPayload {
    api_key: (ApiKey | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteApiKeyPayload'
}


/** Autogenerated return type of deleteAppleHealth. */
export interface deleteAppleHealthPayload {
    apple_health: (AppleHealth | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAppleHealthPayload'
}


/** Autogenerated return type of deleteAppointment. */
export interface deleteAppointmentPayload {
    appointment: (Appointment | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAppointmentPayload'
}


/** Autogenerated return type of deleteAppointmentTypeCptCode. */
export interface deleteAppointmentTypeCptCodePayload {
    appointment_type_cpt_code: (AppointmentTypeCptCodeType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAppointmentTypeCptCodePayload'
}


/** Autogenerated return type of deleteAppointmentType. */
export interface deleteAppointmentTypePayload {
    appointmentType: (AppointmentType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAppointmentTypePayload'
}


/** Autogenerated return type of deleteAutoTaskGenerator. */
export interface deleteAutoTaskGeneratorPayload {
    auto_task_generator: (AutoTaskGenerator | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAutoTaskGeneratorPayload'
}


/** Autogenerated return type of deleteAvailability. */
export interface deleteAvailabilityPayload {
    availability: (Availability | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteAvailabilityPayload'
}


/** Autogenerated return type of deleteBillingItem. */
export interface deleteBillingItemPayload {
    billingItem: (BillingItem | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteBillingItemPayload'
}


/** Autogenerated return type of deleteCarePlanConnection. */
export interface deleteCarePlanConnectionPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    connection: (CarePlanConnection | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCarePlanConnectionPayload'
}


/** Autogenerated return type of deleteCarePlan. */
export interface deleteCarePlanPayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCarePlanPayload'
}


/** Autogenerated return type of deleteCms1500. */
export interface deleteCms1500Payload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cms1500: (Cms1500 | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCms1500Payload'
}


/** Autogenerated return type of deleteCognitiveStatus. */
export interface deleteCognitiveStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cognitive_status: (CognitiveStatus | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCognitiveStatusPayload'
}


/** Autogenerated return type of deleteComment. */
export interface deleteCommentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    comment: (Comment | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCommentPayload'
}


/** Autogenerated return type of deleteConversationMembership. */
export interface deleteConversationMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    conversationMembership: (ConversationMembership | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteConversationMembershipPayload'
}


/** Autogenerated return type of deleteCourseBenefit. */
export interface deleteCourseBenefitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseBenefit: (CourseBenefit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCourseBenefitPayload'
}


/** Autogenerated return type of deleteCourseGroup. */
export interface deleteCourseGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseGroup: (CourseGroup | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCourseGroupPayload'
}


/** Autogenerated return type of deleteCourseItem. */
export interface deleteCourseItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseItem: (CourseItem | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCourseItemPayload'
}


/** Autogenerated return type of deleteCourseMembership. */
export interface deleteCourseMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseMembership: (CourseMembership | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCourseMembershipPayload'
}


/** Autogenerated return type of deleteCourse. */
export interface deleteCoursePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    course: (Course | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCoursePayload'
}


/** Autogenerated return type of deleteCustomEmail. */
export interface deleteCustomEmailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customEmail: (CustomEmail | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCustomEmailPayload'
}


/** Autogenerated return type of deleteCustomFood. */
export interface deleteCustomFoodPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customFood: (Food | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCustomFoodPayload'
}


/** Autogenerated return type of deleteCustomModuleForm. */
export interface deleteCustomModuleFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModuleForm: (CustomModuleForm | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCustomModuleFormPayload'
}


/** Autogenerated return type of deleteCustomModule. */
export interface deleteCustomModulePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModule: (CustomModule | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteCustomModulePayload'
}


/** Autogenerated return type of deleteDexcomConnection. */
export interface deleteDexcomConnectionPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    dexcom_connection: (DexcomConnection | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteDexcomConnectionPayload'
}


/** Autogenerated return type of deleteDocument. */
export interface deleteDocumentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    document: (Document | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteDocumentPayload'
}


/** Autogenerated return type of deleteDosespot. */
export interface deleteDosespotPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'deleteDosespotPayload'
}


/** Autogenerated return type of deleteEntry. */
export interface deleteEntryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    entry: (Entry | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteEntryPayload'
}


/** Autogenerated return type of deleteExternalCalendar. */
export interface deleteExternalCalendarPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    external_calendar: (ExternalCalendar | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteExternalCalendarPayload'
}


/** Autogenerated return type of deleteFamilyHistory. */
export interface deleteFamilyHistoryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    family_history_condition: (FamilyHistoryCondition | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteFamilyHistoryPayload'
}


/** Autogenerated return type of deleteFitbit. */
export interface deleteFitbitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    fitbit: (Fitbit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteFitbitPayload'
}


/** Autogenerated return type of deleteFolder. */
export interface deleteFolderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    folder: (Folder | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteFolderPayload'
}


/** Autogenerated return type of deleteFormAnswerGroup. */
export interface deleteFormAnswerGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    form_answer_group: (FormAnswerGroup | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteFormAnswerGroupPayload'
}


/** Autogenerated return type of deleteFunctionalStatus. */
export interface deleteFunctionalStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    functional_status: (FunctionalStatus | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteFunctionalStatusPayload'
}


/** Autogenerated return type of deleteGoalHistory. */
export interface deleteGoalHistoryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    goal_history: (GoalHistory | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteGoalHistoryPayload'
}


/** Autogenerated return type of deleteGoal. */
export interface deleteGoalPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    goal: (Goal | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteGoalPayload'
}


/** Autogenerated return type of deleteGoogleFit. */
export interface deleteGoogleFitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    google_fit: (GoogleFit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteGoogleFitPayload'
}


/** Autogenerated return type of deleteHealthConcern. */
export interface deleteHealthConcernPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    health_concern: (HealthConcern | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteHealthConcernPayload'
}


/** Autogenerated return type of deleteImplantableDeviceUser. */
export interface deleteImplantableDeviceUserPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    implantable_device_user: (ImplantableDeviceUser | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteImplantableDeviceUserPayload'
}


/** Autogenerated return type of deleteInsuranceAuthorization. */
export interface deleteInsuranceAuthorizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    insuranceAuthorization: (InsuranceAuthorizationType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteInsuranceAuthorizationPayload'
}


/** Autogenerated return type of deleteInsurancePlan. */
export interface deleteInsurancePlanPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    insurance_plan: (InsurancePlan | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteInsurancePlanPayload'
}


/** Autogenerated return type of deleteLocation. */
export interface deleteLocationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    location: (Location | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteLocationPayload'
}


/** Autogenerated return type of deleteMeal. */
export interface deleteMealPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    meal: (Meal | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'deleteMealPayload'
}


/** Autogenerated return type of deleteNote. */
export interface deleteNotePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    note: (Note | null)
    __typename: 'deleteNotePayload'
}


/** Autogenerated return type of deleteNotificationContact. */
export interface deleteNotificationContactPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notificationContact: (NotificationContact | null)
    __typename: 'deleteNotificationContactPayload'
}


/** Autogenerated return type of deleteOfferingCoupon. */
export interface deleteOfferingCouponPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    offeringCoupon: (OfferingCoupon | null)
    __typename: 'deleteOfferingCouponPayload'
}


/** Autogenerated return type of deleteOffering. */
export interface deleteOfferingPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    offering: (Offering | null)
    __typename: 'deleteOfferingPayload'
}


/** Autogenerated return type of deleteOnboardingFlow. */
export interface deleteOnboardingFlowPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    onboardingFlow: (OnboardingFlow | null)
    __typename: 'deleteOnboardingFlowPayload'
}


/** Autogenerated return type of deleteOnboardingItem. */
export interface deleteOnboardingItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    onboardingItem: (OnboardingItem | null)
    __typename: 'deleteOnboardingItemPayload'
}


/** Autogenerated return type of deleteOrganizationCptCode. */
export interface deleteOrganizationCptCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organization_cpt_code: (OrganizationCptCodeType | null)
    __typename: 'deleteOrganizationCptCodePayload'
}


/** Autogenerated return type of deleteOrganizationInfo. */
export interface deleteOrganizationInfoPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organizationInfo: (OrganizationInfo | null)
    __typename: 'deleteOrganizationInfoPayload'
}


/** Autogenerated return type of deleteOrganizationMembership. */
export interface deleteOrganizationMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organizationMembership: (OrganizationMembership | null)
    __typename: 'deleteOrganizationMembershipPayload'
}


/** Autogenerated return type of deletePermissionTemplate. */
export interface deletePermissionTemplatePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    permission_template: (PermissionTemplateType | null)
    __typename: 'deletePermissionTemplatePayload'
}


/** Autogenerated return type of deletePreferredMedicalCode. */
export interface deletePreferredMedicalCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    preferred_medical_codes: ((PreferredMedicalCode | null)[] | null)
    __typename: 'deletePreferredMedicalCodePayload'
}


/** Autogenerated return type of deleteProcedure. */
export interface deleteProcedurePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    procedure: (Procedure | null)
    __typename: 'deleteProcedurePayload'
}


/** Autogenerated return type of deleteProduct. */
export interface deleteProductPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    product: (Product | null)
    __typename: 'deleteProductPayload'
}


/** Autogenerated return type of deleteProviderCptCode. */
export interface deleteProviderCptCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    provider_cpt_code: (ProviderCptCodeType | null)
    __typename: 'deleteProviderCptCodePayload'
}


/** Autogenerated return type of deleteReceivedFax. */
export interface deleteReceivedFaxPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    receivedFax: (ReceivedFax | null)
    __typename: 'deleteReceivedFaxPayload'
}


/** Autogenerated return type of deleteRecommendation. */
export interface deleteRecommendationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    recommendation: (Recommendation | null)
    __typename: 'deleteRecommendationPayload'
}


/** Autogenerated return type of deleteReferral. */
export interface deleteReferralPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    referral: (Referral | null)
    __typename: 'deleteReferralPayload'
}


/** Autogenerated return type of deleteReferringPhysician. */
export interface deleteReferringPhysicianPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    referringPhysician: (ReferringPhysician | null)
    __typename: 'deleteReferringPhysicianPayload'
}


/** Autogenerated return type of deleteRequestedForm. */
export interface deleteRequestedFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    requestedFormCompletion: (RequestedFormCompletion | null)
    __typename: 'deleteRequestedFormPayload'
}


/** Autogenerated return type of deleteRequestedPayment. */
export interface deleteRequestedPaymentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    requested_payment: (RequestedPayment | null)
    __typename: 'deleteRequestedPaymentPayload'
}


/** Autogenerated return type of deleteSavedFilter. */
export interface deleteSavedFilterPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    savedFilter: (SavedFilter | null)
    __typename: 'deleteSavedFilterPayload'
}


/** Autogenerated return type of deleteShapaConnection. */
export interface deleteShapaConnectionPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    shapa_connection: (ShapaConnection | null)
    __typename: 'deleteShapaConnectionPayload'
}


/** Autogenerated return type of deleteSmartPhrase. */
export interface deleteSmartPhrasePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    smartPhrase: (SmartPhrase | null)
    __typename: 'deleteSmartPhrasePayload'
}


/** Autogenerated return type of deleteSmokingStatus. */
export interface deleteSmokingStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    smokingStatus: (SmokingStatus | null)
    __typename: 'deleteSmokingStatusPayload'
}


/** Autogenerated return type of deleteStripeCustomerDetail. */
export interface deleteStripeCustomerDetailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    stripe_customer_detail: (StripeCustomerDetail | null)
    __typename: 'deleteStripeCustomerDetailPayload'
}


/** Autogenerated return type of deleteSuperBill. */
export interface deleteSuperBillPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    superBill: (SuperBill | null)
    __typename: 'deleteSuperBillPayload'
}


/** Autogenerated return type of deleteTag. */
export interface deleteTagPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tag: (Tag | null)
    __typename: 'deleteTagPayload'
}


/** Autogenerated return type of deleteTask. */
export interface deleteTaskPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    task: (Task | null)
    __typename: 'deleteTaskPayload'
}


/** Autogenerated return type of deleteUniqueDeviceIdentifier. */
export interface deleteUniqueDeviceIdentifierPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    unique_device_identifier: (UniqueDeviceIdentifier | null)
    __typename: 'deleteUniqueDeviceIdentifierPayload'
}


/** Autogenerated return type of deleteUserGroup. */
export interface deleteUserGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user_group: (UserGroup | null)
    __typename: 'deleteUserGroupPayload'
}


/** Autogenerated return type of deleteWebhook. */
export interface deleteWebhookPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    webhook: (Webhook | null)
    __typename: 'deleteWebhookPayload'
}


/** Autogenerated return type of deleteWithingsConnection. */
export interface deleteWithingsConnectionPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    withings_connection: (WithingsConnection | null)
    __typename: 'deleteWithingsConnectionPayload'
}


/** Autogenerated return type of destroyAnnouncement. */
export interface destroyAnnouncementPayload {
    announcement: (Announcement | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'destroyAnnouncementPayload'
}


/** Autogenerated return type of destroyFaxAcctInfo. */
export interface destroyFaxAcctInfoPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'destroyFaxAcctInfoPayload'
}


/** Autogenerated return type of destroyMedication. */
export interface destroyMedicationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    medication: (MedicationType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'destroyMedicationPayload'
}


/** Autogenerated return type of destroyRecurringForm. */
export interface destroyRecurringFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    recurringForm: (RecurringForm | null)
    __typename: 'destroyRecurringFormPayload'
}


/** Autogenerated return type of dismissAllAnnouncements. */
export interface dismissAllAnnouncementsPayload {
    announcements: ((Announcement | null)[] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'dismissAllAnnouncementsPayload'
}


/** Autogenerated return type of dismissAnnouncement. */
export interface dismissAnnouncementPayload {
    announcement: (Announcement | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'dismissAnnouncementPayload'
}


/** Autogenerated return type of dosespotSSO. */
export interface dosespotSSOPayload {
    /** The additional info */
    additional_info: (Scalars['String'] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'dosespotSSOPayload'
}


/** Autogenerated return type of dummyUser. */
export interface dummyUserPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'dummyUserPayload'
}


/** Autogenerated return type of editAvailability. */
export interface editAvailabilityPayload {
    availability: (Availability | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'editAvailabilityPayload'
}


/** Autogenerated return type of enableGoogleIntegrations. */
export interface enableGoogleIntegrationsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success message */
    success_string: (Scalars['String'] | null)
    __typename: 'enableGoogleIntegrationsPayload'
}


/** Autogenerated return type of enableSelfSignup. */
export interface enableSelfSignupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'enableSelfSignupPayload'
}


/** Autogenerated return type of expireWebhookSignature. */
export interface expireWebhookSignaturePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    webhook: (Webhook | null)
    __typename: 'expireWebhookSignaturePayload'
}


/** Autogenerated return type of exportClientEhi. */
export interface exportClientEhiPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The banner message shown when successful. */
    success_string: (Scalars['String'] | null)
    __typename: 'exportClientEhiPayload'
}


/** Autogenerated return type of exportToTemplate. */
export interface exportToTemplatePayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'exportToTemplatePayload'
}


/** A fullscript Sync */
export interface fullscript {
    /** The unique identifier of the fullscript */
    id: Scalars['ID']
    __typename: 'fullscript'
}


/** Autogenerated return type of generateChartingPdf. */
export interface generateChartingPdfPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'generateChartingPdfPayload'
}


/** Autogenerated return type of mergeClients. */
export interface mergeClientsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'mergeClientsPayload'
}


/** Autogenerated return type of parseCcdaDocument. */
export interface parseCcdaDocumentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    xml_file_name: (Scalars['String'] | null)
    __typename: 'parseCcdaDocumentPayload'
}


/** Autogenerated return type of removeAppliedTag. */
export interface removeAppliedTagPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tag: (Tag | null)
    __typename: 'removeAppliedTagPayload'
}


/** Autogenerated return type of removeDraft. */
export interface removeDraftPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    draft: (Draft | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'removeDraftPayload'
}


/** Autogenerated return type of removeUserFromGroupCarePlan. */
export interface removeUserFromGroupCarePlanPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    groupCarePlanUserConnection: (GroupCarePlanUserConnection | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'removeUserFromGroupCarePlanPayload'
}


/** Autogenerated return type of resendSentFax. */
export interface resendSentFaxPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    sent_fax: (SentFax | null)
    __typename: 'resendSentFaxPayload'
}


/** Autogenerated return type of resetPassword. */
export interface resetPasswordPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'resetPasswordPayload'
}


/** Autogenerated return type of restoreVersions. */
export interface restoreVersionsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'restoreVersionsPayload'
}


/** Autogenerated return type of resyncRupaLabOrders. */
export interface resyncRupaLabOrdersPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success: (Scalars['Boolean'] | null)
    __typename: 'resyncRupaLabOrdersPayload'
}


/** Autogenerated return type of revokeToken. */
export interface revokeTokenPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'revokeTokenPayload'
}


/** Autogenerated return type of runEligibilityCheckMutation. */
export interface runEligibilityCheckMutationPayload {
    /** The result of the check */
    claim_eligibility_check: (ClaimEligibilityCheck | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'runEligibilityCheckMutationPayload'
}


/** Autogenerated return type of sendCarePlanEmail. */
export interface sendCarePlanEmailPayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'sendCarePlanEmailPayload'
}


/** Autogenerated return type of shareAnswersAsDocument. */
export interface shareAnswersAsDocumentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    document: (Document | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'shareAnswersAsDocumentPayload'
}


/** Autogenerated return type of shareCourse. */
export interface shareCoursePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    course: (Course | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'shareCoursePayload'
}


/** Autogenerated return type of shareCustomModuleForm. */
export interface shareCustomModuleFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModuleForm: (CustomModuleForm | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'shareCustomModuleFormPayload'
}


/** Autogenerated return type of signIn. */
export interface signInPayload {
    /** API Key created */
    api_key: (Scalars['String'] | null)
    /** Blocked by 2fa status */
    blocked_by_2fa: (Scalars['Boolean'] | null)
    /** 2fa challenge type */
    blocked_by_2fa_type: (MfaType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** Token returned for authorization */
    token: (Scalars['String'] | null)
    /** User info */
    user: (User | null)
    __typename: 'signInPayload'
}


/** Autogenerated return type of signUp. */
export interface signUpPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    initialMessage: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    nextRequiredStep: (Scalars['String'] | null)
    token: (Scalars['String'] | null)
    user: (User | null)
    whitelabelSetting: (WhitelabelSetting | null)
    __typename: 'signUpPayload'
}


/** Autogenerated return type of toggleCarePlanStatusForSpecificUser. */
export interface toggleCarePlanStatusForSpecificUserPayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'toggleCarePlanStatusForSpecificUserPayload'
}


/** Autogenerated return type of unblockIpAddress. */
export interface unblockIpAddressPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** Status */
    success_string: (Scalars['String'] | null)
    __typename: 'unblockIpAddressPayload'
}


/** Autogenerated return type of unlockChartingNote. */
export interface unlockChartingNotePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'unlockChartingNotePayload'
}


/** Autogenerated return type of unsubscribeFromNotification. */
export interface unsubscribeFromNotificationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notificationSettingUpdated: (Scalars['Boolean'] | null)
    __typename: 'unsubscribeFromNotificationPayload'
}


/** Autogenerated return type of updateAddendum. */
export interface updateAddendumPayload {
    addendum: (ChartingNoteAddendumType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAddendumPayload'
}


/** Autogenerated return type of updateAllergySensitivity. */
export interface updateAllergySensitivityPayload {
    allergy_sensitivity: (AllergySensitivity | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    duplicate_allergy: (AllergySensitivity | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAllergySensitivityPayload'
}


/** Autogenerated return type of updateAnnouncement. */
export interface updateAnnouncementPayload {
    announcement: (Announcement | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAnnouncementPayload'
}


/** Autogenerated return type of updateAppleHealth. */
export interface updateAppleHealthPayload {
    apple_health: (AppleHealth | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAppleHealthPayload'
}


/** Autogenerated return type of updateAppointmentInclusion. */
export interface updateAppointmentInclusionPayload {
    appointment_inclusion: (AppointmentInclusionType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAppointmentInclusionPayload'
}


/** Autogenerated return type of updateAppointment. */
export interface updateAppointmentPayload {
    appointment: (Appointment | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAppointmentPayload'
}


/** Autogenerated return type of updateAppointmentSetting. */
export interface updateAppointmentSettingPayload {
    appointmentSetting: (AppointmentSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAppointmentSettingPayload'
}


/** Autogenerated return type of updateAppointmentTypeCptCode. */
export interface updateAppointmentTypeCptCodePayload {
    appointment_type_cpt_code: (AppointmentTypeCptCodeType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAppointmentTypeCptCodePayload'
}


/** Autogenerated return type of updateAppointmentType. */
export interface updateAppointmentTypePayload {
    appointmentType: (AppointmentType | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAppointmentTypePayload'
}


/** Autogenerated return type of updateAutoTaskGenerator. */
export interface updateAutoTaskGeneratorPayload {
    auto_task_generator: (AutoTaskGenerator | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAutoTaskGeneratorPayload'
}


/** Autogenerated return type of updateAutomatedInsuranceBillingSetting. */
export interface updateAutomatedInsuranceBillingSettingPayload {
    automated_insurance_billing_setting: (AutomatedInsuranceBillingSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateAutomatedInsuranceBillingSettingPayload'
}


/** Autogenerated return type of updateBillingItem. */
export interface updateBillingItemPayload {
    billingItem: (BillingItem | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateBillingItemPayload'
}


/** Autogenerated return type of updateBrand. */
export interface updateBrandPayload {
    brand: (Brand | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateBrandPayload'
}


/** Autogenerated return type of updateByTemplate. */
export interface updateByTemplatePayload {
    care_plan: (CarePlanConnection | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateByTemplatePayload'
}


/** Autogenerated return type of updateCalendarViewSetting. */
export interface updateCalendarViewSettingPayload {
    calendar_view_setting: (CalendarViewSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCalendarViewSettingPayload'
}


/** Autogenerated return type of updateCampaign. */
export interface updateCampaignPayload {
    campaign: (Campaign | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCampaignPayload'
}


/** Autogenerated return type of updateCarePlan. */
export interface updateCarePlanPayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCarePlanPayload'
}


/** Autogenerated return type of updateChangeHealthAccount. */
export interface updateChangeHealthAccountPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'updateChangeHealthAccountPayload'
}


/** Autogenerated return type of updateChargeBack. */
export interface updateChargeBackPayload {
    charge_back: (ChargeBack | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateChargeBackPayload'
}


/** Autogenerated return type of updateChatSetting. */
export interface updateChatSettingPayload {
    chatSetting: (ChatSetting | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateChatSettingPayload'
}


/** Autogenerated return type of updateClient. */
export interface updateClientPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'updateClientPayload'
}


/** Autogenerated return type of updateCms1500. */
export interface updateCms1500Payload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cms1500: (Cms1500 | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCms1500Payload'
}


/** Autogenerated return type of updateCognitiveStatus. */
export interface updateCognitiveStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cognitive_status: (CognitiveStatus | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCognitiveStatusPayload'
}


/** Autogenerated return type of updateConversationMembership. */
export interface updateConversationMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    conversation_membership: (ConversationMembership | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateConversationMembershipPayload'
}


/** Autogenerated return type of updateConversation. */
export interface updateConversationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    conversation: (Conversation | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateConversationPayload'
}


/** Autogenerated return type of updateCourseGroup. */
export interface updateCourseGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseGroup: (CourseGroup | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCourseGroupPayload'
}


/** Autogenerated return type of updateCourseItem. */
export interface updateCourseItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseItem: (CourseItem | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCourseItemPayload'
}


/** Autogenerated return type of updateCourseMembership. */
export interface updateCourseMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    courseMembership: (CourseMembership | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCourseMembershipPayload'
}


/** Autogenerated return type of updateCourse. */
export interface updateCoursePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    course: (Course | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCoursePayload'
}


/** Autogenerated return type of updateCustomEmail. */
export interface updateCustomEmailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customEmail: (CustomEmail | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCustomEmailPayload'
}


/** Autogenerated return type of updateCustomFood. */
export interface updateCustomFoodPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customFood: (Food | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCustomFoodPayload'
}


/** Autogenerated return type of updateCustomModuleForm. */
export interface updateCustomModuleFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModuleForm: (CustomModuleForm | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCustomModuleFormPayload'
}


/** Autogenerated return type of updateCustomModule. */
export interface updateCustomModulePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    customModule: (CustomModule | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateCustomModulePayload'
}


/** Autogenerated return type of updateDocument. */
export interface updateDocumentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    document: (Document | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateDocumentPayload'
}


/** Autogenerated return type of updateEntry. */
export interface updateEntryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    entry: (Entry | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateEntryPayload'
}


/** Autogenerated return type of updateExternalCalendar. */
export interface updateExternalCalendarPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    external_calendar: (ExternalCalendar | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateExternalCalendarPayload'
}


/** Autogenerated return type of updateFamilyHistory. */
export interface updateFamilyHistoryPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    duplicate_family_history_condition: (FamilyHistoryCondition | null)
    family_history_condition: (FamilyHistoryCondition | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateFamilyHistoryPayload'
}


/** Autogenerated return type of updateFaxAcctInfo. */
export interface updateFaxAcctInfoPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'updateFaxAcctInfoPayload'
}


/** Autogenerated return type of updateFeatureToggle. */
export interface updateFeatureTogglePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    feature_toggle: (FeatureToggle | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateFeatureTogglePayload'
}


/** Autogenerated return type of updateFitbit. */
export interface updateFitbitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    fitbit: (Fitbit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateFitbitPayload'
}


/** Autogenerated return type of updateFolder. */
export interface updateFolderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    folder: (Folder | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateFolderPayload'
}


/** Autogenerated return type of updateFormAnswerGroup. */
export interface updateFormAnswerGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    form_answer_group: (FormAnswerGroup | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateFormAnswerGroupPayload'
}


/** Autogenerated return type of updateFunctionalStatus. */
export interface updateFunctionalStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    functional_status: (FunctionalStatus | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateFunctionalStatusPayload'
}


/** Autogenerated return type of updateGoal. */
export interface updateGoalPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    goal: (Goal | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateGoalPayload'
}


/** Autogenerated return type of updateGoogleFit. */
export interface updateGoogleFitPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    google_fit: (GoogleFit | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateGoogleFitPayload'
}


/** Autogenerated return type of updateGroupCarePlan. */
export interface updateGroupCarePlanPayload {
    carePlan: (CarePlan | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateGroupCarePlanPayload'
}


/** Autogenerated return type of updateHealthConcern. */
export interface updateHealthConcernPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    health_concern: (HealthConcern | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateHealthConcernPayload'
}


/** Autogenerated return type of updateHuman. */
export interface updateHumanPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    human: (Human | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateHumanPayload'
}


/** Autogenerated return type of updateImmunization. */
export interface updateImmunizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    immunization: (Immunization | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateImmunizationPayload'
}


/** Autogenerated return type of updateImplantableDeviceUser. */
export interface updateImplantableDeviceUserPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    implantable_device_user: (ImplantableDeviceUser | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateImplantableDeviceUserPayload'
}


/** Autogenerated return type of updateInsuranceAuthorization. */
export interface updateInsuranceAuthorizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    insuranceAuthorization: (InsuranceAuthorizationType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateInsuranceAuthorizationPayload'
}


/** Autogenerated return type of updateInsurancePlan. */
export interface updateInsurancePlanPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    insurance_plan: (InsurancePlan | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateInsurancePlanPayload'
}


/** Autogenerated return type of updateLabOrder. */
export interface updateLabOrderPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    currentUserNotificationsCount: (UserNotificationsCount | null)
    lab_order: (LabOrder | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateLabOrderPayload'
}


/** Autogenerated return type of updateLocation. */
export interface updateLocationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    location: (Location | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateLocationPayload'
}


/** Autogenerated return type of updateMeal. */
export interface updateMealPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    meal: (Meal | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateMealPayload'
}


/** Autogenerated return type of updateMedication. */
export interface updateMedicationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    medication: (MedicationType | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateMedicationPayload'
}


/** Autogenerated return type of updateNote. */
export interface updateNotePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    note: (Note | null)
    __typename: 'updateNotePayload'
}


/** Autogenerated return type of updateNoteScheduler. */
export interface updateNoteSchedulerPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    noteScheduler: (NoteScheduler | null)
    __typename: 'updateNoteSchedulerPayload'
}


/** Autogenerated return type of updateNotificationContact. */
export interface updateNotificationContactPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notificationContact: (NotificationContact | null)
    __typename: 'updateNotificationContactPayload'
}


/** Autogenerated return type of updateNotification. */
export interface updateNotificationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    currentUser: (User | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notification: (Notification | null)
    __typename: 'updateNotificationPayload'
}


/** Autogenerated return type of updateNotificationSetting. */
export interface updateNotificationSettingPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    notificationSetting: (NotificationSetting | null)
    __typename: 'updateNotificationSettingPayload'
}


/** Autogenerated return type of updateOffering. */
export interface updateOfferingPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    offering: (Offering | null)
    __typename: 'updateOfferingPayload'
}


/** Autogenerated return type of updateOfficeallySftpAccount. */
export interface updateOfficeallySftpAccountPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    officeally_sftp_account: (OfficeallySftpAccount | null)
    __typename: 'updateOfficeallySftpAccountPayload'
}


/** Autogenerated return type of updateOnboardingFlow. */
export interface updateOnboardingFlowPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    onboardingFlow: (OnboardingFlow | null)
    __typename: 'updateOnboardingFlowPayload'
}


/** Autogenerated return type of updateOnboardingItem. */
export interface updateOnboardingItemPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    onboardingItem: (OnboardingItem | null)
    __typename: 'updateOnboardingItemPayload'
}


/** Autogenerated return type of updateOrgOwner. */
export interface updateOrgOwnerPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    /** The success string */
    success_string: (Scalars['String'] | null)
    __typename: 'updateOrgOwnerPayload'
}


/** Autogenerated return type of updateOrganizationCptCode. */
export interface updateOrganizationCptCodePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organization_cpt_code: (OrganizationCptCodeType | null)
    __typename: 'updateOrganizationCptCodePayload'
}


/** Autogenerated return type of updateOrganizationMember. */
export interface updateOrganizationMemberPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'updateOrganizationMemberPayload'
}


/** Autogenerated return type of updateOrganizationMembership. */
export interface updateOrganizationMembershipPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organizationMembership: (OrganizationMembership | null)
    __typename: 'updateOrganizationMembershipPayload'
}


/** Autogenerated return type of updateOrganization. */
export interface updateOrganizationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    organization: (Organization | null)
    updated_organization_info: (OrganizationInfo | null)
    __typename: 'updateOrganizationPayload'
}


/** Autogenerated return type of updatePermissionTemplate. */
export interface updatePermissionTemplatePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    permissionTemplate: (PermissionTemplateType | null)
    __typename: 'updatePermissionTemplatePayload'
}


/** Autogenerated return type of updatePolicyMutation. */
export interface updatePolicyMutationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    policy: (Policy | null)
    __typename: 'updatePolicyMutationPayload'
}


/** Autogenerated return type of updateProcedure. */
export interface updateProcedurePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    procedure: (Procedure | null)
    __typename: 'updateProcedurePayload'
}


/** Autogenerated return type of updateProduct. */
export interface updateProductPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    product: (Product | null)
    __typename: 'updateProductPayload'
}


/** Autogenerated return type of updateProviderCptCodes. */
export interface updateProviderCptCodesPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateProviderCptCodesPayload'
}


/** Autogenerated return type of updateReceivedFax. */
export interface updateReceivedFaxPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    receivedFax: (ReceivedFax | null)
    __typename: 'updateReceivedFaxPayload'
}


/** Autogenerated return type of updateRecommendation. */
export interface updateRecommendationPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    recommendation: (Recommendation | null)
    __typename: 'updateRecommendationPayload'
}


/** Autogenerated return type of updateRecurringForm. */
export interface updateRecurringFormPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    recurringForm: (RecurringForm | null)
    __typename: 'updateRecurringFormPayload'
}


/** Autogenerated return type of updateReferral. */
export interface updateReferralPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    referral: (Referral | null)
    __typename: 'updateReferralPayload'
}


/** Autogenerated return type of updateReferringPhysician. */
export interface updateReferringPhysicianPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    referring_physician: (ReferringPhysician | null)
    __typename: 'updateReferringPhysicianPayload'
}


/** Autogenerated return type of updateRequestedPayment. */
export interface updateRequestedPaymentPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    requested_payment: (RequestedPayment | null)
    __typename: 'updateRequestedPaymentPayload'
}


/** Autogenerated return type of updateSavedFilter. */
export interface updateSavedFilterPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    savedFilter: (SavedFilter | null)
    __typename: 'updateSavedFilterPayload'
}


/** Autogenerated return type of updateSmartPhrase. */
export interface updateSmartPhrasePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    smartPhrase: (SmartPhrase | null)
    __typename: 'updateSmartPhrasePayload'
}


/** Autogenerated return type of updateSmokingStatus. */
export interface updateSmokingStatusPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    smokingStatus: (SmokingStatus | null)
    __typename: 'updateSmokingStatusPayload'
}


/** Autogenerated return type of updateState. */
export interface updateStatePayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    course: (Course | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateStatePayload'
}


/** Autogenerated return type of updateStripeCustomerDetail. */
export interface updateStripeCustomerDetailPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    stripe_customer_detail: (StripeCustomerDetail | null)
    __typename: 'updateStripeCustomerDetailPayload'
}


/** Autogenerated return type of updateStripeVerificationDetails. */
export interface updateStripeVerificationDetailsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'updateStripeVerificationDetailsPayload'
}


/** Autogenerated return type of updateSubscription. */
export interface updateSubscriptionPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    currentUser: (User | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    subscription: (SubscriptionInstance | null)
    __typename: 'updateSubscriptionPayload'
}


/** Autogenerated return type of updateSuperBill. */
export interface updateSuperBillPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    superBill: (SuperBill | null)
    __typename: 'updateSuperBillPayload'
}


/** Autogenerated return type of updateTag. */
export interface updateTagPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    tag: (Tag | null)
    __typename: 'updateTagPayload'
}


/** Autogenerated return type of updateTask. */
export interface updateTaskPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    task: (Task | null)
    __typename: 'updateTaskPayload'
}


/** Autogenerated return type of updateUniqueDeviceIdentifier. */
export interface updateUniqueDeviceIdentifierPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    unique_device_identifier: (UniqueDeviceIdentifier | null)
    __typename: 'updateUniqueDeviceIdentifierPayload'
}


/** Autogenerated return type of updateUserAppointmentPricing. */
export interface updateUserAppointmentPricingPayload {
    advance_appointment_prices: ((AdvanceAppointmentPrice | null)[] | null)
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    __typename: 'updateUserAppointmentPricingPayload'
}


/** Autogenerated return type of updateUserGroup. */
export interface updateUserGroupPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user_group: (UserGroup | null)
    __typename: 'updateUserGroupPayload'
}


/** Autogenerated return type of updateUser. */
export interface updateUserPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'updateUserPayload'
}


/** Autogenerated return type of updateWebhook. */
export interface updateWebhookPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    webhook: (Webhook | null)
    __typename: 'updateWebhookPayload'
}


/** Autogenerated return type of uploadBatchToCandidHealth. */
export interface uploadBatchToCandidHealthPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cms1500s: ((Cms1500 | null)[] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'uploadBatchToCandidHealthPayload'
}


/** Autogenerated return type of uploadBatchToChangeHealth. */
export interface uploadBatchToChangeHealthPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cms1500s: ((Cms1500 | null)[] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'uploadBatchToChangeHealthPayload'
}


/** Autogenerated return type of uploadBatchToOfficeally. */
export interface uploadBatchToOfficeallyPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    cms1500s: ((Cms1500 | null)[] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_string: (Scalars['String'] | null)
    __typename: 'uploadBatchToOfficeallyPayload'
}


/** Autogenerated return type of uploadToIntegrations. */
export interface uploadToIntegrationsPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    success_message: (Scalars['String'] | null)
    __typename: 'uploadToIntegrationsPayload'
}


/** Autogenerated return type of validateVerificationToken. */
export interface validateVerificationTokenPayload {
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId: (Scalars['String'] | null)
    /** The list of errors occurred during the mutation */
    messages: ((FieldError | null)[] | null)
    user: (User | null)
    __typename: 'validateVerificationTokenPayload'
}


/** Accepted Insurance Plan */
export interface AcceptedInsurancePlanGenqlSelection{
    /** Unique identifier of the plan */
    id?: boolean | number
    /** Connected ICD Code Object */
    insurance_plan?: InsurancePlanGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddClaimSubmitter */
export interface AddClaimSubmitterInput {
/** ID of the User */
user_id: Scalars['ID']}


/** Autogenerated return type of AddClaimSubmitter. */
export interface AddClaimSubmitterPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddCptCode */
export interface AddCptCodeInput {cpt_code: Scalars['String'],cpt_description: Scalars['String']}


/** Autogenerated return type of AddCptCode. */
export interface AddCptCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddIcdCode */
export interface AddIcdCodeInput {icd_category: Scalars['String'],icd_code: Scalars['String'],icd_description: Scalars['String']}


/** Autogenerated return type of AddIcdCode. */
export interface AddIcdCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of AddReplyToEmailAddresses */
export interface AddReplyToEmailAddressesInput {
/** The list of email addresses to add to the user */
email_list: Scalars['String'],
/** The ID of the user to add the email addresses to */
user_id: Scalars['ID']}


/** Autogenerated return type of AddReplyToEmailAddresses. */
export interface AddReplyToEmailAddressesPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string if the mutation was successful */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for added user as a label-value pair */
export interface AddedUsersInput {
/** The label for the user */
label: Scalars['String'],
/** The labeled value */
value: Scalars['ID']}


/** Specific appointment price object for provider/client */
export interface AdvanceAppointmentPriceGenqlSelection{
    /** Appointment type ID this appointment price is associated with. */
    appointment_type_id?: boolean | number
    /** The unique identifier of the price */
    id?: boolean | number
    /** The advance price for this appointment type */
    price?: boolean | number
    /** User ID this appointment price is associated with. */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an advance appointment price */
export interface AdvanceAppointmentPriceInput {
/** The ID of the appointment type */
appointment_type_id?: (Scalars['ID'] | null),
/** The ID of the price */
id?: (Scalars['ID'] | null),
/** The price of the appointment type */
price?: (Scalars['String'] | null)}


/** Payload for overriding an advance appointment price */
export interface AdvanceAppointmentPricesInput {
/** The ID of the appointment type */
appointment_type_id?: (Scalars['ID'] | null),
/** The ID of the price */
id?: (Scalars['ID'] | null),
/** The price of the appointment type */
price?: (Scalars['String'] | null),
/** The ID of the user */
user_id?: (Scalars['ID'] | null)}


/** (DEPRECATED - NO LONGER USED) Information on the provider's affiliate abilities */
export interface AffiliateGenqlSelection{
    /** The LeadDyno ID of the affiliate */
    affiliate_id?: boolean | number
    /** The referral URL of the affiliate */
    affiliate_url?: boolean | number
    /** The URL of the affiliate's dashboard */
    dashboard_url?: boolean | number
    /** Unique identifier of the affiliate */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An allergy/sensitivity/preference for a client */
export interface AllergySensitivityGenqlSelection{
    /** Enum field. Options: allergy, sensitivity, preference, intolerance, ccda */
    category?: boolean | number
    /** Type of allergy or like/dislike for preference. Options: food, drug, environmental, pet, latex, like, dislike */
    category_type?: boolean | number
    /** Date/Time created */
    created_at?: boolean | number
    /** User who created this allergy */
    created_by?: UserGenqlSelection
    /** The unique identifier of the allergy */
    id?: boolean | number
    /**
     * @deprecated Use status instead
     * If the allergy is current.
     */
    is_current?: boolean | number
    /** If the allergy is synchronized with an external system (e.g., an E-Rx system) */
    mirrored?: boolean | number
    /** The name of the allergy/sensitivity/preference */
    name?: boolean | number
    /** The date of onset */
    onset_date?: boolean | number
    /** Description of the reaction on the allergen */
    reaction?: boolean | number
    /** The type of the reaction. Options are [allergy, adverse_reaction] */
    reaction_type?: boolean | number
    /** When true, this object must be consolidated as part of a CCDA Ingest */
    requires_consolidation?: boolean | number
    /** The severity of the allergy. Options: mild, moderate, severe, unknown */
    severity?: boolean | number
    /** The allergy's current status. Options are [active, inactive, resolved] */
    status?: boolean | number
    /** Date/Time last updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Announcements created by providers for client consumption */
export interface AnnouncementGenqlSelection{
    /** If true, announcement is active */
    active?: boolean | number
    /** file name of associated image */
    announcement_image_name?: boolean | number
    /** URL of image associated with announcement */
    announcement_image_url?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Announcement content(viewable by client) */
    description?: boolean | number
    /** Unique identifier of the announcement */
    id?: boolean | number
    /** Date and time announcement active status was changed */
    last_toggled_at?: boolean | number
    /** User that updated active status of this announcement most recently */
    last_toggled_by?: UserGenqlSelection
    /** Name of announcement(only viewable by provider) */
    name?: boolean | number
    /** Title of announcement(viewable by client) */
    title?: boolean | number
    /** User that created this announcement */
    user?: UserGenqlSelection
    /** Comma separated list of user group ids associated with this announcement */
    user_group_ids?: boolean | number
    /** Comma separated list of user group names associated with this announcement */
    user_group_names?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Announcement image upload */
export interface AnnouncementImageUpload {
/** The announcement image */
image?: (Scalars['Upload'] | null)}


/** A created API Key */
export interface ApiKeyGenqlSelection{
    /** The datetime the API Key was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Upon the initial creation of the key, this field displays the actual key to be used to authenticate. */
    displayable_key?: boolean | number
    /** Unique identifier of the key */
    id?: boolean | number
    /** A user-chosen name for the API key. */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Apple Health Sync */
export interface AppleHealthGenqlSelection{
    /** The unique identifier of the apple health */
    id?: boolean | number
    /** The last time the apple health was synced */
    last_sync_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A tag applied to a user */
export interface AppliedTagGenqlSelection{
    /** The time the tag was applied */
    created_at?: boolean | number
    /** The unique identifier of the applied tag */
    id?: boolean | number
    /** The tag applied */
    tag?: TagGenqlSelection
    /** The unique identifier of the tag */
    tag_id?: boolean | number
    /** The time the applied tag was last updated */
    updated_at?: boolean | number
    /** The tagged user */
    user?: UserGenqlSelection
    /** The ID of the tagged user */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An appointment object containing information about the appointment, including the attendees, date, location, and more. */
export interface AppointmentGenqlSelection{
    /** The actual length of the appointment (in minutes). Filled in by the provider after the appointment */
    actual_duration?: boolean | number
    /** Get link to add appointment to google calendar */
    add_to_gcal_link?: boolean | number
    /** The category of the appointment */
    appointment_category?: boolean | number
    /** The number of people (both providers and attendees) who are in the appointment */
    appointment_inclusions_count?: boolean | number
    /** A label for the appointment */
    appointment_label?: boolean | number
    /** the ID of the appointment location */
    appointment_location_id?: boolean | number
    /** The type of the appointment */
    appointment_type?: AppointmentTypeGenqlSelection
    /** The ID of the type of appointment this is */
    appointment_type_id?: boolean | number
    /** List of assigned user groups to the group appointment */
    assigned_groups?: UserGroupGenqlSelection
    /** Client inclusions which includes all attendees even if they didnt show up for the appointment */
    attended_clients?: AppointmentInclusionTypeGenqlSelection
    /** All attendees for the appointment. */
    attendees?: UserGenqlSelection
    /** Pending Appointment inclusions */
    attendees_on_waitlist?: UserGenqlSelection
    /** The backgroundColor color of the appointment */
    backgroundColor?: { __args: {
    /** The time the appointment setting was last updated */
    appointment_setting_updated_at?: (Scalars['String'] | null)} } | boolean | number
    /** Returns true if the patient can reschedule the appointment */
    can_be_rescheduled?: boolean | number
    /** True if client able to cancel an appointment */
    can_client_cancel?: boolean | number
    /** True if client able to reschedule an appointment */
    can_client_reschedule?: boolean | number
    /** false if the client needs to confirm the appointment, and has not */
    client_confirmed?: { __args: {
    /** Whether or not the appointment requires client confirmation */
    known_requires_client_confirmed?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Whether the appointment updating on client side or not */
    client_updating?: boolean | number
    /** The status of whether the provider has confirmed the appointment or not */
    confirmed?: boolean | number
    /** True if appointment is locked */
    connected_chart_note_locked?: boolean | number
    /** The status of the connected chart note */
    connected_chart_note_string?: boolean | number
    /** How the provider and attendees will connect (i.e In-Person or through the phone) */
    contact_type?: boolean | number
    /** The ID of conversation related to the current appointment(only for group appts 10/2020) */
    conversation_id?: boolean | number
    /** The date and time that the appointment was created */
    created_at?: boolean | number
    /** True if a credit was used for this appointment */
    credit_was_used?: boolean | number
    /** The position of the appointment in the recurring series */
    current_position_in_recurring_series?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The date and time of the appointment */
    date?: boolean | number
    /** default color of appointment based on confirmation/type */
    default_color?: boolean | number
    /** The time the appointment was deleted. It is blank if the appointment is not deleted. */
    deleted_at?: boolean | number
    /** The end time of the appointment */
    end?: boolean | number
    /** The type of connection to an external calendar */
    external_id_type?: boolean | number
    /** A URL to an external video chat site for the session */
    external_videochat_url?: boolean | number
    /** The custom answers filled out by the booker of the appointment */
    filled_embed_form?: FormAnswerGroupGenqlSelection
    /** Form answer group associated with appointment */
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** open tok token */
    generated_token?: boolean | number
    /** When true, additional group charting fields are visibile in the Healthie UI */
    has_expanded_vbc_charting_fields?: boolean | number
    /** Returns true if the apointment has inprogress job */
    has_in_progress_job?: boolean | number
    /** The unique identifier of the appointment */
    id?: boolean | number
    /** ID of user that created of appointment */
    initiator_id?: boolean | number
    /** When true, insurance billing will be enabled for this appointment */
    insurance_billing_enabled?: boolean | number
    /** The status of whether this appointment is specifically meant to block availability */
    is_blocker?: boolean | number
    /** Indicates whether it's a group appointment */
    is_group?: boolean | number
    /** The status of whether the video chat uses Zoom or Healthie Default telehealth */
    is_zoom_chat?: boolean | number
    /** id of last conversation between provider and client in appointment */
    last_client_conversation_id?: boolean | number
    /** The ID of the provider who last updated the appointment record, if available */
    last_updated_by_id?: boolean | number
    /** The Late Cancellation Fee (in cents) for this appointment */
    late_cancellation_fee?: boolean | number
    /** The length of the appointment (in minutes) */
    length?: boolean | number
    /** The plaintext location of the appointment (only used for in-person appointments) */
    location?: boolean | number
    /** Location Resource */
    locationResource?: boolean | number
    /** How many attendees can register for an appointment (only used for Group Appointments) */
    max_attendees?: boolean | number
    /** a serialized JSON string of metadata */
    metadata?: boolean | number
    /** Minimum time before the appointment when client can still cancel it */
    minimum_advance_cancel_time?: boolean | number
    /** Minimum time (in minutes) before the appointment when client can still reschedule it */
    minimum_advance_reschedule_time?: boolean | number
    /** The No Show Fee (in cents) for this appointment */
    no_show_fee?: boolean | number
    /** Quick notes on the appointment (only visisble to providers) */
    notes?: boolean | number
    /** The id of the provider */
    other_party_id?: boolean | number
    /** The number of times a patient rescheduled an appointment */
    patient_reschedule_count?: boolean | number
    /** The status of the appointment. Can be one of “Occurred”, “No-Show”, “Re-Scheduled”, “Cancelled”, “Late Cancellation” */
    pm_status?: { __args: {
    /** Check if client cancelled the appointment */
    check_for_client_cancel?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The date and time the status of the appointment was last updated */
    pm_status_changed_at?: boolean | number
    /** The ID of the user who last changed the status of the appointment, if available */
    pm_status_last_changed_by_id?: boolean | number
    /** Get the pricing info for this appointment */
    pricing_info?: AppointmentPricingInfoTypeGenqlSelection
    /** The provider for the appointment */
    provider?: UserGenqlSelection
    /** Provider name */
    provider_name?: boolean | number
    /** All providers for the appointment. */
    providers?: (UserGenqlSelection & { __args?: {
    /** Return an empty array unless there is more than one provider */
    empty_unless_multiple?: (Scalars['Boolean'] | null)} })
    /** The clients reason for scheduling the appointment */
    reason?: boolean | number
    /** The related recurring appointment series */
    recurring_appointment?: RecurringAppointmentGenqlSelection
    /**
     * @deprecated Use recurring_appointment instead
     * The ID of the recurring appointment
     */
    recurring_appointment_id?: boolean | number
    /**
     * @deprecated Use recurring_appointment instead
     * The status of whether this is a repeating appointment or not
     */
    repeat?: boolean | number
    /**
     * @deprecated Use recurring_appointment instead
     * How often to repeat the appointment (e.g Daily or Monthly)
     */
    repeat_interval?: boolean | number
    /**
     * @deprecated Use recurring_appointment instead
     * How many times does the appointment repeat
     */
    repeat_times?: boolean | number
    /** A requested payment for this appointment */
    requested_payment?: RequestedPaymentGenqlSelection
    /** The ID of the user, used for the calendar */
    resourceId?: boolean | number
    /** the ID of the room */
    room_id?: boolean | number
    /** A string containing info on how the appointment was scheduled */
    scheduled_by?: boolean | number
    /** The OpenTok session ID for the appointment */
    session_id?: boolean | number
    /** When true, a cms1500 should be created when the appointment status is set to occured */
    should_create_cms1500_for_occurred_appointments?: boolean | number
    /** The start time of the appointment */
    start?: boolean | number
    /** The font color of the appointment */
    textColor?: boolean | number
    /** The status of whether the time of this appointment has been separated from the other recurring appointments in the series */
    time_recurring_override?: boolean | number
    /** Timezone abbreviation of the date of the appointment */
    timezone_abbr?: boolean | number
    /** The title of the appointment */
    title?: boolean | number
    /** Unauthenticated link to download an ICS file for the appointment */
    unauthenticated_ics_link?: boolean | number
    /** The last date and time that the appointment was updated */
    updated_at?: boolean | number
    /** Whether the appointment is through Zoom or not */
    use_zoom?: boolean | number
    /** The client in a 1:1 appointment */
    user?: UserGenqlSelection
    /** The id of the client (if a 1:1 appointment). If a group appointment, will be nil */
    user_id?: boolean | number
    /** Zoom meeting info. Appointment should have a valid zoom link and the user should have the permission to access the meeting. Otherwise returns nil */
    zoom_appointment?: ZoomAppointmentGenqlSelection
    /** URLs for Zoom cloud recordings for this appointment */
    zoom_cloud_recording_urls?: boolean | number
    /** The dial-in info provided by zoom if appoint has zoom links.(separated by newline characters) */
    zoom_dial_in_info?: boolean | number
    /** The dial-in info provided by zoom if appoint has zoom links.(separated by break tags) */
    zoom_dial_in_info_html?: boolean | number
    /** An array of JSON objects containing the different dial in numbers for the Zoom call */
    zoom_dial_in_numbers_json?: boolean | number
    /** The join link for other attendees of the Zoom call */
    zoom_join_url?: boolean | number
    /** The Meeting ID for the Zoom call */
    zoom_meeting_id?: boolean | number
    /** The host link to start the Zoom call */
    zoom_start_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Warnings to show provider before they book */
export interface AppointmentBookingWarningGenqlSelection{
    /** Category of warning (e.g no credits) */
    category?: boolean | number
    /** Array of IDs of objects causing booking issues for a given category */
    potential_issue_ids?: boolean | number
    /** Array of potential booking issues for a given category */
    potential_issues?: boolean | number
    /** Subtitle describing the category */
    subtitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing appointment type credit change event */
export interface AppointmentCreditChangeGenqlSelection{
    /** The appointment related to credit change event */
    appointment?: AppointmentGenqlSelection
    /** The time when credit change event was created */
    created_at?: boolean | number
    /** The event which caused credit change */
    credit_change_event?: boolean | number
    /** The specific action which caused credit change */
    credit_change_event_type?: boolean | number
    /** The amount of credits after specific event */
    credit_quantity?: boolean | number
    /** The unique identifier of the credit change */
    id?: boolean | number
    /** The user who triggered credit change */
    initiator?: UserGenqlSelection
    /** The offering related to credit change event */
    offering?: OfferingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointment Data */
export interface AppointmentDataTypeGenqlSelection{
    /** Appointment Frequency */
    freq?: AppointmentFrequencyDataTypeGenqlSelection
    /** Appointment Month */
    month?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointment Frequency Data */
export interface AppointmentFrequencyDataTypeGenqlSelection{
    /** Frequency of cancelled appointments */
    cancelled?: boolean | number
    /** Frequency of late cancellation appointments */
    late_cancellation?: boolean | number
    /** Frequency of appointments with no status */
    no_status?: boolean | number
    /** Frequency of no-show appointments */
    noshow?: boolean | number
    /** Frequency of occurred appointments */
    occurred?: boolean | number
    /** Frequency of rescheduled appointments */
    rescheduled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Provider/Client to Appointment connection */
export interface AppointmentInclusionTypeGenqlSelection{
    /** The appointment the inclusion is connected to. */
    appointment?: AppointmentGenqlSelection
    /** Indicate whether a group appointment attendee have taken part in the appointment */
    attended?: boolean | number
    /** Indicate if a group appointment attendee cancelled the appointment */
    cancelled?: boolean | number
    /** If the client has confirmed the appointment, or don't need to (THIS IS FIELD IS CURRENTLY USED ONLY FOR GROUP APPT's) */
    confirmed?: boolean | number
    /** The UUID of the appointment inclusion. Can be used in conjunction with appointment settings to allow unauthenticated users to modify an appointment. */
    external_uuid?: boolean | number
    /** The unique identifier of the appointment inclusion */
    id?: boolean | number
    /** The datetime that the attendee joined the appointment */
    join_time?: boolean | number
    /** The datetime that the attendee left the appointment */
    leave_time?: boolean | number
    /** Attendee */
    user?: UserGenqlSelection
    /**
     * @deprecated Use `user` field
     * Attendee ID
     */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A location where appointments are held */
export interface AppointmentLocationGenqlSelection{
    /** Whether the client can select this location or not */
    clients_can_book?: boolean | number
    /** Whether the location has any rooms */
    has_rooms?: boolean | number
    /** The unique identifier of the appointment */
    id?: boolean | number
    /** The location (in plain text) */
    location?: boolean | number
    /** The rooms at the location */
    rooms?: RoomGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an appointment location */
export interface AppointmentLocationInput {
/** If true, the location will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** If true, clients can book appointments at this location */
clients_can_book?: (Scalars['Boolean'] | null),
/** If true, this location has rooms */
has_rooms?: (Scalars['Boolean'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The graphql_name of the location */
location?: (Scalars['String'] | null),
/** The rooms at this location */
rooms?: ((RoomInput | null)[] | null)}


/** The appointment count for the specific day */
export interface AppointmentPerDayDataGenqlSelection{
    /** The object with the total count of appointments for each status */
    count?: AppointmentFrequencyDataTypeGenqlSelection
    /** The day we count appointments for */
    date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointments for the specific type and day */
export interface AppointmentPerTypePerDayDataGenqlSelection{
    /** The array containing the appointment count for each appointment status for the specific day */
    appointments?: AppointmentPerDayDataGenqlSelection
    /** The name of the specific appointment type */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The data type for the appointment count for each appointment type per user */
export interface AppointmentPerTypePerUserDataGenqlSelection{
    /** The array containing the appointment count for each appointment type for each appointment status for the specific day */
    appointment_types?: AppointmentPerTypePerDayDataGenqlSelection
    /** The name of the specific user who we count appointments for */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointments for each status for the specific day */
export interface AppointmentPerUserDataGenqlSelection{
    /** The array containing the appointment count for each appointment status for the specific day */
    appointments?: AppointmentPerDayDataGenqlSelection
    /** The name of the provider who we count appointments for */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointment pricing info */
export interface AppointmentPricingInfoTypeGenqlSelection{
    /** CPT Code ID */
    cpt_code_id?: boolean | number
    /** The price */
    price?: boolean | number
    /** The units of the price */
    units?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointment Setting options that a provider can customize */
export interface AppointmentSettingGenqlSelection{
    /** Insurance plans that are accepted by the provider */
    accepted_insurance_plans?: AcceptedInsurancePlanGenqlSelection
    /** Whether or not providers will be able to set pricing per appointment type */
    allow_appointment_type_pricing?: boolean | number
    /** If true, clients will be able to cancel an appointment */
    allow_clients_to_cancel_appt?: boolean | number
    /** If true, clients will be able to reschedule an appointment */
    allow_clients_to_reschedule_appt?: boolean | number
    /** When true, providers can specify external url (e.g., Doxy, VSee) for Video Call appointments. */
    allow_external_videochat_urls?: boolean | number
    /** When true, a client can reschedule a past appointment (on the Web/API only) */
    allow_past_appointment_rescheduling?: boolean | number
    /** Whether or not clients will have specific pricing for appointment types */
    allow_specific_client_pricing?: boolean | number
    /** Whether or not providers will have specific pricing for appointment types */
    allow_specific_provider_pricing?: boolean | number
    /** Always notify the provider when the client books */
    always_send_confirm_notification?: boolean | number
    /** Appointment Locations for this Appointment Setting */
    appointment_locations?: AppointmentLocationGenqlSelection
    /** Have different appointment confirmation emails for each appointment type */
    appointment_type_confirmed_email?: boolean | number
    /** Have different appointment reminder emails for each appointment type */
    appointment_type_reminder_email?: boolean | number
    /** When true, and when the appointment setting is associated to a specific appointment type, the reminder settings will override the provider's normal ones */
    appointment_type_reminder_override?: boolean | number
    /** Have different website booking emails for each appointment type */
    appointment_type_website_booking_email?: boolean | number
    /** Seperate confirmation emails for different appointment types */
    appt_type_confirmed_email?: boolean | number
    /** Seperate reminder emails for different appointment types */
    appt_type_reminder_email?: boolean | number
    /** Seperate website booking emails for different appointment types */
    appt_type_website_booking_email?: boolean | number
    /** Ask clients to confirm their appointment */
    ask_clients_to_confirm?: boolean | number
    /** If true, clients can confirm their appointment via text */
    ask_to_confirm_via_text?: boolean | number
    /** When true, after an appointment has been set as occurred, a CMS 1500 claim can be automatically created for the session */
    auto_create_cms1500?: boolean | number
    /** Auto-generate a payment request when an appointment is scheduled */
    auto_invoicing?: boolean | number
    /** when true, a scheduled charge will be created when an appointment is marked as late cancellation or no show */
    auto_schedule_charges_for_late_cancellation_no_show?: boolean | number
    /** When true, it will be automatically submitted to the clearinghouse on the following Friday at 11:59 PM */
    auto_submit_cms1500?: boolean | number
    /** Allow clients to book appointments at none, 20, 30, 60 intervals */
    booking_interval_restriction?: boolean | number
    /** The amount of minutes to maintain between appointments (prevent back to back appointments) */
    buffer?: boolean | number
    /** The color schemes defined for this appointment setting */
    calendar_color_schemes?: CalendarColorSchemeGenqlSelection
    /** Calendar interval */
    calendar_interval?: boolean | number
    /** Text to display above the client's calendar within Healthie */
    calendar_text?: boolean | number
    /** Message to show clients when they are not allowed to cancel */
    cant_cancel_message?: boolean | number
    /** Message to show clients when they are not allowed to cancel */
    cant_reschedule_message?: boolean | number
    /** Whether or not client with valid payment method will be charged for occured appointments */
    charge_for_occured_appts?: boolean | number
    /** If true, clients will be able to call to provider */
    client_should_call_provider?: boolean | number
    /** When false, the billing tab is hidden from clients */
    clients_have_billing?: boolean | number
    /** Confirm all client-created appointments by default */
    confirm_by_default?: boolean | number
    /** Contact type overrides for this appointment setting */
    contact_type_overrides?: ContactTypeGenqlSelection
    /** Show the group appointment form first */
    default_appt_form_to_group?: boolean | number
    /** The template selected will automatically appear when a new chart note is started */
    default_charting_template_id?: boolean | number
    /** The template name selected */
    default_charting_template_name?: boolean | number
    /** The form that should be pre-selected when creating a new group charting note */
    default_group_charting_template?: CustomModuleFormGenqlSelection
    /** Use Zoom for all telehealth appointments */
    default_to_zoom?: boolean | number
    /** Video service to use for telehealth appointments ('internal', 'zoom', or 'external') */
    default_video_service?: boolean | number
    /** Prevent the client from rescheduling a past appointment with one of these statuses */
    disallowed_reschedulable_statuses?: boolean | number
    /** The end time to show when setting weekly availability */
    end_time?: boolean | number
    /** Facebook pixel code that runs when the client completes the embdedded scheduler/purchaser */
    fb_pixel?: boolean | number
    /**
     * @deprecated This now always returns true
     * Assign a name to chart notes
     */
    give_notes_name?: boolean | number
    /** If true, hide insurance getting started info */
    hide_insurance_getting_started_info?: boolean | number
    /** Hide links to Healthie from appointment reminders */
    hide_link?: boolean | number
    /** The unique identifier of the setting */
    id?: boolean | number
    /** When true, it will show the option to run an insurance eligibility check for a client */
    insurance_eligibility_integration?: boolean | number
    /** Whether or not to send invoice to client without a valid payment card/method */
    invoice_clients_without_payment_method?: boolean | number
    /** The fee (in cents) to use for appointments marked as late cancellation */
    late_cancellation_fee?: boolean | number
    /** The maximum number of days in advance a client can book */
    max_days_in_future?: boolean | number
    /** Maximum time a client must wait before being able to reschedule a past appointment */
    maximum_past_reschedule_time?: boolean | number
    /** Minimum time before the appointment when client still can cancel it (in minutes) */
    minimum_advance_cancel_time?: boolean | number
    /** Minimum time before the appointment when client still can reschedule it (in minutes) */
    minimum_advance_reschedule_time?: boolean | number
    /** Minimum time before the despired appointment type where client still can schedule it (in minutes) */
    minimum_advance_schedule_time?: boolean | number
    /** The minimum days in advance a client has to book */
    minimum_days_in_advance?: boolean | number
    /** Minimum time a client must wait before being able to reschedule a past appointment */
    minimum_past_reschedule_time?: boolean | number
    /** The fee (in cents) to use for appointments marked as no show */
    no_show_fee?: boolean | number
    /**
     * @deprecated Use booking_interval_restriction instead
     * Either "even" or "hour" to restrict booking to even hours or half hours.
     */
    only_book?: boolean | number
    /**
     * @deprecated Use booking_interval_restriction instead
     * Whether or not to restrict booking to even hours or half hours.
     */
    only_book_even?: boolean | number
    /**
     * @deprecated Use booking_interval_restriction instead
     * Whether or not to restrict booking to even hours or half hours.
     */
    only_book_hour?: boolean | number
    /** Owner of this appointment_setting */
    owner?: UserGenqlSelection
    /** The maximum number of times a patient can self reschedule */
    patient_reschedule_count_cap?: boolean | number
    /** Appointment statuses that can be applied to an appointment. Includes default ones plus any custom */
    pm_statuses?: boolean | number
    /** Prevent clients from booking an appointment */
    prevent_client_booking?: boolean | number
    /** Prevent clients from booking if they do not have the needed credit */
    prevent_no_credit_booking?: boolean | number
    /** When true, replies to automatic notifications will go to the provider */
    reply_to_provider?: boolean | number
    /** When true, providers and staff will always be asked to select an appointment location when scheduling, even if its a video chat. */
    require_selected_location_for_all_contact_types?: boolean | number
    /** The minimum number of days beyond the current appointment date that the patient can reschedule to */
    reschedule_max_days_before_date?: boolean | number
    /** The maximum number of days beyond the current appointment date that the patient can reschedule to */
    reschedule_max_days_from_date?: boolean | number
    /** Give clients their credit back when an appointment is cancelled */
    restore_credit_on_cancel?: boolean | number
    /** When true, clients are prevented from scheduling appointments the day of */
    same_day_appointments?: boolean | number
    /** When false, no appointment cancel emails are sent to patients. */
    send_appointment_cancellation_email?: boolean | number
    /** When false, no appointment update emails are sent to patients. */
    send_appointment_update_email?: boolean | number
    /** Send clients an email when a provider schedules an appointment */
    send_booking_notice?: boolean | number
    /** Send an email 5 minutes before a video chat starts */
    send_email_before_appointment?: boolean | number
    /** Send email reminder to complete intake forms two days before */
    send_intake_forms_reminder?: boolean | number
    /** Send a push notification 5 minutes before a video chat starts */
    send_push_before_appointment?: boolean | number
    /** Send an email reminder four days before the appointment */
    send_reminder_four_days_before?: boolean | number
    /** Send an email reminder one day before the appointment */
    send_reminder_one_day_before?: boolean | number
    /** Send an email reminder one hour before the appointment */
    send_reminder_one_hour_before?: boolean | number
    /** Send an email reminder three days before the appointment */
    send_reminder_three_days_before?: boolean | number
    /** Send an email reminder two days before the appointment */
    send_reminder_two_days_before?: boolean | number
    /** Send an email reminder two hours before the appointment */
    send_reminder_two_hours_before?: boolean | number
    /** NOTE: Your organization MUST have its own Twilio account configured to have this feature, and have AppointmentSetting.send_email_before_appointment enabled */
    send_text_reminder_five_minutes_before?: boolean | number
    /** Send a text reminder four days before the appointment */
    send_text_reminder_four_days_before?: boolean | number
    /** Send a text reminder one day before the appointment */
    send_text_reminder_one_day_before?: boolean | number
    /** Send a text reminder one hour before the appointment */
    send_text_reminder_one_hour_before?: boolean | number
    /** Send a text reminder three days before the appointment */
    send_text_reminder_three_days_before?: boolean | number
    /** Send a text reminder two days before the appointment */
    send_text_reminder_two_days_before?: boolean | number
    /** Send a text reminder two hours before the appointment */
    send_text_reminder_two_hours_before?: boolean | number
    /** When true, providers can set a default external link for video call sessions. */
    set_default_videochat_url?: boolean | number
    /** If True, provider will see Care Plans option on a Client profile page */
    show_care_plans?: boolean | number
    /** If true, show cms1500s */
    show_cms1500s?: boolean | number
    /** When false, the faxing tab on the left hand side is hidden from providers */
    show_faxes?: boolean | number
    /** If true, show the insurance authorization section on the clients profile */
    show_insurance_authorization?: boolean | number
    /** If true, show office ally */
    show_office_ally?: boolean | number
    /** If true, show superbills */
    show_superbills?: boolean | number
    /** Facebook pixel code that runs when the client starts the embdedded scheduler/purchaser */
    start_fb_pixel?: boolean | number
    /** The start time to show when setting weekly availability */
    start_time?: boolean | number
    /** Set different availability for each appointment type */
    times_by_appointment_type?: boolean | number
    /** Set different availability for each contact type */
    times_by_contact_type?: boolean | number
    /** Set different availability for each appointment location */
    times_by_location?: boolean | number
    /** The last date and time that the appointment setting was updated */
    updated_at?: boolean | number
    /** If true, cpt units and fees can be associated with appointment types */
    use_appointment_type_cpt_units_and_fees?: boolean | number
    /** Whether or not to use the client credit system */
    use_client_credit_system?: boolean | number
    /** If true, you can see where each client came from */
    use_client_sources?: boolean | number
    /** If true, clients will be placed in a waiting room instead of joining the Zoom call directly */
    use_zoom_waiting_room?: boolean | number
    /** The id of the user */
    user_id?: boolean | number
    /** Default video url settings */
    video_url_default?: VideoUrlDefaultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointment Setting Inputs */
export interface AppointmentSettingInputs {
/** Specifies whether external appointment inclusion management is allowed. */
allow_external_appt_inclusion_management?: (Scalars['Boolean'] | null),
/** Specifies whether past appointment rescheduling is allowed. */
allow_past_appointment_rescheduling?: (Scalars['Boolean'] | null),
/** The ID of the appointment type. */
appointment_type_id?: (Scalars['Int'] | null),
/** The base calendar interval for appointments. */
base_calendar_interval?: (Scalars['String'] | null),
/** The text to display on the calendar. */
calendar_text?: (Scalars['String'] | null),
/** Specifies whether charge receipts are disabled. */
disable_charge_receipts?: (Scalars['Boolean'] | null),
/** Specifies whether requested form notifications are disabled. */
disable_requested_form_notifications?: (Scalars['Boolean'] | null),
/** Some Pixel Setting (?). */
fb_pixel?: (Scalars['String'] | null),
/** Specifies whether updating signed chart notes is allowed. */
freeze_signed_chart_note?: (Scalars['Boolean'] | null),
/** Hides links in all emails. */
hide_link?: (Scalars['Boolean'] | null),
/** The message to display when there is no availability. */
no_availability_message?: (Scalars['String'] | null),
/** Specifies whether appointment cancellation emails are sent. */
send_appointment_cancellation_email?: (Scalars['Boolean'] | null),
/** Specifies whether appointment update emails are sent. */
send_appointment_update_email?: (Scalars['Boolean'] | null),
/** Specifies whether embeddable appointment creator emails are sent. */
send_embeddable_appt_creator_email?: (Scalars['Boolean'] | null),
/** Specifies whether text reminders are sent five minutes before the appointment. */
send_text_reminder_five_minutes_before?: (Scalars['Boolean'] | null),
/** Specifies whether texts are sent to archived patients. */
send_texts_to_archived_patients?: (Scalars['Boolean'] | null),
/** Specifies whether care plans are shown. */
show_care_plans?: (Scalars['Boolean'] | null),
/** Specifies whether insurance authorization is shown. */
show_insurance_authorization?: (Scalars['Boolean'] | null)}


/** The data for the appointment summary */
export interface AppointmentSummaryDataGenqlSelection{
    /** The array containing the appointment count for each appointment status for the specific day */
    appointment_history?: AppointmentPerDayDataGenqlSelection
    /** The array containing the appointment count for each appointment status for each provider for the specific day */
    appointment_history_per_provider?: AppointmentPerUserDataGenqlSelection
    /** The array containing the appointment count for each appointment status for each provider for each appointment type for the specific day */
    appointment_history_per_provider_and_type?: AppointmentPerTypePerUserDataGenqlSelection
    /** The array containing the appointment count for each appointment status for each appointment type for the specific day */
    appointment_history_per_type?: AppointmentPerTypePerDayDataGenqlSelection
    /** The count of appointments for each appointment type */
    appointments_per_type_count?: AppointmentTypeAppointmentCountDataGenqlSelection
    /** The average amount of appointments per day */
    avg_per_day?: boolean | number
    /** The difference between the current average amount of appointments and the average count of appointments in prior period */
    avg_per_day_percent_diff?: boolean | number
    /** The busiest week day in selected period */
    busiest_days_of_week?: boolean | number
    /** When true, the data is in the process of being generated and stored in the cache. */
    cache_generation_in_progress?: boolean | number
    /** The difference in contrast to previous period in percents */
    percent_diff?: boolean | number
    /** The total appointment count */
    total_count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing information about the type of appointment */
export interface AppointmentTypeGenqlSelection{
    /** The number of clients with advance pricing for this appointment type */
    advance_pricing_for_clients_count?: boolean | number
    /** The number of providers with advance pricing for this appointment type */
    advance_pricing_for_providers_count?: boolean | number
    /** The appointment setting associated with this appointment type. An associated appointment setting overrides the providers general one. */
    appointment_setting?: AppointmentSettingGenqlSelection
    /** The cpt code and units for this appointment type */
    appointment_type_cpt_code?: AppointmentTypeCptCodeTypeGenqlSelection
    /** When true, the appointment pricing will be automatically increase based on actual duration */
    auto_increase_charge_for_actual_duration?: boolean | number
    /** Is true if upcoming availability exists */
    availability_exists_for?: { __args: {
    /** The appointment location id */
    appointment_location_id?: (Scalars['String'] | null), 
    /** The org level */
    org_level?: (Scalars['Boolean'] | null), 
    /** The provider id */
    provider_id?: (Scalars['String'] | null), 
    /** The list of provider ids */
    provider_ids?: ((Scalars['String'] | null)[] | null)} } | boolean | number
    /** List of available contact types for this appointment type */
    available_contact_types?: boolean | number
    /** When true, this appointment type is bookable by user groups associated through appointment_type_user_groups and appointment type is NOT bookable by ALL users */
    bookable_by_groups?: boolean | number
    /** user groups that can book this appointment type. Associated through appointment_type_user_groups */
    bookable_groups?: UserGroupGenqlSelection
    /** When true, this appointment type is bookable by users without a user group */
    bookable_without_group?: boolean | number
    /** Checks to see if the client call to provider */
    client_call_provider?: boolean | number
    /** A name to use in the client scheduling widget instead of the defalt name field. Falls back to name if not set. */
    client_display_name?: boolean | number
    /** The status of whether the client can self-book this type of appointment */
    clients_can_book?: boolean | number
    /** Checks to see if the client has enough credit to book */
    clients_have_credit?: boolean | number
    /** The date the Appointment Type was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** If the provider's organization has this feature, this will customize the content of SMS reminder's Healthie sends. */
    custom_text_reminder_body?: boolean | number
    /** Date time appointment type was deleted */
    deleted_at?: boolean | number
    /** When true, the client will not be asked to add a reason when booking an appointment of this type */
    dont_ask_for_reason?: boolean | number
    /** ID of the embedded custom module form */
    embed_question_form_id?: boolean | number
    /** All form requests which should be created after appointment */
    form_requests_after_appointment?: AppointmentTypeFormConnectionGenqlSelection
    /** All form requests which should be created after appointment booking */
    form_requests_after_appointment_booking?: AppointmentTypeFormConnectionGenqlSelection
    /** All form requests which should be created before appointment */
    form_requests_before_appointment?: AppointmentTypeFormConnectionGenqlSelection
    /** Is true if group appointment available */
    has_available_group_appts?: { __args: {
    /** The appointment location id */
    appointment_location_id?: (Scalars['String'] | null), 
    /** The provider id */
    provider_id?: (Scalars['String'] | null)} } | boolean | number
    /** When true, this appointment type has specific appointment settings that override the general ones */
    has_specific_appointment_settings?: boolean | number
    /** The unique identifier of the appointment type */
    id?: boolean | number
    /** The status of whether appointments of this types are group appointments or not */
    is_group?: boolean | number
    /** The status of whether waitlist is enabled for an appointment or not */
    is_waitlist_enabled?: boolean | number
    /** The length of the appointment type (in minutes) */
    length?: boolean | number
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. Only accessible by staff and providers */
    metadata?: boolean | number
    /** the name of the appointment type */
    name?: boolean | number
    /** A custom message to display if there are no available slots on a given day for an appointment type. */
    no_availability_message?: boolean | number
    /** The position of the appointment type when shown in a list of other appointment types */
    position?: boolean | number
    /** The price and cpt_code_price */
    price_and_cpt_price?: PriceAndCptPriceTypeGenqlSelection
    /** The pricing for this appointment type */
    pricing?: boolean | number
    /** Get the pricing info for this appointment type */
    pricing_info?: AppointmentPricingInfoTypeGenqlSelection
    /** Pricing option for this appointment type */
    pricing_option?: boolean | number
    /** providers associated with appointment type */
    provider_appt_type_connections?: ProviderApptTypeConnectionGenqlSelection
    /** When this setting is turned on, provider state licensing requirements will be enforced when clients try to schedule appointments. */
    require_in_state_clients?: boolean | number
    /** Whether or not appointment type should use specific providers */
    require_specific_providers?: boolean | number
    /** position of appointment type when displayed in packages list */
    row_order?: boolean | number
    /** A label that includes the length of the appointment */
    time_on_label?: boolean | number
    /** The date the Appointment Type was updated */
    updated_at?: boolean | number
    /** The user group associated with this appointment type. */
    user_group?: UserGroupGenqlSelection
    /** The ID of the group clients are placed in after booking */
    user_group_id?: boolean | number
    /** The creator of the appointment type */
    user_id?: boolean | number
    /** If provider state matches users or appointment type doesn't require state license restrictions. */
    valid_state_licensing_for?: { __args: {
    /** The client state of residence */
    client_state_of_residence?: (Scalars['String'] | null), 
    /** The org level */
    org_level?: (Scalars['Boolean'] | null), 
    /** The provider id */
    provider_id?: (Scalars['String'] | null), 
    /** The list of provider ids */
    provider_ids?: ((Scalars['String'] | null)[] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The count of appointments for each appointment type */
export interface AppointmentTypeAppointmentCountDataGenqlSelection{
    /** The unique identifier of the count */
    appointment_count?: boolean | number
    /** The name of the appointment type for which we count appointments for */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an appointment setting */
export interface AppointmentTypeAppointmentSettingInput {
/** If true, the appointment setting will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** Whether the appointment setting allows appointment type pricing */
allow_appointment_type_pricing?: (Scalars['Boolean'] | null),
/** Whether the appointment setting allows clients to cancel appointments */
allow_clients_to_cancel_appt?: (Scalars['Boolean'] | null),
/** Whether the appointment setting allows clients to reschedule appointments */
allow_clients_to_reschedule_appt?: (Scalars['Boolean'] | null),
/** Whether the appointment setting allows past appointment rescheduling */
allow_past_appointment_rescheduling?: (Scalars['Boolean'] | null),
/** Whether the appointment setting allows specific client pricing */
allow_specific_client_pricing?: (Scalars['Boolean'] | null),
/** Whether the appointment setting allows specific provider pricing */
allow_specific_provider_pricing?: (Scalars['Boolean'] | null),
/** Whether the appointment setting overrides the appointment type reminder */
appointment_type_reminder_override?: (Scalars['Boolean'] | null),
/** The booking interval restriction for the appointment setting */
booking_interval_restriction?: (Scalars['Int'] | null),
/** The buffer time for the appointment setting */
buffer?: (Scalars['String'] | null),
/** Whether the appointment setting charges for occurred appointments */
charge_for_occured_appts?: (Scalars['Boolean'] | null),
/** The disallowed reschedulable statuses for the appointment setting */
disallowed_reschedulable_statuses?: ((Scalars['String'] | null)[] | null),
/** The ID of the appointment setting */
id?: (Scalars['ID'] | null),
/** Whether the appointment setting invoices clients without a payment method */
invoice_clients_without_payment_method?: (Scalars['Boolean'] | null),
/** The maximum number of days in the future when appointments can be scheduled */
max_days_in_future?: (Scalars['String'] | null),
/** The maximum number of minutes in the past that the patient can reschedule */
maximum_past_reschedule_time?: (Scalars['Int'] | null),
/** Prevents the patient from canceling too close the appointment time. In minutes */
minimum_advance_cancel_time?: (Scalars['Int'] | null),
/** Prevents the patient from rescheduling too close the appointment time. In minutes */
minimum_advance_reschedule_time?: (Scalars['Int'] | null),
/** Prevents the patient from scheduling too close to the desired appointment time. In minutes */
minimum_advance_schedule_time?: (Scalars['Int'] | null),
/** The minimum number of minutes in the past that the patient can reschedule */
minimum_past_reschedule_time?: (Scalars['Int'] | null),
/** The maximum number of times a patient can reschedule an appointment */
patient_reschedule_count_cap?: (Scalars['String'] | null),
/** Whether the appointment setting prevents booking without credit */
prevent_no_credit_booking?: (Scalars['Boolean'] | null),
/** The pricing for the appointment setting */
pricing?: (Scalars['String'] | null),
/** The maximum number of days before the appointment that the patient can reschedule */
reschedule_max_days_before_date?: (Scalars['String'] | null),
/** The maximum number of days after the appointment that the patient can reschedule */
reschedule_max_days_from_date?: (Scalars['String'] | null),
/** Whether the appointment setting allows same day appointments */
same_day_appointments?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a booking notice */
send_booking_notice?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a reminder four days before the appointment */
send_reminder_four_days_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a reminder one day before the appointment */
send_reminder_one_day_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a reminder one hour before the appointment */
send_reminder_one_hour_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a reminder three days before the appointment */
send_reminder_three_days_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a reminder two days before the appointment */
send_reminder_two_days_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a reminder two hours before the appointment */
send_reminder_two_hours_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a text reminder four days before the appointment */
send_text_reminder_four_days_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a text reminder one day before the appointment */
send_text_reminder_one_day_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a text reminder one hour before the appointment */
send_text_reminder_one_hour_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a text reminder three days before the appointment */
send_text_reminder_three_days_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a text reminder two days before the appointment */
send_text_reminder_two_days_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting sends a text reminder two hours before the appointment */
send_text_reminder_two_hours_before?: (Scalars['Boolean'] | null),
/** Whether the appointment setting uses the client credit system */
use_client_credit_system?: (Scalars['Boolean'] | null)}


/** Payload for a CPT code associated with an appointment type */
export interface AppointmentTypeCptCode {
/** The ID of the CPT code */
cpt_code_id?: (Scalars['String'] | null),
/** Fee (in cents) per unit */
fee_per_unit?: (Scalars['Int'] | null),
/** Whether or not this appointment type will have insurance billing enabled */
insurance_billing_enabled?: (Scalars['Boolean'] | null),
/** The number of units for the CPT code */
units?: (Scalars['String'] | null)}


/** AppointmentTypeCptCode object */
export interface AppointmentTypeCptCodeTypeGenqlSelection{
    /** Appointment Type ID */
    appointment_type_id?: boolean | number
    /** CPT Code ID */
    cpt_code_id?: boolean | number
    /** Fee (in cents) per unit */
    fee_per_unit?: boolean | number
    /** The unique identifier of the object */
    id?: boolean | number
    /** Whether or not insurance billing is enaled for an appointment type */
    insurance_billing_enabled?: boolean | number
    /** Units */
    units?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing information the clients' remaining credit for a given appointment type */
export interface AppointmentTypeCreditGenqlSelection{
    /** The Appointment Type connected to the credit */
    appointment_type?: AppointmentTypeGenqlSelection
    /** the id of the appointment type */
    appointment_type_id?: boolean | number
    /** An Alias of ID that makes creating the form easier */
    form_id?: boolean | number
    /** The unique identifier of the credit */
    id?: boolean | number
    /** The quantity of the credit */
    quantity?: boolean | number
    /** The id of the holder of the credit */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for appointment type credit */
export interface AppointmentTypeCreditInput {
/** The appointment type ID of the credit */
appointment_type_id?: (Scalars['String'] | null),
/** The ID of the credit */
id?: (Scalars['ID'] | null),
/** The quantity of the credit */
quantity?: (Scalars['String'] | null)}


/** An object containing event which should be taken before or after appointment */
export interface AppointmentTypeFormConnectionGenqlSelection{
    /** ID of the form for the form completion request */
    custom_module_form?: CustomModuleFormGenqlSelection
    /** The unique identifier of the form */
    id?: boolean | number
    /** Form requests will be sent before or after given interval, depends on `send_trigger` */
    interval?: boolean | number
    /** Determines when action should be taken(before or after appointment) */
    send_trigger?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for connecting an appointment type to a custom module form */
export interface AppointmentTypeFormConnectionInput {
/** If true, the appointment type form connection will be destroyed */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the custom module form */
custom_module_form_id?: (Scalars['ID'] | null),
/** The ID of the appointment type form connection */
id?: (Scalars['ID'] | null),
/** Form requests will be sent before or after given interval, depends on `send_trigger` */
interval?: (Scalars['ISO8601Duration'] | null)}


/** Payload for an AttendedClient */
export interface AttendedClientsInput {
/** If the client attended the event */
attended?: (Scalars['Boolean'] | null),
/** If the client cancelled the event */
cancelled?: (Scalars['Boolean'] | null),
/** If the client confirmed the event */
confirmed?: (Scalars['Boolean'] | null),
/** The unique identifier of the object */
id?: (Scalars['ID'] | null),
/** The ID of the user */
user_id?: (Scalars['ID'] | null)}


/** The auto task generators belonging to a specific user */
export interface AutoTaskGeneratorGenqlSelection{
    /** Category of task */
    category?: boolean | number
    /** The date and time that the task was created */
    created_at?: boolean | number
    /** The number of days the task is due from the date it was created */
    days_due_from_created_at?: boolean | number
    /** The unique identifier of the generator */
    id?: boolean | number
    /** True if task is active */
    is_enabled?: boolean | number
    /** Description of the number to check */
    number_description?: boolean | number
    /** The number to check */
    number_to_check?: boolean | number
    /** Description of the task */
    task_description?: boolean | number
    /** The last date and time that the task was updated */
    updated_at?: boolean | number
    /** The id of the user who creates the task */
    user_id?: boolean | number
    /** The id of the user */
    user_id_for_task?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Automated Insurance Billing Setting Type */
export interface AutomatedInsuranceBillingSettingGenqlSelection{
    /** When true, CMS1500s will be created automatically */
    auto_create_cms1500s?: boolean | number
    /** When true, CMS1500s will be submitted automatically */
    auto_submit_cms1500s?: boolean | number
    /** The unique identifier of the setting */
    id?: boolean | number
    /** When true, CPT code and units will be linked to appointment types */
    use_cpt_codes_units_and_fees_with_appointment_types?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The autoscored section for a filled form */
export interface AutoscoredSectionTypeGenqlSelection{
    /** The key of the section */
    section_key?: boolean | number
    /** The title of the section */
    section_title?: boolean | number
    /** The value of the section */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing availability ranges for a provider */
export interface AvailabilityGenqlSelection{
    /** If not nil, the specific location the availability is for */
    appointment_location_id?: boolean | number
    /** If not nil, the specific appointment type the availability is for */
    appointment_type_id?: boolean | number
    /** If not nil, the specific contact type the availability is for */
    contact_type_id?: boolean | number
    /** The 0-indexed day of the week the availability is on */
    day_of_week?: boolean | number
    /** Duration between range start and range end in hours and minutes. Example:(4h 20min) */
    duration_string?: boolean | number
    /** The end date of the availability */
    end_on?: boolean | number
    /** The unique identifier of the availability */
    id?: boolean | number
    /** The status of whether the availability repeats every week */
    is_repeating?: boolean | number
    /** The origin start of the availability */
    origin_start_date?: boolean | number
    /** The end of the datetime of the availability */
    range_end?: boolean | number
    /** The start of the datetime of the availability */
    range_start?: boolean | number
    /** Availability ID */
    repeating_availability_id?: boolean | number
    /** The ID of the user, used for the calendar */
    resourceId?: boolean | number
    /** Timezone abbreviation of the availability time range */
    timezone_abbr?: boolean | number
    /** Provider this availability belongs to */
    user?: UserGenqlSelection
    /** The ID of the person who the availability is for */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an availability */
export interface AvailabilityInput {
/** The ID of the appointment location */
appointment_location_id?: (Scalars['String'] | null),
/** The ID of the appointment type */
appointment_type_id?: (Scalars['String'] | null),
/** The ID of the contact type */
contact_type_id?: (Scalars['String'] | null),
/** The day of the week for the availability */
day_of_week?: (Scalars['Int'] | null),
/** The end time for the availability */
end_time?: (Scalars['String'] | null),
/** Whether the availability is repeating */
is_repeating?: (Scalars['Boolean'] | null),
/** The end of the availability range */
range_end?: (Scalars['String'] | null),
/** The start of the availability range */
range_start?: (Scalars['String'] | null),
/** The time for the availability */
time?: (Scalars['String'] | null),
/** The timezone for the availability */
timezone?: (Scalars['String'] | null),
/** The ID of the user */
user_id?: (Scalars['String'] | null)}


/** Benefit associated with policy */
export interface BenefitGenqlSelection{
    /** Enumerated field: Medical or Preventive. Describes the type of benefit */
    category?: boolean | number
    /** Coinsurance percentage due */
    coinsurance?: boolean | number
    /** Copay amount due */
    copay?: boolean | number
    /** Deductible amount for the calendar year */
    deductible_calendar_year?: boolean | number
    /** Deductible amount for the year to date */
    deductible_year_to_date?: boolean | number
    /** The unique identifier of the benefit */
    id?: boolean | number
    /** If true, benefits include telemedicine */
    telemedicine?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a benefit */
export interface BenefitInput {
/** If true, the benefit will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The category of the benefit */
category?: (Scalars['String'] | null),
/** The coinsurance for the benefit */
coinsurance?: (Scalars['String'] | null),
/** The copay for the benefit */
copay?: (Scalars['String'] | null),
/** The deductible calendar year for the benefit */
deductible_calendar_year?: (Scalars['String'] | null),
/** The deductible year to date for the benefit */
deductible_year_to_date?: (Scalars['String'] | null),
/** The id of the benefit */
id?: (Scalars['ID'] | null),
/** Whether or not the benefit covers telemedicine */
telemedicine?: (Scalars['Boolean'] | null)}


/** Payload for a billing address to create a new Healthie subscription. */
export interface BillingAddressInput {
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The zip code */
postal_code?: (Scalars['String'] | null)}


/** Billing */
export interface BillingItemGenqlSelection{
    /** amount of billing item */
    amount_paid?: boolean | number
    /** Fee charged by stripe in cents */
    application_fee_amount?: boolean | number
    /** card brand and last4 digits in the event of a failed charge */
    card_source?: boolean | number
    /** the related charge backs */
    charge_backs?: ChargeBackGenqlSelection
    /** coupon code */
    coupon_code?: boolean | number
    /** cpt codes super bills id */
    cpt_codes_super_bills_id?: boolean | number
    /** created at date */
    created_at?: boolean | number
    /** type of currency */
    currency?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** date payment was deleted */
    deleted_at?: boolean | number
    /** Error message returned when payment failed */
    failure_reason?: boolean | number
    /** Name of person who gifted this package(if applicable). Returns nil if not an offering or if not a gift */
    gifted_by?: boolean | number
    /** Name of person who received this package as a gift. Returns nil if not an offering or if not a gift */
    gifted_to?: boolean | number
    /** The unique identifier of the billing item */
    id?: boolean | number
    /**
     * @deprecated Use requested_payment_id instead. This will return the same data as that
     * id of invoice
     */
    invoice_id?: boolean | number
    /** canceled indicator */
    is_canceled?: boolean | number
    /** Whether this payment was made outside of Healthie */
    is_outside_payment?: boolean | number
    /** Whether this payment is recurring */
    is_recurring?: boolean | number
    /** The index number of partial payment */
    item_position_number?: boolean | number
    /** The payment, after refunds are taken out */
    net_payment?: boolean | number
    /** Nil unless the payment is an uncharged upcoming scheduled payment. Otherwise, is the payment amount that is scheduled to be charged */
    next_scheduled_payment_amount?: boolean | number
    /** payment note */
    note?: boolean | number
    /** offering connected to the payment */
    offering?: OfferingGenqlSelection
    /** offering coupon connected to the payment */
    offering_coupon?: OfferingCouponGenqlSelection
    /** id of coupon */
    offering_coupon_id?: boolean | number
    /** offering id */
    offering_id?: boolean | number
    /** original price */
    original_price?: boolean | number
    /** payment medium */
    payment_medium?: boolean | number
    /** provider */
    provider?: UserGenqlSelection
    /** receipt last sent at date */
    receipt_last_sent_at?: boolean | number
    /** recipient of this payment */
    recipient?: UserGenqlSelection
    /** id of receiver */
    recipient_id?: boolean | number
    /** recurring payment connected to the payment */
    recurring_payment?: RecurringPaymentGenqlSelection
    /** amount of refund */
    refund_amount?: boolean | number
    /** date of refund */
    refund_date?: boolean | number
    /** the related refundings */
    refund_items?: RefundItemGenqlSelection
    /** Individual responsible for payment. If user_id, user exists in Healthie, if not, individual doesn't have a Healthie account */
    requested_payer?: RequestedPayerGenqlSelection
    /** the connected requested payment */
    requested_payment?: RequestedPaymentGenqlSelection
    /** id of requested payment (we call them invoices in our UI) */
    requested_payment_id?: boolean | number
    /** sender of this payment */
    sender?: UserGenqlSelection
    /** id of sender */
    sender_id?: boolean | number
    /** The description text to show for the payment */
    shown_description?: boolean | number
    /** The note text to show for the payment */
    shown_note?: boolean | number
    /** Enum status of billing item succeeded/failed */
    state?: boolean | number
    /** id of stripe charge */
    stripe_charge_id?: boolean | number
    /** A JSON hash containing information on why Stripe was unable to process a charge */
    stripe_error?: boolean | number
    /** if a failed payment is retried successfully then this will reference that successful payment */
    successful_retried_payment?: BillingItemGenqlSelection
    /** updated at date */
    updated_at?: boolean | number
    /** User Package Selection connected to this payment */
    user_package_selection?: UserPackageSelectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Body Report is a sub category of a HealthAssessment */
export interface BodyReportGenqlSelection{
    /** amr of user */
    amr?: boolean | number
    /** bmi of user */
    bmi?: boolean | number
    /** body_fat_percent of user */
    body_fat_percent?: boolean | number
    /** body_weight of user */
    body_weight?: boolean | number
    /** c_bmi of user */
    c_bmi?: boolean | number
    /** fat_mass of user */
    fat_mass?: boolean | number
    /** lean_body_mass of user */
    lean_body_mass?: boolean | number
    /** rmr of user */
    rmr?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Brand options that a client can customize */
export interface BrandGenqlSelection{
    /** Brand Owner's about description */
    about_description?: boolean | number
    /** Brand Owner's bg color */
    bg_color?: boolean | number
    /** Brand Owner's brand email */
    brand_email?: boolean | number
    /** Name of provider's brand */
    brand_name?: boolean | number
    /** Owner of this brand */
    brand_owner?: UserGenqlSelection
    /** Whether or not brand owner has practice plus */
    brand_owner_has_practice_plus?: boolean | number
    /** Whether or not brand owner has whitelabel */
    brand_owner_has_whitelabel?: boolean | number
    /** Brand Owner's brand phone */
    brand_phone?: boolean | number
    /** Brand Owner's contact info */
    contact_description?: boolean | number
    /** Custom sign in path for provider with practice plus */
    custom_sign_in_path?: boolean | number
    /** Whether or not we should display the header text of a package embed */
    display_embed_title?: boolean | number
    /** Brand Owner's display name */
    display_name?: boolean | number
    /** Whether or not we should display the package image on embed and sharing link pages */
    display_package_image?: boolean | number
    /** Brand Owner's email background color */
    email_background_color?: boolean | number
    /** The primary color that will use to customize a customer's embed process */
    embed_primary_color?: boolean | number
    /** URL to a hosted stylesheet that will apply to Embeddable Layout */
    embeddable_layout_css_url?: boolean | number
    /** Brand Owner's Facebook link */
    facebook?: boolean | number
    /** Brand Owner's font color of choice */
    font_color?: boolean | number
    /** The brand's Universal GA ID */
    ga_id?: boolean | number
    /** The brand's Google Tag Manager ID */
    gtm_id?: boolean | number
    /** The unique identifier of the brand */
    id?: boolean | number
    /** Brand Owner's Instagram link */
    instagram?: boolean | number
    /** Custom HTML that replaces the content on the standard intake flow completed screen */
    intake_completed_html?: boolean | number
    /** Brand owner's logo */
    logo?: boolean | number
    /** Brand Owner's logo */
    logo_file_name?: boolean | number
    /** The URL to the logo */
    logo_url?: boolean | number
    /** URL to a hosted stylesheet that will apply to Main Layout */
    main_layout_css_url?: boolean | number
    /** Brand Owner's selected color */
    selected_color?: boolean | number
    /** Brand Owner's slogan */
    slogan?: boolean | number
    /** Brand Owner's tab accent color */
    tab_accent_color?: boolean | number
    /** Brand Owner's credentials */
    titles?: boolean | number
    /** Brand Owner's Twitter link */
    twitter?: boolean | number
    /** ID of Brand Owner */
    user_id?: boolean | number
    /** Brand Owner's website link */
    website?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Info for authentication pages for either a dietitian or partner */
export interface BrandInfoGenqlSelection{
    /** Brand Owner's logo */
    image_url?: boolean | number
    /** Name of the partner */
    name?: boolean | number
    /** The brand associated with provider/partner */
    partner_brand?: BrandGenqlSelection
    /** if false the client signup tab is not shown */
    show_client_tab?: boolean | number
    /** if false the client signup tab is not shown */
    show_provider_tab?: boolean | number
    /** Header for the sign up page */
    sign_up_header?: boolean | number
    /** Header for the sign up page */
    sign_up_text?: boolean | number
    /** Custom HTML to be placed at the bottom of signup */
    signup_footer?: boolean | number
    /** Unique code of the brand or provider */
    unique_code?: boolean | number
    /** Whether the partner's users can use a username to sign in (defaults to false) */
    uses_username?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a new entry */
export interface BulkEntryInput {
/** Check and either add to pre-existing average heart rate entry or create a new one */
add_to_avg_heart_rate?: (Scalars['Boolean'] | null),
/** The category of the entry */
category?: (Scalars['String'] | null),
/** Check for duplicates, currently only supported if third_party_source is apple_health */
check_duplicates?: (Scalars['Boolean'] | null),
/** The time the entry was created */
created_at?: (Scalars['String'] | null),
/** The description of the entry */
description?: (Scalars['String'] | null),
/** ED Post Hunger */
ed_posthunger?: (Scalars['String'] | null),
/** ED Pre Hunger */
ed_prehunger?: (Scalars['String'] | null),
/** The comma separated list of emotions */
emotions?: (Scalars['String'] | null),
/** If average of any type, value indicates amount of entries already included in average */
entries_in_average?: (Scalars['String'] | null),
/** Third party external ID associated with this entry */
external_id?: (Scalars['String'] | null),
/** Third party associated with the external ID on this entry. Option currently supported is 'AppleHealth' */
external_id_type?: (Scalars['String'] | null),
/** The image associated with the entry */
image?: (Scalars['Upload'] | null),
/** The base64 encoded image string */
image_string?: (Scalars['String'] | null),
/** The statistic associated with the metric entry */
metric_stat?: (Scalars['String'] | null),
/** The percieved hungriness */
percieved_hungriness?: (Scalars['String'] | null),
/** The reflection on the entry */
reflection?: (Scalars['String'] | null),
/** The list of subentries associated with this entry */
subentries?: ((SubentryInput | null)[] | null),
/** Options are apple_health, google_fit, or fitbit */
third_party_source?: (Scalars['String'] | null),
/** One of MetricEntry, FoodEntry, WorkoutEntry, MirrorEntry, SleepEntry, NoteEntry, WaterIntakeEntry, PoopEntry, SymptomEntry */
type?: (Scalars['String'] | null),
/** The ID of the user that created the entry */
user_id?: (Scalars['String'] | null)}


/** A Calendar Color Scheme */
export interface CalendarColorSchemeGenqlSelection{
    /** Course ID of benefit */
    appointment_setting_id?: boolean | number
    /** The category to color code by */
    color_code_by?: boolean | number
    /** Color code options that make up this color scheme */
    color_codes?: ColorCodeGenqlSelection
    /** The default color (in case the subcategory conditions are not met) */
    default_color?: boolean | number
    /** The unique identifier of the scheme */
    id?: boolean | number
    /** The ID of the connected user */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a calendar color scheme */
export interface CalendarColorSchemeInput {
/** If true, the calendar color scheme will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The field, by which the color code is determined */
color_code_by?: (Scalars['String'] | null),
/** The color codes of the calendar color scheme */
color_codes?: ((ColorCodeInput | null)[] | null),
/** The default color code */
default_color?: (Scalars['String'] | null),
/** The ID of the calendar color scheme */
id?: (Scalars['ID'] | null)}


/** View settings for provider calendar */
export interface CalendarViewSettingGenqlSelection{
    /** Filter appointments by status */
    appointment_status_filter?: boolean | number
    /** ID of appointment type to filter appointments */
    appointment_type_filter?: boolean | number
    /** Filter availabilities by contact type */
    availability_contact_type_filter?: boolean | number
    /** ID of location to filter availabilities */
    availability_location_filter?: boolean | number
    /** ID of provider to filter availabilities */
    availability_provider_filter?: boolean | number
    /** ID of appointment type to filter availabilities */
    availablilty_appt_type_filter?: boolean | number
    /** ID of selected calendar colour scheme */
    calendar_color_scheme_filter?: boolean | number
    /** Selected calendar view */
    calendar_view_filter?: boolean | number
    /** Filter appointments by client confirmation status */
    client_confirmation_status?: boolean | number
    /** Selected sorting for documents(This is not a calendar setting. Related to documents area) */
    document_area_sorting?: boolean | number
    /** Visibility of color schemes section */
    expand_color_schemes?: boolean | number
    /** Visibility of appointment filters section */
    expand_filter_appointments?: boolean | number
    /** Visibility of availability filters section */
    expand_filter_availabilities?: boolean | number
    /** Visibility of 'Filter Providers' section in organization calendar */
    expand_filter_by_providers?: boolean | number
    /** Visibility of 'View By Provider' section in organization calendar */
    expand_filter_providers?: boolean | number
    /** Visibility of show section */
    expand_show_availabilities?: boolean | number
    /** The unique identifier of the setting */
    id?: boolean | number
    /** ID of location to filter appointments */
    location_filter?: boolean | number
    /** Visibility of one time availabilities in calendar */
    one_time_availabilities?: boolean | number
    /** Selected organization calendar view */
    org_calendar_view_filter?: boolean | number
    /** Filter appointments by provider confirmation status */
    provider_confirmation_status?: boolean | number
    /** ID of selected provider to filter availabilities in organization calendar */
    selected_availability_provider_filter?: boolean | number
    /** Comma separated IDs of providers to filter availabilities in organization calendar */
    selected_availability_providers_filter?: boolean | number
    /** ID of selected provider in organization calendar */
    selected_provider_filter?: boolean | number
    /** Comma separated IDs of selected providers in organization calendar */
    selected_providers_filter?: boolean | number
    /** Visibility of all appointments */
    show_appointments?: boolean | number
    /** Visibility of all availabilities */
    show_availabilities?: boolean | number
    /** Visibility of all synced appointments */
    show_synced_appointments?: boolean | number
    /** Selected calendar timezone */
    timezone?: boolean | number
    /** Visibility of weekly availabilities in calendar */
    weekly_availabilities?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Call reference information associated with a policy */
export interface CallReferenceGenqlSelection{
    /** Date call was made */
    date_recorded?: boolean | number
    /** The unique identifier of the reference call */
    id?: boolean | number
    /** Notes taken for this reference call */
    notes?: boolean | number
    /** call reference number provided by insurance company */
    reference_number?: boolean | number
    /** Time call was made */
    time_recorded?: boolean | number
    /** The ID of the patient who the call reference is for */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a CallReference */
export interface CallReferenceInput {
/** The date the call was recorded */
date_recorded?: (Scalars['String'] | null),
/** The ID of the CallReference */
id?: (Scalars['ID'] | null),
/** Notes about the call */
notes?: (Scalars['String'] | null),
/** The reference number for the call */
reference_number?: (Scalars['String'] | null),
/** The time the call was recorded */
time_recorded?: (Scalars['String'] | null)}


/** Marketing campaign (email/sms) sent to clients by provider */
export interface CampaignGenqlSelection{
    /** Button label in email */
    button_text?: boolean | number
    /** URL in button */
    button_url?: boolean | number
    /** individual clients who have received this campaign */
    clients?: (UserGenqlSelection & { __args?: {
    /** the page offset (if should paginate) */
    offset?: (Scalars['Int'] | null), 
    /** if the result should be paginated */
    should_paginate?: (Scalars['Boolean'] | null)} })
    /** Email body */
    email_body?: boolean | number
    /** Greeting used before email body */
    email_greeting?: boolean | number
    /** Subject line of email */
    email_subject?: boolean | number
    /** The unique identifier of the campaign */
    id?: boolean | number
    /** If true, campaign hasn't been sent and has been saved as a draft */
    is_draft?: boolean | number
    /** If true, campaign (will be/has been) sent as an email */
    is_email?: boolean | number
    /** If true, campaign (will be/has been) sent as an sms message */
    is_sms?: boolean | number
    /** Name of a campaign labeled by provider */
    name?: boolean | number
    /** SMS text message content */
    sms_body?: boolean | number
    /** Groups of users with the same tags who have received this campaign */
    tags?: TagGenqlSelection
    /** Name of a campaign labeled by provider */
    user?: UserGenqlSelection
    /** User groups who have received this campaign */
    user_groups?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Info on connection to Candid Health */
export interface CandidHealthConnectionGenqlSelection{
    /** The unique identifier of the connection */
    id?: boolean | number
    /** True if the Candid connection is turned by user */
    is_enabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Care Plan */
export interface CarePlanGenqlSelection{
    /** The name of a user group or a patient the care plan has been assigned to */
    assigned_to?: boolean | number
    /** Date of creation */
    created_at?: boolean | number
    /** Provider who created care plan */
    creator?: UserGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** The care plan description */
    description?: boolean | number
    /** Associated documents */
    documents?: DocumentGenqlSelection
    /** Feature Toggle of the care plan */
    feature_toggle?: FeatureToggleGenqlSelection
    /** Associated goals */
    goals?: GoalGenqlSelection
    /** Shows whether a group care plan(or a single one, if patient_id argument is not passed) is active for a given user. Make sure to pass patient_id argument if you need to check the status of a group care_plan for the given user */
    group_plan_is_active_for_given_user?: { __args: {
    /** The ID of a patient to check */
    patient_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Shows whether the patient or at least one user from the related group has not skipped email. We don't want to call care_plan_mailer if all of related users have skipped_email == true */
    has_users_with_real_emails?: boolean | number
    /** The unique identifier of the plan */
    id?: boolean | number
    /** Care plan is active for the associated patient */
    is_active?: boolean | number
    /** Indicates whether a care plan is for a group */
    is_group?: boolean | number
    /** Care plan status */
    is_hidden?: boolean | number
    /** Indicates if care plan can be used as a template and can be assigned on other users */
    is_template?: boolean | number
    /** The name of care plan */
    name?: boolean | number
    /** A user the care plan has been assigned to */
    patient?: UserGenqlSelection
    /** Ordered (Ascending) associated recommendations */
    recommendations?: RecommendationGenqlSelection
    /** Date when record was last updated */
    updated_at?: boolean | number
    /** A user group the care plan has been assigned to */
    user_group?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection between a care plan and a connectable item */
export interface CarePlanConnectionGenqlSelection{
    /** The ID of the connected care plan */
    care_plan_id?: boolean | number
    /** The ID of the connected item */
    connectable_id?: boolean | number
    /** The type of the connected item */
    connectable_type?: boolean | number
    /** The unique identifier of the connection */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information on an event surrounding CDA activity */
export interface CdaActivityEventGenqlSelection{
    /** The activity that occured */
    activity_type?: boolean | number
    /** The type of CDA */
    cda_type?: boolean | number
    /** The time of the event */
    created_at?: boolean | number
    /** The ID of the document */
    document_id?: boolean | number
    /** Self descriptive */
    id?: boolean | number
    /** The outbound recipient */
    outbound_recipient?: boolean | number
    /** The user who opened the document */
    user?: UserGenqlSelection
    /** The email of the user who took the action. */
    user_email?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Info on connection to Change Health */
export interface ChangeClaimSubmitterGenqlSelection{
    /** The unique identifier of the connection */
    id?: boolean | number
    /** True if the Change connection is turned by user */
    is_enabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ChangeDevicesAvailability */
export interface ChangeDevicesAvailabilityInput {appointment_id?: (Scalars['String'] | null),devices_unavailability?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of ChangeDevicesAvailability. */
export interface ChangeDevicesAvailabilityPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Chargeback object, contains info on the dispute reason, status, and evidence submitted */
export interface ChargeBackGenqlSelection{
    /** The payment in Healthie that was disputed */
    billing_item?: BillingItemGenqlSelection
    /** The date and time the chargeback was initiated */
    created_at?: boolean | number
    /** The amount that was disputed */
    disputed_amount?: boolean | number
    /** Evidence to contest the chargeback */
    evidence?: ChargeBackEvidenceGenqlSelection
    /** Fields that should be submitted for this chargeback */
    evidence_fields_to_submit?: boolean | number
    /** The dispute fee charged by the payment processor */
    fee?: boolean | number
    /** A formatted version of the reason */
    formatted_reason?: boolean | number
    /** A formatted version of the status */
    formatted_status?: boolean | number
    /** The unique identifier of the chargeback */
    id?: boolean | number
    /** The reason for the chargeback. Matches Stripe's list of reasons at https://stripe.com/docs/api/disputes/object?lang=ruby */
    reason?: boolean | number
    /** The date and time that evidence needs to be submitted by */
    response_required_by?: boolean | number
    /** The status of the chargeback */
    status?: boolean | number
    /** The total cost of the chargeback. Includes both the disputed amount and the fee */
    total_amount?: boolean | number
    /** The date and time the chargeback was last updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Chargeback Evidence object, contains info to contest the dispute */
export interface ChargeBackEvidenceGenqlSelection{
    /** The billing address provided by the customer. */
    billing_address?: boolean | number
    /** ID of the uploaded cancellation_policy. */
    cancellation_policy?: boolean | number
    /** An explanation of how and when the customer was shown your refund policy prior to purchase. */
    cancellation_policy_disclosure?: boolean | number
    /** A justification for why the customer’s subscription was not canceled. */
    cancellation_rebuttal?: boolean | number
    /** ID of the uploaded customer_communication. */
    customer_communication?: boolean | number
    /** The email address of the customer. */
    customer_email_address?: boolean | number
    /** The name of the customer. */
    customer_name?: boolean | number
    /** A description of the product or services that were sold. */
    product_description?: boolean | number
    /** ID of the uploaded refund_policy. */
    refund_policy?: boolean | number
    /** Documentation demonstrating that the customer was shown your refund policy prior to purchase. */
    refund_policy_disclosure?: boolean | number
    /** A justification for why the customer is not entitled to a refund. */
    refund_refusal_explanation?: boolean | number
    /** ID of the uploaded uncategorized_file. */
    uncategorized_file?: boolean | number
    /** Any additional evidence or statements. */
    uncategorized_text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a chargeback evidence */
export interface ChargeBackEvidenceInput {
/** The billing address of the customer */
billing_address?: (Scalars['String'] | null),
/** The cancellation policy file */
cancellation_policy?: (Scalars['Upload'] | null),
/** The disclosure of the cancellation policy */
cancellation_policy_disclosure?: (Scalars['String'] | null),
/** The rebuttal of the cancellation */
cancellation_rebuttal?: (Scalars['String'] | null),
/** The communication with the customer */
customer_communication?: (Scalars['Upload'] | null),
/** The email address of the customer */
customer_email_address?: (Scalars['String'] | null),
/** The name of the customer */
customer_name?: (Scalars['String'] | null),
/** The description of the product */
product_description?: (Scalars['String'] | null),
/** The refund policy file */
refund_policy?: (Scalars['Upload'] | null),
/** The disclosure of the refund policy */
refund_policy_disclosure?: (Scalars['String'] | null),
/** The explanation of the refund refusal */
refund_refusal_explanation?: (Scalars['String'] | null),
/** The uncategorized file related to the chargeback */
uncategorized_file?: (Scalars['Upload'] | null),
/** The uncategorized reason of the chargeback */
uncategorized_text?: (Scalars['String'] | null)}


/** Charting Item */
export interface ChartingItemTypeGenqlSelection{
    /** The date of the item' creation */
    created_at?: boolean | number
    /** The name of the custom module form */
    custom_module_form_name?: boolean | number
    /** The type of the document */
    document?: DocumentGenqlSelection
    /** The ID of the filler */
    filler_id?: boolean | number
    /** The type of the form answer group */
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The ID of the form answer group */
    form_answer_group_id?: boolean | number
    /** The unique identifier of the item */
    id?: boolean | number
    /** Whether the item is a document */
    is_document?: boolean | number
    /** The name of the item */
    name?: boolean | number
    /** The name of the provider */
    provider_name?: boolean | number
    /** Whether the item is signed */
    signed?: boolean | number
    /** Whether the item is used for a charting */
    use_for_charting?: boolean | number
    /** Whether the item is used for a program */
    use_for_program?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A charting note addendum */
export interface ChartingNoteAddendumTypeGenqlSelection{
    /** The content of the addendum */
    content?: boolean | number
    /** The date the addendum was created */
    created_at?: boolean | number
    /** The form answer group the addendum belongs to */
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The unique identifier of the addendum */
    id?: boolean | number
    /** A provider who created the addendum */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Chat settings for a user */
export interface ChatSettingGenqlSelection{
    /** The text of the auto welcome message */
    auto_welcome_text?: boolean | number
    /** The text of the setting */
    content?: boolean | number
    /** The end of scheduled autoreply period */
    end_date?: boolean | number
    /** Whether a user should be prompted to confirm closing a chat */
    hide_close_confirmation?: boolean | number
    /** Whether a user should be prompted to confirm opening an org chat */
    hide_org_chat_confirmation?: boolean | number
    /** The unique identifier of the chat setting */
    id?: boolean | number
    /** Whether the setting is active */
    is_active?: boolean | number
    /** Whether the setting is within recurring messaging period */
    is_recurring_active?: boolean | number
    /** Allow users to no add an end date */
    no_end_date?: boolean | number
    /** Whether user should receive notifications from chat while is_active is true */
    receive_notifications?: boolean | number
    /** Whether a user should receive notifications from chat while is_recurring_active is true */
    receive_notifications_recurring?: boolean | number
    /** Whether or not the recurring messages should be all day or for a time range */
    recurring_all_day?: boolean | number
    /** The content for recurring autoreplies */
    recurring_content?: boolean | number
    /** Front-end friendly version of recurring days */
    recurring_days_data?: RecurringDaysDataGenqlSelection
    /** The end of time range for recurring messages */
    recurring_end_time?: boolean | number
    /** Either nil, all_day, or a string representation of a time range */
    recurring_friday?: boolean | number
    /** Either nil, all_day, or a string representation of a time range */
    recurring_monday?: boolean | number
    /** Either nil, all_day, or a string representation of a time range */
    recurring_saturday?: boolean | number
    /** The start of time range for recurring messages */
    recurring_start_time?: boolean | number
    /** Either nil, all_day, or a string representation of a time range  */
    recurring_sunday?: boolean | number
    /** Either nil, all_day, or a string representation of a time range */
    recurring_thursday?: boolean | number
    /** Either nil, all_day, or a string representation of a time range */
    recurring_tuesday?: boolean | number
    /** Indicates whether or not recurring messaging has been set up */
    recurring_turned_on?: boolean | number
    /** Either nil, all_day, or a string representation of a time range */
    recurring_wednesday?: boolean | number
    /** Whether or not a schedule message is set up */
    scheduled_turned_on?: boolean | number
    /** Whether to send an auto welcome message */
    send_auto_welcome?: boolean | number
    /** The beginning of scheduled autoreply period */
    start_date?: boolean | number
    /** The ID of the setting owner */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a group of answers */
export interface CheckoutFormAnswerGroupInput {
/** The id of the custom module form */
custom_module_form_id?: (Scalars['String'] | null),
/** The list of answers for the form */
form_answers?: ((CheckoutFormAnswerInput | null)[] | null),
/** The id of the form answer group */
id?: (Scalars['ID'] | null)}


/** Payload for an answer */
export interface CheckoutFormAnswerInput {
/** The answer */
answer?: (Scalars['String'] | null),
/** The ID of the custom module */
conditional_custom_module_id?: (Scalars['ID'] | null),
/** The ID of the custom module */
custom_module_id?: (Scalars['String'] | null),
/** The type of the filter */
filter_type?: (Scalars['String'] | null),
/** The mod_type (e.g question type) that is being answered. */
mod_type?: (Scalars['String'] | null),
/** Unique ID for the answer */
id?: (Scalars['ID'] | null),
/** The label for the answer */
label?: (Scalars['String'] | null),
/** The ID of the user who created the answer */
user_id?: (Scalars['String'] | null),
/** The value to filter on */
value_to_filter?: (Scalars['String'] | null)}


/** A created API Key */
export interface ClaimEligibilityCheckGenqlSelection{
    /** A string used to identify the eligibility check in the Change system. */
    control_number?: boolean | number
    /** The time the eligibility check was run */
    created_at?: boolean | number
    /** The unique identifier of the check */
    id?: boolean | number
    /** The retrieved plan status */
    plan_status?: boolean | number
    /** The policy associated with this check */
    policy?: PolicyGenqlSelection
    /** The ID of the associated policy */
    policy_id?: boolean | number
    /** A JSON object containing the eligibility details */
    response?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Claim Eligibility Check Errors */
export interface ClaimEligibilityCheckErrorsGenqlSelection{
    /** The error code */
    code?: boolean | number
    /** The description of the error */
    description?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an insurance plan */
export interface ClientInsurancePlanInput {
/** The ID of the insurance plan */
id?: (Scalars['String'] | null),
/** The name of the payer */
payer_name?: (Scalars['String'] | null)}


/** Payload for a deletable location */
export interface ClientLocationInput {
/** If true, the location will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The graphql_name of the location */
name?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The zip code */
zip?: (Scalars['String'] | null)}


/** Payload for a client policy */
export interface ClientPolicyInput {
/** If true, the policy will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The group number */
group_num?: (Scalars['String'] | null),
/** The date of birth of the policy holder */
holder_dob?: (Scalars['String'] | null),
/** The first name of the policy holder */
holder_first?: (Scalars['String'] | null),
/** The gender of the policy holder */
holder_gender?: (Scalars['String'] | null),
/** The last name of the policy holder */
holder_last?: (Scalars['String'] | null),
/** The location of the policy holder */
holder_location?: (ClientLocationInput | null),
/** The middle initial of the policy holder */
holder_mi?: (Scalars['String'] | null),
/** The phone number of the policy holder */
holder_phone?: (Scalars['String'] | null),
/** The relationship of the policy holder to the client */
holder_relationship?: (Scalars['String'] | null),
/** The ID of the policy */
id?: (Scalars['ID'] | null),
/** The back of the insurance card */
insurance_card_back?: (Scalars['Upload'] | null),
/** The ID of the back of the insurance card */
insurance_card_back_id?: (Scalars['String'] | null),
/** The front of the insurance card */
insurance_card_front?: (Scalars['Upload'] | null),
/** The ID of the front of the insurance card */
insurance_card_front_id?: (Scalars['String'] | null),
/** The insurance plan */
insurance_plan?: (ClientInsurancePlanInput | null),
/** The ID of the insurance plan */
insurance_plan_id?: (Scalars['String'] | null),
/** The name of the policy */
name?: (Scalars['String'] | null),
/** The policy number */
num?: (Scalars['String'] | null),
/** The location of the payer */
payer_location?: (ClientLocationInput | null),
/** The policy-related phone number */
policy_phone_number?: (Scalars['String'] | null),
/** The priority type of the policy */
priority_type?: (Scalars['String'] | null),
/** Whether the policy holder has the same address as the client */
same_address_as_client?: (Scalars['Boolean'] | null),
/** The type of the policy */
type_string?: (Scalars['String'] | null),
/** The ID of the user */
user_id?: (Scalars['String'] | null)}


/** A client portal settings */
export interface ClientPortalSettingGenqlSelection{
    /** Chat with provider */
    chat_with_provider?: boolean | number
    /** The unique identifier of the setting */
    id?: boolean | number
    /** If the client can schedule appointments */
    schedule_appointments?: boolean | number
    /** If the client can view and complete forms */
    view_and_complete_forms?: boolean | number
    /** If the client can view and create goals */
    view_and_create_goals?: boolean | number
    /** If the client can view and create journal entries */
    view_and_create_journal_entries?: boolean | number
    /** If the client can view and pay bills */
    view_and_pay_bills?: boolean | number
    /** If the client can view and purchase packages */
    view_and_purchase_packages?: boolean | number
    /** If the client can view and upload documents */
    view_and_upload_documents?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a client portal setting */
export interface ClientPortalSettingInput {
/** Whether the client can chat with the provider */
chat_with_provider?: (Scalars['Boolean'] | null),
/** The id of the client portal setting */
id?: (Scalars['ID'] | null),
/** Whether the client can schedule appointments */
schedule_appointments?: (Scalars['Boolean'] | null),
/** Whether the client can view and complete forms */
view_and_complete_forms?: (Scalars['Boolean'] | null),
/** Whether the client can view and create goals */
view_and_create_goals?: (Scalars['Boolean'] | null),
/** Whether the client can view and create journal entries */
view_and_create_journal_entries?: (Scalars['Boolean'] | null),
/** Whether the client can view and pay bills */
view_and_pay_bills?: (Scalars['Boolean'] | null),
/** Whether the client can view and purchase packages */
view_and_purchase_packages?: (Scalars['Boolean'] | null),
/** Whether the client can view and upload documents */
view_and_upload_documents?: (Scalars['Boolean'] | null)}


/** Info about how a client was acquire */
export interface ClientSourceGenqlSelection{
    /** The unique identifier of the source */
    id?: boolean | number
    /** Get readable source based on ref_type */
    readable_source?: boolean | number
    /** The source of how a client was acquire: contain ID or a Other string */
    ref_source?: boolean | number
    /** If ref_source eq 'Other', than it may contain custom string or NULL */
    ref_source_other?: boolean | number
    /** The type of the source of how a client was acquire */
    ref_type?: boolean | number
    /** related insurance */
    related_insurance?: InsurancePlanGenqlSelection
    /** related object */
    related_object?: RelatedObjectGenqlSelection
    /** related object */
    related_object_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a client source */
export interface ClientSourceInput {
/** The ID of the client source */
id?: (Scalars['ID'] | null),
/** The source of the client */
ref_source?: (Scalars['String'] | null),
/** The other source of the client */
ref_source_other?: (Scalars['String'] | null),
/** The type of client source */
ref_type?: (Scalars['String'] | null)}


/** A CMS1500 claim */
export interface Cms1500GenqlSelection{
    /** The provider agrees to accept assignment */
    accept_assignment?: boolean | number
    /** Notes */
    additional_text?: boolean | number
    /** The insurance discount */
    adjustment?: boolean | number
    /** The amount that the client paid towards the claim */
    amount_paid?: boolean | number
    /** The amount that the insurance company reimbursed */
    amount_reimbursed?: boolean | number
    /** The billing provider for the CMS1500 */
    billing_provider?: OrganizationGenqlSelection
    /** The ID of the Billing Provider */
    billing_provider_id?: boolean | number
    /** Check numbers associated with a reimbursement from the claim. Imported via ERA */
    check_numbers?: boolean | number
    /** Amount the client owes */
    client_responsibility?: boolean | number
    /** True if the provider chose to remove client responsibility */
    client_responsibility_removed?: boolean | number
    /** True if the client's signature is on file */
    client_sig_on_file?: boolean | number
    /** Cms1500 policies in use for this claim */
    cms1500_policies?: Cms1500PolicyGenqlSelection
    /** The client's copay for the claim */
    copay?: boolean | number
    /** The amount of copay still owed */
    copay_still_owed?: boolean | number
    /** The comma separated list of cpt codes names */
    cpt_code_names?: boolean | number
    /** CPT codes in use for this claim */
    cpt_codes_cms1500s?: CptCodesCms1500GenqlSelection
    /** The creation date of the claim */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The claim's date of service */
    date_of_service?: boolean | number
    /** The ID of the rendering provider */
    dietitian_id?: boolean | number
    /**
     * @deprecated Use CptCodesCms1500.last_fee_amount
     * Estimated fee for the specific cpt code based on previous use
     */
    estimated_cpt_fees_for_user?: CptCodesCms1500GenqlSelection
    /** Chart Note ID, if CMS1500 was exported from a Chart Note */
    form_answer_group_id?: boolean | number
    /** ICD codes in use for this claim */
    icd_codes_cms1500s?: IcdCodesCms1500GenqlSelection
    /** The unique identifier of the CMS1500 */
    id?: boolean | number
    /** When true, includes referrer information on the claim */
    include_referrer_information?: boolean | number
    /** True if the insured's signature is on file */
    insured_sig_on_file?: boolean | number
    /** The value of the nineteen field */
    nineteen_reserved?: boolean | number
    /** The specific Organization Info in use on this claim */
    org_info?: OrganizationInfoGenqlSelection
    /** The ID of the Organization Info */
    organization_info_id?: boolean | number
    /** The original reference number of the claim */
    orig_ref_number?: boolean | number
    /** The date that the claim was paid out to employees/contractors */
    paid_out_at?: boolean | number
    /** The patient for the CMS1500 */
    patient?: UserGenqlSelection
    /** The patient's account number */
    patient_account_num?: boolean | number
    /** The ID of the patient */
    patient_id?: boolean | number
    /** The primary insurance plan name for the CMS1500 */
    primary_plan_name?: boolean | number
    /** Rejected/Denied status reason */
    reasons?: boolean | number
    /** The referral info for the CMS1500 */
    referral_info?: ReferralInfoGenqlSelection
    /** The date that the claim was reimbursed */
    reimbursed_at?: boolean | number
    /** The provider for the CMS1500 */
    rendering_provider?: UserGenqlSelection
    /** The Rendering Provider's other id number */
    rendering_provider_other_id?: boolean | number
    /** Other ID info in use for this render provider */
    rendering_provider_other_id_object?: OtherIdNumberGenqlSelection
    /** The resubmission code of the claim */
    resubmission_code?: boolean | number
    /** The service location for the CMS1500 */
    service_location?: LocationGenqlSelection
    /** The ID of the service location */
    service_location_id?: boolean | number
    /** The status of the claim */
    status?: boolean | number
    /** The value of the ten d field */
    tend_reserved?: boolean | number
    /** Total amount the claim was billed for */
    total_charge?: boolean | number
    /** The last date and time that the CMS1500 was updated */
    updated_at?: boolean | number
    /** True if the claim reimbursement info was updated via SFTP */
    updated_by_sftp?: boolean | number
    /** When true, uses the individual npi in all npi fields */
    use_indiv_npi?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A CMS1500 policy */
export interface Cms1500PolicyGenqlSelection{
    /** The cms1500 for the cms1500 policy */
    cms1500?: Cms1500GenqlSelection
    /** The id of the cms1500 for the cms1500 policy */
    cms1500_id?: boolean | number
    /** The unique identifier of the policy */
    id?: boolean | number
    /** The policy for the cms1500 policy */
    policy?: PolicyGenqlSelection
    /** The policy id of the cms1500 for the cms1500 policy */
    policy_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for associating a policy with a CMS 1500 */
export interface Cms1500PolicyInput {
/** If true, the join table record will be deleted upon submission */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the join table record */
id?: (Scalars['ID'] | null),
/** The associated policy */
policy?: (PolicyInput | null),
/** The ID of the policy */
policy_id?: (Scalars['String'] | null)}


/** Payload for referring physician */
export interface Cms1500ReferringPhysicianInput {
/** The full name of the referring physician */
full_name?: (Scalars['String'] | null),
/** The ID of the referring physician */
id?: (Scalars['ID'] | null)}


/** CognitiveStatus object */
export interface CognitiveStatusGenqlSelection{
    /** Cognitive status */
    cognitive_status?: boolean | number
    /** The unique identifier of the status */
    id?: boolean | number
    /** Start date */
    start_date?: boolean | number
    /** User id */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Calendar Color Scheme */
export interface ColorCodeGenqlSelection{
    /** The ID of the calendar color scheme */
    calendar_color_scheme_id?: boolean | number
    /** The item to code by */
    code_by_item?: boolean | number
    /** The item name to code by */
    code_by_item_name?: boolean | number
    /** The color */
    color?: boolean | number
    /** The unique identifier of the color code */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a ColorCode */
export interface ColorCodeInput {
/** If the color code should be destroyed */
_destroy?: (Scalars['Boolean'] | null),
/** The code by item of the color code */
code_by_item?: (Scalars['String'] | null),
/** The color of the color code */
color?: (Scalars['String'] | null),
/** The ID of the color code */
id?: (Scalars['ID'] | null)}


/** A color code option */
export interface ColorCodeOptionGenqlSelection{
    /** The label of the color code option */
    label?: boolean | number
    /** The value of the color code option */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A comment of an entry */
export interface CommentGenqlSelection{
    /** User who created comment */
    author?: UserGenqlSelection
    /** The content of this comment */
    content?: boolean | number
    /** The date on which the comment was posted */
    created_at?: boolean | number
    /** User who created comment */
    creator?: UserGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** The id of the entry associated with the comment */
    entry_id?: boolean | number
    /** The unique identifier of the comment */
    id?: boolean | number
    /** Indicates when posting an emoji reaction */
    is_reaction?: boolean | number
    /** User who created comment */
    poster?: UserGenqlSelection
    /** the owner of the comment */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CompleteCcdaReconciliation */
export interface CompleteCcdaReconciliationInput {id?: (Scalars['ID'] | null),added_problem_ids?: ((Scalars['ID'] | null)[] | null),added_medication_ids?: ((Scalars['ID'] | null)[] | null),added_allergy_ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of CompleteCcdaReconciliation. */
export interface CompleteCcdaReconciliationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** a completed course item */
export interface CompletedCourseItemGenqlSelection{
    /** The ID of the completed item */
    completed_item_id?: boolean | number
    /** The type of the completed item */
    completed_item_type?: boolean | number
    /** The ID of course related to the completed item */
    course_item_id?: boolean | number
    /** The date when the completed item was created */
    created_at?: boolean | number
    /** The unique identifier of the item */
    id?: boolean | number
    /** The next item after the current item */
    next_item?: CourseItemGenqlSelection
    /** The date when the completed item was updated */
    updated_at?: boolean | number
    /** The ID of the user related to the completed item */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object with information about how an onboarding item was completed */
export interface CompletedOnboardingItemGenqlSelection{
    /** The URL to go to to edit the attached object */
    attached_object_edit_url?: boolean | number
    /** The most relevant date to display */
    date_to_show?: boolean | number
    /** The unique identifier of the item */
    id?: boolean | number
    /** The id of the object that completed the onboarding item */
    item_id?: boolean | number
    /** The type of item that was completed */
    item_type?: boolean | number
    /** The onboarding item that was completed */
    onboarding_item?: OnboardingItemGenqlSelection
    /** The ID of the onboarding item */
    onboarding_item_id?: boolean | number
    /** Set to true if the user skipped this */
    skipped?: boolean | number
    /** The completed (client) */
    user?: UserGenqlSelection
    /** The ID of the completer (client) */
    user_id?: boolean | number
    /** The URL to view */
    view_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ConnectApptToCharting */
export interface ConnectApptToChartingInput {appointment_id: Scalars['ID'],form_answer_group_id: Scalars['ID']}


/** Autogenerated return type of ConnectApptToCharting. */
export interface ConnectApptToChartingPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A object containing information about whether a specific contact type can be booked */
export interface ContactTypeGenqlSelection{
    /** ID of the connected appointment setting */
    appointment_setting_id?: boolean | number
    /** ID of the connected appointment type */
    appointment_type_id?: boolean | number
    /** An Alias of ID that makes creating the form easier */
    form_id?: boolean | number
    /** The unique identifier of the contact type */
    id?: boolean | number
    /** The graphql_name of the contact type */
    name?: boolean | number
    /** Whether this contact type can be used */
    show?: boolean | number
    /** The ID of the connected user */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for overriding a contact type */
export interface ContactTypeOverride {
/** Whether to show this contact type */
show: Scalars['Boolean']}


/** Payload for overriding a contact type */
export interface ContactTypeOverrideInput {
/** The ID of the contact type override */
id?: (Scalars['ID'] | null),
/** The graphql_name of the contact type */
name?: (Scalars['String'] | null),
/** The position of the contact type */
position?: (Scalars['Int'] | null),
/** Whether or not to show the contact type */
show?: (Scalars['Boolean'] | null)}


/** An association between conversation holders */
export interface ConversationGenqlSelection{
    /** The user who closed the conversation */
    closed_by?: UserGenqlSelection
    /** The date the conversation was closed */
    closed_date?: boolean | number
    /** Display default name for community chat */
    community_chat_prefix?: boolean | number
    /** All ConversationMemberships associated with this conversation. */
    conversation_memberships?: ConversationMembershipGenqlSelection
    /** The number of users in the conversation */
    conversation_memberships_count?: boolean | number
    /** The time the Conversation was created */
    created_at?: boolean | number
    /** The conversation membership for the current user */
    current_user_conversation_membership?: ConversationMembershipGenqlSelection
    /** ID of dietitian */
    dietitian_id?: boolean | number
    /** first four invitees to the conversation */
    first_four_invitees?: UserGenqlSelection
    /** The unique identifier of the conversation */
    id?: boolean | number
    /** Whether the conversation includes multiple clients */
    includes_multiple_clients?: boolean | number
    /** The invitees to the conversation */
    invitees?: UserGenqlSelection
    /** Whether the conversation is hidden for the client */
    is_hidden_for_client?: boolean | number
    /** The content of the last note, with HTML stripped */
    last_message_content?: boolean | number
    /** ID of the last note of conversation that was sent by the convo owner and viewed by the patient */
    last_note_viewed_id?: boolean | number
    /** The subject of conversation */
    name?: boolean | number
    /** All notes associated with this conversation. */
    notes?: NoteGenqlSelection
    /** owner of conversation */
    owner?: UserGenqlSelection
    /** ID of patient */
    patient_id?: boolean | number
    /** The last time the conversation was updated */
    updated_at?: boolean | number
    /** invitees to the conversation */
    user_groups?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** ConversationMembership entry, returns basic info related to conversation participant */
export interface ConversationMembershipGenqlSelection{
    /** Toggle for archive status */
    archived?: boolean | number
    /** Conversation id of conversation membership */
    conversation_id?: boolean | number
    /** Role in conversation */
    conversation_role?: boolean | number
    /** Conversation linked to this membership */
    convo?: ConversationGenqlSelection
    /** The time the conversation of the */
    convo_updated_at?: UserGenqlSelection
    /** The date the Conversation Membership was created */
    created_at?: boolean | number
    /** The creator of this ConversationMembership */
    creator?: UserGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** URL to the avatar to display */
    display_avatar?: boolean | number
    /** Either the name of the owner or conversation subject? */
    display_name?: boolean | number
    /** The first name and last name initial of the owner */
    display_name_and_initial?: boolean | number
    /** Display the other user first name for non group convos */
    display_other_user_first_name?: boolean | number
    /** Display title or other user name for non group convos */
    display_other_user_name?: boolean | number
    /** The unique identifier of the membership */
    id?: boolean | number
    /** Get last conversation task */
    last_task?: (TaskGenqlSelection & { __args?: {
    /** The type of the notes */
    notes_type?: (Scalars['String'] | null)} })
    /** Datetime membership was updated */
    updated_at?: boolean | number
    /** The creator of membership */
    user_id?: boolean | number
    /** The list of users in conversation (to use in place of display name */
    user_list_as_display_name?: boolean | number
    /** Whether the conversation has been viewed */
    viewed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ConvertFromJsonToForm */
export interface ConvertFromJsonToFormInput {user_id: Scalars['ID'],data: Scalars['String']}


/** Autogenerated return type of ConvertFromJsonToForm. */
export interface ConvertFromJsonToFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ConvertToMetric */
export interface ConvertToMetricInput {
/** The ID of the user */
user_id: Scalars['ID'],
/** Accepts: metric | imperial as an argument */
convert_system: Scalars['String']}


/** Autogenerated return type of ConvertToMetric. */
export interface ConvertToMetricPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CopyForms */
export interface CopyFormsInput {
/** List of form IDs */
id_list: (Scalars['ID'] | null)[],
/** User ID for user that form copied to */
user_id: Scalars['ID']}


/** Autogenerated return type of CopyForms. */
export interface CopyFormsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Course */
export interface CourseGenqlSelection{
    /** Whether the course is active */
    active?: boolean | number
    /** Course clients */
    clients?: (CourseMembershipGenqlSelection & { __args?: {
    /** Filter by course status */
    course_status?: (Scalars['String'] | null)} })
    /** Course group memberships for the course */
    clients_groups?: (CourseGroupGenqlSelection & { __args?: {
    /** Filter by course status */
    course_status?: (Scalars['String'] | null)} })
    /** The number of completed memberships in the course */
    completed_course_memberships_count?: boolean | number
    /** The benefits of a course */
    course_benefits?: CourseBenefitGenqlSelection
    /** Course group memberships for the course */
    course_groups?: CourseGroupGenqlSelection
    /** The items of a course */
    course_items?: (CourseItemGenqlSelection & { __args?: {
    /** Include custom emails */
    include_emails?: (Scalars['Boolean'] | null)} })
    /** Course memberships for the course */
    course_memberships?: CourseMembershipGenqlSelection
    /** The number of members in the course */
    course_memberships_count?: boolean | number
    /** type of the course */
    course_type?: boolean | number
    /** date course was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** date course was deleted */
    deleted_at?: boolean | number
    /** Description of course */
    description?: boolean | number
    /** end date of the course based on included items */
    end_date?: boolean | number
    /** HTML-formatted benefits of the course */
    formatted_benefits?: boolean | number
    /** The unique identifier of the course */
    id?: boolean | number
    /** The number of in progress memberships in the course */
    in_progress_course_memberships_count?: boolean | number
    /** late enrollment for fixed type courses */
    late_enroll?: boolean | number
    /** Name of course */
    name?: boolean | number
    /** The number of not started memberships in the course */
    not_started_course_memberships_count?: boolean | number
    /** Offerings contains current course */
    offerings?: OfferingGenqlSelection
    /** url for course image */
    preview_image_url?: boolean | number
    /** url for course video */
    preview_video_content?: boolean | number
    /** start date for fixed type course */
    start_date?: boolean | number
    /** Ungrouped Course memberships for the course */
    ungrouped_course_memberships?: CourseMembershipGenqlSelection
    /** date course was updated */
    updated_at?: boolean | number
    /** Use category toggle */
    use_category?: boolean | number
    /** Use video label toggle */
    use_video_label?: boolean | number
    /** The user groups who have access to this course */
    user_groups?: UserGroupGenqlSelection
    /** User id of course */
    user_id?: boolean | number
    /** The users who have access to this course */
    users?: UserGenqlSelection
    /** The progress of users who completed the course item */
    users_course_items_progress?: boolean | number
    /** The users course progress */
    users_progress?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Course Benefit */
export interface CourseBenefitGenqlSelection{
    /** Benefit of a course */
    benefit?: boolean | number
    /** Course ID of benefit */
    course_id?: boolean | number
    /** The unique identifier of the benefit */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Completion info for group participants enrolled to the course */
export interface CourseCompletionInfoGroupsTypeGenqlSelection{
    /** Count of users in the group which completed the course */
    completed?: boolean | number
    /** Group name */
    label?: boolean | number
    /** Count of users in the group */
    total?: boolean | number
    /** Group participant ids */
    user_ids?: boolean | number
    /** Group ID */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Completion info for individual participants enrolled to the course */
export interface CourseCompletionInfoIndividualsTypeGenqlSelection{
    /** User full_name */
    label?: boolean | number
    /** User ID */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information based on course groups & individuals completion status */
export interface CourseCompletionInfoTypeGenqlSelection{
    /** Complete info for the course user_groups */
    groups?: CourseCompletionInfoGroupsTypeGenqlSelection
    /** Complete info for the course individual users */
    individuals?: CourseCompletionInfoIndividualsTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Relationship between a user group and a course */
export interface CourseGroupGenqlSelection{
    /** the course associated with this membership */
    course?: CourseGenqlSelection
    /** The unique identifier of the group */
    id?: boolean | number
    /** start of course */
    start_at?: boolean | number
    /** When true, new group members start the course at the current time, overriding start_at */
    start_on_group_assignment?: boolean | number
    /** the user group associated with this membership */
    user_group?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Course Item */
export interface CourseItemGenqlSelection{
    /** whether the attached object is a video form */
    attached_object_is_video?: boolean | number
    /** Shows if the current course item is blocked by an incomplete previous required item */
    blocked_by_prev_item?: { __args: {
    /** Get the completed course item for the given membership and course_item */
    course_membership_id?: (Scalars['ID'] | null)} } | boolean | number
    /** category of item */
    category?: boolean | number
    /** Check if course item was completed by a client */
    completed_by_client?: { __args: {
    /** The ID of the client */
    client_id?: (Scalars['ID'] | null)} } | boolean | number
    /** The completed course item */
    completed_course_item?: (CompletedCourseItemGenqlSelection & { __args?: {
    /** Get the completed course item for the given membership and course_item */
    course_membership_id?: (Scalars['ID'] | null)} })
    /** The number of members who completed the item */
    completed_memberships_count?: boolean | number
    /** Determines whether or not completion of the course item is necessary to access the next */
    completion_required_for_next_module?: boolean | number
    /** The associated course */
    course?: CourseGenqlSelection
    /** id of course associated with item */
    course_id?: boolean | number
    /** name of course that item belongs to */
    course_name?: boolean | number
    /** when item was created */
    created_at?: boolean | number
    /** type of custom module of a course item (if app) */
    custom_module_type?: boolean | number
    /** Shows if the current course item is blocked due to course membership date restriction */
    date_restricted?: { __args: {
    /** The ID of a course membership */
    course_membership_id?: (Scalars['ID'] | null)} } | boolean | number
    /** description of item */
    description?: boolean | number
    /** The path to edit the item */
    edit_url?: boolean | number
    /** This is the first required module that is incomplete, and will block items in higher positions */
    first_incomplete_required_module?: CourseItemGenqlSelection
    /** Course item has matrix field */
    has_matrix_field?: boolean | number
    /** The unique identifier of the item */
    id?: boolean | number
    /** The ID of an incomplete form associated with the item */
    incomplete_course_item_id?: { __args: {
    /** The ID of a course membership */
    course_membership_id?: (Scalars['ID'] | null)} } | boolean | number
    /** id of item */
    item_id?: boolean | number
    /** type of course item */
    item_type?: boolean | number
    /** name of item */
    name?: boolean | number
    /** The next item in the course */
    next_item?: CourseItemGenqlSelection
    /** Check if course item is available to a client */
    not_available_for_client?: { __args: {
    /** The ID of a client */
    client_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Check if course item is available to any client */
    not_available_to_any_clients?: boolean | number
    /** The position of the course item type when shown in a list of other modules on the same day */
    position?: boolean | number
    /** The previous item in the course */
    prev_item?: CourseItemGenqlSelection
    /** scheduled release? */
    scheduled_release?: boolean | number
    /** when item was updated */
    updated_at?: boolean | number
    /** id of user associated with item */
    user_id?: boolean | number
    /** The path to view the item */
    view_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Course members input as a label-value pair */
export interface CourseMembersInput {
/** Label for the value */
label: Scalars['String'],
/** Value for the label */
value: Scalars['String']}


/** Relationship between a user and a course */
export interface CourseMembershipGenqlSelection{
    /** the course associated with this membership */
    course?: CourseGenqlSelection
    /** id of course related to this membership */
    course_id?: boolean | number
    /** status of related course completion */
    course_status?: boolean | number
    /** date membership was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The unique identifier of the membership */
    id?: boolean | number
    /** The next incomplete item */
    next_incomplete_item?: CourseItemGenqlSelection
    /** The incomplete item after the next incomplete item */
    next_next_incomplete_item?: CourseItemGenqlSelection
    /** start of course */
    start_at?: boolean | number
    /** date membership was updated */
    updated_at?: boolean | number
    /** the user associated with this membership */
    user?: UserGenqlSelection
    /** id of user related to this membership */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The CPT code */
export interface CptCodeGenqlSelection{
    /**
     * @deprecated Always returns nil
     * The CPT code category
     */
    category?: boolean | number
    /** The CPT code */
    code?: boolean | number
    /** The date when the CPT code was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The description of the CPT code */
    description?: boolean | number
    /** The name of the CPT code for use in labels */
    display_name?: boolean | number
    /** The unique identifier of the CPT code */
    id?: boolean | number
    /** Whether a CPT code marked as favorite */
    is_favorite?: { __args: {
    /** The known value of is_favorite (from the query argument) */
    known_value?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The last fee applied to this CPT code by a provider */
    last_fee?: boolean | number
    /** The date when the CPT code was updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** cpt codes cms 1500s join table */
export interface CptCodesCms1500GenqlSelection{
    /** cms 1500 id */
    cms1500_id?: boolean | number
    /** The CPT code itself */
    cpt_code?: CptCodeGenqlSelection
    /**
     * @deprecated Use cpt_code instead
     * icd code id
     */
    cpt_code_id?: boolean | number
    /** date created */
    created_at?: boolean | number
    /** The Early and Periodic Screening, Diagnostic and Treatment */
    epsdt?: boolean | number
    /** Self descriptive */
    family_planning_service?: boolean | number
    /** fee */
    fee?: boolean | number
    /** The unique identifier of the cms 1500 */
    id?: boolean | number
    /** First Modification */
    mod1?: boolean | number
    /** Second Modification */
    mod2?: boolean | number
    /** Third Modification */
    mod3?: boolean | number
    /** Fourth Modification */
    mod4?: boolean | number
    /** Diagnostic pointers. These are used to connect Diagnosis(ICD) with appropriate Billing Item(CPT) in CMS1500 form */
    pointers?: boolean | number
    /** service date */
    service_date?: boolean | number
    /** The end date of service (if the line item covers a date range). Can be nil if service was delivered on one day */
    service_end_date?: boolean | number
    /** units */
    units?: boolean | number
    /** date updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a CPT code on a CMS 1500 form */
export interface CptCodesCms1500Input {
/** If true, this record will be marked for destruction */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the CPT code */
cpt_code_id?: (Scalars['String'] | null),
/** The EPSDT code */
epsdt?: (Scalars['String'] | null),
/** The family planning service */
family_planning_service?: (Scalars['Boolean'] | null),
/** The fee for the service */
fee?: (Scalars['String'] | null),
/** The ID of the join record */
id?: (Scalars['ID'] | null),
/** The first modifier */
mod1?: (Scalars['String'] | null),
/** The second modifier */
mod2?: (Scalars['String'] | null),
/** The third modifier */
mod3?: (Scalars['String'] | null),
/** The fourth modifier */
mod4?: (Scalars['String'] | null),
/** The list of pointers to the service line */
pointers?: ((Scalars['String'] | null)[] | null),
/** The date of the service */
service_date?: (Scalars['String'] | null),
/** The end date of service (if the line item covers a date range). Can be blank if service was delivered on one day */
service_end_date?: (Scalars['String'] | null),
/** The units for the service */
units?: (Scalars['String'] | null)}


/** cpt codes policies join table */
export interface CptCodesPolicyGenqlSelection{
    /** cpt code */
    code?: boolean | number
    /** id of instance of joins between cpt_code and policy */
    cpt_code_id?: boolean | number
    /** date created */
    created_at?: boolean | number
    /** cpt code description */
    description?: boolean | number
    /** The unique identifier of the join between cpt_code and policy. */
    id?: boolean | number
    /** policy id */
    policy_id?: boolean | number
    /** date updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Properties assigning a policy to a CPT code */
export interface CptCodesPolicyInput {
/** If true, the CPT codes policy will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the CPT code */
cpt_code_id?: (Scalars['String'] | null),
/** The ID of the join table record */
id?: (Scalars['ID'] | null),
/** The ID of the policy */
policy_id?: (Scalars['String'] | null)}


/** cpt codes super bills join table */
export interface CptCodesSuperBillGenqlSelection{
    /** billing item id */
    billing_item_id?: boolean | number
    /** cpt code */
    cpt_code?: CptCodeGenqlSelection
    /** cpt code id */
    cpt_code_id?: boolean | number
    /** date created */
    created_at?: boolean | number
    /** fee */
    fee?: boolean | number
    /** The unique identifier of the join */
    id?: boolean | number
    /** First Modification */
    mod1?: boolean | number
    /** Second Modification */
    mod2?: boolean | number
    /** Third Modification */
    mod3?: boolean | number
    /** Fourth Modification */
    mod4?: boolean | number
    /** Pointers */
    pointers?: boolean | number
    /** service date */
    service_date?: boolean | number
    /** super bill id */
    super_bill_id?: boolean | number
    /** units */
    units?: boolean | number
    /** date updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a CPT code super bill */
export interface CptCodesSuperBillInput {
/** If true, the CPT code super bill will be destroyed */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the CPT code */
cpt_code_id?: (Scalars['String'] | null),
/** The fee */
fee?: (Scalars['String'] | null),
/** The ID of the CPT code super bill */
id?: (Scalars['ID'] | null),
/** The first modifier */
mod1?: (Scalars['String'] | null),
/** The second modifier */
mod2?: (Scalars['String'] | null),
/** The third modifier */
mod3?: (Scalars['String'] | null),
/** The fourth modifier */
mod4?: (Scalars['String'] | null),
/** The list of pointers */
pointers?: ((Scalars['String'] | null)[] | null),
/** The date of the service */
service_date?: (Scalars['String'] | null),
/** The number of units */
units?: (Scalars['String'] | null)}


/** Autogenerated input type of CreateChangeAccount */
export interface CreateChangeAccountInput {
/** ID of the User */
user_id: Scalars['ID'],
/** Change Health User ID */
change_health_user_id: Scalars['String'],
/** App User ID */
app_user_id?: (Scalars['String'] | null),
/** Change Health Password */
password: Scalars['String'],
/** Facility ID */
facility_id: Scalars['String']}


/** Autogenerated return type of CreateChangeAccount. */
export interface CreateChangeAccountPayloadGenqlSelection{
    /** The additional info */
    additional_info?: boolean | number
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateChangeHealthPatient */
export interface CreateChangeHealthPatientInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of CreateChangeHealthPatient. */
export interface CreateChangeHealthPatientPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateClaimSubmitter */
export interface CreateClaimSubmitterInput {
/** ID of the User */
user_id: Scalars['ID'],
/** ID of the Organization */
organization_id: Scalars['ID'],
/** Healthie Biller ID */
biller_id: Scalars['String'],
/** Change Health Username */
change_username: Scalars['String'],
/** Submitter ID */
submitter_id: Scalars['String']}


/** Autogenerated return type of CreateClaimSubmitter. */
export interface CreateClaimSubmitterPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of CreateClientViaForm */
export interface CreateClientViaFormInput {custom_module_form_id?: (Scalars['ID'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),form_answers?: ((FormAnswerInput | null)[] | null),last_name?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),provider_id?: (Scalars['ID'] | null),
/** Not in use at this time. */
send_product_recommendation_email?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of CreateClientViaForm. */
export interface CreateClientViaFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A custom email */
export interface CustomEmailGenqlSelection{
    /** created at */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** type of email */
    email_type?: boolean | number
    /** email greeting */
    greeting?: boolean | number
    /** The unique identifier of the email */
    id?: boolean | number
    /** message body */
    message_body?: boolean | number
    /** subject of email */
    name?: boolean | number
    /** reactivation_wait_days */
    reactivation_wait_days?: boolean | number
    /** Appointment Type, Program or Package object */
    related_object?: CustomEmailRelatedObjectGenqlSelection
    /** subject of email */
    subject?: boolean | number
    /** updated at */
    updated_at?: boolean | number
    /** user id of provider */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** CustomEmail related_object union */
export interface CustomEmailRelatedObjectGenqlSelection{
    on_AppointmentType?:AppointmentTypeGenqlSelection,
    on_Course?:CourseGenqlSelection,
    on_Offering?:OfferingGenqlSelection,
    __typename?: boolean | number
}


/** A custom metric for a user */
export interface CustomMetricGenqlSelection{
    /** feature toggle id this custom metric belongs to */
    feature_toggle_id?: boolean | number
    /** The high end of the normal range */
    high_warning_threshold?: boolean | number
    /** The unique identifier of the metric */
    id?: boolean | number
    /** The low end of the normal range */
    low_warning_threshold?: boolean | number
    /** The name of the custom metric */
    name?: boolean | number
    /** if yes, should show based on if there is custom metric override */
    should_show?: boolean | number
    /** if yes, should show the client based on if there is a custom metric override */
    should_show_client?: boolean | number
    /** if yes, show the custom metric */
    show?: boolean | number
    /** if yes, show the custom metric to client */
    show_client?: boolean | number
    /** if yes, track the custom metric */
    track?: boolean | number
    /** user id this custom metric belongs to */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a custom metric */
export interface CustomMetricInput {
/** Whether or not to destroy the custom metric */
_destroy?: (Scalars['Boolean'] | null),
/** The id of the custom metric */
id?: (Scalars['ID'] | null),
/** The graphql_name of the custom metric */
name?: (Scalars['String'] | null),
/** Whether or not to show the custom metric */
show?: (Scalars['Boolean'] | null),
/** Whether or not to show the custom metric to the client */
show_client?: (Scalars['Boolean'] | null),
/** Whether or not to track the custom metric */
track?: (Scalars['Boolean'] | null)}


/** A custom metric for a user */
export interface CustomMetricOverrideGenqlSelection{
    /** custom metric */
    custom_metric?: CustomMetricGenqlSelection
    /** id of the custom metric */
    custom_metric_id?: boolean | number
    /** feature toggle id this custom metric belongs to */
    feature_toggle_id?: boolean | number
    /** id form helper */
    form_id?: boolean | number
    /** The unique identifier of the override */
    id?: boolean | number
    /** The name of the custom metric */
    name?: boolean | number
    /** if yes, show the custom metric */
    show?: boolean | number
    /** if yes, show the custom metric to the client */
    show_client?: boolean | number
    /** if yes, track the custom metric */
    track?: boolean | number
    /** user id this custom metric belongs to */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for overriding a custom metric */
export interface CustomMetricOverridesInput {
/** The ID of the custom metric */
custom_metric_id?: (Scalars['ID'] | null),
/** The ID of the custom metric override */
id?: (Scalars['ID'] | null),
/** Whether or not to show the custom metric */
show?: (Scalars['Boolean'] | null),
/** Whether or not to show the custom metric to the client */
show_client?: (Scalars['Boolean'] | null)}


/** A question in a template */
export interface CustomModuleGenqlSelection{
    /** True if there are conditionally displayed custom modules which rely on state of this module */
    controls_conditional_modules?: boolean | number
    /** The name of the form this custom module has been originally copied from */
    copied_from_form_name?: boolean | number
    /** The conditional logic for showing/hiding the custom module */
    custom_module_condition?: CustomModuleConditionTypeGenqlSelection
    /** The template that this question is a part of */
    custom_module_form?: CustomModuleFormGenqlSelection
    /** The ID of the template the question is a part of */
    custom_module_form_id?: boolean | number
    /** The ID of the form section this custom module belongs to. Used for autoscoring */
    custom_module_form_section_id?: boolean | number
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id?: boolean | number
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id_type?: boolean | number
    /** The name to use in the HIPAA form */
    hipaa_name?: boolean | number
    /** The unique identifier of the module */
    id?: boolean | number
    /** Whether this module is a custom module */
    is_custom?: boolean | number
    /** The label of the question */
    label?: boolean | number
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata?: boolean | number
    /** The type of question */
    mod_type?: boolean | number
    /** The default options for this question */
    options?: boolean | number
    /** The options, broken up into an array */
    options_array?: boolean | number
    /** IDs of of other modules to include in the autoscore calculation */
    other_module_ids_to_autoscore_on?: boolean | number
    /** ID of the parent custom module */
    parent_custom_module_id?: boolean | number
    /** The position of the question (the lower the earlier the question is shown) */
    position?: boolean | number
    /** Eventually will replace position, currently unused. The position of the question (the lower the earlier the question is shown) */
    position_integer?: boolean | number
    /** Whether this question is required to be completed before the form it's in can be saved */
    required?: boolean | number
    /** The sublabel (description) of the question */
    sublabel?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a CustomModuleCondition */
export interface CustomModuleConditionInput {
/** If true, the condition will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the CustomModule that will be shown if the condition is met */
conditional_custom_module_id?: (Scalars['ID'] | null),
/** The type of filter to apply to the CustomModuleCondition */
filter_type?: (Scalars['String'] | null),
/** The ID of the CustomModuleCondition */
id?: (Scalars['ID'] | null),
/** The value to filter by */
value_to_filter?: (Scalars['String'] | null)}


/** Condition under which to show a custom module */
export interface CustomModuleConditionTypeGenqlSelection{
    /** The ID of the custom module whose value determines whether to show or hide the custom module */
    conditional_custom_module_id?: boolean | number
    /** The ID of the custom module that will be shown or hidden */
    custom_module_id?: boolean | number
    /** The type of filter */
    filter_type?: boolean | number
    /** The unique identifier of the condition */
    id?: boolean | number
    /** The value to check the filter against */
    value_to_filter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A template for a form, that can then be filled out */
export interface CustomModuleFormGenqlSelection{
    /** The date on which the template was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The questions in the template */
    custom_modules?: CustomModuleGenqlSelection
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id?: boolean | number
    /** Custom column used by API users. Used to relate our form objects with objects in third-party systems */
    external_id_type?: boolean | number
    /** All filled out forms for this template */
    form_answer_groups?: FormAnswerGroupGenqlSelection
    /** The form has matrix field */
    has_matrix_field?: boolean | number
    /** When true, the form has modules that the user has to fill out */
    has_non_readonly_modules?: boolean | number
    /** The unique identifier of the module form */
    id?: boolean | number
    /** Whether the form contains only one custom_module with mod_type 'video' and was created as part of a program */
    is_video?: boolean | number
    /** User who last updated this form */
    last_updated_by_user?: UserGenqlSelection
    /** A serialized JSON string of metadata. Maximum character limit of 10,000. */
    metadata?: boolean | number
    /** The given name of the template */
    name?: boolean | number
    /** Whether subsequent times filling out the template, will start with the template prefilled with the previous answers */
    prefill?: boolean | number
    /** The date on which the template was updated */
    updated_at?: boolean | number
    /** Whether or not this form was uploaded by Healthie team member */
    uploaded_by_healthie_team?: boolean | number
    /** Whether the template can be used to chart with */
    use_for_charting?: boolean | number
    /** Whether the template was made for a program */
    use_for_program?: boolean | number
    /** The owner of the template */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A custom sidebar override */
export interface CustomSidebarOverrideGenqlSelection{
    /** The icon of the image that will be display on the sidebar */
    icon?: boolean | number
    /** The unique identifier of the override */
    id?: boolean | number
    /** The label of the sidebar item that will be shown or hidden */
    label?: boolean | number
    /** If true, the sidebar item will be open in an iframe within the Healthie UI */
    open_in_iframe?: boolean | number
    /** If true, the sidebar item will be displayed */
    show?: boolean | number
    /** The link to the custom icon that will be displayed on the sidebar */
    svg_url?: boolean | number
    /** Where the link will open if clicked */
    target?: boolean | number
    /** The link that the sidebar item will direct to */
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The day range input */
export interface DayRangeInputObjectType {
/** The days range */
days?: ((Scalars['String'] | null)[] | null),
/** The time range for every day */
time_range?: (Scalars['String'] | null)}


/** Each day range is a time range and the days of the week that are in that time range */
export interface DayRangeTypeGenqlSelection{
    /** The days of the week that are in this time range */
    days?: boolean | number
    /** The time range that is in this time range */
    time_range?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Dexcom Connection */
export interface DexcomConnectionGenqlSelection{
    /** The unique identifier of the connection */
    id?: boolean | number
    /** The last time Dexcom was synced */
    last_sync_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a diagnosis */
export interface DiagnosesInput {
/** If true, the diagnosis will be deleted upon saving */
_destroy?: (Scalars['Boolean'] | null),
/** Whether the diagnosis is active or not */
active?: (Scalars['Boolean'] | null),
/** Whether the diagnosis is the primary diagnosis */
primary?: (Scalars['Boolean'] | null),
/** The date of the end of the diagnosis */
end_date?: (Scalars['String'] | null),
/** The date of the first symptom */
first_symptom_date?: (Scalars['String'] | null),
/** The ID of the ICD code */
icd_code_id?: (Scalars['ID'] | null),
/** The ID of the diagnosis */
id?: (Scalars['ID'] | null)}


/** A diagnosis */
export interface DiagnosisGenqlSelection{
    /** Active diagnosis */
    active?: boolean | number
    /** custom module id */
    custom_module_id?: boolean | number
    /** End date */
    end_date?: boolean | number
    /** First symptom date */
    first_symptom_date?: boolean | number
    /** icd code */
    icd_code?: IcdCodeGenqlSelection
    /** icd code id */
    icd_code_id?: boolean | number
    /** icd codes cms1500s id */
    icd_codes_cms1500s_id?: boolean | number
    /** icd codes super bill id */
    icd_codes_super_bill_id?: boolean | number
    /** The unique identifier of the diagnosis */
    id?: boolean | number
    /** Primary diagnosis */
    primary?: boolean | number
    /** Date diagnosis was last updated */
    updated_at?: boolean | number
    /** Owner of this diagnosis */
    user?: UserGenqlSelection
    /** user id */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a dietitian */
export interface DietitianInput {
/** The ID of the dietitian */
id?: (Scalars['ID'] | null),
/** The NPI of the dietitian */
npi?: (Scalars['String'] | null),
/** The other ID of the dietitian */
other_id?: (Scalars['String'] | null),
/** The other ID qualifier of the dietitian */
other_id_qualifier?: (Scalars['String'] | null),
/** The qualifications of the dietitian */
qualifications?: (Scalars['String'] | null)}


/** Information on the direct message attachment */
export interface DirectMessageAttachmentGenqlSelection{
    /** The file name of the attachment */
    attachment_name?: boolean | number
    /** The unique ID of the direct message attachment */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A discount from stripe as object */
export interface DiscountGenqlSelection{
    /** Amount off in cents */
    amount_off?: boolean | number
    /** Annual discount in cents */
    annual_discount?: boolean | number
    /** Duration of the discount */
    duration?: boolean | number
    /** Duration in months */
    duration_in_months?: boolean | number
    /** The unique identifier of the discount */
    id?: boolean | number
    /** Monthly discount in cents */
    monthly_discount?: boolean | number
    /** The name of the discount */
    name?: boolean | number
    /** Percent off in cents */
    percent_off?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A document file that contains an attachment and information about the attachment */
export interface DocumentGenqlSelection{
    /** When true, the user cannot adjust settings for the document besides sharing. */
    can_only_share?: boolean | number
    /** The date the document was made available to the given client */
    created_at?: { __args: {
    /** The custom ID of viewable user (default: current user) */
    viewable_user_id?: (Scalars['String'] | null)} }
    /** Pagination cursor */
    cursor?: boolean | number
    /** The description of the document */
    description?: boolean | number
    /** The display name of the document */
    display_name?: boolean | number
    /** Include the file in new clients welcome email */
    email_on_welcome?: boolean | number
    /** A URL to download the file, good for 10 seconds */
    expiring_url?: boolean | number
    /** The extension of the document */
    extension?: boolean | number
    /** The file type of the document */
    file_content_type?: boolean | number
    /** The file extension in human-readable format e.g.: 'Video'/'Audio'/'Excel' etc */
    friendly_type?: boolean | number
    /** The unique idenitifer of the document */
    id?: boolean | number
    /** Include the document within the private charts section */
    include_in_charting?: boolean | number
    /** Notes on the document (not visible to the client) */
    internal_notes?: boolean | number
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. Only accessible by staff and providers */
    metadata?: boolean | number
    /** Instances of the document being viewed/opened */
    opens?: DocumentViewingGenqlSelection
    /** Owner of this document */
    owner?: UserGenqlSelection
    /** In the case of a private document, the user that this document is for */
    rel_user?: UserGenqlSelection
    /** ID of the assigned client */
    rel_user_id?: boolean | number
    /** The document shared */
    shared?: boolean | number
    /** Share the file with new clients automatically */
    shared_on_welcome?: boolean | number
    /** The number of user groups who the document is shared */
    shared_user_groups_count?: boolean | number
    /** The number of users who the document is directly shared with (not through groups) */
    shared_users_count?: boolean | number
    /** Share with all members of the organization */
    shared_with_dietitians?: boolean | number
    /** The date the document was updated */
    updated_at?: boolean | number
    /** The user groups who have access to this document */
    user_groups?: UserGroupGenqlSelection
    /** The users who have access to this document */
    users?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about a document being opened */
export interface DocumentViewingGenqlSelection{
    /** Pagination cursor */
    cursor?: boolean | number
    /** The ID of the document that was opened */
    document_id?: boolean | number
    /** The unique identifier of the viewing */
    id?: boolean | number
    /** The user who opened the document */
    user?: UserGenqlSelection
    /** The ID of the user who opened the document */
    user_id?: boolean | number
    /** When the document was opened */
    viewed_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Dosage of a medication or prescription */
export interface DosageTypeGenqlSelection{
    /** The unique identifier of the dosage */
    id?: boolean | number
    /** The medication's national drug code */
    ndc?: boolean | number
    /** The strength of the dosage */
    strength?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Only available to Internal Healthie Users -- Roles assigned to a given User */
export interface DoseSpotGenqlSelection{
    /** State of account being approved */
    approved?: boolean | number
    /** User's Clinic ID */
    clinic_id?: boolean | number
    /** User's Clinic Key */
    clinic_key?: boolean | number
    /** Date the object was created */
    created_at?: boolean | number
    /** User ID associated with DoseSpot */
    dosespot_user_id?: boolean | number
    /** The unique identifier of the type */
    id?: boolean | number
    /** This user is a clinic admin in dosespot */
    is_clinic_admin?: boolean | number
    /** Number of notifications on dosespot the User has */
    notification_count?: boolean | number
    /** ID of the user prescribing the dosespot */
    prescribing_dosespot_user_id?: boolean | number
    /** The dosespot status */
    registration_status?: boolean | number
    /** Date the object was last updated */
    updated_at?: boolean | number
    /** User ID associated with the dosespot object in Healthie */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** draft of a conversation note */
export interface DraftGenqlSelection{
    /** content of draft */
    content?: boolean | number
    /** id of linked conversation membership */
    conversation_membership_id?: boolean | number
    /** The unique identifier of the draft */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Allergen information */
export interface DrugAllergenTypeGenqlSelection{
    /** The brand name of the allergen */
    brand_name?: boolean | number
    /** The unique identifier of the allergen */
    id?: boolean | number
    /** The name of the allergen */
    name?: boolean | number
    /** The type of allergen */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of EmbedForm */
export interface EmbedFormInput {appt_type_id?: (Scalars['ID'] | null),form_id: Scalars['ID'],offering_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of EmbedForm. */
export interface EmbedFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A step that embeds a widget */
export interface EmbedWidgetStepTypeGenqlSelection{
    /** The unique identifier of the step */
    id?: boolean | number
    /** The title of the step */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of EnableMfa */
export interface EnableMfaInput {enable: Scalars['Boolean'],id: Scalars['ID']}


/** Autogenerated return type of EnableMfa. */
export interface EnableMfaPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of EnableMixpanel */
export interface EnableMixpanelInput {
/** The ID of the user */
id: Scalars['ID'],
/** Mixpanel Project Token */
project_token: Scalars['String']}


/** Autogenerated return type of EnableMixpanel. */
export interface EnableMixpanelPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of EnableZoomFeatures */
export interface EnableZoomFeaturesInput {id: Scalars['ID'],
/** Zoom Inputs */
zoom_feature_params?: (ZoomFeatureInputs | null)}


/** Autogenerated return type of EnableZoomFeatures. */
export interface EnableZoomFeaturesPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A post about a client, with different category options */
export interface EntryGenqlSelection{
    /** User who added the entry */
    added_by_user?: UserGenqlSelection
    /** the user who actually put in the entry (not always the user who the entry is about) */
    added_by_user_id?: boolean | number
    /** The category of this entry */
    category?: boolean | number
    /** All comments association with this entry. */
    comments?: CommentGenqlSelection
    /** The time at which this entry was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Default water intake for this entry user */
    default_water_intake_for_entry_user?: boolean | number
    /** The description for the entry */
    description?: boolean | number
    /** A more granular 1-10 scale of how hungry the user thought they were after eating */
    ed_posthunger?: boolean | number
    /** A more granular 1-10 scale of how hungry the user thought they were after eating */
    ed_posthunger_string?: boolean | number
    /** A more granular 1-10 scale of how hungry the user thought they were before eating */
    ed_prehunger?: boolean | number
    /** A more granular 1-10 scale of how hungry the user thought they were before eating */
    ed_prehunger_string?: boolean | number
    /** The users emotions towards the meal */
    emotions?: boolean | number
    /** The users emotions towards the meal */
    emotions_string?: boolean | number
    /** If average of any type, value indicates amount of entries already included in average calculation */
    entries_in_average?: boolean | number
    /** Third party external ID associated with this entry */
    external_id?: boolean | number
    /** Third party associated with the external ID on this entry. One option currently supported is 'AppleHealth' */
    external_id_type?: boolean | number
    /** True if the entry has subentries */
    has_subentries?: boolean | number
    /** A hexadecimal value corresponding to the metric stat of a food entry */
    healthiness_info_hex_value?: boolean | number
    /** A boolean to check if the entry should be hidden from the main client feed */
    hide_from_main_feed?: boolean | number
    /** The unique identifier of the entry */
    id?: boolean | number
    /** The associated image of the entry */
    image?: boolean | number
    /** The URL of the entry's associated image */
    image_url?: boolean | number
    /** Meal entries of FoodEntry */
    meals?: MealGenqlSelection
    /** The value of the metric for the entry */
    metric_stat?: boolean | number
    /** Metric stat as a string */
    metric_stat_string?: boolean | number
    /** The name for this entry */
    name?: boolean | number
    /** Other symptom typed by the client */
    other_symptom?: boolean | number
    /** How hungry the poster thinks they were before eating */
    percieved_hungriness?: boolean | number
    /** User who the entry is about */
    poster?: UserGenqlSelection
    /** The water intake previously added */
    previous_water_intake_stat?: boolean | number
    /** the users reflections towards the meal */
    reflection?: boolean | number
    /** A name of third party source or full name of user who have created the entry */
    source?: boolean | number
    /** subentries of the Entry */
    subentries?: EntryGenqlSelection
    /** Comma-separated list of symptom names */
    symptom_names?: boolean | number
    /** Multiple symptoms ID selected by the client */
    symptoms?: boolean | number
    /** A name of third party source which actually created the entry */
    third_party_source?: boolean | number
    /** The type for this entry, options are - FoodEntry, WorkoutEntry, MirrorEntry, SleepEntry, NoteEntry, WaterIntakeEntry, PoopEntry', null: false */
    type?: boolean | number
    /** The last date and time that the entry was updated */
    updated_at?: boolean | number
    /** A check to see if the entry has been viewed or not */
    viewed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ExtendPaywall */
export interface ExtendPaywallInput {extended_paywall_date: Scalars['String'],id: Scalars['ID'],force_extension?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of ExtendPaywall. */
export interface ExtendPaywallPayloadGenqlSelection{
    additional_info?: boolean | number
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing info about the provider's exrernal calendar */
export interface ExternalCalendarGenqlSelection{
    /** Send appointments to the external calendar */
    add_to_calendar?: boolean | number
    /** A list of potential calendars */
    calendar_list?: boolean | number
    /** Email of external calendar */
    email?: boolean | number
    /** The type of external calerndar */
    external_type?: boolean | number
    /** Calendar has ran first sync */
    has_ran_first_sync?: boolean | number
    /** Calendar has refresh token */
    has_refresh_token?: boolean | number
    /** The unique identifier of the calendar */
    id?: boolean | number
    /** Pull in appointments from the external calendar */
    pull_from_calendar?: boolean | number
    /** Calendar has pulled in location and note info otherwise it will contain 'Busy' */
    pull_in_event_details?: boolean | number
    /** Selected calendars to pull in appointments from */
    pulled_in_calendars?: boolean | number
    /** The resource name (sync partner assigned ID) for the sync */
    resource_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A family history condition record for a client */
export interface FamilyHistoryConditionGenqlSelection{
    /** The unique identifier of the family history condition */
    id?: boolean | number
    /** Enum field for family relationships */
    relationships?: boolean | number
    /** snomed term associated with the condition */
    snomed_term?: SnomedTermGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Attributes to change a fax dietitian */
export interface FaxDietitianInput {
/** The custom identifier of the fax dietitian */
id?: (Scalars['ID'] | null),
/** The location of the fax dietitian */
location?: (FaxLocationInput | null),
/** The phone number of the fax dietitian */
phone_number?: (Scalars['String'] | null),
/** The qualifications of the fax dietitian */
qualifications?: (Scalars['String'] | null)}


/** An object containing info about the user' s fax line requests */
export interface FaxLineRequestGenqlSelection{
    /** The area_code */
    area_code?: boolean | number
    /** The file type of the bill */
    bill?: boolean | number
    /** The city */
    city?: boolean | number
    /** The date and time that the fax line request was created */
    created_at?: boolean | number
    /** The file type of the loa */
    loa?: boolean | number
    /** The request type */
    request_type?: boolean | number
    /** The state */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Attributes to change a fax location */
export interface FaxLocationInput {
/** The city of the fax location */
city?: (Scalars['String'] | null),
/** The country of the fax location */
country?: (Scalars['String'] | null),
/** The custom identifier of the fax location */
id?: (Scalars['ID'] | null),
/** The first line of the fax location address */
line1?: (Scalars['String'] | null),
/** The second line of the fax location address */
line2?: (Scalars['String'] | null),
/** The state of the fax location */
state?: (Scalars['String'] | null),
/** The zip code of the fax location */
zip?: (Scalars['String'] | null)}


/** An object containing details about what the client can and can't do */
export interface FeatureToggleGenqlSelection{
    /** Activity level of the user */
    activity_level?: boolean | number
    /** Allow clients to sync with Apple Health */
    allow_apple_health_sync?: boolean | number
    /** Allow clients to sync with Clearstep */
    allow_clearstep_sync?: boolean | number
    /** Allow send messages to community chat */
    allow_community_chat?: boolean | number
    /** Allow clients to sync with Dexcom */
    allow_dexcom_sync?: boolean | number
    /** Allow send messages to direct chat */
    allow_direct_chat?: boolean | number
    /** Allow clients to sync with Fitbit */
    allow_fitbit_sync?: boolean | number
    /** Allow clients to sync with Google Fit */
    allow_google_fit_sync?: boolean | number
    /** Allow clients to sync with Shapa */
    allow_shapa_sync?: boolean | number
    /** Allow clients to sync with Withings */
    allow_withings_sync?: boolean | number
    /** whether or not the eating disorder defaults are applied */
    apply_eating_disorder_default?: boolean | number
    /** The status of whether the linked user can view and schedule appointments */
    can_schedule_appointments?: boolean | number
    /** Whether or not clients can track poop in their journal entries */
    can_track_poop?: boolean | number
    /** Whether or not the client can track symptoms */
    can_track_symptoms?: boolean | number
    /** Whether or not clients can track water intake in their journal entries */
    can_track_water_intake?: boolean | number
    /** The status of whether the linked user can view care plan */
    can_view_care_plan?: boolean | number
    /** The status of whether the linked user can view and upload documents */
    can_view_documents?: boolean | number
    /** The status of whether the linked user can view and complete intake forms */
    can_view_forms?: boolean | number
    /** The status of whether the linked user can view and create goals */
    can_view_goals?: boolean | number
    /** The status of whether the linked user can view and create journal entries */
    can_view_journal_entries?: boolean | number
    /** The status of whether the linked user can view and purchase packages */
    can_view_packages?: boolean | number
    /** The status of whether the linked user can view and make payments */
    can_view_payments?: boolean | number
    /** The status of whether the linked user can view and complete programs */
    can_view_programs?: boolean | number
    /** The care plan associated with this feature toggle */
    care_plan?: CarePlanGenqlSelection
    /** The id of the care plan associated with this feature toggle */
    care_plan_id?: boolean | number
    /** The date and time the entry was done */
    created_at?: boolean | number
    /** Custom Metrics for this toggle */
    custom_metrics?: CustomMetricGenqlSelection
    /** Default date range selector when provider opens date picker in metrics tab */
    date_range_preference?: boolean | number
    /** Default water intake set by provider */
    default_water_intake?: boolean | number
    /** When true, it will not auto submit the CMS1500 to the clearing house */
    do_not_auto_submit_cms1500?: boolean | number
    /** The frequency with which clients get email notifications about their goals */
    email_notification_frequency?: boolean | number
    /** Food categories */
    food_categories?: boolean | number
    /** If true, user has at least one entry type to track */
    has_any_entry_types?: boolean | number
    /** CCDA is available if true */
    has_ccda?: boolean | number
    /** The unique identifier of the feature toggle */
    id?: boolean | number
    /** Food categories */
    initial_custom_metric_overrides?: CustomMetricOverrideGenqlSelection
    /** Default date range when provider opens date picker in journal tab */
    last_journal_date_range_preference?: boolean | number
    /** Default from_date when provider opens date picker in journal tab */
    last_journal_from_date?: boolean | number
    /** Default to_date when provider opens date picker in journal tab */
    last_journal_to_date?: boolean | number
    /** Metric Graphs to show in line graph form */
    line_graph_metric_categories?: { __args: {
    /** The id of the user to get the line graph metric categories for */
    user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Sleep Graphs to show in line graph form */
    line_graph_sleep_categories?: { __args: {
    /** The id of the user to get the line graph sleep categories for */
    user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Metric categories based on users toggle features */
    metric_categories?: { __args: {
    /** The id of the user to get the metric categories for */
    user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Metric category objects (including defaults) based on users toggle features */
    metric_category_objects?: (CustomMetricGenqlSelection & { __args?: {
    /** Self-descriptive */
    user_id?: (Scalars['ID'] | null)} })
    /** Mirror categories */
    mirror_categories?: boolean | number
    /** The frequency with which clients get push notifications about their goals */
    push_notification_frequency?: boolean | number
    /** Metrics that should be on for this feature toggle */
    returned_custom_metrics?: boolean | number
    /** Send unpaid invoice reminder */
    send_unpaid_invoice_reminder?: boolean | number
    /** The status of whether entries on graphs are seperated by the poster */
    seperate_provider_metric_from_client?: boolean | number
    /** The status of whether the provider can see the A1C of the client */
    show_a1c_metric?: boolean | number
    /** The status of whether the provider can view and track the client's body fat percentage */
    show_bf_percent_metric?: boolean | number
    /** The status of whether the provider can view and track the client's blood pressure */
    show_blood_pressure_metric?: boolean | number
    /** The status of whether the provider can see the blood sugar metrics of the client */
    show_blood_sugar_metric?: boolean | number
    /** The status of whether the provider can see the calculated BMI of the client */
    show_bmi_graph?: boolean | number
    /** The status of whether the provider can see the bmi-growth chart of the client */
    show_bmi_growth_chart?: boolean | number
    /** The status of whether the provider can see the calculated BMR (using MFJ) of the client */
    show_bmr_metric?: boolean | number
    /** The status of whether the provider can see the body temperature entries of the client */
    show_body_temperature_metric?: boolean | number
    /** The status of whether the client can see A1C metrics of the client */
    show_client_a1c_metric?: boolean | number
    /** The status of whether the client can view and track the client's body fat percentage */
    show_client_bf_percent_metric?: boolean | number
    /** The status of whether the client can view and track the client's blood pressure */
    show_client_blood_pressure_metric?: boolean | number
    /** The status of whether the client can see the blood sugar metrics of the client */
    show_client_blood_sugar_metric?: boolean | number
    /** The status of whether the client can see the calculated BMI of the client */
    show_client_bmi_graph?: boolean | number
    /** The status of whether the client can see the bmi-growth chart of the client */
    show_client_bmi_growth_chart?: boolean | number
    /** The status of whether the client can see the calculated BMR (using MFJ) of the client */
    show_client_bmr_metric?: boolean | number
    /** The status of whether the client can see the body temperature entries of the client */
    show_client_body_temperature_metric?: boolean | number
    /** The status of whether the client can see the calculated BMR (using HB) of the client */
    show_client_harris_benedict?: boolean | number
    /** The status of whether the client can see the height-growth chart of the client */
    show_client_height_growth_chart?: boolean | number
    /** The status of whether the client can see oxygen saturation metrics of the client */
    show_client_ox_sat_metric?: boolean | number
    /** The status of whether the client can view and track the client's waist circumference */
    show_client_waist_circumference_metric?: boolean | number
    /** The status of whether the client can see the weight-growth chart of the client */
    show_client_weight_growth_chart?: boolean | number
    /** The status of whether the client can view and track the client's weight */
    show_client_weight_metric?: boolean | number
    /** The status of whether the client is asked to track expanded (1-10) postmeal hunger level */
    show_ed_posthunger?: boolean | number
    /** The status of whether the client is asked to track expanded (1-10) premeal hunger level */
    show_ed_prehunger?: boolean | number
    /** The status of whether the client can post food entries */
    show_food?: boolean | number
    /** The status of whether the client is asked to track the category (meal or snack) of the food */
    show_food_category?: boolean | number
    /** The status of whether the client is asked to track (1-10) emotion towards the food */
    show_food_emotion?: boolean | number
    /** The status of whether the client is asked to post a (text) reflection towards the food */
    show_food_reflection?: boolean | number
    /** The status of whether the provider can see the calculated BMR (using HB) of the client */
    show_harris_benedict?: boolean | number
    /** The status of whether the client is asked to track perceived healthiness */
    show_healthiness?: boolean | number
    /** The status of whether the provider can see the height graph of the client */
    show_height_graph?: boolean | number
    /** The status of whether the provider can see the height-growth chart of the client */
    show_height_growth_chart?: boolean | number
    /** The status of whether the client can post metric entries */
    show_metric?: boolean | number
    /** The status of whether the client can post selfie entries */
    show_mirror?: boolean | number
    /** The status of whether the client is asked to track normal (1-3) hunger level */
    show_normal_hunger?: boolean | number
    /** The status of whether the client can post note entries */
    show_note?: boolean | number
    /** The status of whether the client is asked to track (1-10) emotion towards the note */
    show_note_emotion?: boolean | number
    /** The status of whether the client can include macro and micro nutrients for the food they track */
    show_nutrients_tracking?: boolean | number
    /** The status of whether the provider can see the oxygen saturation of the client */
    show_ox_sat_metric?: boolean | number
    /** The status of whether the client can post sleep entries */
    show_sleep?: boolean | number
    /** The status of whether the provider can view and track the client's waist circumference */
    show_waist_circumference_metric?: boolean | number
    /** The status of whether the provider can see the weight-growth chart of the client */
    show_weight_growth_chart?: boolean | number
    /** The status of whether the provider can view and track the client's weight */
    show_weight_metric?: boolean | number
    /** The status of whether the client can post workout entries */
    show_workout?: boolean | number
    /** Symptom options for symptom entry type */
    symptom_options?: SymptomOptionGenqlSelection
    /** The status of whether the client uses the metric system (versus imperial) */
    use_metric_system?: boolean | number
    /** Associated user */
    user?: UserGenqlSelection
    /** The user group associated with this feature toggle */
    user_group?: UserGroupGenqlSelection
    /** The user group associated with this feature toggle */
    user_group_id?: boolean | number
    /** The user associated with this feature toggle */
    user_id?: boolean | number
    /** If true, the user has active_care_plan  */
    uses_feature_toggle_from_care_plan?: boolean | number
    /** When enabled, let's providers choose to have metrics that clients can view, but not enter */
    view_not_track?: boolean | number
    /** Workout categories */
    workout_categories?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information about field that didn’t pass validation */
export interface FieldErrorGenqlSelection{
    /** Field name that caused these errors */
    field?: boolean | number
    /** Validation message */
    message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Fitbit Sync */
export interface FitbitGenqlSelection{
    /** The unique identifier of the fitbit */
    id?: boolean | number
    /** Checking is active sync in current moment */
    is_enabled?: boolean | number
    /** The last time the fitbit was synced */
    last_sync_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A folder that contains documents and other folders */
export interface FolderGenqlSelection{
    /** When true, the user cannot adjust settings for the folder besides sharing. */
    can_only_share?: boolean | number
    /** The date the folder was made available to the given user */
    created_at?: { __args: {
    /** Select by a specific user */
    viewable_user_id?: (Scalars['String'] | null)} } | boolean | number
    /** If true, the current user can edit the folder */
    current_user_can_edit?: boolean | number
    /** The description of the folder */
    description?: boolean | number
    /** The number of documents within this folder */
    documents_count?: boolean | number
    /** Include the file in new clients welcome email */
    email_on_welcome?: boolean | number
    /** The ID of the parent folder */
    folder_id?: boolean | number
    /** The list of parent folders for this folder */
    folder_path?: (FolderGenqlSelection & { __args?: {
    /** Select by a specific client */
    client_id?: (Scalars['String'] | null)} })
    /** The unique identifier of the folder */
    id?: boolean | number
    /** The name of the folder */
    name?: boolean | number
    /** Owner of this folder */
    owner?: UserGenqlSelection
    /** The parent folder of this folder (nil if there is no parent) */
    parent_folder?: FolderGenqlSelection
    /** In the case of a private folder, the user that this folder is for */
    rel_user?: UserGenqlSelection
    /** The ID of the connected user */
    rel_user_id?: boolean | number
    /** The folder is shared */
    shared?: boolean | number
    /** Share the file with new clients automatically */
    shared_on_welcome?: boolean | number
    /** The number of user groups who the folder is shared */
    shared_user_groups_count?: boolean | number
    /** The number of users who the folder is directly shared with (not through groups) */
    shared_users_count?: boolean | number
    /** Share with all members of the organization */
    shared_with_dietitians?: boolean | number
    /** The number of subfolders within this folder */
    subfolders_count?: boolean | number
    /** The folder has a reserved name generated by the system */
    system_generated?: boolean | number
    /** The user groups who have access to this folder */
    user_groups?: UserGroupGenqlSelection
    /** The users who have access to this folder */
    users?: (UserGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), should_paginate?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null), order_by?: (UserOrderKeys | null)} })
    /** The number of users who have access to this folder */
    users_count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A food object */
export interface FoodGenqlSelection{
    /** The name of the food creator */
    creator_name?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** first serving size of the food object */
    default_serving_size?: ServingSizeGenqlSelection
    /** The name of the food to display */
    display_name?: boolean | number
    /** The id of the food in the Edamam database */
    edamam_import_id?: boolean | number
    /** Whether the food was imported from the FDC database */
    fdc_import?: boolean | number
    /** The unique identifier of the food */
    id?: boolean | number
    /** The name of the food */
    name?: boolean | number
    /** Nutrients of the food object */
    nutrients?: FoodNutrientGenqlSelection
    /** Serving sizes of the food object */
    serving_sizes?: ServingSizeGenqlSelection
    /** The ID of the user who created the food */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A food item to be served */
export interface FoodItemGenqlSelection{
    /** The food to be served */
    food?: FoodGenqlSelection
    /** The unique identifier of the food item */
    id?: boolean | number
    /** The modifier for the serving size */
    modifier?: boolean | number
    /** The serving size */
    serving_size?: ServingSizeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A food nutrient item object */
export interface FoodNutrientGenqlSelection{
    /** The category of the nutrient */
    category?: boolean | number
    /** Whether the nutrient is imported from the FDC database */
    fdc_import?: boolean | number
    /** The unique identifier of the food */
    food_id?: boolean | number
    /** The unique identifier of the nutrient */
    id?: boolean | number
    /** The name of the nutrient */
    name?: boolean | number
    /** The unit of the nutrient */
    nutrient_unit?: boolean | number
    /** The value of the nutrient */
    nutrient_value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An answer in a filled form */
export interface FormAnswerGenqlSelection{
    /** The answer to the question */
    answer?: boolean | number
    /** The ID of the custom module whose value determines whether to show or hide the custom module */
    conditional_custom_module_id?: boolean | number
    /** The creation time of the form answer */
    created_at?: boolean | number
    /** The type of question that was filled out */
    custom_module?: CustomModuleGenqlSelection
    /** The id of the question template */
    custom_module_id?: boolean | number
    /** The answer to display (some conversions are made verse raw answer data) */
    displayed_answer?: boolean | number
    /** The type of filter */
    filter_type?: boolean | number
    /** The filled form that this answer is a part of */
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The unique identifier of the answer */
    id?: boolean | number
    /** The label of the question */
    label?: boolean | number
    /** The time of the last update */
    updated_at?: boolean | number
    /** The id of the user that the answered question is for */
    user_id?: boolean | number
    /** The value to check the filter against */
    value_to_filter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A completed form, with metadata about the completion, and the saved answers */
export interface FormAnswerGroupGenqlSelection{
    /** The appointment the note is connected to */
    appointment?: AppointmentGenqlSelection
    /** The autoscored sections for the filled form */
    autoscored_sections?: AutoscoredSectionTypeGenqlSelection
    /** The addendums added to the locked charting note */
    charting_note_addendums?: ChartingNoteAddendumTypeGenqlSelection
    /** The CMS1500 created from the form answer group */
    cms1500?: Cms1500GenqlSelection
    /** The date on which the filled form was saved */
    created_at?: boolean | number
    /** The most recent generated summary. Null if no summary has been generated */
    current_summary?: GeneratedSummaryGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** The form template that was filled out */
    custom_module_form?: CustomModuleFormGenqlSelection
    /** The date the form was deleted */
    deleted_at?: boolean | number
    /** An external ID stored on the filled form or charting note */
    external_id?: boolean | number
    /** The user who filled out the form */
    filler?: UserGenqlSelection
    /** Whether the filled form has been saved by the user (verse a hidden draft) */
    finished?: boolean | number
    /** Signatures for the form */
    form_answer_group_signings?: FormAnswerGroupSigningGenqlSelection
    /** A list of connections between a form_answer_group and group appointment users */
    form_answer_group_users_connections?: FormAnswerGroupUserConnectionGenqlSelection
    /** The visible answers for the filled form */
    form_answers?: (FormAnswerGenqlSelection & { __args?: {
    /** When true, all answers (even conditionally hidden ones) are returned. */
    is_for_editing?: (Scalars['Boolean'] | null)} })
    /** when true, the note cannot be edited */
    frozen?: boolean | number
    /** All patients that have attended in the related group appointment */
    group_appointment_attendees?: UserGenqlSelection
    /** The unique identifier of the group */
    id?: boolean | number
    /** A collection of individual charting notes related to the main group charting note */
    individual_client_notes?: (IndividualClientTypeGenqlSelection & { __args?: {
    /** Preferable sorting order */
    order_by?: (IndividualClientNoteOrderKeys | null)} })
    /** Same as individual_client_notes but returns a specific instance for given user */
    individual_note?: (IndividualClientTypeGenqlSelection & { __args?: {
    /** The client's ID */
    user_id?: (Scalars['ID'] | null)} })
    /** Indicates whether the answer group is related to group apppointment (charting note created for group appointment) */
    is_group_appt_note?: boolean | number
    /** The date and time when the charting note was locked */
    locked_at?: boolean | number
    /** The provider who have locked the charting note */
    locked_by?: UserGenqlSelection
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. Only accessible by staff and providers */
    metadata?: boolean | number
    /** The given name of the filled form */
    name?: boolean | number
    /** If you have product recommendation alogrithim enabled, this will return a package containing the products recommended by the algorithim */
    offering_with_recommended_products?: OfferingGenqlSelection
    /**
     * @deprecated Not used anywhere, will cause an error
     * If you have product recommendation alogrithim enabled, this will return a package containing a URL to purchase the products recommended by the algorithim
     */
    packages_with_recommended_products_purchase_url?: boolean | number
    /** The date that the note was actually created */
    record_created_at?: boolean | number
    /** The last updated date for the filled form */
    updated_at?: boolean | number
    /** The user the form is about */
    user?: UserGenqlSelection
    /** ID of the user */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An instance representing connection between a charting note(form_answer_group) and a user signing the note */
export interface FormAnswerGroupSigningGenqlSelection{
    /** The date and time the form was signed */
    created_at?: boolean | number
    /** The id of the form that was signed */
    form_answer_group_id?: boolean | number
    /** The unique identifier of the signing */
    id?: boolean | number
    /** A provider who signed the form */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An instance representing connection between a group charting note(form_answer_group.appointment.is_group == true) and a user */
export interface FormAnswerGroupUserConnectionGenqlSelection{
    /** The unique identifier of the connection */
    id?: boolean | number
    /** The user associated with the connection */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an answer */
export interface FormAnswerInput {
/** The answer */
answer?: (Scalars['String'] | null),
/** The ID of the conditional custom module */
conditional_custom_module_id?: (Scalars['ID'] | null),
/** The ID of the custom module */
custom_module_id?: (Scalars['String'] | null),
/** The type of filter */
filter_type?: (Scalars['String'] | null),
/** (CURRENTLY UNUSED) The mod_type (e.g question type) that is being answered. */
mod_type?: (Scalars['String'] | null),
/** Unique ID for the answer */
id?: (Scalars['ID'] | null),
/** The label for the answer */
label?: (Scalars['String'] | null),
/** The ID of the user who created the answer */
user_id?: (Scalars['String'] | null),
/** The value to filter by */
value_to_filter?: (Scalars['String'] | null)}


/** A form history object */
export interface FormHistoryGenqlSelection{
    /** Action of the form history object */
    action?: boolean | number
    /** Date/Time created */
    created_at?: boolean | number
    /** The User who created form history object or dietitian of the patient */
    creator?: UserGenqlSelection
    /** The unique identifier of the form history object */
    id?: boolean | number
    /** The patient who owns the form history object */
    patient?: UserGenqlSelection
    /** The title describing form history creation */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** types of forms that can be requested */
export interface FormTypesToRequestGenqlSelection{
    /** The unique identifier of the object */
    id?: boolean | number
    /** Whether the form contains only one custom_module with mod_type 'video' and was created as part of a program */
    is_video?: boolean | number
    /** Type of form to request */
    item_type?: boolean | number
    /** The given name of the template */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Fullscript Practitioner */
export interface FullscriptPractitionerTypeGenqlSelection{
    /** Email address of the practitioner */
    email?: boolean | number
    /** External reference of the practitioner */
    external_ref?: boolean | number
    /** First name of the practitioner */
    first_name?: boolean | number
    /** The unique identifier of the practitioner */
    id?: boolean | number
    /** Last name of the practitioner */
    last_name?: boolean | number
    /** The ID of the practitioner type */
    practitioner_type_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The type of practitioners */
export interface FullscriptPractitionerTypeTypeGenqlSelection{
    /** The code for the practitioner type */
    code?: boolean | number
    /** The description of the practitioner type */
    description?: boolean | number
    /** The unique identifier of the practitioner type */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Fullscript Product Type */
export interface FullscriptProductTypeGenqlSelection{
    /** Additional Info */
    additional_info?: boolean | number
    /** Dosage of the product */
    dosage?: boolean | number
    /** The unique identifier of the product fullscript */
    id?: boolean | number
    /** Ordered */
    ordered?: boolean | number
    /** The name of the product */
    product_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Fullscript Treatment Plan */
export interface FullscriptTreatmentPlanTypeGenqlSelection{
    /** Date the treatment plan was activated */
    activation_date?: boolean | number
    /** The unique identifier of the plan */
    id?: boolean | number
    /** Number of times the plan has been ordered */
    ordered_count?: boolean | number
    /** Personal message from the practitioner */
    personal_message?: boolean | number
    /** The name of the practitioner */
    practitioner_name?: boolean | number
    /** The products recommended in the plan */
    recommendations?: FullscriptProductTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** FunctionalStatus object */
export interface FunctionalStatusGenqlSelection{
    /** Functional condition */
    functional_condition?: boolean | number
    /** The unique identifier of the functional status */
    id?: boolean | number
    /** The start date of the functional status */
    start_date?: boolean | number
    /** The ID of the user who created the functional status */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A generated summary for an associated Healthie object */
export interface GeneratedSummaryGenqlSelection{
    /** The datetime the summary was generated */
    created_at?: boolean | number
    /** The unique identifier of the group */
    id?: boolean | number
    /** A summary (most often new-line separated bullet points) of the associated object */
    summary?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a gift */
export interface GiftInput {
/** The email of the giver */
giver_email?: (Scalars['String'] | null),
/** The name of the giver */
giver_name?: (Scalars['String'] | null),
/** The ID of the gift */
id?: (Scalars['ID'] | null),
/** The message assigned to the gift */
message?: (Scalars['String'] | null)}


/** a goal */
export interface GoalGenqlSelection{
    /** Completion Percentage of a goal for a given date range. start_range/end_range should be of the form: 'yyyy-mm-dd' */
    completion_percentage_for_range?: { __args: {
    /** The end of the date range. */
    end_range?: (Scalars['String'] | null), 
    /** The start of the date range. */
    start_range: Scalars['String']} }
    /**
     * @deprecated should use completion_percentage_for_range
     * The rate at which this goal is completed
     */
    completion_rate?: boolean | number
    /** The creation timestamp of the goal */
    created_at?: boolean | number
    /** created user of goal */
    created_user_id?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** description of goal */
    description?: boolean | number
    /** due date of goal */
    due_date?: boolean | number
    /** All goal histories associated with this goal histories. */
    goal_histories?: GoalHistoryGenqlSelection
    /** The unique identifier of the goal */
    id?: boolean | number
    /** If true, the goal is complete for the given day. date should be of the form: 'yyyy-mm-dd' */
    is_completed_for_date?: { __args: {
    /** The date to check if the goal is completed at that time. */
    date: Scalars['String']} }
    /**
     * @deprecated should use is_completed_for_date field to determine if a goal is completed for a given day
     * if true, the goal is currently active
     */
    is_current?: boolean | number
    /** if true, a template has been created based off this goal */
    is_used_as_template?: boolean | number
    /** name of goal */
    name?: boolean | number
    /** parent id */
    parent_id?: boolean | number
    /** The rate at which the parent goal has subgoals completed */
    parent_subgoal_completion_rate?: boolean | number
    /** Reminder object for a given goal */
    reminder?: ReminderGenqlSelection
    /** frequency of goal */
    repeat?: boolean | number
    /** The id of the template used to make this goal */
    source_template_id?: boolean | number
    /** start date of goal */
    start_on?: boolean | number
    /** Streak info for goal */
    streak_info?: (GoalStreakInfoGenqlSelection & { __args: {
    /** The end of the date range. */
    end_range?: (Scalars['String'] | null), 
    /** The start of the date range. */
    start_range: Scalars['String']} })
    /**
     * @deprecated should use completion_percentage_for_range
     * The rate at which a subgoal is completed
     */
    subgoal_completion_rate?: boolean | number
    /** Subgoals for a given goal */
    subgoals?: GoalGenqlSelection
    /** count of subgoals */
    subgoals_count?: boolean | number
    /** Title hyperlink. Opens when the title is clicked on. */
    title_link?: boolean | number
    /** Owner of this goal */
    user?: UserGenqlSelection
    /** user id of goal */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Goal data */
export interface GoalDataTypeGenqlSelection{
    /** All goals frequency count */
    all_goals_frequency_count?: boolean | number
    /** All goals status count */
    all_goals_status_count?: boolean | number
    /** All time goals count */
    all_time_goals_count?: boolean | number
    /** Completed goals count */
    completed_goals_count?: boolean | number
    /** Daily goals count */
    daily_goals_count?: boolean | number
    /** Goal list */
    goals?: GoalGenqlSelection
    /** Goals count */
    goals_count?: boolean | number
    /** Goals overall completion rate info */
    goals_overall_completion_rate_info?: GoalOverallCompletionRateInfoGenqlSelection
    /** Goals streak count */
    goals_streak_count?: boolean | number
    /** Not completed goals count */
    not_completed_goals_count?: boolean | number
    /** One time goals count */
    one_time_goals_count?: boolean | number
    /** Weekly goals count */
    weekly_goals_count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** a goal history */
export interface GoalHistoryGenqlSelection{
    /** The date the goal is marked completed */
    completed_on?: boolean | number
    /** The completion timestamp of the goal */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The description of the goal */
    description?: boolean | number
    /** goal that was completed */
    goal?: GoalGenqlSelection
    /** goal id of goal history */
    goal_id?: boolean | number
    /** The unique identifier of the history */
    id?: boolean | number
    /** If true, the goal is a subgoal */
    is_subgoal?: boolean | number
    /** The name of the goal */
    name?: boolean | number
    /** The repeat frequency of the goal */
    repeat?: boolean | number
    /** client of this goal */
    user?: UserGenqlSelection
    /** user id of goal history */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** a goal instance. gives a snapshot of a goal over a specific interval(start_range and end_range ) */
export interface GoalInstanceGenqlSelection{
    /** Pagination cursor */
    cursor?: boolean | number
    /** The date the interval starts for this goal instance */
    end_range?: boolean | number
    /** the relevant goal */
    goal?: GoalGenqlSelection
    /** If true, the goal was completed in between the start and end range */
    is_completed_for_interval?: boolean | number
    /** The date the interval starts for this goal instance */
    start_range?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Related info for a collection of goals overall completion rate */
export interface GoalOverallCompletionRateInfoGenqlSelection{
    /** The number of times the goals were completed */
    actual_times_completed?: boolean | number
    /** The actual percentage of the completion rate */
    percent?: boolean | number
    /** The total number of times the goals could have been completed */
    possible_times_completed?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Related info of a specific goal's streak */
export interface GoalStreakInfoGenqlSelection{
    /** The length of intervals (ie: days, weeks, etc) this streak lasted */
    count?: boolean | number
    /** The day this streak ended */
    end_date?: boolean | number
    /** The day this streak began */
    start_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** a goal template */
export interface GoalTemplateGenqlSelection{
    /** description of template from associated goal */
    description?: boolean | number
    /** id of the goal this template was based on */
    goal_id?: boolean | number
    /** id of the the relevant goal template */
    id?: boolean | number
    /** is_healthie_default of the the relevant goal template */
    is_healthie_default?: boolean | number
    /** name of template from associated goal */
    name?: boolean | number
    /** frequency of template from associated goal */
    repeat?: boolean | number
    /** Subgoal templates for a given template */
    subgoal_templates?: GoalTemplateGenqlSelection
    /** Title hyperlink. Opens when the title is clicked on. */
    title_link?: boolean | number
    /** user associated with this template */
    user?: UserGenqlSelection
    /** user who owns this goal template */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A GoogleFit Sync */
export interface GoogleFitGenqlSelection{
    /** The unique identifier of the Google fit */
    id?: boolean | number
    /** The last time the apple health was synced */
    last_sync_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connection between a user and a care plan */
export interface GroupCarePlanUserConnectionGenqlSelection{
    /** The care plan active status */
    active?: boolean | number
    /** The ID of the care plan */
    care_plan_id?: boolean | number
    /** The unique identifier of the join */
    id?: boolean | number
    /** The ID of the user_group */
    user_group_id?: boolean | number
    /** The ID of the client */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Health Assessment contains in-depth help info and goals for a client */
export interface HealthAssessmentGenqlSelection{
    /** The body report for the client */
    body_report?: BodyReportGenqlSelection
    /** The date the health assessment was created */
    created_at?: boolean | number
    /** gen */
    gender?: boolean | number
    /** The health report for the client */
    health_report?: HealthReportGenqlSelection
    /** The height of the client */
    height?: boolean | number
    /** The unique identifier of the health accessment */
    id?: boolean | number
    /** Is the client diabetic? */
    is_diabetic?: boolean | number
    /** The race of the client */
    race?: boolean | number
    /** The recommendation for the client */
    recommendation?: HealthAssessmentRecommendationGenqlSelection
    /** The title of the health assessment */
    title?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Health Assessment Recommendation is a sub category of a HealthAssessment */
export interface HealthAssessmentRecommendationGenqlSelection{
    /** cal_deficit of user */
    cal_deficit?: boolean | number
    /** carbs_cal of user */
    carbs_cal?: boolean | number
    /** carbs_grams of user */
    carbs_grams?: boolean | number
    /** Carbs percent */
    carbs_percent?: boolean | number
    /** current_body_fat of user */
    current_body_fat?: boolean | number
    /** current_body_weight of user */
    current_body_weight?: boolean | number
    /** current_daily_caloric_intake of user */
    current_daily_caloric_intake?: boolean | number
    /** current_time_to_goal of user */
    current_time_to_goal?: boolean | number
    /** fat_cal of user */
    fat_cal?: boolean | number
    /** fat_grams of user */
    fat_grams?: boolean | number
    /** Fat Percent */
    fat_percent?: boolean | number
    /** high_end_caloric_intake of user */
    high_end_caloric_intake?: boolean | number
    /** Ideal body fat of user */
    ideal_body_fat?: boolean | number
    /** ideal_body_weight of user */
    ideal_body_weight?: boolean | number
    /** ideal_daily_caloric_intake of user */
    ideal_daily_caloric_intake?: boolean | number
    /** ideal_time_to_goal of user */
    ideal_time_to_goal?: boolean | number
    /** low_end_caloric_intake of user */
    low_end_caloric_intake?: boolean | number
    /** protein_cal of user */
    protein_cal?: boolean | number
    /** protein_grams of user */
    protein_grams?: boolean | number
    /** Protei Percent */
    protein_percent?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of HealthAssessmentServiceSignup */
export interface HealthAssessmentServiceSignupInput {device_token?: (Scalars['String'] | null),device_type?: (Scalars['String'] | null),email?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of HealthAssessmentServiceSignup. */
export interface HealthAssessmentServiceSignupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    deeplink_url?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** HealthConcern object */
export interface HealthConcernGenqlSelection{
    /** The code for the health concern */
    code?: boolean | number
    /** The description of the health concern */
    description?: boolean | number
    /** The display name of the health concern */
    display_name?: boolean | number
    /** The effective time of the health concern */
    effective_time?: boolean | number
    /** The unique identifier of the  */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Health Report is a sub category of a HealthAssessment */
export interface HealthReportGenqlSelection{
    /** cancer of user */
    cancer?: boolean | number
    /** diabetes of user */
    diabetes?: boolean | number
    /** The fit score of the user */
    fit_score?: boolean | number
    /** lean_body_mass of user */
    heart?: boolean | number
    /** respiratory of user */
    respiratory?: boolean | number
    /** stroke of user */
    stroke?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Human object controls authentication for users */
export interface HumanGenqlSelection{
    /** The current user */
    current_user?: UserGenqlSelection
    /** The Id of the human's currently selected user */
    current_user_id?: boolean | number
    /** The email of the human */
    email?: boolean | number
    /** The unique identifier of the human */
    id?: boolean | number
    /** last date the human signed in */
    last_sign_in_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** icd code */
export interface IcdCodeGenqlSelection{
    /** The category of the ICD code */
    category?: boolean | number
    /** The ICD code */
    code?: boolean | number
    /** The date the ICD code was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The description of the ICD code */
    description?: boolean | number
    /** A display name - for use in labels */
    display_name?: boolean | number
    /** The unique identifier of the ICD code */
    id?: boolean | number
    /** Whether the ICD code is marked as favorite */
    is_favorite?: { __args: {
    /** The known value of is_favorite (from the query argument) */
    known_value?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The date the ICD code was updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** icd codes cms 1500s join table */
export interface IcdCodesCms1500GenqlSelection{
    /** Active IcdCodesCms1500 */
    active?: boolean | number
    /** cms 1500 id */
    cms1500_id?: boolean | number
    /** date created */
    created_at?: boolean | number
    /** display name */
    display_name?: boolean | number
    /** End date */
    end_date?: boolean | number
    /** ICD codes in use for this claim */
    first_symptom_date?: boolean | number
    /** ICD code */
    icd_code?: IcdCodeGenqlSelection
    /**
     * @deprecated Use icd_code instead
     * icd code id
     */
    icd_code_id?: boolean | number
    /** The unique identifier of the CMS 1500 ICD code */
    id?: boolean | number
    /** date updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for ICD code on CMS 1500 form */
export interface IcdCodesCms1500Input {
/** If true, the ICD code will be deleted from the join table */
_destroy?: (Scalars['Boolean'] | null),
/** Whether the ICD code is active */
active?: (Scalars['Boolean'] | null),
/** The end date of the ICD code */
end_date?: (Scalars['String'] | null),
/** The first symptom date of the ICD code */
first_symptom_date?: (Scalars['String'] | null),
/** The ID of the ICD code */
icd_code_id?: (Scalars['String'] | null),
/** The ID of the ICD code join table */
id?: (Scalars['ID'] | null)}


/** icd codes individual client note join table */
export interface IcdCodesIndividualClientNoteGenqlSelection{
    /** icd code */
    icd_code?: IcdCodeGenqlSelection
    /** Attached ICD Code ID */
    icd_code_id?: boolean | number
    /** The unique identifier of the CMS 1500 ICD code */
    id?: boolean | number
    /** Position of the diagnosis */
    position?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an ICD Code connection to an individual client note */
export interface IcdCodesIndividualClientNoteInput {
/** The ID of the ICD Code connection to the individual client note */
id?: (Scalars['ID'] | null),
/** The ID of the ICD Code */
icd_code_id?: (Scalars['ID'] | null),
/** The position of this diagnosis, in relation to other diagnoses for this appointment inclusion. */
position?: (Scalars['Int'] | null),
/** If true, the ICD Code connection to the individual client note will be deleted */
_destroy?: (Scalars['Boolean'] | null)}


/** icd codes policies join table */
export interface IcdCodesPolicyGenqlSelection{
    /** The ICD code */
    code?: boolean | number
    /** The date when the join was created */
    created_at?: boolean | number
    /** The description of the join */
    description?: boolean | number
    /** The ICD code object */
    icd_code?: IcdCodeGenqlSelection
    /** The ID of the joined ICD code */
    icd_code_id?: boolean | number
    /** The unique identifier of the join between ICD code and policy. */
    id?: boolean | number
    /** The ID of the joined policy */
    policy_id?: boolean | number
    /** The date updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for assigning a policy to an ICD code */
export interface IcdCodesPolicyInput {
/** If true, the join table record will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the ICD code */
icd_code_id?: (Scalars['String'] | null),
/** The ID of the join table record */
id?: (Scalars['ID'] | null),
/** The ID of the policy */
policy_id?: (Scalars['String'] | null)}


/** icd codes super bills join table */
export interface IcdCodesSuperBillGenqlSelection{
    /** The date the join was created */
    created_at?: boolean | number
    /** The joined ICD code object */
    icd_code?: IcdCodeGenqlSelection
    /** The ID of the ICD code */
    icd_code_id?: boolean | number
    /** The unique identifier of the join */
    id?: boolean | number
    /** The ID of the super bill */
    super_bill_id?: boolean | number
    /** The last date when the join was updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an ICD code super bill */
export interface IcdCodesSuperBillInput {
/** If true, the ICD code super bill will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the ICD code */
icd_code_id?: (Scalars['String'] | null),
/** The ID of the ICD code super bill */
id?: (Scalars['ID'] | null)}


/** User immunization */
export interface ImmunizationGenqlSelection{
    /** Additional notes */
    additional_notes?: boolean | number
    /** The cvx_code */
    cvx_code?: boolean | number
    /** The unique identifier of the type */
    id?: boolean | number
    /** Time when the immunization was received */
    received_at?: boolean | number
    /** The immunization status */
    status?: boolean | number
    /** The identifier of the user */
    user_id?: boolean | number
    /** The description of the code */
    vaccine_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An implantable device */
export interface ImplantableDeviceGenqlSelection{
    /** Brand name of the implantable device. */
    brand_name?: boolean | number
    /** Name of the company that manufactures the implantable device. */
    company_name?: boolean | number
    /** A string representation of the date/time when the device record was created in the database. */
    created_at?: boolean | number
    /** A unique identifier assigned to the device. */
    device_id?: boolean | number
    /** The agency that issued the device identifier. */
    device_id_issuing_agency?: boolean | number
    /** Dun & Bradstreet number (DUNS number) is a unique nine-digit identifier for businesses. */
    duns_number?: boolean | number
    /** Global Medical Device Nomenclature (GMDN) terms, a system of internationally agreed generic descriptors used to identify all medical device products. */
    gmdn_terms?: boolean | number
    /** The unique identifier of the implantable device type */
    id?: boolean | number
    /** Whether the device contains natural rubber latex or not. */
    labeled_contains_nrl?: boolean | number
    /** Status of the device's safety in an MRI environment (e.g., safe, conditional, unsafe). */
    mri_safety_status?: boolean | number
    /** Key of the device's public record. */
    public_device_record_key?: boolean | number
    /** Date when the public version of the device record was created or updated. */
    public_version_date?: boolean | number
    /** Version number of the public device record. */
    public_version_number?: boolean | number
    /** Status of the public version of the device record (e.g., active, retired). */
    public_version_status?: boolean | number
    /** A string representation of the date/time when the device record was last updated in the database. */
    updated_at?: boolean | number
    /** Version or model number of the device. */
    version_model_number?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Implantable Device User  */
export interface ImplantableDeviceUserGenqlSelection{
    /** A boolean value representing if the Implantable Device is currently active. */
    active?: boolean | number
    /** Unique identifier for the Implantable Device User connection record. */
    id?: boolean | number
    /** Details of the Implantable Device. */
    implantable_device?: ImplantableDeviceGenqlSelection
    /** Unique identifier for the associated Implantable Device record. */
    implantable_device_id?: boolean | number
    /** User provided name for the Implantable Device. */
    name?: boolean | number
    /** Recorded UDI for this associated Implantable Device User record. */
    udi?: boolean | number
    /** User associated with the Implantable Device, including all User details. */
    user?: UserGenqlSelection
    /** Unique identifier for the associated User record. */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing info about the import data request */
export interface ImportDataRequestGenqlSelection{
    /** The file type of import */
    clients_template?: boolean | number
    /** The date and time that the import data request was created */
    created_at?: boolean | number
    /** The file name */
    display_name?: boolean | number
    /** The file extension */
    extension?: boolean | number
    /** The optional comment of import */
    optional_comment?: boolean | number
    /** The request type */
    request_type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an individual client note */
export interface IndividualClientNoteInput {
/** The content of the individual client note */
content?: (Scalars['String'] | null),
/** The ID of the individual client note */
id?: (Scalars['ID'] | null),
/** The client's attendance status. This gets applied to the AppointmentInclusion object */
attended?: (Scalars['Boolean'] | null),
/** Diagnoses connected to the individual client attendance */
icd_codes_individual_client_notes_attributes?: ((IcdCodesIndividualClientNoteInput | null)[] | null),
/** The datetime (ISO 8601) that the attendee joined the appointment */
join_time?: (Scalars['String'] | null),
/** The datetime (ISO 8601) that the attendee left the appointment */
leave_time?: (Scalars['String'] | null),
/** The ID of the user who created the individual client note */
user_id?: (Scalars['ID'] | null)}


/** An object containing an individual note for certain patient associated with group charting note */
export interface IndividualClientTypeGenqlSelection{
    /** The ID of related appointment_inclusion */
    appointment_inclusion_id?: boolean | number
    /** True if user has attended the appointment */
    attended?: boolean | number
    /** The content of the note */
    content?: boolean | number
    /** Diagnoses connected to the individual client attendance */
    icd_codes_individual_client_notes?: IcdCodesIndividualClientNoteGenqlSelection
    /** The unique identifier of the note */
    id?: boolean | number
    /** The datetime that the attendee joined the appointment (comes from the related appointment inclusion) */
    join_time?: boolean | number
    /** The datetime that the attendee left the appointment (comes from the related appointment inclusion) */
    leave_time?: boolean | number
    /** The time of the last update */
    updated_at?: boolean | number
    /** Associated patient */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An object containing information about the chart for an insurance authorization type */
export interface InsuranceAuthorizationChartTypeGenqlSelection{
    /** The title of the earliest date value of the chart */
    earliest_date_title?: boolean | number
    /** The value of the earliest date value of the chart */
    earliest_date_value?: boolean | number
    /** The title of the latest date value of the chart */
    latest_date_title?: boolean | number
    /** The value of the latest date value of the chart */
    latest_date_value?: boolean | number
    /** The percentage width of the left section of the chart */
    left_section_width?: boolean | number
    /** The title of the middle date value of the chart */
    middle_date_title?: boolean | number
    /** The value of the middle date value of the chart */
    middle_date_value?: boolean | number
    /** The percentage width of the right section of the chart */
    right_section_width?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an insurance authorization */
export interface InsuranceAuthorizationInput {
/** The authorization number */
authorization_number?: (Scalars['String'] | null),
/** The end date of the authorization */
end_on?: (Scalars['String'] | null),
/** The ID of the insurance authorization */
id?: (Scalars['ID'] | null),
/** The start date of the authorization */
start_on?: (Scalars['String'] | null),
/** The unit type */
unit_type?: (Scalars['String'] | null),
/** The number of authorized units */
units_authorized?: (Scalars['String'] | null),
/** The unit limit per visit */
units_limit_per_visit?: (Scalars['String'] | null),
/** The number of used units */
units_used?: (Scalars['String'] | null),
/** The number of authorized visits */
visits_authorized?: (Scalars['String'] | null),
/** The number of used visits */
visits_used?: (Scalars['String'] | null)}


/** An insurance authorization */
export interface InsuranceAuthorizationTypeGenqlSelection{
    /** The authorization number */
    authorization_number?: boolean | number
    /** Chart info for the insurance authorization */
    chart_info?: InsuranceAuthorizationChartTypeGenqlSelection
    /** The day that visits authorized by the insurance company have no effect */
    end_on?: boolean | number
    /** The unique identifier of the authorization */
    id?: boolean | number
    /** The day that visits authorized by the insurance company take effect */
    start_on?: boolean | number
    /** The amount of units left */
    unit_type?: boolean | number
    /** The amount of units authorized by the insurance company */
    units_authorized?: boolean | number
    /** The amount of units left */
    units_left?: boolean | number
    /** Most units/hours allowed per visit */
    units_limit_per_visit?: boolean | number
    /** The amount of units used by the client */
    units_used?: boolean | number
    /** Most recent date authorization was updated */
    updated_at?: boolean | number
    /** The ID of the user for whom the authorization was created */
    user_id?: boolean | number
    /** The amount of units authorized by the insurance company */
    visits_authorized?: boolean | number
    /** The amount of units left */
    visits_left?: boolean | number
    /** The amount of units used by the client */
    visits_used?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An Insurance Plan */
export interface InsurancePlanGenqlSelection{
    /** The Eligibility Payer ID for eligibility requests in Change that this maps to */
    change_healthcare_eligibility_payer_id?: boolean | number
    /** The Payer ID for claims requests in Change that this maps to */
    change_healthcare_payer_id?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Location of the first policy associated to the current user and insurance plan */
    default_payer_location?: (LocationGenqlSelection & { __args?: {
    /** Array of plan ids */
    ids?: (Scalars['String'] | null)} })
    /** The unique identifier of the plan */
    id?: boolean | number
    /** Insurance Plan marked as accepted */
    is_accepted?: { __args: {
    /** The known value of is_accepted (from the query argument) */
    known_value?: (Scalars['Boolean'] | null)} } | boolean | number
    /** A combined string to use for labels */
    name_and_id?: boolean | number
    /** The Payer ID of the insurance plan */
    payer_id?: boolean | number
    /** The name of the insurance plan */
    payer_name?: boolean | number
    /**
     * @deprecated Insurance Plans do not have an associated user
     * Owner of this insurance plan
     */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an insurance plan */
export interface InsurancePlanInput {
/** The ID of the insurance plan */
id?: (Scalars['String'] | null),
/** The name of the payer */
payer_name?: (Scalars['String'] | null)}


/** The intake flow item */
export interface IntakeFlowItemGenqlSelection{
    /** Attached object */
    attached_object_edit_url?: boolean | number
    /** The completed onboarding item for the given user id (from args) */
    completed_onboarding_item?: CompletedOnboardingItemGenqlSelection
    /** The form to fill out */
    custom_module_form?: CustomModuleFormGenqlSelection
    /** The relevant date to show */
    date_to_show?: boolean | number
    /** The display name */
    display_name?: boolean | number
    /** The id of the filled form that completes the request. Only present if form_type is RequestedForm */
    form_answer_group_id?: boolean | number
    /** Form type */
    form_type?: boolean | number
    /** The unique idenitifier of the item */
    id?: boolean | number
    /** Return the ID of the incomplete form */
    incomplete_form_id?: boolean | number
    /** The type of item */
    item_type?: boolean | number
    /** The onboarding item that was completed */
    onboarding_item?: OnboardingItemGenqlSelection
    /** Recurring form related to the request */
    recurring_form?: RecurringFormGenqlSelection
    /** The intake flow item request details */
    request_info?: IntakeFlowItemRequestInfoGenqlSelection
    /** Skipped */
    skipped?: boolean | number
    /** Form status */
    status?: boolean | number
    /** Tab type */
    tab_type?: boolean | number
    /** View url */
    view_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The intake flow item request details */
export interface IntakeFlowItemRequestInfoGenqlSelection{
    /** Completion date of the form */
    complete_date?: boolean | number
    /** User who completed the form */
    completed_by?: UserGenqlSelection
    /** Info how client received the form */
    details?: boolean | number
    /** Requested / Auto-Requested */
    label?: boolean | number
    /** Request date of the form */
    request_date?: boolean | number
    /** User who requested the form */
    requested_by?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Intake Flow */
export interface IntakeFlowTypeGenqlSelection{
    /** All forms in the intake flow */
    all_forms?: IntakeFlowItemGenqlSelection
    /** Completed and skipped forms in the intake flow */
    completed_skipped?: IntakeFlowItemGenqlSelection
    /** Forms in the intake flow */
    forms?: IntakeFlowItemGenqlSelection
    /** Intake flows */
    intake_flows?: IntakeFlowItemGenqlSelection
    /** Not started and incomplete forms in the intake flow */
    not_started_incomplete?: IntakeFlowItemGenqlSelection
    /** Requested forms in the intake flow */
    requested?: IntakeFlowItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Integration Category */
export interface IntegrationCategoryTypeGenqlSelection{
    /** The description of the integration category */
    description?: boolean | number
    /** The unique identifier of the category */
    id?: boolean | number
    /** The name of the integration category */
    name?: boolean | number
    /** The list of category options */
    options?: IntegrationOptionTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The option of an integration */
export interface IntegrationOptionTypeGenqlSelection{
    /** The name of the status when the option is disabled */
    disabled_status_name?: boolean | number
    /** The label of the button to enable the option */
    enable_button_label?: boolean | number
    /** The url of the button to enable the option */
    enable_button_url?: boolean | number
    /** The name of the status when the option is enabled */
    enabled_status_name?: boolean | number
    /** List of connected members */
    erx_connected_members?: boolean | number
    /** The unique identifier of the option */
    id?: boolean | number
    /** The unique identifier of the category the option belongs to */
    integration_category_id?: boolean | number
    /** Whether the option is active */
    is_active?: boolean | number
    /** Whether the option is pending */
    is_pending?: boolean | number
    /** The long description of the option */
    long_description?: boolean | number
    /** The name of the option */
    name?: boolean | number
    /** The short description of the option */
    short_description?: boolean | number
    /** The type of the option */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Options for lab filters */
export interface LabFiltersDataTypeGenqlSelection{
    /** The list of the data clients */
    clients?: UserGenqlSelection
    /** The list of the labs */
    labs?: boolean | number
    /** The list of the normalized statuses */
    normalized_statuses?: boolean | number
    /** The list of the data providers */
    providers?: UserGenqlSelection
    /** The list of the statuses */
    statuses?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A lab observation request */
export interface LabObservationRequestGenqlSelection{
    /** The unique identifier of the request */
    id?: boolean | number
    /** The name of the lab analyte */
    lab_analyte?: boolean | number
    /** Lab observation results for lab request */
    lab_observation_results?: LabObservationResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a client portal setting */
export interface LabObservationRequestInput {
/** The substance being measured and test code. e.g 005009^CBC With Differential/Platelet^RN */
lab_analyte?: (Scalars['String'] | null),
/** the analyte result */
lab_observation_result?: (LabObservationResultInput | null)}


/** A lab observation result */
export interface LabObservationResultGenqlSelection{
    /** The flag of abnormality in the observation */
    abnormal_flag?: boolean | number
    /** The unique identifier of the result */
    id?: boolean | number
    /** The notes of the lab observation */
    notes?: boolean | number
    /** The qualitative result of the lab observation */
    qualitative_result?: boolean | number
    /** The quantitative result of the lab observation */
    quantitative_result?: boolean | number
    /** The reference range of the lab observation */
    reference_range?: boolean | number
    /** The units of the lab observation measurement */
    units?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a client portal setting */
export interface LabObservationResultInput {
/** The units of the measurement e.g "x10E3/uL^x10E3/uL" */
units?: (Scalars['String'] | null),
/** The reference range e.g "3.4-10.8" */
reference_range?: (Scalars['String'] | null),
/** The qualitivate result e.g "005025^WBC^L^6690-2^Leukocytes^LN" */
qualitative_result?: (Scalars['String'] | null),
/** The quantitative result e.g "9.6" */
quantitative_result?: (Scalars['String'] | null),
/** Extra description or context on the result */
notes?: (Scalars['String'] | null),
/** A flag on any abnormality (e.g L for low or H for high) */
abnormal_flag?: (Scalars['String'] | null)}


/** Lab Option */
export interface LabOptionGenqlSelection{
    /** The unique identifier of the option */
    id?: boolean | number
    /** Name of the option */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Lab Order Object */
export interface LabOrderGenqlSelection{
    /** abnormality in results */
    abnormal?: boolean | number
    /** Confirmation Code of Scheduled Appointment */
    appt_confirmation_code?: boolean | number
    /** Date Lab Order was Placed */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Get result document */
    document?: DocumentGenqlSelection
    /** The unique identifier of the order */
    id?: boolean | number
    /** Order integration (lab_testing_api, evexia, rupa) */
    integration?: boolean | number
    /** Name of the lab */
    lab?: boolean | number
    /** Name of the lab */
    lab_company?: boolean | number
    /** Lab options included in lab order */
    lab_options?: LabOptionGenqlSelection
    /** Lab results */
    lab_results?: LabResultGenqlSelection
    /** Order ID */
    lta_id?: boolean | number
    /** The normalized status of the order */
    normalized_status?: boolean | number
    /** Provider for lab order */
    orderer?: UserGenqlSelection
    /** Patient for lab order */
    patient?: UserGenqlSelection
    /** Get most recent pdf document */
    pdf_document?: DocumentGenqlSelection
    /** Order ID on the rupa health */
    rupa_order_id?: boolean | number
    /** Show lab result with PDF document */
    show_pdf_messages?: boolean | number
    /** Status of the Lab Order */
    status?: boolean | number
    /** Date of Test */
    test_date?: boolean | number
    /** Date Lab Order was updated */
    updated_at?: boolean | number
    /** Link to view the rupa order */
    view_rupa_order_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Lab Result */
export interface LabResultGenqlSelection{
    /** Document for lab result */
    document?: DocumentGenqlSelection
    /** The unique identifier of the result */
    id?: boolean | number
    /** Lab observation requests for lab result */
    lab_observation_requests?: LabObservationRequestGenqlSelection
    /** The ID of the corresponding lab order */
    lab_order_id?: boolean | number
    /** Ordering Physician for lab result */
    ordering_physician?: UserGenqlSelection
    /** Patient for lab result */
    patient?: UserGenqlSelection
    /** The type of the lab result */
    result_type?: boolean | number
    /** The status of the result */
    status_flag?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A location */
export interface LocationGenqlSelection{
    /** The city of the address */
    city?: boolean | number
    /** The Country Code of the address */
    country?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The unique identifier of the location */
    id?: boolean | number
    /** The first line of the address */
    line1?: boolean | number
    /** The second line of the address */
    line2?: boolean | number
    /** The name of the location */
    name?: boolean | number
    /** The NPI of the location */
    npi?: boolean | number
    /** The Other ID of the location */
    other_id?: boolean | number
    /** The Other ID Qualification of the location */
    other_id_qual?: boolean | number
    /** The place of service associated with this location */
    place_of_service?: PlaceOfServiceGenqlSelection
    /** The place of service id of the location */
    place_of_service_id?: boolean | number
    /** The state of the address (Uses the 2 letter abbreviation if in US) */
    state?: boolean | number
    /** The location condensed to a single line */
    to_oneline?: boolean | number
    /** Owner of this location */
    user?: UserGenqlSelection
    /** The ID of the user */
    user_id?: boolean | number
    /** The zip/postal code of the address */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a CMS 1500 location */
export interface LocationInput {
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The graphql_name of the location */
name?: (Scalars['String'] | null),
/** The NPI of the location */
npi?: (Scalars['String'] | null),
/** The other ID of the location */
other_id?: (Scalars['String'] | null),
/** The other ID qual of the location */
other_id_qual?: (Scalars['String'] | null),
/** The place of service ID of the location */
place_of_service_id?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The ID of user who owns the location */
user_id?: (Scalars['String'] | null),
/** The zip code */
zip?: (Scalars['String'] | null)}


/** Payload for a location */
export interface LocationInputs {
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The graphql_name of the location */
name?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The zip code */
zip?: (Scalars['String'] | null)}


/** Location resource */
export interface LocationResourceTypeGenqlSelection{
    /** The resource ID */
    resourceId?: boolean | number
    /** The resource title */
    resourceTitle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of MaskAccount */
export interface MaskAccountInput {email?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),namespace?: (Scalars['String'] | null)}


/** Autogenerated return type of MaskAccount. */
export interface MaskAccountPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success?: SuccessGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A meal that a user has created */
export interface MealGenqlSelection{
    /** Pagination cursor */
    cursor?: boolean | number
    /** The food items that are part of the meal */
    food_items?: FoodItemGenqlSelection
    /** The unique identifier of the meal */
    id?: boolean | number
    /** The name of the meal */
    name?: boolean | number
    /** The user that owns the meal */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A meal plan */
export interface MealPlanGenqlSelection{
    /** If true, meal plan is active (most recent) on client's Living Plate account */
    active?: boolean | number
    /** Date meal plan was added to client's Living Plate account */
    date_added?: boolean | number
    /** The unique identifier of the plan */
    id?: boolean | number
    /** name of the meal plan on Living Plate */
    name?: boolean | number
    /** If one exists, name of offering that was purchased that added meal plan to client's Living Plate account */
    offering_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Medication query result */
export interface MedicationOptionTypeGenqlSelection{
    /** The dosage options of the medication option */
    dosage_options?: DosageTypeGenqlSelection
    /** The dosages of the medication option */
    dosages?: boolean | number
    /** The unique identifier of the medication option */
    id?: boolean | number
    /** The monograph of the medication option */
    monograph?: { __args: {
    /** The format of the monograph */
    format?: (MonographFormat | null)} } | boolean | number
    /** The name of the medication option */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Medication belonging to client */
export interface MedicationTypeGenqlSelection{
    /** Indicates if medication is still active (medication can also be inactive if current date doesn't fall between start and end date) */
    active?: boolean | number
    /** CCDA code for this medication */
    code?: boolean | number
    /** Comments entered by provider */
    comment?: boolean | number
    /** The time the medication was created */
    created_at?: boolean | number
    /** Directions to use medication entered by provider */
    directions?: boolean | number
    /** Dosage of medication entered by provider */
    dosage?: boolean | number
    /** last date patient should be able to use medication */
    end_date?: boolean | number
    /** Frequency of this medication */
    frequency?: boolean | number
    /** The unique identifier of the medication */
    id?: boolean | number
    /** If the medication is synchronized with an external system (e.g., an E-Rx system) */
    mirrored?: boolean | number
    /** Name of medication */
    name?: boolean | number
    /** When true, this object must be consolidated as part of a CCDA Ingest */
    requires_consolidation?: boolean | number
    /** The way this medication is administered */
    route?: boolean | number
    /** First active date of medication */
    start_date?: boolean | number
    /** The last time the medication was updated */
    updated_at?: boolean | number
    /** User ID of the client this medication belongs to */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A data point for a metric */
export interface MetricDataPointTypeGenqlSelection{
    /** The time the data point was created */
    created_at?: boolean | number
    /** The entry id of the data point */
    entry_id?: boolean | number
    /** The value of the data point */
    flex_value?: boolean | number
    /**
     * @deprecated Use flex value, which supports both string and number values
     * The value of the data point
     */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Metric Graph data */
export interface MetricGraphDataTypeGenqlSelection{
    /** Category of the metric, e.g. "Weight" or "Steps" */
    category?: boolean | number
    /** Label for the category, e.g. "Weight" or "Steps" */
    category_label?: boolean | number
    /** Data points for the graph */
    data_points?: MetricDataPointTypeGenqlSelection
    /** False if the category has no entry */
    has_entry?: boolean | number
    /** Maximum value of the data points */
    max?: boolean | number
    /** Minimum value of the data points */
    min?: boolean | number
    /** Type of xtick, e.g. "date" or "time" */
    xtick_type?: boolean | number
    /** Type of ytick, e.g. "date" or "time" */
    ytick_type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Monthly billing items data */
export interface MonthlyBillingItemsDataTypeGenqlSelection{
    /** Amount of monthly billing items */
    amount?: boolean | number
    /** Month the data relates to */
    month?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Multi line metric graph data type */
export interface MultiLineMetricGraphDataTypeGenqlSelection{
    /** Category name */
    category?: boolean | number
    /** Category label */
    category_label?: boolean | number
    /** False if the category has no entry */
    has_entry?: boolean | number
    /** Metric graph data */
    metric_graph_datas?: MetricGraphDataTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The mutation root of this schema. See available mutations. */
export interface MutationGenqlSelection{
    /** Add Change Health Submitter to Organization */
    addClaimSubmitter?: (AddClaimSubmitterPayloadGenqlSelection & { __args?: {
    /** Parameters for AddClaimSubmitter */
    input?: (AddClaimSubmitterInput | null)} })
    /** Add CPT Code and Description to the Database */
    addCptCode?: (AddCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for AddCptCode */
    input?: (AddCptCodeInput | null)} })
    /** Create Dosespot E-Rx for provider account */
    addDosespot?: (createDosespotPayloadGenqlSelection & { __args?: {
    /** Parameters for createDosespot */
    input?: (createDosespotInput | null)} })
    /** Add ICD Code and Description to the Database */
    addIcdCode?: (AddIcdCodePayloadGenqlSelection & { __args?: {
    /** Parameters for AddIcdCode */
    input?: (AddIcdCodeInput | null)} })
    /** Add Living Plate Integration to provider */
    addLivingPlate?: (addLivingPlatePayloadGenqlSelection & { __args?: {
    /** Parameters for addLivingPlate */
    input?: (addLivingPlateInput | null)} })
    /** Add a member to the Zus organization */
    addZusUser?: (addZusMemberPayloadGenqlSelection & { __args?: {
    /** Parameters for addZusMember */
    input?: (addZusMemberInput | null)} })
    /** Apply selected tags on a specific user */
    bulkApply?: (bulkApplyPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkApply */
    input?: (bulkApplyInput | null)} })
    /** Apply care plan to the passed array of clients and/or groups */
    bulkApplyCarePlanTemplate?: (bulkApplyCarePlanTemplatePayloadGenqlSelection & { __args?: {
    /** Parameters for bulkApplyCarePlanTemplate */
    input?: (bulkApplyCarePlanTemplateInput | null)} })
    /** bulk create Availability */
    bulkCreateAvailability?: (bulkCreateAvailabilityPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkCreateAvailability */
    input?: (bulkCreateAvailabilityInput | null)} })
    /** creates bulk Entries (intended for apple health only for the time being) */
    bulkCreateEntries?: (bulkCreateEntriesPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkCreateEntries */
    input?: (bulkCreateEntriesInput | null)} })
    /** Delete tasks */
    bulkDeleteTasks?: (bulkDeleteTasksPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkDeleteTasks */
    input?: (bulkDeleteTasksInput | null)} })
    /** Update unseen card issues on a provider */
    bulkUpdateCardIssues?: (bulkUpdateCardIssuesPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkUpdateCardIssues */
    input?: (bulkUpdateCardIssuesInput | null)} })
    /** Trigger notification email or care plan activation for each user related to the selected care plans. In case of activation, a group care plan will be activated for each user of user_group(unless a user already have an active care plan). If you want to activate selected care plan for only one user(user of group) use ToggleCarePlanStatusForSpecificUser mutation */
    bulkUpdateCarePlanUsers?: (bulkUpdateCarePlanUsersPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkUpdateCarePlanUsers */
    input?: (bulkUpdateCarePlanUsersInput | null)} })
    /** Update multiple clients at once. Will change user group for multiple clients if user_group_id passed, otherwise clients will be archived */
    bulkUpdateClients?: (bulkUpdateClientsPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkUpdateClients */
    input?: (bulkUpdateClientsInput | null)} })
    /** disabled devices in video chat */
    changeDevicesAvailability?: (ChangeDevicesAvailabilityPayloadGenqlSelection & { __args?: {
    /** Parameters for ChangeDevicesAvailability */
    input?: (ChangeDevicesAvailabilityInput | null)} })
    /** Delete unreconciled allergies/problems/medications */
    clearUnreconciledObjects?: (clearUnreconciledObjectsPayloadGenqlSelection & { __args?: {
    /** Parameters for clearUnreconciledObjects */
    input?: (clearUnreconciledObjectsInput | null)} })
    /** Complete a CCDA Reconciliation, based on user choice */
    completeCcdaReconciliation?: (CompleteCcdaReconciliationPayloadGenqlSelection & { __args?: {
    /** Parameters for CompleteCcdaReconciliation */
    input?: (CompleteCcdaReconciliationInput | null)} })
    /** Complete the checkout for booking or buying */
    completeCheckout?: (completeCheckoutPayloadGenqlSelection & { __args?: {
    /** Parameters for completeCheckout */
    input?: (completeCheckoutInput | null)} })
    /** Create CompletedCourseItem for related document */
    completeCourseDocument?: (completeCourseDocumentPayloadGenqlSelection & { __args?: {
    /** Parameters for completeCourseDocument */
    input?: (completeCourseDocumentInput | null)} })
    /** Attach Appointment to Charting Note */
    connectApptToCharting?: (ConnectApptToChartingPayloadGenqlSelection & { __args?: {
    /** Parameters for ConnectApptToCharting */
    input?: (ConnectApptToChartingInput | null)} })
    /** Generating forms */
    convertFromJsonToForm?: (ConvertFromJsonToFormPayloadGenqlSelection & { __args?: {
    /** Parameters for ConvertFromJsonToForm */
    input?: (ConvertFromJsonToFormInput | null)} })
    /** Convert to Metric */
    convertToMetric?: (ConvertToMetricPayloadGenqlSelection & { __args?: {
    /** Parameters for ConvertToMetric */
    input?: (ConvertToMetricInput | null)} })
    /** Copy a Course */
    copyCourse?: (copyCoursePayloadGenqlSelection & { __args?: {
    /** Parameters for copyCourse */
    input?: (copyCourseInput | null)} })
    /** Copy Custom Module */
    copyCustomModule?: (copyCustomModulePayloadGenqlSelection & { __args?: {
    /** Parameters for copyCustomModule */
    input?: (copyCustomModuleInput | null)} })
    /** copy Custom Module Form */
    copyCustomModuleForm?: (copyCustomModuleFormPayloadGenqlSelection & { __args?: {
    /** Parameters for copyCustomModuleForm */
    input?: (copyCustomModuleFormInput | null)} })
    /** Copy Forms */
    copyForms?: (CopyFormsPayloadGenqlSelection & { __args?: {
    /** Parameters for CopyForms */
    input?: (CopyFormsInput | null)} })
    /** Copy an Offering */
    copyOffering?: (copyOfferingPayloadGenqlSelection & { __args?: {
    /** Parameters for copyOffering */
    input?: (copyOfferingInput | null)} })
    /** Create Accepted Insurance Plans */
    createAcceptedInsurancePlan?: (createAcceptedInsurancePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for createAcceptedInsurancePlan */
    input?: (createAcceptedInsurancePlanInput | null)} })
    /** Create a new addendum for the selected charting note */
    createAddendum?: (createAddendumPayloadGenqlSelection & { __args?: {
    /** Parameters for createAddendum */
    input?: (createAddendumInput | null)} })
    /** Create AllergySensitivity */
    createAllergySensitivity?: (createAllergySensitivityPayloadGenqlSelection & { __args?: {
    /** Parameters for createAllergySensitivity */
    input?: (createAllergySensitivityInput | null)} })
    /** Create Announcement */
    createAnnouncement?: (createAnnouncementPayloadGenqlSelection & { __args?: {
    /** Parameters for createAnnouncement */
    input?: (createAnnouncementInput | null)} })
    /** create API Key. This capability needs to be turned on for your account first */
    createApiKey?: (createApiKeyPayloadGenqlSelection & { __args?: {
    /** Parameters for createApiKey */
    input?: (createApiKeyInput | null)} })
    /** Create AppleHealth */
    createAppleHealth?: (createAppleHealthPayloadGenqlSelection & { __args?: {
    /** Parameters for createAppleHealth */
    input?: (createAppleHealthInput | null)} })
    /** create appointment mutation for providers. Clients use the completeCheckout mutation */
    createAppointment?: (createAppointmentPayloadGenqlSelection & { __args?: {
    /** Parameters for createAppointment */
    input?: (createAppointmentInput | null)} })
    /** create an Appointment Setting */
    createAppointmentSetting?: (createAppointmentSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for createAppointmentSetting */
    input?: (createAppointmentSettingInput | null)} })
    /** create Appointment Type */
    createAppointmentType?: (createAppointmentTypePayloadGenqlSelection & { __args?: {
    /** Parameters for createAppointmentType */
    input?: (createAppointmentTypeInput | null)} })
    /** Create an Appointment Type CPT Code Object */
    createAppointmentTypeCptCode?: (createAppointmentTypeCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for createAppointmentTypeCptCode */
    input?: (createAppointmentTypeCptCodeInput | null)} })
    /** Create auto task generator */
    createAutoTaskGenerator?: (createAutoTaskGeneratorPayloadGenqlSelection & { __args?: {
    /** Parameters for createAutoTaskGenerator */
    input?: (createAutoTaskGeneratorInput | null)} })
    /** create automated insurance billing setting */
    createAutomatedInsuranceBillingSetting?: (createAutomatedInsuranceBillingSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for createAutomatedInsuranceBillingSetting */
    input?: (createAutomatedInsuranceBillingSettingInput | null)} })
    /** Create availability */
    createAvailability?: (createAvailabilityPayloadGenqlSelection & { __args?: {
    /** Parameters for createAvailability */
    input?: (createAvailabilityInput | null)} })
    /** create billing item */
    createBillingItem?: (createBillingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for createBillingItem */
    input?: (createBillingItemInput | null)} })
    /** create Brand */
    createBrand?: (createBrandPayloadGenqlSelection & { __args?: {
    /** Parameters for createBrand */
    input?: (createBrandInput | null)} })
    /** create Campaign */
    createCampaign?: (createCampaignPayloadGenqlSelection & { __args?: {
    /** Parameters for createCampaign */
    input?: (createCampaignInput | null)} })
    /** Create and return a care plan */
    createCarePlan?: (createCarePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for createCarePlan */
    input?: (createCarePlanInput | null)} })
    /** Create Change Health Labs for provider account */
    createChangeAccount?: (CreateChangeAccountPayloadGenqlSelection & { __args?: {
    /** Parameters for CreateChangeAccount */
    input?: (CreateChangeAccountInput | null)} })
    /** creates ChangeHealth patient record */
    createChangeHealthPatient?: (CreateChangeHealthPatientPayloadGenqlSelection & { __args?: {
    /** Parameters for CreateChangeHealthPatient */
    input?: (CreateChangeHealthPatientInput | null)} })
    /** create an Chat Setting */
    createChatSetting?: (createChatSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for createChatSetting */
    input?: (createChatSettingInput | null)} })
    /** Create Change Health Submitter Object */
    createClaimSubmitter?: (CreateClaimSubmitterPayloadGenqlSelection & { __args?: {
    /** Parameters for CreateClaimSubmitter */
    input?: (CreateClaimSubmitterInput | null)} })
    /** Create a Client */
    createClient?: (createClientPayloadGenqlSelection & { __args?: {
    /** Parameters for createClient */
    input?: (createClientInput | null)} })
    /** create a client account via a form (e.g a lead capture form) or match to an existing client by name and email. This endpoint is meant to be called unauthenticated. If you want the client to buy or book something at the same time, use the CompleteCheckout mutation. */
    createClientViaForm?: (CreateClientViaFormPayloadGenqlSelection & { __args?: {
    /** Parameters for CreateClientViaForm */
    input?: (CreateClientViaFormInput | null)} })
    /** create CMS1500 */
    createCms1500?: (createCms1500PayloadGenqlSelection & { __args?: {
    /** Parameters for createCms1500 */
    input?: (createCms1500Input | null)} })
    /** Create a CognitiveStatus Object */
    createCognitiveStatus?: (createCognitiveStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for createCognitiveStatus */
    input?: (createCognitiveStatusInput | null)} })
    /** create Comment */
    createComment?: (createCommentPayloadGenqlSelection & { __args?: {
    /** Parameters for createComment */
    input?: (createCommentInput | null)} })
    /** create CompletedCourseItem */
    createCompletedCourseItem?: (createCompletedCourseItemPayloadGenqlSelection & { __args?: {
    /** Parameters for createCompletedCourseItem */
    input?: (createCompletedCourseItemInput | null)} })
    /** create CompletedOnboardingItem */
    createCompletedOnboardingItem?: (createCompletedOnboardingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for createCompletedOnboardingItem */
    input?: (createCompletedOnboardingItemInput | null)} })
    /** Creates a Contact */
    createContact?: (createContactPayloadGenqlSelection & { __args?: {
    /** Parameters for createContact */
    input?: (createContactInput | null)} })
    /** create Conversation */
    createConversation?: (createConversationPayloadGenqlSelection & { __args?: {
    /** Parameters for createConversation */
    input?: (createConversationInput | null)} })
    /** create Course */
    createCourse?: (createCoursePayloadGenqlSelection & { __args?: {
    /** Parameters for createCourse */
    input?: (createCourseInput | null)} })
    /** create CourseBenefit */
    createCourseBenefit?: (createCourseBenefitPayloadGenqlSelection & { __args?: {
    /** Parameters for createCourseBenefit */
    input?: (createCourseBenefitInput | null)} })
    /** create CourseItem */
    createCourseItem?: (createCourseItemPayloadGenqlSelection & { __args?: {
    /** Parameters for createCourseItem */
    input?: (createCourseItemInput | null)} })
    /** create custom email */
    createCustomEmail?: (createCustomEmailPayloadGenqlSelection & { __args?: {
    /** Parameters for createCustomEmail */
    input?: (createCustomEmailInput | null)} })
    /** Create a Custom Food */
    createCustomFood?: (createCustomFoodPayloadGenqlSelection & { __args?: {
    /** Parameters for createCustomFood */
    input?: (createCustomFoodInput | null)} })
    /** create Custom Module */
    createCustomModule?: (createCustomModulePayloadGenqlSelection & { __args?: {
    /** Parameters for createCustomModule */
    input?: (createCustomModuleInput | null)} })
    /** create Custom Module Form */
    createCustomModuleForm?: (createCustomModuleFormPayloadGenqlSelection & { __args?: {
    /** Parameters for createCustomModuleForm */
    input?: (createCustomModuleFormInput | null)} })
    /** create Document */
    createDocument?: (createDocumentPayloadGenqlSelection & { __args?: {
    /** Parameters for createDocument */
    input?: (createDocumentInput | null)} })
    /** Create dosespot clinician */
    createDosespotClinician?: (createDosespotClinicianPayloadGenqlSelection & { __args?: {
    /** Parameters for createDosespotClinician */
    input?: (createDosespotClinicianInput | null)} })
    /** create Draft */
    createDraft?: (createDraftPayloadGenqlSelection & { __args?: {
    /** Parameters for createDraft */
    input?: (createDraftInput | null)} })
    /** create ebook */
    createEbook?: (createEbookPayloadGenqlSelection & { __args?: {
    /** Parameters for createEbook */
    input?: (createEbookInput | null)} })
    /** creates a new Entry */
    createEntry?: (createEntryPayloadGenqlSelection & { __args?: {
    /** Parameters for createEntry */
    input?: (createEntryInput | null)} })
    /** Create an External Calendar */
    createExternalCalendar?: (createExternalCalendarPayloadGenqlSelection & { __args?: {
    /** Parameters for createExternalCalendar */
    input?: (createExternalCalendarInput | null)} })
    /** Create Family History */
    createFamilyHistory?: (createFamilyHistoryPayloadGenqlSelection & { __args?: {
    /** Parameters for createFamilyHistory */
    input?: (createFamilyHistoryInput | null)} })
    /** create Fax Acct Info */
    createFaxAcctInfo?: (createFaxAcctInfoPayloadGenqlSelection & { __args?: {
    /** Parameters for createFaxAcctInfo */
    input?: (createFaxAcctInfoInput | null)} })
    /** Create and return a fax line request */
    createFaxLineRequest?: (createFaxLineRequestPayloadGenqlSelection & { __args?: {
    /** Parameters for createFaxLineRequest */
    input?: (createFaxLineRequestInput | null)} })
    /** Create a FeatureToggle and Return FeatureToggle */
    createFeatureToggle?: (createFeatureTogglePayloadGenqlSelection & { __args?: {
    /** Parameters for createFeatureToggle */
    input?: (createFeatureToggleInput | null)} })
    /** Create Fitbit */
    createFitbit?: (createFitbitPayloadGenqlSelection & { __args?: {
    /** Parameters for createFitbit */
    input?: (createFitbitInput | null)} })
    /** create Folder */
    createFolder?: (createFolderPayloadGenqlSelection & { __args?: {
    /** Parameters for createFolder */
    input?: (createFolderInput | null)} })
    /** create FormAnswerGroup */
    createFormAnswerGroup?: (createFormAnswerGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for createFormAnswerGroup */
    input?: (createFormAnswerGroupInput | null)} })
    /** create FormAnswerGroupSigning */
    createFormAnswerGroupSigning?: (createFormAnswerGroupSigningPayloadGenqlSelection & { __args?: {
    /** Parameters for createFormAnswerGroupSigning */
    input?: (createFormAnswerGroupSigningInput | null)} })
    /** Create a Fullscript practitioner account using the Fullscript API */
    createFullscriptPractitioner?: (createFullscriptPractitionerPayloadGenqlSelection & { __args?: {
    /** Parameters for createFullscriptPractitioner */
    input?: (createFullscriptPractitionerInput | null)} })
    /** Create a FunctionalStatus Object */
    createFunctionalStatus?: (createFunctionalStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for createFunctionalStatus */
    input?: (createFunctionalStatusInput | null)} })
    /** create Goal */
    createGoal?: (createGoalPayloadGenqlSelection & { __args?: {
    /** Parameters for createGoal */
    input?: (createGoalInput | null)} })
    /** create Goal History */
    createGoalHistory?: (createGoalHistoryPayloadGenqlSelection & { __args?: {
    /** Parameters for createGoalHistory */
    input?: (createGoalHistoryInput | null)} })
    /** Create GoogleFit */
    createGoogleFit?: (createGoogleFitPayloadGenqlSelection & { __args?: {
    /** Parameters for createGoogleFit */
    input?: (createGoogleFitInput | null)} })
    /** Create a Group */
    createGroup?: (createGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for createGroup */
    input?: (createGroupInput | null)} })
    /** Create a HealthConcern Object */
    createHealthConcern?: (createHealthConcernPayloadGenqlSelection & { __args?: {
    /** Parameters for createHealthConcern */
    input?: (createHealthConcernInput | null)} })
    /** Create an Immunization */
    createImmunization?: (createImmunizationPayloadGenqlSelection & { __args?: {
    /** Parameters for createImmunization */
    input?: (createImmunizationInput | null)} })
    /** Create Implantable Device User association */
    createImplantableDeviceUser?: (createImplantableDeviceUserPayloadGenqlSelection & { __args?: {
    /** Parameters for createImplantableDeviceUser */
    input?: (createImplantableDeviceUserInput | null)} })
    /** Create an import data request */
    createImportDataRequest?: (createImportDataRequestPayloadGenqlSelection & { __args?: {
    /** Parameters for createImportDataRequest */
    input?: (createImportDataRequestInput | null)} })
    /** create an insurance authorization */
    createInsuranceAuthorization?: (createInsuranceAuthorizationPayloadGenqlSelection & { __args?: {
    /** Parameters for createInsuranceAuthorization */
    input?: (createInsuranceAuthorizationInput | null)} })
    /** Create Insurance Plan */
    createInsurancePlan?: (createInsurancePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for createInsurancePlan */
    input?: (createInsurancePlanInput | null)} })
    /** Create Lab Order */
    createLabOrder?: (createLabOrderPayloadGenqlSelection & { __args?: {
    /** Parameters for createLabOrder */
    input?: (createLabOrderInput | null)} })
    /** create Location */
    createLocation?: (createLocationPayloadGenqlSelection & { __args?: {
    /** Parameters for createLocation */
    input?: (createLocationInput | null)} })
    /** Create a Meal */
    createMeal?: (createMealPayloadGenqlSelection & { __args?: {
    /** Parameters for createMeal */
    input?: (createMealInput | null)} })
    /** Create Medication */
    createMedication?: (createMedicationPayloadGenqlSelection & { __args?: {
    /** Parameters for createMedication */
    input?: (createMedicationInput | null)} })
    /** create Message Blast */
    createMessageBlast?: (createMessageBlastPayloadGenqlSelection & { __args?: {
    /** Parameters for createMessageBlast */
    input?: (createMessageBlastInput | null)} })
    /** create Note */
    createNote?: (createNotePayloadGenqlSelection & { __args?: {
    /** Parameters for createNote */
    input?: (createNoteInput | null)} })
    /** create a Notification Contact */
    createNotificationContact?: (createNotificationContactPayloadGenqlSelection & { __args?: {
    /** Parameters for createNotificationContact */
    input?: (createNotificationContactInput | null)} })
    /** create offering */
    createOffering?: (createOfferingPayloadGenqlSelection & { __args?: {
    /** Parameters for createOffering */
    input?: (createOfferingInput | null)} })
    /** Create an Offering Coupon */
    createOfferingCoupon?: (createOfferingCouponPayloadGenqlSelection & { __args?: {
    /** Parameters for createOfferingCoupon */
    input?: (createOfferingCouponInput | null)} })
    /** create OfficeallySftpAccount */
    createOfficeallySftpAccount?: (createOfficeallySftpAccountPayloadGenqlSelection & { __args?: {
    /** Parameters for createOfficeallySftpAccount */
    input?: (createOfficeallySftpAccountInput | null)} })
    /** create OnboardingFlow */
    createOnboardingFlow?: (createOnboardingFlowPayloadGenqlSelection & { __args?: {
    /** Parameters for createOnboardingFlow */
    input?: (createOnboardingFlowInput | null)} })
    /** create OnboardingItem */
    createOnboardingItem?: (createOnboardingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for createOnboardingItem */
    input?: (createOnboardingItemInput | null)} })
    /** creates a new entry or add to existing water intake entry for the day */
    createOrAddToWaterIntakeEntry?: (createOrAddToWaterIntakeEntryPayloadGenqlSelection & { __args?: {
    /** Parameters for createOrAddToWaterIntakeEntry */
    input?: (createOrAddToWaterIntakeEntryInput | null)} })
    /** create Organization */
    createOrganization?: (createOrganizationPayloadGenqlSelection & { __args?: {
    /** Parameters for createOrganization */
    input?: (createOrganizationInput | null)} })
    /** Create an Organization CPT Code Object */
    createOrganizationCptCode?: (createOrganizationCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for createOrganizationCptCode */
    input?: (createOrganizationCptCodeInput | null)} })
    /** create OrganizationMembership */
    createOrganizationMembership?: (createOrganizationMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for createOrganizationMembership */
    input?: (createOrganizationMembershipInput | null)} })
    /** Creates a Patner */
    createPartner?: (createPartnerPayloadGenqlSelection & { __args?: {
    /** Parameters for createPartner */
    input?: (createPartnerInput | null)} })
    /** Create a Stripe Payment Intent. Currently just used for Klarna support. When the payment succeeds, Healthie will receive a webhook and automatically complete the checkout. */
    createPaymentIntent?: (createPaymentIntentPayloadGenqlSelection & { __args?: {
    /** Parameters for createPaymentIntent */
    input?: (createPaymentIntentInput | null)} })
    /** create Permission Template */
    createPermissionTemplate?: (createPermissionTemplatePayloadGenqlSelection & { __args?: {
    /** Parameters for createPermissionTemplate */
    input?: (createPermissionTemplateInput | null)} })
    /** create Personalization Questionnaire */
    createPersonalizationQuestionnaire?: (createPersonalizationQuestionnairePayloadGenqlSelection & { __args?: {
    /** Parameters for createPersonalizationQuestionnaire */
    input?: (createPersonalizationQuestionnaireInput | null)} })
    /** Create favorite CPT/ICD code */
    createPreferredMedicalCode?: (createPreferredMedicalCodePayloadGenqlSelection & { __args?: {
    /** Parameters for createPreferredMedicalCode */
    input?: (createPreferredMedicalCodeInput | null)} })
    /** Create a Procedure Object */
    createProcedure?: (createProcedurePayloadGenqlSelection & { __args?: {
    /** Parameters for createProcedure */
    input?: (createProcedureInput | null)} })
    /** Create a product */
    createProduct?: (createProductPayloadGenqlSelection & { __args?: {
    /** Parameters for createProduct */
    input?: (createProductInput | null)} })
    /** Create ProviderCPTCode Objects */
    createProviderCptCodes?: (createProviderCptCodesPayloadGenqlSelection & { __args?: {
    /** Parameters for createProviderCptCodes */
    input?: (createProviderCptCodesInput | null)} })
    /** Create a care plan recommendation */
    createRecommendation?: (createRecommendationPayloadGenqlSelection & { __args?: {
    /** Parameters for createRecommendation */
    input?: (createRecommendationInput | null)} })
    /** Create new Referring Physician */
    createReferral?: (createReferralPayloadGenqlSelection & { __args?: {
    /** Parameters for createReferral */
    input?: (createReferralInput | null)} })
    /** Create new Referring Physician */
    createReferringPhysician?: (createReferringPhysicianPayloadGenqlSelection & { __args?: {
    /** Parameters for createReferringPhysician */
    input?: (createReferringPhysicianInput | null)} })
    /** create requested form */
    createRequestedFormCompletion?: (createRequestedFormPayloadGenqlSelection & { __args?: {
    /** Parameters for createRequestedForm */
    input?: (createRequestedFormInput | null)} })
    /** create requested payment */
    createRequestedPayment?: (createRequestedPaymentPayloadGenqlSelection & { __args?: {
    /** Parameters for createRequestedPayment */
    input?: (createRequestedPaymentInput | null)} })
    /** Create a Rupa order */
    createRupaOrder?: (createRupaOrderPayloadGenqlSelection & { __args?: {
    /** Parameters for createRupaOrder */
    input?: (createRupaOrderInput | null)} })
    /** Create a new saved filter */
    createSavedFilter?: (createSavedFilterPayloadGenqlSelection & { __args?: {
    /** Parameters for createSavedFilter */
    input?: (createSavedFilterInput | null)} })
    /** Create a sent direct message */
    createSentDirectMessage?: (createSentDirectMessagePayloadGenqlSelection & { __args?: {
    /** Parameters for createSentDirectMessage */
    input?: (createSentDirectMessageInput | null)} })
    /** create Sent Fax */
    createSentFax?: (createSentFaxPayloadGenqlSelection & { __args?: {
    /** Parameters for createSentFax */
    input?: (createSentFaxInput | null)} })
    /** Create a Smart Phrase */
    createSmartPhrase?: (createSmartPhrasePayloadGenqlSelection & { __args?: {
    /** Parameters for createSmartPhrase */
    input?: (createSmartPhraseInput | null)} })
    /** Create a Smoking Status */
    createSmokingStatus?: (createSmokingStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for createSmokingStatus */
    input?: (createSmokingStatusInput | null)} })
    /** Creates a new payment card */
    createStripeCustomerDetail?: (createStripeCustomerDetailPayloadGenqlSelection & { __args?: {
    /** Parameters for createStripeCustomerDetail */
    input?: (createStripeCustomerDetailInput | null)} })
    /** create Subscription */
    createSubscription?: (createSubscriptionPayloadGenqlSelection & { __args?: {
    /** Parameters for createSubscription */
    input?: (createSubscriptionInput | null)} })
    /** create super bill */
    createSuperBill?: (createSuperBillPayloadGenqlSelection & { __args?: {
    /** Parameters for createSuperBill */
    input?: (createSuperBillInput | null)} })
    /** Create a custom user tag */
    createTag?: (createTagPayloadGenqlSelection & { __args?: {
    /** Parameters for createTag */
    input?: (createTagInput | null)} })
    /** Create a task for provider */
    createTask?: (createTaskPayloadGenqlSelection & { __args?: {
    /** Parameters for createTask */
    input?: (createTaskInput | null)} })
    /** Create a UniqueDeviceIdentifier Object */
    createUniqueDeviceIdentifier?: (createUniqueDeviceIdentifierPayloadGenqlSelection & { __args?: {
    /** Parameters for createUniqueDeviceIdentifier */
    input?: (createUniqueDeviceIdentifierInput | null)} })
    /** Creates a Visitor */
    createVisitor?: (createVisitorPayloadGenqlSelection & { __args?: {
    /** Parameters for createVisitor */
    input?: (createVisitorInput | null)} })
    /** Create Webhook */
    createWebhook?: (createWebhookPayloadGenqlSelection & { __args?: {
    /** Parameters for createWebhook */
    input?: (createWebhookInput | null)} })
    /** Enable Zus integration for provider account */
    createZus?: (createZusPayloadGenqlSelection & { __args?: {
    /** Parameters for createZus */
    input?: (createZusInput | null)} })
    /** Destroy Accepted Insurance Plan */
    deleteAcceptedInsurancePlan?: (deleteAcceptedInsurancePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAcceptedInsurancePlan */
    input?: (deleteAcceptedInsurancePlanInput | null)} })
    /** Destroy AllergySensitivity */
    deleteAllergySensitivity?: (deleteAllergySensitivityPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAllergySensitivity */
    input?: (deleteAllergySensitivityInput | null)} })
    /** Destroy Announcement */
    deleteAnnouncement?: (destroyAnnouncementPayloadGenqlSelection & { __args?: {
    /** Parameters for destroyAnnouncement */
    input?: (destroyAnnouncementInput | null)} })
    /** Destroy API Key */
    deleteApiKey?: (deleteApiKeyPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteApiKey */
    input?: (deleteApiKeyInput | null)} })
    /** Destroy AppleHealth */
    deleteAppleHealth?: (deleteAppleHealthPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAppleHealth */
    input?: (deleteAppleHealthInput | null)} })
    /** Delete an Appointment */
    deleteAppointment?: (deleteAppointmentPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAppointment */
    input?: (deleteAppointmentInput | null)} })
    /** Destroy an AppointmentType */
    deleteAppointmentType?: (deleteAppointmentTypePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAppointmentType */
    input?: (deleteAppointmentTypeInput | null)} })
    /** Delete a AppointmentTypeCptCode Object */
    deleteAppointmentTypeCptCode?: (deleteAppointmentTypeCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAppointmentTypeCptCode */
    input?: (deleteAppointmentTypeCptCodeInput | null)} })
    /** Delete auto task generator */
    deleteAutoTaskGenerator?: (deleteAutoTaskGeneratorPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAutoTaskGenerator */
    input?: (deleteAutoTaskGeneratorInput | null)} })
    /** delete Availability */
    deleteAvailability?: (deleteAvailabilityPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteAvailability */
    input?: (deleteAvailabilityInput | null)} })
    /** Destroy a Billing Item */
    deleteBillingItem?: (deleteBillingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteBillingItem */
    input?: (deleteBillingItemInput | null)} })
    /** Destroy a Care Plan */
    deleteCarePlan?: (deleteCarePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCarePlan */
    input?: (deleteCarePlanInput | null)} })
    /** Remove connection for related item(document/goal/recommendation) */
    deleteCarePlanConnection?: (deleteCarePlanConnectionPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCarePlanConnection */
    input?: (deleteCarePlanConnectionInput | null)} })
    /** Destroy a Cms1500 */
    deleteCms1500?: (deleteCms1500PayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCms1500 */
    input?: (deleteCms1500Input | null)} })
    /** Delete a CognitivesStatus Object */
    deleteCognitiveStatus?: (deleteCognitiveStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCognitiveStatus */
    input?: (deleteCognitiveStatusInput | null)} })
    /** Destroy a Comment */
    deleteComment?: (deleteCommentPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteComment */
    input?: (deleteCommentInput | null)} })
    /** Destroy a Conversation Membership */
    deleteConversationMembership?: (deleteConversationMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteConversationMembership */
    input?: (deleteConversationMembershipInput | null)} })
    /** Destroy a Course */
    deleteCourse?: (deleteCoursePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCourse */
    input?: (deleteCourseInput | null)} })
    /** Destroy a Course Benefit */
    deleteCourseBenefit?: (deleteCourseBenefitPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCourseBenefit */
    input?: (deleteCourseBenefitInput | null)} })
    /** Destroy a Course Group */
    deleteCourseGroup?: (deleteCourseGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCourseGroup */
    input?: (deleteCourseGroupInput | null)} })
    /** Destroy a Course Item */
    deleteCourseItem?: (deleteCourseItemPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCourseItem */
    input?: (deleteCourseItemInput | null)} })
    /** Destroy a Course Membership */
    deleteCourseMembership?: (deleteCourseMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCourseMembership */
    input?: (deleteCourseMembershipInput | null)} })
    /** Destroy a Custom Email */
    deleteCustomEmail?: (deleteCustomEmailPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCustomEmail */
    input?: (deleteCustomEmailInput | null)} })
    /** Destroy a Custom Food */
    deleteCustomFood?: (deleteCustomFoodPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCustomFood */
    input?: (deleteCustomFoodInput | null)} })
    /** Destroy an CustomModule */
    deleteCustomModule?: (deleteCustomModulePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCustomModule */
    input?: (deleteCustomModuleInput | null)} })
    /** Destroy an CustomModuleForm */
    deleteCustomModuleForm?: (deleteCustomModuleFormPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteCustomModuleForm */
    input?: (deleteCustomModuleFormInput | null)} })
    /** Destroy Dexcom Connection */
    deleteDexcomConnection?: (deleteDexcomConnectionPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteDexcomConnection */
    input?: (deleteDexcomConnectionInput | null)} })
    /** Destroy a Document */
    deleteDocument?: (deleteDocumentPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteDocument */
    input?: (deleteDocumentInput | null)} })
    /** Delete Dosespot E-Rx for provider account */
    deleteDosespot?: (deleteDosespotPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteDosespot */
    input?: (deleteDosespotInput | null)} })
    /** Destroy a Entry */
    deleteEntry?: (deleteEntryPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteEntry */
    input?: (deleteEntryInput | null)} })
    /** Destroy an External Calendar */
    deleteExternalCalendar?: (deleteExternalCalendarPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteExternalCalendar */
    input?: (deleteExternalCalendarInput | null)} })
    /** Delete a Family History Condition */
    deleteFamilyHistory?: (deleteFamilyHistoryPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteFamilyHistory */
    input?: (deleteFamilyHistoryInput | null)} })
    /** destroy Fax Acct Info */
    deleteFaxAcctInfo?: (destroyFaxAcctInfoPayloadGenqlSelection & { __args?: {
    /** Parameters for destroyFaxAcctInfo */
    input?: (destroyFaxAcctInfoInput | null)} })
    /** Destroy Fitbit */
    deleteFitbit?: (deleteFitbitPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteFitbit */
    input?: (deleteFitbitInput | null)} })
    /** Destroy a Folder */
    deleteFolder?: (deleteFolderPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteFolder */
    input?: (deleteFolderInput | null)} })
    /** Destroy a Form Answer Group */
    deleteFormAnswerGroup?: (deleteFormAnswerGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteFormAnswerGroup */
    input?: (deleteFormAnswerGroupInput | null)} })
    /** Delete a FunctionalsStatus Object */
    deleteFunctionalStatus?: (deleteFunctionalStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteFunctionalStatus */
    input?: (deleteFunctionalStatusInput | null)} })
    /** Destroy a Goal */
    deleteGoal?: (deleteGoalPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteGoal */
    input?: (deleteGoalInput | null)} })
    /** Destroy a Goal GoalHistory */
    deleteGoalHistory?: (deleteGoalHistoryPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteGoalHistory */
    input?: (deleteGoalHistoryInput | null)} })
    /** Destroy GoogleFit */
    deleteGoogleFit?: (deleteGoogleFitPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteGoogleFit */
    input?: (deleteGoogleFitInput | null)} })
    /** Delete a HealthConcern Object */
    deleteHealthConcern?: (deleteHealthConcernPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteHealthConcern */
    input?: (deleteHealthConcernInput | null)} })
    /** Delete an Implantable Device User association */
    deleteImplantableDeviceUser?: (deleteImplantableDeviceUserPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteImplantableDeviceUser */
    input?: (deleteImplantableDeviceUserInput | null)} })
    /** delete an insurance authorization */
    deleteInsuranceAuthorization?: (deleteInsuranceAuthorizationPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteInsuranceAuthorization */
    input?: (deleteInsuranceAuthorizationInput | null)} })
    /** Delete Insurance Plan */
    deleteInsurancePlan?: (deleteInsurancePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteInsurancePlan */
    input?: (deleteInsurancePlanInput | null)} })
    /** Destroy a Location */
    deleteLocation?: (deleteLocationPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteLocation */
    input?: (deleteLocationInput | null)} })
    /** Destroy a Meal */
    deleteMeal?: (deleteMealPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteMeal */
    input?: (deleteMealInput | null)} })
    /** Destroy Medication */
    deleteMedication?: (destroyMedicationPayloadGenqlSelection & { __args?: {
    /** Parameters for destroyMedication */
    input?: (destroyMedicationInput | null)} })
    /** Destroy a Note */
    deleteNote?: (deleteNotePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteNote */
    input?: (deleteNoteInput | null)} })
    /** delete a Notification Contact */
    deleteNotificationContact?: (deleteNotificationContactPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteNotificationContact */
    input?: (deleteNotificationContactInput | null)} })
    /** Destroy an Offering */
    deleteOffering?: (deleteOfferingPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOffering */
    input?: (deleteOfferingInput | null)} })
    /** Destroy an Offering Coupon */
    deleteOfferingCoupon?: (deleteOfferingCouponPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOfferingCoupon */
    input?: (deleteOfferingCouponInput | null)} })
    /** Destroy a OnboardingFlow */
    deleteOnboardingFlow?: (deleteOnboardingFlowPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOnboardingFlow */
    input?: (deleteOnboardingFlowInput | null)} })
    /** Destroy a OnboardingItem */
    deleteOnboardingItem?: (deleteOnboardingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOnboardingItem */
    input?: (deleteOnboardingItemInput | null)} })
    /** Delete a OrganizationCptCode Object */
    deleteOrganizationCptCode?: (deleteOrganizationCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOrganizationCptCode */
    input?: (deleteOrganizationCptCodeInput | null)} })
    /** Destroy an organization info */
    deleteOrganizationInfo?: (deleteOrganizationInfoPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOrganizationInfo */
    input?: (deleteOrganizationInfoInput | null)} })
    /**
     * @deprecated Organization Memberships Cannot Be Destroyed
     * Destroy a Organization Membership
     */
    deleteOrganizationMembership?: (deleteOrganizationMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteOrganizationMembership */
    input?: (deleteOrganizationMembershipInput | null)} })
    /** delete Permission Template */
    deletePermissionTemplate?: (deletePermissionTemplatePayloadGenqlSelection & { __args?: {
    /** Parameters for deletePermissionTemplate */
    input?: (deletePermissionTemplateInput | null)} })
    /** Delete favorite CPT/ICD code */
    deletePreferredMedicalCode?: (deletePreferredMedicalCodePayloadGenqlSelection & { __args?: {
    /** Parameters for deletePreferredMedicalCode */
    input?: (deletePreferredMedicalCodeInput | null)} })
    /** Delete a Procedure Object */
    deleteProcedure?: (deleteProcedurePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteProcedure */
    input?: (deleteProcedureInput | null)} })
    /** Delete a product */
    deleteProduct?: (deleteProductPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteProduct */
    input?: (deleteProductInput | null)} })
    /** Delete a ProviderCptCode Object */
    deleteProviderCptCode?: (deleteProviderCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteProviderCptCode */
    input?: (deleteProviderCptCodeInput | null)} })
    /** Destroy a received fax */
    deleteReceivedFax?: (deleteReceivedFaxPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteReceivedFax */
    input?: (deleteReceivedFaxInput | null)} })
    /** Destroy a care plan recommendation */
    deleteRecommendation?: (deleteRecommendationPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteRecommendation */
    input?: (deleteRecommendationInput | null)} })
    /** Delete recurring form request */
    deleteRecurringForm?: (destroyRecurringFormPayloadGenqlSelection & { __args?: {
    /** Parameters for destroyRecurringForm */
    input?: (destroyRecurringFormInput | null)} })
    /** Delete referral */
    deleteReferral?: (deleteReferralPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteReferral */
    input?: (deleteReferralInput | null)} })
    /** Delete referring physician  */
    deleteReferringPhysician?: (deleteReferringPhysicianPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteReferringPhysician */
    input?: (deleteReferringPhysicianInput | null)} })
    /** Destroy a requested form */
    deleteRequestedFormCompletion?: (deleteRequestedFormPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteRequestedForm */
    input?: (deleteRequestedFormInput | null)} })
    /** destroy requested payment */
    deleteRequestedPayment?: (deleteRequestedPaymentPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteRequestedPayment */
    input?: (deleteRequestedPaymentInput | null)} })
    /** Delete a saved filter */
    deleteSavedFilter?: (deleteSavedFilterPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteSavedFilter */
    input?: (deleteSavedFilterInput | null)} })
    /** Destroy Shapa Connection */
    deleteShapaConnection?: (deleteShapaConnectionPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteShapaConnection */
    input?: (deleteShapaConnectionInput | null)} })
    /** Destroy a Smart Phrase */
    deleteSmartPhrase?: (deleteSmartPhrasePayloadGenqlSelection & { __args?: {
    /** Parameters for deleteSmartPhrase */
    input?: (deleteSmartPhraseInput | null)} })
    /** Delete a Smoking Status */
    deleteSmokingStatus?: (deleteSmokingStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteSmokingStatus */
    input?: (deleteSmokingStatusInput | null)} })
    /** Deletes a payment card */
    deleteStripeCustomerDetail?: (deleteStripeCustomerDetailPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteStripeCustomerDetail */
    input?: (deleteStripeCustomerDetailInput | null)} })
    /** Destroy a Super Bill */
    deleteSuperBill?: (deleteSuperBillPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteSuperBill */
    input?: (deleteSuperBillInput | null)} })
    /** Delete a custom user tag */
    deleteTag?: (deleteTagPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteTag */
    input?: (deleteTagInput | null)} })
    /** Destroy a task */
    deleteTask?: (deleteTaskPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteTask */
    input?: (deleteTaskInput | null)} })
    /** Delete a UniqueDeviceIdentifier Object */
    deleteUniqueDeviceIdentifier?: (deleteUniqueDeviceIdentifierPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteUniqueDeviceIdentifier */
    input?: (deleteUniqueDeviceIdentifierInput | null)} })
    /** Delete a Group */
    deleteUserGroup?: (deleteUserGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteUserGroup */
    input?: (deleteUserGroupInput | null)} })
    /** Destroy Webhook */
    deleteWebhook?: (deleteWebhookPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteWebhook */
    input?: (deleteWebhookInput | null)} })
    /** Destroy Withings Connection */
    deleteWithingsConnection?: (deleteWithingsConnectionPayloadGenqlSelection & { __args?: {
    /** Parameters for deleteWithingsConnection */
    input?: (deleteWithingsConnectionInput | null)} })
    /** Dismiss All Announcements For A User */
    dismissAllAnnouncements?: (dismissAllAnnouncementsPayloadGenqlSelection & { __args?: {
    /** Parameters for dismissAllAnnouncements */
    input?: (dismissAllAnnouncementsInput | null)} })
    /** Dismiss Announcement */
    dismissAnnouncement?: (dismissAnnouncementPayloadGenqlSelection & { __args?: {
    /** Parameters for dismissAnnouncement */
    input?: (dismissAnnouncementInput | null)} })
    /** Update User Account to Dummy User Account */
    dummyUser?: (dummyUserPayloadGenqlSelection & { __args?: {
    /** Parameters for dummyUser */
    input?: (dummyUserInput | null)} })
    /** edit Availability */
    editAvailability?: (editAvailabilityPayloadGenqlSelection & { __args?: {
    /** Parameters for editAvailability */
    input?: (editAvailabilityInput | null)} })
    /** Embed Forms to Objects */
    embedForm?: (EmbedFormPayloadGenqlSelection & { __args?: {
    /** Parameters for EmbedForm */
    input?: (EmbedFormInput | null)} })
    /** Generate Patients Dosespot SSO for a Given Provider  */
    enableDosespotSelfSignup?: (enableSelfSignupPayloadGenqlSelection & { __args?: {
    /** Parameters for enableSelfSignup */
    input?: (enableSelfSignupInput | null)} })
    /** Adding Google Integrations */
    enableGoogleIntegrations?: (enableGoogleIntegrationsPayloadGenqlSelection & { __args?: {
    /** Parameters for enableGoogleIntegrations */
    input?: (enableGoogleIntegrationsInput | null)} })
    /** Enable Multi Factor Authentication for the Entire Org */
    enableMfa?: (EnableMfaPayloadGenqlSelection & { __args?: {
    /** Parameters for EnableMfa */
    input?: (EnableMfaInput | null)} })
    /** Enable Mixpanel for Enterprise Client */
    enableMixpanel?: (EnableMixpanelPayloadGenqlSelection & { __args?: {
    /** Parameters for EnableMixpanel */
    input?: (EnableMixpanelInput | null)} })
    /** Enable Zoom Features */
    enableZoomFeatures?: (EnableZoomFeaturesPayloadGenqlSelection & { __args?: {
    /** Parameters for EnableZoomFeatures */
    input?: (EnableZoomFeaturesInput | null)} })
    /** Expires the webhook signature */
    expireWebhookSignature?: (expireWebhookSignaturePayloadGenqlSelection & { __args?: {
    /** Parameters for expireWebhookSignature */
    input?: (expireWebhookSignatureInput | null)} })
    /** Creates a template from existing Care Plan. Original object is not touched */
    exportCarePlanToTemplate?: (exportToTemplatePayloadGenqlSelection & { __args?: {
    /** Parameters for exportToTemplate */
    input?: (exportToTemplateInput | null)} })
    /** Export Client EHI data */
    exportClientEhi?: (exportClientEhiPayloadGenqlSelection & { __args?: {
    /** Parameters for exportClientEhi */
    input?: (exportClientEhiInput | null)} })
    /** extend paywall for a provider */
    extendPaywall?: (ExtendPaywallPayloadGenqlSelection & { __args?: {
    /** Parameters for ExtendPaywall */
    input?: (ExtendPaywallInput | null)} })
    /** Generate a PDF of charting notes for a client */
    generateChartingPdf?: (generateChartingPdfPayloadGenqlSelection & { __args?: {
    /** Parameters for generateChartingPdf */
    input?: (generateChartingPdfInput | null)} })
    /** Generate Patients Dosespot SSO for a Given Provider  */
    generateDosespotSingleSignOn?: (dosespotSSOPayloadGenqlSelection & { __args?: {
    /** Parameters for dosespotSSO */
    input?: (dosespotSSOInput | null)} })
    /** Sign up Healthie User in the Health Assessment Service */
    healthAssessmentServiceSignup?: (HealthAssessmentServiceSignupPayloadGenqlSelection & { __args?: {
    /** Parameters for HealthAssessmentServiceSignup */
    input?: (HealthAssessmentServiceSignupInput | null)} })
    /** Mask in as another user */
    maskAccount?: (MaskAccountPayloadGenqlSelection & { __args?: {
    /** Parameters for MaskAccount */
    input?: (MaskAccountInput | null)} })
    /** all data related to the merging account (form answers, billing items, charting notes, etc) will be associated with the selected account after merging. The selected account's client profile information will remain unchanged (name, DOB, etc) */
    mergeClients?: (mergeClientsPayloadGenqlSelection & { __args?: {
    /** Parameters for mergeClients */
    input?: (mergeClientsInput | null)} })
    /** Pair a client with a provider */
    pairAccounts?: (PairAccountsPayloadGenqlSelection & { __args?: {
    /** Parameters for PairAccounts */
    input?: (PairAccountsInput | null)} })
    /** Import client from a CCDA file */
    parseCcdaDocument?: (parseCcdaDocumentPayloadGenqlSelection & { __args?: {
    /** Parameters for parseCcdaDocument */
    input?: (parseCcdaDocumentInput | null)} })
    /** refetch ChangeHealth Lab Orders for a specified patient */
    refetchChangeHealthLabOrder?: (RefetchChangeHealthLabOrderPayloadGenqlSelection & { __args?: {
    /** Parameters for RefetchChangeHealthLabOrder */
    input?: (RefetchChangeHealthLabOrderInput | null)} })
    /** Refresh Host Links */
    refreshHostLinks?: (RefreshHostLinksPayloadGenqlSelection & { __args?: {
    /** Parameters for RefreshHostLinks */
    input?: (RefreshHostLinksInput | null)} })
    /** Remove applied tag on a specific user */
    removeAppliedTag?: (removeAppliedTagPayloadGenqlSelection & { __args?: {
    /** Parameters for removeAppliedTag */
    input?: (removeAppliedTagInput | null)} })
    /** Remove Card that is on File for Client */
    removeCardOnFile?: (RemoveCardOnFilePayloadGenqlSelection & { __args?: {
    /** Parameters for RemoveCardOnFile */
    input?: (RemoveCardOnFileInput | null)} })
    /** remove Draft */
    removeDraft?: (removeDraftPayloadGenqlSelection & { __args?: {
    /** Parameters for removeDraft */
    input?: (removeDraftInput | null)} })
    /** Remove group care plan user connection for a specific user */
    removeUserFromGroupCarePlan?: (removeUserFromGroupCarePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for removeUserFromGroupCarePlan */
    input?: (removeUserFromGroupCarePlanInput | null)} })
    /** resend Sent Fax */
    resendSentFax?: (resendSentFaxPayloadGenqlSelection & { __args?: {
    /** Parameters for resendSentFax */
    input?: (resendSentFaxInput | null)} })
    /** send the human a password reset email */
    resetPassword?: (resetPasswordPayloadGenqlSelection & { __args?: {
    /** Parameters for resetPassword */
    input?: (resetPasswordInput | null)} })
    /** Restores Previous Version to be Current Version */
    restoreVersion?: (restoreVersionsPayloadGenqlSelection & { __args?: {
    /** Parameters for restoreVersions */
    input?: (restoreVersionsInput | null)} })
    /** Resync existed rupa lab orders data for a specific rupa connection of the current user */
    resyncRupaLabOrders?: (resyncRupaLabOrdersPayloadGenqlSelection & { __args?: {
    /** Parameters for resyncRupaLabOrders */
    input?: (resyncRupaLabOrdersInput | null)} })
    /** revoke token or API key. */
    revokeToken?: (revokeTokenPayloadGenqlSelection & { __args?: {
    /** Parameters for revokeToken */
    input?: (revokeTokenInput | null)} })
    /** Run an eligibility check on a policy */
    runEligibilityCheck?: (runEligibilityCheckMutationPayloadGenqlSelection & { __args?: {
    /** Parameters for runEligibilityCheckMutation */
    input?: (runEligibilityCheckMutationInput | null)} })
    /** Trigger care plan email for given client */
    sendCarePlanEmail?: (sendCarePlanEmailPayloadGenqlSelection & { __args?: {
    /** Parameters for sendCarePlanEmail */
    input?: (sendCarePlanEmailInput | null)} })
    /** Send the trainer an email that the client wants to speak to them */
    sendSpeakToTrainerNotification?: (SendSpeakToTrainerNotificationPayloadGenqlSelection & { __args?: {
    /** Parameters for SendSpeakToTrainerNotification */
    input?: (SendSpeakToTrainerNotificationInput | null)} })
    /** Send Welcome Email to Client */
    sendWelcomeEmail?: (SendWelcomeEmailPayloadGenqlSelection & { __args?: {
    /** Parameters for SendWelcomeEmail */
    input?: (SendWelcomeEmailInput | null)} })
    /** Add form answer group answers as document viewable by client */
    shareAnswersAsDocument?: (shareAnswersAsDocumentPayloadGenqlSelection & { __args?: {
    /** Parameters for shareAnswersAsDocument */
    input?: (shareAnswersAsDocumentInput | null)} })
    /** share Course with another provider */
    shareCourse?: (shareCoursePayloadGenqlSelection & { __args?: {
    /** Parameters for shareCourse */
    input?: (shareCourseInput | null)} })
    /** share Custom Module Form */
    shareCustomModuleForm?: (shareCustomModuleFormPayloadGenqlSelection & { __args?: {
    /** Parameters for shareCustomModuleForm */
    input?: (shareCustomModuleFormInput | null)} })
    /** SignIn */
    signIn?: (signInPayloadGenqlSelection & { __args?: {
    /** Parameters for signIn */
    input?: (signInInput | null)} })
    /** Sign up */
    signUp?: (signUpPayloadGenqlSelection & { __args?: {
    /** Parameters for signUp */
    input?: (signUpInput | null)} })
    /** Toggle 2 Factor Authentication for User */
    toggle2Fa?: (Toggle2FaPayloadGenqlSelection & { __args?: {
    /** Parameters for Toggle2Fa */
    input?: (Toggle2FaInput | null)} })
    /** Add Role to User Account */
    toggleAdvancedSettings?: (ToggleAdvancedSettingsPayloadGenqlSelection & { __args?: {
    /** Parameters for ToggleAdvancedSettings */
    input?: (ToggleAdvancedSettingsInput | null)} })
    /** Toggle availability by appointment type, location, or contact type */
    toggleAvailability?: (ToggleAvailabilityPayloadGenqlSelection & { __args?: {
    /** Parameters for ToggleAvailability */
    input?: (ToggleAvailabilityInput | null)} })
    /** Toggle BAA for external calendar */
    toggleBaa?: (ToggleBaaPayloadGenqlSelection & { __args?: {
    /** Parameters for ToggleBaa */
    input?: (ToggleBaaInput | null)} })
    /** Deactivate/activate a group/single Care Plan for a given user */
    toggleCarePlanStatusForSpecificUser?: (toggleCarePlanStatusForSpecificUserPayloadGenqlSelection & { __args?: {
    /** Parameters for toggleCarePlanStatusForSpecificUser */
    input?: (toggleCarePlanStatusForSpecificUserInput | null)} })
    /** toggle paywall for a provider */
    togglePaywall?: (TogglePaywallPayloadGenqlSelection & { __args?: {
    /** Parameters for TogglePaywall */
    input?: (TogglePaywallInput | null)} })
    /** Toggle Reason for Appointment on Appointment Type of Provider */
    toggleReasonForAppt?: (ToggleReasonForApptPayloadGenqlSelection & { __args?: {
    /** Parameters for ToggleReasonForAppt */
    input?: (ToggleReasonForApptInput | null)} })
    /** Unblock an ip address */
    unblockIpAddress?: (unblockIpAddressPayloadGenqlSelection & { __args?: {
    /** Parameters for unblockIpAddress */
    input?: (unblockIpAddressInput | null)} })
    /** Unlock Charting Note */
    unlockChartingNote?: (unlockChartingNotePayloadGenqlSelection & { __args?: {
    /** Parameters for unlockChartingNote */
    input?: (unlockChartingNoteInput | null)} })
    /** Update a Notification Setting to unsubscribe from a specific notification type */
    unsubscribeFromNotification?: (unsubscribeFromNotificationPayloadGenqlSelection & { __args?: {
    /** Parameters for unsubscribeFromNotification */
    input?: (unsubscribeFromNotificationInput | null)} })
    /** Update existing addendum for the selected charting note */
    updateAddendum?: (updateAddendumPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAddendum */
    input?: (updateAddendumInput | null)} })
    /** Update AllergySensitivity */
    updateAllergySensitivity?: (updateAllergySensitivityPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAllergySensitivity */
    input?: (updateAllergySensitivityInput | null)} })
    /** Update Announcement */
    updateAnnouncement?: (updateAnnouncementPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAnnouncement */
    input?: (updateAnnouncementInput | null)} })
    /** Update AppleHealth */
    updateAppleHealth?: (updateAppleHealthPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAppleHealth */
    input?: (updateAppleHealthInput | null)} })
    /** Update the Appointment */
    updateAppointment?: (updateAppointmentPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAppointment */
    input?: (updateAppointmentInput | null)} })
    /** Update AppointmentInclusion */
    updateAppointmentInclusion?: (updateAppointmentInclusionPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAppointmentInclusion */
    input?: (updateAppointmentInclusionInput | null)} })
    /** update Appointment Setting */
    updateAppointmentSetting?: (updateAppointmentSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAppointmentSetting */
    input?: (updateAppointmentSettingInput | null)} })
    /** Update an Appointment Type and return Appointment Type */
    updateAppointmentType?: (updateAppointmentTypePayloadGenqlSelection & { __args?: {
    /** Parameters for updateAppointmentType */
    input?: (updateAppointmentTypeInput | null)} })
    /** Update a AppointmentTypeCptCode Object */
    updateAppointmentTypeCptCode?: (updateAppointmentTypeCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for updateAppointmentTypeCptCode */
    input?: (updateAppointmentTypeCptCodeInput | null)} })
    /** Update auto task generator */
    updateAutoTaskGenerator?: (updateAutoTaskGeneratorPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAutoTaskGenerator */
    input?: (updateAutoTaskGeneratorInput | null)} })
    /** update automated insurance billing setting */
    updateAutomatedInsuranceBillingSetting?: (updateAutomatedInsuranceBillingSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateAutomatedInsuranceBillingSetting */
    input?: (updateAutomatedInsuranceBillingSettingInput | null)} })
    /** Update a BillingItem */
    updateBillingItem?: (updateBillingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for updateBillingItem */
    input?: (updateBillingItemInput | null)} })
    /** Update a Brand and return Brand */
    updateBrand?: (updateBrandPayloadGenqlSelection & { __args?: {
    /** Parameters for updateBrand */
    input?: (updateBrandInput | null)} })
    /** Update Care Plan by Care Plan Template */
    updateByTemplate?: (updateByTemplatePayloadGenqlSelection & { __args?: {
    /** Parameters for updateByTemplate */
    input?: (updateByTemplateInput | null)} })
    /** Update and return calendar view setting */
    updateCalendarViewSetting?: (updateCalendarViewSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCalendarViewSetting */
    input?: (updateCalendarViewSettingInput | null)} })
    /** Update Calorie Levels in the Health Assessment Service */
    updateCalorieLevel?: (UpdateCalorieLevelPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateCalorieLevel */
    input?: (UpdateCalorieLevelInput | null)} })
    /** update Campaign */
    updateCampaign?: (updateCampaignPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCampaign */
    input?: (updateCampaignInput | null)} })
    /** Update and return a Care Plan */
    updateCarePlan?: (updateCarePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCarePlan */
    input?: (updateCarePlanInput | null)} })
    /** Update ChangeHealthAccount (used for Labs) */
    updateChangeHealthAccount?: (updateChangeHealthAccountPayloadGenqlSelection & { __args?: {
    /** Parameters for updateChangeHealthAccount */
    input?: (updateChangeHealthAccountInput | null)} })
    /** Update ChargeBack */
    updateChargeBack?: (updateChargeBackPayloadGenqlSelection & { __args?: {
    /** Parameters for updateChargeBack */
    input?: (updateChargeBackInput | null)} })
    /** update Chat Setting */
    updateChatSetting?: (updateChatSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateChatSetting */
    input?: (updateChatSettingInput | null)} })
    /** Create Change Health Submitter Object */
    updateClaimSubmitter?: (UpdateClaimSubmitterPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateClaimSubmitter */
    input?: (UpdateClaimSubmitterInput | null)} })
    /** Update Client */
    updateClient?: (updateClientPayloadGenqlSelection & { __args?: {
    /** Parameters for updateClient */
    input?: (updateClientInput | null)} })
    /** update CMS1500 */
    updateCms1500?: (updateCms1500PayloadGenqlSelection & { __args?: {
    /** Parameters for updateCms1500 */
    input?: (updateCms1500Input | null)} })
    /** Update a CognitiveStatus Object */
    updateCognitiveStatus?: (updateCognitiveStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCognitiveStatus */
    input?: (updateCognitiveStatusInput | null)} })
    /** Update a Conversation and return Conversation */
    updateConversation?: (updateConversationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateConversation */
    input?: (updateConversationInput | null)} })
    /** Update a ConversationMembership and return ConversationMembership */
    updateConversationMembership?: (updateConversationMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for updateConversationMembership */
    input?: (updateConversationMembershipInput | null)} })
    /** Update a Course */
    updateCourse?: (updateCoursePayloadGenqlSelection & { __args?: {
    /** Parameters for updateCourse */
    input?: (updateCourseInput | null)} })
    /** update a Course Group */
    updateCourseGroup?: (updateCourseGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCourseGroup */
    input?: (updateCourseGroupInput | null)} })
    /** Update a CourseItem */
    updateCourseItem?: (updateCourseItemPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCourseItem */
    input?: (updateCourseItemInput | null)} })
    /** update a Course Membership */
    updateCourseMembership?: (updateCourseMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCourseMembership */
    input?: (updateCourseMembershipInput | null)} })
    /** Update Currency on User Object */
    updateCurrency?: (UpdateCurrencyPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateCurrency */
    input?: (UpdateCurrencyInput | null)} })
    /** Update a Custom Email */
    updateCustomEmail?: (updateCustomEmailPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCustomEmail */
    input?: (updateCustomEmailInput | null)} })
    /** Update a Custom Food */
    updateCustomFood?: (updateCustomFoodPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCustomFood */
    input?: (updateCustomFoodInput | null)} })
    /** Update an Custom Module and return Custom Module */
    updateCustomModule?: (updateCustomModulePayloadGenqlSelection & { __args?: {
    /** Parameters for updateCustomModule */
    input?: (updateCustomModuleInput | null)} })
    /** Update an Custom Module Form and return Custom Module Form */
    updateCustomModuleForm?: (updateCustomModuleFormPayloadGenqlSelection & { __args?: {
    /** Parameters for updateCustomModuleForm */
    input?: (updateCustomModuleFormInput | null)} })
    /** Update a Document and return Document */
    updateDocument?: (updateDocumentPayloadGenqlSelection & { __args?: {
    /** Parameters for updateDocument */
    input?: (updateDocumentInput | null)} })
    /** Updates an Entry and returns an Entry */
    updateEntry?: (updateEntryPayloadGenqlSelection & { __args?: {
    /** Parameters for updateEntry */
    input?: (updateEntryInput | null)} })
    /** Update an External Calendar */
    updateExternalCalendar?: (updateExternalCalendarPayloadGenqlSelection & { __args?: {
    /** Parameters for updateExternalCalendar */
    input?: (updateExternalCalendarInput | null)} })
    /** Update Family History */
    updateFamilyHistory?: (updateFamilyHistoryPayloadGenqlSelection & { __args?: {
    /** Parameters for updateFamilyHistory */
    input?: (updateFamilyHistoryInput | null)} })
    /** update Fax Acct Info */
    updateFaxAcctInfo?: (updateFaxAcctInfoPayloadGenqlSelection & { __args?: {
    /** Parameters for updateFaxAcctInfo */
    input?: (updateFaxAcctInfoInput | null)} })
    /** Update a FeatureToggle and Return FeatureToggle */
    updateFeatureToggle?: (updateFeatureTogglePayloadGenqlSelection & { __args?: {
    /** Parameters for updateFeatureToggle */
    input?: (updateFeatureToggleInput | null)} })
    /** Update Fitbit */
    updateFitbit?: (updateFitbitPayloadGenqlSelection & { __args?: {
    /** Parameters for updateFitbit */
    input?: (updateFitbitInput | null)} })
    /** Update a Folder and return Folder */
    updateFolder?: (updateFolderPayloadGenqlSelection & { __args?: {
    /** Parameters for updateFolder */
    input?: (updateFolderInput | null)} })
    /** update FormAnswerGroup */
    updateFormAnswerGroup?: (updateFormAnswerGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for updateFormAnswerGroup */
    input?: (updateFormAnswerGroupInput | null)} })
    /** Update a FunctionalStatus Object */
    updateFunctionalStatus?: (updateFunctionalStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for updateFunctionalStatus */
    input?: (updateFunctionalStatusInput | null)} })
    /** Update a Goal */
    updateGoal?: (updateGoalPayloadGenqlSelection & { __args?: {
    /** Parameters for updateGoal */
    input?: (updateGoalInput | null)} })
    /** Update GoogleFit */
    updateGoogleFit?: (updateGoogleFitPayloadGenqlSelection & { __args?: {
    /** Parameters for updateGoogleFit */
    input?: (updateGoogleFitInput | null)} })
    /** Updates the care plan status for groups */
    updateGroupCarePlan?: (updateGroupCarePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for updateGroupCarePlan */
    input?: (updateGroupCarePlanInput | null)} })
    /** Update a HealthConcern Object */
    updateHealthConcern?: (updateHealthConcernPayloadGenqlSelection & { __args?: {
    /** Parameters for updateHealthConcern */
    input?: (updateHealthConcernInput | null)} })
    /** Update an Appointment Setting */
    updateHiddenAppointmentSettings?: (UpdateHiddenSettingsPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateHiddenSettings */
    input?: (UpdateHiddenSettingsInput | null)} })
    /** Update a Human */
    updateHuman?: (updateHumanPayloadGenqlSelection & { __args?: {
    /** Parameters for updateHuman */
    input?: (updateHumanInput | null)} })
    /** Update an Immunization and return Immunization */
    updateImmunization?: (updateImmunizationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateImmunization */
    input?: (updateImmunizationInput | null)} })
    /** Update Implantable Device User association */
    updateImplantableDeviceUser?: (updateImplantableDeviceUserPayloadGenqlSelection & { __args?: {
    /** Parameters for updateImplantableDeviceUser */
    input?: (updateImplantableDeviceUserInput | null)} })
    /** update an insurance authorization */
    updateInsuranceAuthorization?: (updateInsuranceAuthorizationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateInsuranceAuthorization */
    input?: (updateInsuranceAuthorizationInput | null)} })
    /** Update Insurance Plan */
    updateInsurancePlan?: (updateInsurancePlanPayloadGenqlSelection & { __args?: {
    /** Parameters for updateInsurancePlan */
    input?: (updateInsurancePlanInput | null)} })
    /** Update Lab Order */
    updateLabOrder?: (updateLabOrderPayloadGenqlSelection & { __args?: {
    /** Parameters for updateLabOrder */
    input?: (updateLabOrderInput | null)} })
    /** update Location */
    updateLocation?: (updateLocationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateLocation */
    input?: (updateLocationInput | null)} })
    /** Update Macronutrient Split in the Health Assessment Service */
    updateMacronutrientSplit?: (UpdateMacronutrientSplitPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateMacronutrientSplit */
    input?: (UpdateMacronutrientSplitInput | null)} })
    /** Update a Meal */
    updateMeal?: (updateMealPayloadGenqlSelection & { __args?: {
    /** Parameters for updateMeal */
    input?: (updateMealInput | null)} })
    /** Update Medication */
    updateMedication?: (updateMedicationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateMedication */
    input?: (updateMedicationInput | null)} })
    /** Update a Note */
    updateNote?: (updateNotePayloadGenqlSelection & { __args?: {
    /** Parameters for updateNote */
    input?: (updateNoteInput | null)} })
    /** Update a Note Scheduler and return NoteSchedulerType */
    updateNoteScheduler?: (updateNoteSchedulerPayloadGenqlSelection & { __args?: {
    /** Parameters for updateNoteScheduler */
    input?: (updateNoteSchedulerInput | null)} })
    /** update a notification */
    updateNotification?: (updateNotificationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateNotification */
    input?: (updateNotificationInput | null)} })
    /** Update a Notification Contact */
    updateNotificationContact?: (updateNotificationContactPayloadGenqlSelection & { __args?: {
    /** Parameters for updateNotificationContact */
    input?: (updateNotificationContactInput | null)} })
    /** Update multiple notification records at once */
    updateNotificationRecords?: (bulkUpdateNotificationRecordsPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkUpdateNotificationRecords */
    input?: (bulkUpdateNotificationRecordsInput | null)} })
    /** Update a Notification Setting and return Notification Setting */
    updateNotificationSetting?: (updateNotificationSettingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateNotificationSetting */
    input?: (updateNotificationSettingInput | null)} })
    /** update multiple notifications at once */
    updateNotifications?: (bulkUpdateNotificationsPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkUpdateNotifications */
    input?: (bulkUpdateNotificationsInput | null)} })
    /** Update an Offering */
    updateOffering?: (updateOfferingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOffering */
    input?: (updateOfferingInput | null)} })
    /** update OfficeallySftpAccount */
    updateOfficeallySftpAccount?: (updateOfficeallySftpAccountPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOfficeallySftpAccount */
    input?: (updateOfficeallySftpAccountInput | null)} })
    /** Update a OnboardingFlow and return OnboardingFlow */
    updateOnboardingFlow?: (updateOnboardingFlowPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOnboardingFlow */
    input?: (updateOnboardingFlowInput | null)} })
    /** Update a OnboardingItem and return OnboardingItem */
    updateOnboardingItem?: (updateOnboardingItemPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOnboardingItem */
    input?: (updateOnboardingItemInput | null)} })
    /** Update Org Owner of Organization */
    updateOrgOwner?: (updateOrgOwnerPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOrgOwner */
    input?: (updateOrgOwnerInput | null)} })
    /** Update Organization */
    updateOrganization?: (updateOrganizationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOrganization */
    input?: (updateOrganizationInput | null)} })
    /** Update a OrganizationCptCode Object */
    updateOrganizationCptCode?: (updateOrganizationCptCodePayloadGenqlSelection & { __args?: {
    /** Parameters for updateOrganizationCptCode */
    input?: (updateOrganizationCptCodeInput | null)} })
    /** Update org members */
    updateOrganizationMember?: (updateOrganizationMemberPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOrganizationMember */
    input?: (updateOrganizationMemberInput | null)} })
    /** Update a OrganizationMembership */
    updateOrganizationMembership?: (updateOrganizationMembershipPayloadGenqlSelection & { __args?: {
    /** Parameters for updateOrganizationMembership */
    input?: (updateOrganizationMembershipInput | null)} })
    updateOrganizationUiConfiguration?: (UpdateUiConfigurationPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateUiConfiguration */
    input?: (UpdateUiConfigurationInput | null)} })
    /** update Permission Template */
    updatePermissionTemplate?: (updatePermissionTemplatePayloadGenqlSelection & { __args?: {
    /** Parameters for updatePermissionTemplate */
    input?: (updatePermissionTemplateInput | null)} })
    /** Update a policy */
    updatePolicy?: (updatePolicyMutationPayloadGenqlSelection & { __args?: {
    /** Parameters for updatePolicyMutation */
    input?: (updatePolicyMutationInput | null)} })
    /** Update a Procedure Object */
    updateProcedure?: (updateProcedurePayloadGenqlSelection & { __args?: {
    /** Parameters for updateProcedure */
    input?: (updateProcedureInput | null)} })
    /** Update a product */
    updateProduct?: (updateProductPayloadGenqlSelection & { __args?: {
    /** Parameters for updateProduct */
    input?: (updateProductInput | null)} })
    /** Update ProviderCptCode Objects */
    updateProviderCptCodes?: (updateProviderCptCodesPayloadGenqlSelection & { __args?: {
    /** Parameters for updateProviderCptCodes */
    input?: (updateProviderCptCodesInput | null)} })
    /** update a received fax */
    updateReceivedFax?: (updateReceivedFaxPayloadGenqlSelection & { __args?: {
    /** Parameters for updateReceivedFax */
    input?: (updateReceivedFaxInput | null)} })
    /** Update a care plan recommendation */
    updateRecommendation?: (updateRecommendationPayloadGenqlSelection & { __args?: {
    /** Parameters for updateRecommendation */
    input?: (updateRecommendationInput | null)} })
    /** update a recurring form */
    updateRecurringForm?: (updateRecurringFormPayloadGenqlSelection & { __args?: {
    /** Parameters for updateRecurringForm */
    input?: (updateRecurringFormInput | null)} })
    /** Update Referral */
    updateReferral?: (updateReferralPayloadGenqlSelection & { __args?: {
    /** Parameters for updateReferral */
    input?: (updateReferralInput | null)} })
    /** Update Referring Physician */
    updateReferringPhysician?: (updateReferringPhysicianPayloadGenqlSelection & { __args?: {
    /** Parameters for updateReferringPhysician */
    input?: (updateReferringPhysicianInput | null)} })
    /** Add Reply To Email Addresses to User */
    updateReplyToEmailAddresses?: (AddReplyToEmailAddressesPayloadGenqlSelection & { __args?: {
    /** Parameters for AddReplyToEmailAddresses */
    input?: (AddReplyToEmailAddressesInput | null)} })
    /** update requested payment */
    updateRequestedPayment?: (updateRequestedPaymentPayloadGenqlSelection & { __args?: {
    /** Parameters for updateRequestedPayment */
    input?: (updateRequestedPaymentInput | null)} })
    /** Update an existing saved filter */
    updateSavedFilter?: (updateSavedFilterPayloadGenqlSelection & { __args?: {
    /** Parameters for updateSavedFilter */
    input?: (updateSavedFilterInput | null)} })
    /** Update a Smart Phrase */
    updateSmartPhrase?: (updateSmartPhrasePayloadGenqlSelection & { __args?: {
    /** Parameters for updateSmartPhrase */
    input?: (updateSmartPhraseInput | null)} })
    /** Update a Smoking Status */
    updateSmokingStatus?: (updateSmokingStatusPayloadGenqlSelection & { __args?: {
    /** Parameters for updateSmokingStatus */
    input?: (updateSmokingStatusInput | null)} })
    /** Archive/Unarchive a Course */
    updateState?: (updateStatePayloadGenqlSelection & { __args?: {
    /** Parameters for updateState */
    input?: (updateStateInput | null)} })
    /** Updates a payment card */
    updateStripeCustomerDetail?: (updateStripeCustomerDetailPayloadGenqlSelection & { __args?: {
    /** Parameters for updateStripeCustomerDetail */
    input?: (updateStripeCustomerDetailInput | null)} })
    /** Update Stripe Verification Details */
    updateStripeVerificationDetails?: (updateStripeVerificationDetailsPayloadGenqlSelection & { __args?: {
    /** Parameters for updateStripeVerificationDetails */
    input?: (updateStripeVerificationDetailsInput | null)} })
    /** update Subscription */
    updateSubscription?: (updateSubscriptionPayloadGenqlSelection & { __args?: {
    /** Parameters for updateSubscription */
    input?: (updateSubscriptionInput | null)} })
    /** Update a SuperBill */
    updateSuperBill?: (updateSuperBillPayloadGenqlSelection & { __args?: {
    /** Parameters for updateSuperBill */
    input?: (updateSuperBillInput | null)} })
    /** Update a custom user tag */
    updateTag?: (updateTagPayloadGenqlSelection & { __args?: {
    /** Parameters for updateTag */
    input?: (updateTagInput | null)} })
    /** Update a task for provider */
    updateTask?: (updateTaskPayloadGenqlSelection & { __args?: {
    /** Parameters for updateTask */
    input?: (updateTaskInput | null)} })
    /** Update multiple tasks provider */
    updateTasksBulk?: (bulkUpdateTasksPayloadGenqlSelection & { __args?: {
    /** Parameters for bulkUpdateTasks */
    input?: (bulkUpdateTasksInput | null)} })
    /** Update a UniqueDeviceIdentifier Object */
    updateUniqueDeviceIdentifier?: (updateUniqueDeviceIdentifierPayloadGenqlSelection & { __args?: {
    /** Parameters for updateUniqueDeviceIdentifier */
    input?: (updateUniqueDeviceIdentifierInput | null)} })
    /** Update the current user, or a patient that the current user has access to. To update other org members, use updateOrganizationMembership */
    updateUser?: (updateUserPayloadGenqlSelection & { __args?: {
    /** Parameters for updateUser */
    input?: (updateUserInput | null)} })
    /** Updates the appointment pricing for this user */
    updateUserAppointmentPricing?: (updateUserAppointmentPricingPayloadGenqlSelection & { __args?: {
    /** Parameters for updateUserAppointmentPricing */
    input?: (updateUserAppointmentPricingInput | null)} })
    /** Update User's Email Address */
    updateUserEmail?: (UpdateUserEmailPayloadGenqlSelection & { __args?: {
    /** Parameters for UpdateUserEmail */
    input?: (UpdateUserEmailInput | null)} })
    /** Update a Group */
    updateUserGroup?: (updateUserGroupPayloadGenqlSelection & { __args?: {
    /** Parameters for updateUserGroup */
    input?: (updateUserGroupInput | null)} })
    /** Update Webhook */
    updateWebhook?: (updateWebhookPayloadGenqlSelection & { __args?: {
    /** Parameters for updateWebhook */
    input?: (updateWebhookInput | null)} })
    /** Enable Zus integration for provider account */
    updateZus?: (UpdatePayloadGenqlSelection & { __args?: {
    /** Parameters for Update */
    input?: (UpdateInput | null)} })
    /** Upload a CMS1500 batch to CandidHealth */
    uploadBatchToCandidHealth?: (uploadBatchToCandidHealthPayloadGenqlSelection & { __args?: {
    /** Parameters for uploadBatchToCandidHealth */
    input?: (uploadBatchToCandidHealthInput | null)} })
    /** Upload a CMS1500 batch to ChangeHealth */
    uploadBatchToChangeHealth?: (uploadBatchToChangeHealthPayloadGenqlSelection & { __args?: {
    /** Parameters for uploadBatchToChangeHealth */
    input?: (uploadBatchToChangeHealthInput | null)} })
    /** Upload a CMS1500 batch to OfficeAlly */
    uploadBatchToOfficeally?: (uploadBatchToOfficeallyPayloadGenqlSelection & { __args?: {
    /** Parameters for uploadBatchToOfficeally */
    input?: (uploadBatchToOfficeallyInput | null)} })
    /** Upload a CMS1500 to integrations: ChangeHealth, OfficeAlly, CandidHealth */
    uploadCms1500sToIntegrations?: (uploadToIntegrationsPayloadGenqlSelection & { __args?: {
    /** Parameters for uploadToIntegrations */
    input?: (uploadToIntegrationsInput | null)} })
    /** Verify 2FA code for Human */
    validateVerificationToken?: (validateVerificationTokenPayloadGenqlSelection & { __args?: {
    /** Parameters for validateVerificationToken */
    input?: (validateVerificationTokenInput | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Chat message object */
export interface NoteGenqlSelection{
    /** url for note audio */
    attached_audio_url?: boolean | number
    /** url for note image */
    attached_image_url?: boolean | number
    /** note content */
    content?: boolean | number
    /** conversation id */
    conversation_id?: boolean | number
    /** The time at which this note was created */
    created_at?: boolean | number
    /** User who created note */
    creator?: UserGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** True if this note deleted by a user */
    deleted_by_user?: boolean | number
    /** id for note document */
    document_id?: boolean | number
    /** Name of attached document */
    document_name?: boolean | number
    /** The unique identifier of the note */
    id?: boolean | number
    /** Name of attached image */
    image_name?: boolean | number
    /** True if this note is using as auto response message */
    is_autoresponse?: boolean | number
    /** A User which created a Note on behalf of a Conversation Owner */
    on_behalf_user?: UserGenqlSelection
    /**
     * @deprecated Use conversation_memberships of conversation instead
     * receiver of note
     */
    recipient_id?: boolean | number
    /** Scheduled sent at */
    scheduled_at?: boolean | number
    /** Get associated task with a chat message */
    task?: TaskGenqlSelection
    /** The time at which this note was updated or marked as deleted by a user */
    updated_at?: boolean | number
    /** creator of note */
    user_id?: boolean | number
    /** conditional to see if user recipient viewd note. In community chats, you need to pass in a viewer_id */
    viewed?: { __args: {
    /** ID of the user that you want to check has viewed the note */
    viewer_id?: (Scalars['ID'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a note */
export interface NoteInput {
/** The document attached to the note */
attached_document?: (Scalars['Upload'] | null),
/** The image attached to the note */
attached_image?: (Scalars['Upload'] | null),
/** The content of the note */
content?: (Scalars['String'] | null)}


/** Scheduled chat notes */
export interface NoteSchedulerGenqlSelection{
    /** Scheduled messsage blast: get first four users */
    first_four_invitees?: UserGenqlSelection
    /** The unique identifier of the scheduler */
    id?: boolean | number
    /** The number of invitees */
    invitees_count?: boolean | number
    /** Get last conversation task */
    last_task?: TaskGenqlSelection
    /** The note */
    note?: NoteGenqlSelection
    /** The content of the note */
    note_content?: boolean | number
    /** Get all directly selected user ids */
    participant_ids?: boolean | number
    /** Get all directly selected user groups */
    selected_user_groups?: UserGroupGenqlSelection
    /** Get all directly selected users */
    selected_users?: UserGenqlSelection
    /** The date and time when the scheduler was last updated. */
    updated_at?: boolean | number
    /** Owner user of a note scheduler */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A notification */
export interface NotificationGenqlSelection{
    /** returns the associated entry if type is EntryNotification, otherwise, nil */
    associated_entry?: EntryGenqlSelection
    /** The id of the object associated with the notification */
    associated_object?: boolean | number
    /** The creation time of the notification */
    created_at?: boolean | number
    /** creator name of this notification */
    creator_user_name?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The unique identifier of the notification */
    id?: boolean | number
    /** The link that the notification goes to */
    link?: boolean | number
    /** The full link that the notification goes to */
    link_string?: boolean | number
    /** The message body of the notification */
    message?: boolean | number
    /** recipient of this notification */
    other_party?: UserGenqlSelection
    /** The recipient of the notification */
    other_party_id?: boolean | number
    /** This turns to true if the user clicks on the notification */
    read?: boolean | number
    /** This turns to true if the user loads the notification */
    seen?: boolean | number
    /** The type of notification */
    type?: boolean | number
    /** creator of this notification */
    user?: UserGenqlSelection
    /** The creator of the notification */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A notification contact */
export interface NotificationContactGenqlSelection{
    /** Has personal client portal access */
    client_portal_access?: boolean | number
    /** Client portal settings */
    client_portal_setting?: ClientPortalSettingGenqlSelection
    /** contact type */
    contact_type?: boolean | number
    /** should a notifications of user be copied to contact */
    copy_notifications?: boolean | number
    /** contact email */
    email?: boolean | number
    /** is emergency contact */
    emergency?: boolean | number
    /** first name of a contact */
    first_name?: boolean | number
    /** full legal name with preferred */
    full_legal_name_with_preferred?: boolean | number
    /** full name of a contact */
    full_name?: boolean | number
    /** The unique identifier of the contact */
    id?: boolean | number
    /** last name of a contact */
    last_name?: boolean | number
    /** Linked user to notification contact */
    linked_client?: UserGenqlSelection
    /** ID of the linked user account */
    linked_client_id?: boolean | number
    /** contact phone number */
    phone_number?: boolean | number
    /** relationship between contact and user */
    relationship?: boolean | number
    /** Date notification contact was last updated */
    updated_at?: boolean | number
    /** Owner of this notification contact */
    user?: UserGenqlSelection
    /** user id */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a notification contact */
export interface NotificationContactInput {
/** If true, the notification contact will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The email of the notification contact */
email?: (Scalars['String'] | null),
/** The ID of the notification contact */
id?: (Scalars['ID'] | null)}


/** An object containing the users preferences on notification */
export interface NotificationSettingGenqlSelection{
    /** The unique identifier of the setting */
    id?: boolean | number
    /** An option of receiving pdates and special offers [email/sms] */
    marketing_communcation_preference?: boolean | number
    /** Send an email when a course module is completed */
    notification_on_module_completion?: boolean | number
    /** Receive updates and special offers */
    receive_updates_and_offers?: boolean | number
    /** Get an email whenever a client posts a comment */
    send_comment_emails?: boolean | number
    /** Get a push notification when there is a new comment */
    send_comment_push?: boolean | number
    /** Send an email when a client completes a program */
    send_course_complete_email?: boolean | number
    /** Send an email 5 minutes before the appointment */
    send_email_before_appointment?: boolean | number
    /** Send an email when a new appointment is booked */
    send_email_on_appointment_book?: boolean | number
    /** Send an email when an appointment is cancelled */
    send_email_on_appointment_cancel?: boolean | number
    /** Send an email to provider when client has been assigned */
    send_email_on_client_has_been_assigned_to_you?: boolean | number
    /** Get an email when fax delivery fails */
    send_email_on_fax_delivery_failure?: boolean | number
    /** Get an email when a fax is received */
    send_email_on_fax_received?: boolean | number
    /** Get an email if client completed an intake flow */
    send_email_on_intake_flow_complete?: boolean | number
    /** Get an email if client completed an intake flow item */
    send_email_on_intake_flow_item_complete?: boolean | number
    /** Get an email if client started an intake flow */
    send_email_on_intake_flow_start?: boolean | number
    /** Get an email when a new document is uploaded */
    send_email_on_new_document?: boolean | number
    /** Get an email when a new folder is created */
    send_email_on_new_folder?: boolean | number
    /** Send an email when a client purchases a package */
    send_email_on_package_purchase?: boolean | number
    /** Get an email when a scheduled payment fails */
    send_email_on_scheduled_payment_failed?: boolean | number
    /** Send an email to primary account holder when subscription payment is made */
    send_email_receipt_for_subscription_payment?: boolean | number
    /** Get an email when provider adds an emoji to a journal entry */
    send_emoji_email?: boolean | number
    /** Get a push notification when provider adds an emoji to a journal entry */
    send_emoji_push?: boolean | number
    /** Get an email whenever a client posts an entry */
    send_entry_emails?: boolean | number
    /** Send an email to client when reminder to complete goal checked */
    send_goal_reminder_email?: boolean | number
    /** Send a push notification to client when reminder to complete goal checked */
    send_goal_reminder_push?: boolean | number
    /** Get an email whenever you get a new message in a group chat */
    send_group_message_emails?: boolean | number
    /** Get a push notification when there is a new message in a group chat */
    send_group_message_push?: boolean | number
    /** Sends an email to the client provider when their insurance is about to expire */
    send_insurance_expiry_notifications?: boolean | number
    /** Get an email whenever you get a new message */
    send_message_emails?: boolean | number
    /** Get a push notification when there is a new message */
    send_message_push?: boolean | number
    /** Get an email when a new client is added to the organization */
    send_new_clients_emails?: boolean | number
    /** Send an email to the client provider when client has updated their insurance information */
    send_new_insurance_added_notifications?: boolean | number
    /** Send an email to client when new program module is available */
    send_new_module_email?: boolean | number
    /** Send a push notification to client when new program module is available */
    send_new_module_push?: boolean | number
    /** Get a push notification 5 minutes before the appointment */
    send_push_before_appointment?: boolean | number
    /** The date and time of the last update of the setting */
    updated_at?: boolean | number
    /** The owner of the notification setting */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a food nutrients */
export interface NutrientsInput {
/** The number of added sugars in the food */
added_sugars?: (Scalars['String'] | null),
/** The amount of calcium in the food */
calcium?: (Scalars['String'] | null),
/** The amount of carbohydrates in the food */
carbs?: (Scalars['String'] | null),
/** The amount of cholesterol in the food */
cholesterol?: (Scalars['String'] | null),
/** The amount of fat in the food */
fat?: (Scalars['String'] | null),
/** The amount of iron in the food */
iron?: (Scalars['String'] | null),
/** The number of kilocalories in the food */
kcal?: (Scalars['String'] | null),
/** The amount of monounsaturated fat in the food */
monounsaturated_fat?: (Scalars['String'] | null),
/** The amount of polyunsaturated fat in the food */
polyunsaturated_fat?: (Scalars['String'] | null),
/** The amount of potassium in the food */
potassium?: (Scalars['String'] | null),
/** The amount of protein in the food */
protein?: (Scalars['String'] | null),
/** The amount of saturated fat in the food */
saturated_fat?: (Scalars['String'] | null),
/** The amount of sodium in the food */
sodium?: (Scalars['String'] | null),
/** The amount of total fiber in the food */
total_fiber?: (Scalars['String'] | null),
/** The amount of total sugars in the food */
total_sugars?: (Scalars['String'] | null),
/** The amount of trans fat in the food */
trans_fat?: (Scalars['String'] | null),
/** The amount of vitamin A in the food */
vitamin_a?: (Scalars['String'] | null),
/** The amount of vitamin C in the food */
vitamin_c?: (Scalars['String'] | null),
/** The amount of vitamin D in the food */
vitamin_d?: (Scalars['String'] | null)}


/** Offering (or Package) */
export interface OfferingGenqlSelection{
    /** Formatted frequency string abbreviated for offering list page */
    abbreviated_frequency_times_string?: boolean | number
    /** Whether or not this packages has been archived */
    archived?: boolean | number
    /** Ask for a CC (even on a free package) */
    ask_for_cc?: boolean | number
    /** frequency client will be billed for package */
    billing_frequency?: boolean | number
    /** count of billing items for a given offering */
    billing_items_count?: boolean | number
    /** True if package is allowed to be gifted to other clients. Currently only available for non-recurring offerings */
    can_be_gifted?: boolean | number
    /** If false the payment for the offering should be collected manually at a later time */
    charge_immediately?: boolean | number
    /** course id associated with this package */
    course_id?: boolean | number
    /** created at */
    created_at?: boolean | number
    /** currency used to pay for this package */
    currency?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Description of the package, not allowing nil */
    description?: boolean | number
    /** ID of the embedded custom module form */
    embed_question_form_id?: boolean | number
    /** fb_pixel */
    fb_pixel?: boolean | number
    /** first time payment price of package */
    first_time_payment?: boolean | number
    /** Formatted frequency string */
    frequency_times_string?: boolean | number
    /** The unique identifier of the offering */
    id?: boolean | number
    /** A URL to purchase the package */
    immediate_purchase_url?: boolean | number
    /** Whether the package includes a course that has ended */
    includes_ended_fixed_course?: boolean | number
    /** initial payment amount of package */
    initial_payment_amount?: boolean | number
    /** initial price of package including applicable taxes */
    initial_price_with_taxes?: boolean | number
    /** selected meal plan from living plate */
    living_plate_meal_plan_id?: boolean | number
    /** if this offering has a living plate meal plan associated, returns a link to living plate meal plan preview */
    living_plate_meal_plan_name?: boolean | number
    /** if this offering has a living plate meal plan associated, returns a link to living plate meal plan preview */
    living_plate_preview_url?: boolean | number
    /** Number of times the package could be purchased. Unlimited if set to nil */
    max_purchases?: boolean | number
    /** meal plan options in offering (currently only from living plate) */
    meal_plan_options?: MealPlanGenqlSelection
    /** minimum_quantity */
    minimum_quantity?: boolean | number
    /** name of package */
    name?: boolean | number
    /** courses related to offering */
    offering_courses?: OfferingCourseGenqlSelection
    /** user groups that are specific to this offering */
    offering_group_visibilities?: OfferingGroupVisibilityGenqlSelection
    /** offering image */
    offering_image?: OfferingImageGenqlSelection
    /** id of offering image */
    offering_image_id?: boolean | number
    /** URL of the offering image to use */
    offering_image_url?: boolean | number
    /** appointment types related to offering */
    offering_includes?: (OfferingIncludeGenqlSelection & { __args?: {
    /** If present, only return offering includes that include the given appointment type */
    appointment_type_id?: (Scalars['ID'] | null), 
    /** If true, only return offering includes that are bookable by the client */
    only_bookable_by_client?: (Scalars['Boolean'] | null)} })
    /** count of offering includes associated with offering */
    offering_includes_count?: boolean | number
    /** lab options included in offering */
    offering_lab_options?: OfferingLabOptionGenqlSelection
    /** Taxes on offering products */
    offering_product_taxes?: boolean | number
    /** Products included in the offering */
    offering_products?: OfferingProductGenqlSelection
    /** on on_purchase_ifs_tag_id */
    on_purchase_ifs_tag_id?: boolean | number
    /** Shows whether user group should be changed when client which is already in the user group is buying the package */
    override_group_on_purchase?: boolean | number
    /** price of package */
    price?: boolean | number
    /** price per minute */
    price_per_minute?: boolean | number
    /** repeat times */
    repeat_times?: boolean | number
    /** When true, the package requires appointment booking during package purchase */
    require_booking_purchase?: boolean | number
    /** position of package when displayed in packages list */
    row_order?: boolean | number
    /** offering image id */
    selected_image_id?: boolean | number
    /** show free text to customers on offerings of zero price */
    show_free_text?: boolean | number
    /** show offering toggle */
    show_offering?: boolean | number
    /** show price toggle */
    show_price?: boolean | number
    /** start_fb_pixel */
    start_fb_pixel?: boolean | number
    /** total of billing_items.amount_paid for a given offering */
    total_revenue?: boolean | number
    /** When false, the package is at its purchase cap, and cannot be bought by a client */
    under_purchase_cap?: boolean | number
    /** updated at */
    updated_at?: boolean | number
    /** The user who owns the package */
    user?: UserGenqlSelection
    /** user group id associated with this package */
    user_group_id?: boolean | number
    /** User group name associated with this offering */
    user_group_name?: boolean | number
    /** id of user */
    user_id?: boolean | number
    /** count of user package selections for a given offering */
    user_package_selections_count?: boolean | number
    /** user pays toggle */
    user_pays?: boolean | number
    /** video associated with offering */
    video_url?: boolean | number
    /** Whether the package is visible to all or to a specific group or completely hidden. */
    visibility_status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Offering Coupon */
export interface OfferingCouponGenqlSelection{
    /** The amount off due to this offering coupon */
    amount_off?: boolean | number
    /** The amount off due to this offering coupon */
    amount_off_string?: boolean | number
    /** The time this offering coupon is applied */
    applies_to_string?: boolean | number
    /** The code of this offering coupon */
    code?: boolean | number
    /** The time at which this offering coupon was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The time at which this offering coupon was deleted */
    deleted_at?: boolean | number
    /** The date the promo code expires at */
    expires_at?: boolean | number
    /** The flat amount off due to this offering coupon */
    flat_amount_off?: boolean | number
    /** The unique identifier of the coupon */
    id?: boolean | number
    /** The coupon is expired or valid, returns true if coupon is expired */
    is_expired?: boolean | number
    /** The coupon is expired or valid, returns true if the coupon is valid */
    is_valid?: boolean | number
    /** The amount of times the offering coupon has been used */
    number_of_times_used?: boolean | number
    /** The owner of this Offering Coupon */
    offering_coupon_owner?: UserGenqlSelection
    /** Names of offerings this coupon is connected to */
    package_connection_names?: boolean | number
    /** The promo type of this offering coupon */
    promo_type?: boolean | number
    /** The repeat times of this offering coupon */
    repeat_times?: boolean | number
    /** concatenated string of ammount off string and applies to string */
    to_one_line?: boolean | number
    /** The time at which this offering coupon was last updated at */
    updated_at?: boolean | number
    /** The amount of times the offering coupon can be used */
    usage_limit?: boolean | number
    /** The user id who created this offering coupon */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Offering Course */
export interface OfferingCourseGenqlSelection{
    /** course */
    course?: CourseGenqlSelection
    /** id of related course */
    course_id?: boolean | number
    /** created at */
    created_at?: boolean | number
    /** The unique identifier of the join */
    id?: boolean | number
    /** id of related offering */
    offering_id?: boolean | number
    /** udpated at */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** User groups that are specific to this offering will only be visible to clients in these user groups */
export interface OfferingGroupVisibilityGenqlSelection{
    /** The unique identifier of the visibility */
    id?: boolean | number
    /** name of the user group */
    name?: boolean | number
    /** id of related offering */
    offering_id?: boolean | number
    /** id of related user group */
    user_group_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Offering Image */
export interface OfferingImageGenqlSelection{
    /** created at */
    created_at?: boolean | number
    /** The unique identifier of the offering image */
    id?: boolean | number
    /** image content type */
    image_content_type?: boolean | number
    /** image file name */
    image_file_name?: boolean | number
    /** image file size */
    image_file_size?: boolean | number
    /** when image was updated */
    image_updated_at?: boolean | number
    /** url for image */
    image_url?: boolean | number
    /** name of image */
    name?: boolean | number
    /** updated at */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Offering image upload */
export interface OfferingImageUpload {
/** The image for upload */
image?: (Scalars['Upload'] | null)}


/** Offering Include */
export interface OfferingIncludeGenqlSelection{
    /** appointment type */
    appointment_type?: AppointmentTypeGenqlSelection
    /** id of related appointment type */
    appointment_type_id?: boolean | number
    /** created at */
    created_at?: boolean | number
    /** expires in */
    expires_in?: boolean | number
    /** form id */
    form_id?: boolean | number
    /** The unique identifier of the offering include. */
    id?: boolean | number
    /** whether or not the offering_include (appointment type) should be recurring */
    is_repeating?: boolean | number
    /** id of related offering */
    offering_id?: boolean | number
    /** quanity of appointments in package */
    quantity?: boolean | number
    /** whether or not the offering book */
    required_appointment_type?: boolean | number
    /** udpated at */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an include to an offering */
export interface OfferingIncludesFields {
/** The unique identifier of the appointment type */
appointment_type_id?: (Scalars['ID'] | null),
/** The unique identifier of the object */
id?: (Scalars['ID'] | null),
/** Whether the offering is repeating */
is_repeating?: (Scalars['Boolean'] | null),
/** The quantity of the offering */
quantity?: (Scalars['String'] | null),
/** Whether the appointment type is required */
required_appointment_type?: (Scalars['Boolean'] | null)}


/** Offering Lab Option */
export interface OfferingLabOptionGenqlSelection{
    /** created at */
    created_at?: boolean | number
    /** The unique identifier of the lab option */
    id?: boolean | number
    /** lab option */
    lab_option?: LabOptionGenqlSelection
    /** id of related appointment type */
    lab_option_id?: boolean | number
    /** id of related offering */
    offering_id?: boolean | number
    /** udpated at */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Offering product type */
export interface OfferingProductGenqlSelection{
    /** If true the quantity of the main product will be reduced, otherwise changing offering_product.quantity won't affect on the main product */
    deduct_main_quantity?: boolean | number
    /** The unique identifier of the offering product */
    id?: boolean | number
    /** ID of related offering */
    offering_id?: boolean | number
    /** The price of included product. If offering_product.price == nil, the price will be equal to product.price */
    price?: boolean | number
    /** A product included into the offering */
    product?: ProductGenqlSelection
    /** The quantity of included products */
    quantity?: boolean | number
    /** Tax amount if product has tax rate */
    tax_amount?: boolean | number
    /** If true tax will be added to the price */
    taxable?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for an offering product */
export interface OfferingProductInput {
/** If true, the offering product will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** If true, the main quantity will be deducted */
deduct_main_quantity?: (Scalars['Boolean'] | null),
/** The ID of the offering product */
id?: (Scalars['ID'] | null),
/** The price of the offering product */
price?: (Scalars['String'] | null),
/** The offering product */
product?: (ProductInput | null),
/** The quantity of the offering product */
quantity?: (Scalars['String'] | null),
/** If true, the offering product is taxable */
taxable?: (Scalars['Boolean'] | null)}


/** Offerings data type */
export interface OfferingsDataTypeGenqlSelection{
    /** The frequency of the offering */
    freq?: boolean | number
    /** The month of the offering */
    month?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Info on SFTP connection to OfficeAlly */
export interface OfficeallySftpAccountGenqlSelection{
    /** The OfficeAlly SFTP URL */
    ftp_url?: boolean | number
    /** The unique identifier of the connection */
    id?: boolean | number
    /** True if the SFTP connection is turned by user */
    is_enabled?: boolean | number
    /** True if the SFTP connection is working */
    is_valid?: boolean | number
    /** The last time we imported from the SFTP */
    last_imported_from?: boolean | number
    /** The SFTP OfficeAlly Username */
    username?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An onboarding flow that is comprised of onboarding items */
export interface OnboardingFlowGenqlSelection{
    /** The date this onboarding flow was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** If true, the flow has more froms after welcome */
    has_forms_after_welcome?: boolean | number
    /** The unique identifier of the flow */
    id?: boolean | number
    /** Check if current user organization has more than 1 provider */
    is_multiple_providers?: boolean | number
    /** The name of this onboarding flow */
    name?: boolean | number
    /** All onboarding items that make up the onboarding flow */
    onboarding_items?: (OnboardingItemGenqlSelection & { __args?: {
    /** If true, only return custom module forms */
    custom_module_forms_only?: (Scalars['Boolean'] | null)} })
    /** The number of onboarding items in the flow */
    onboarding_items_count?: boolean | number
    /** Owner of this onboarding flow */
    user?: UserGenqlSelection
    /** The user groups this onboarding flow is associated with */
    user_groups?: UserGroupGenqlSelection
    /** The number of user groups this onboarding flow is associated with */
    user_groups_count?: boolean | number
    /** The combined name list of the user groups this onboarding flow is associated with */
    user_groups_name_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An onboarding item that has something for the client to complete */
export interface OnboardingItemGenqlSelection{
    /** The URL to go to to edit the attached object */
    attached_object_edit_url?: boolean | number
    /** Custom text above the billing info screen */
    billing_disclaimer?: boolean | number
    /** Return the ID of the associated completed form_answer_group */
    completed_form_id?: boolean | number
    /** The completed onboarding item for the given user id (from args) */
    completed_onboarding_item?: CompletedOnboardingItemGenqlSelection
    /** The relevant date to show */
    date_to_show?: boolean | number
    /** The display name for the onboarding item (based off the attached object) */
    display_name?: boolean | number
    /** Onboarding item has matrix field */
    has_matrix_field?: boolean | number
    /** The unique identifier of the onboarding item */
    id?: boolean | number
    /** Return the ID of the incomplete form */
    incomplete_form_id?: boolean | number
    /** Show if it the last item in related onboarding flow */
    is_last_item?: { __args: {
    /** Show if it the last item in related onboarding flow */
    custom_module_forms_only?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Whether the user can skip this onboarding item */
    is_skippable?: boolean | number
    /** The ID of the associated item */
    item_id?: boolean | number
    /** The type of item attached to this onboarding item */
    item_type?: boolean | number
    /** The user group this onboarding flow is assigned to */
    onboarding_flow?: OnboardingFlowGenqlSelection
    /** ID of the onboarding flow */
    onboarding_flow_id?: boolean | number
    /** Custom text above the photo ID screen */
    photo_id_disclaimer?: boolean | number
    /** Custom text above the insurance policy screen */
    policy_disclaimer?: boolean | number
    /** Owner of this onboarding item */
    user?: UserGenqlSelection
    /** The URL to view the onboarding item */
    view_url?: boolean | number
    /** Custom text for the welcome screen */
    welcome_text?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a location of an organization */
export interface OrgLocationInput {
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The graphql_name of the location */
name?: (Scalars['String'] | null),
/** The NPI of the location */
npi?: (Scalars['String'] | null),
/** The other ID of the location */
other_id?: (Scalars['String'] | null),
/** The other ID qual of the location */
other_id_qual?: (Scalars['String'] | null),
/** The place of service ID of the location */
place_of_service_id?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The ID of user who owns the location */
user_id?: (Scalars['String'] | null),
/** The zip code */
zip?: (Scalars['String'] | null)}


/** An organization, that is an umbrella group for multiple providers */
export interface OrganizationGenqlSelection{
    /** The active potential care team members of the organization */
    active_care_team_members?: (UserGenqlSelection & { __args?: {
    /** The list of IDs of interested providers */
    provider_ids?: ((Scalars['ID'] | null)[] | null), 
    /** Filters the provider list to only include users who have one of the specified tags applied. Ignored if org_level is not true */
    tag_ids?: ((Scalars['ID'] | null)[] | null), 
    /** An array of provider record identifiers. When passed in, only providers with these matching record identifiers are returned. */
    record_identifiers?: ((Scalars['String'] | null)[] | null), state_licenses?: ((Scalars['String'] | null)[] | null)} })
    /** The active users of the organization used for starting new conversations */
    active_members_for_conversation?: (UserGenqlSelection & { __args?: {exclude_sub_org_members?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null)} })
    /** Returns organization appointment locations */
    appointment_locations?: AppointmentLocationGenqlSelection
    /** Can have suborgs for this org */
    can_have_suborgs?: boolean | number
    /** The creation date of the organization */
    created_at?: boolean | number
    /**
     * @deprecated No longer supported
     * The filled out teaching kitchen form
     */
    filled_tk_form?: FormAnswerGroupGenqlSelection
    /** The unique identifier of the organization */
    id?: boolean | number
    /** The location of the organization */
    location?: LocationGenqlSelection
    /** The name of the organization */
    name?: boolean | number
    /** The NPI of the organization */
    npi?: boolean | number
    /** The number of users in the organization */
    num_users?: boolean | number
    /** The ID of the onboarding flow for org providers */
    onboarding_flow_id?: boolean | number
    /** The active organization memberships of the organization */
    only_active_organization_memberships?: OrganizationMembershipGenqlSelection
    /** The active providers of the organization */
    only_active_providers?: (UserGenqlSelection & { __args?: {
    /** If false return only active providers of current org */
    include_suborg_providers?: (Scalars['Boolean'] | null), 
    /** Customize IDs of iterested providers */
    provider_ids?: ((Scalars['ID'] | null)[] | null)} })
    /** The number of active providers of the organization */
    only_active_providers_count?: { __args: {
    /** Customize IDs of iterested providers */
    provider_ids?: ((Scalars['ID'] | null)[] | null)} } | boolean | number
    /** The active support users of the organization */
    only_active_support?: UserGenqlSelection
    /** The number of active support user of the organization */
    only_active_support_count?: boolean | number
    /** Potential Organization Roles for this Organization */
    org_roles?: boolean | number
    /** Returns organization cpt codes */
    organization_cpt_codes?: OrganizationCptCodeTypeGenqlSelection
    /** The first organization info of the organization */
    organization_info?: OrganizationInfoGenqlSelection
    /** The organization infos of the organization */
    organization_infos?: (OrganizationInfoGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null)} })
    /** The count of organization infos of the organization */
    organization_infos_count?: boolean | number
    /** The organization memberships of the organization */
    organization_memberships?: (OrganizationMembershipGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), use_filters?: (Scalars['Boolean'] | null)} })
    /** The total count of organization memberships on this organization */
    organization_memberships_count?: boolean | number
    /** The other id */
    other_id?: boolean | number
    /** The other ID qualifier (what type of ID it is) */
    other_id_qual?: boolean | number
    /** The owner of the organization */
    owner?: UserGenqlSelection
    /** The ID of the org owner */
    owner_id?: boolean | number
    /** The owner of the org's subscription */
    owner_subscription?: SubscriptionInstanceGenqlSelection
    /** Parent organization for this org */
    parent_organization?: OrganizationGenqlSelection
    /** ID of the parent organization */
    parent_organization_id?: boolean | number
    /** Permission templates for this org */
    permission_templates?: PermissionTemplateTypeGenqlSelection
    /** The phone number of the organization */
    phone_number?: boolean | number
    /** The providers of the organization */
    providers?: (UserGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null), 
    /** Two letter state abbreviation (e.g. "CA", "NY") */
    licensed_in_state?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), provider_ids?: ((Scalars['ID'] | null)[] | null), should_paginate?: (Scalars['Boolean'] | null), with_private_notes_for_id?: (Scalars['String'] | null), 
    /** When passed in, only providers with all the passed-in tags will be returned. */
    with_tag_ids?: ((Scalars['ID'] | null)[] | null)} })
    /** The number of providers in the organization */
    providers_count?: boolean | number
    /** The number of users in the organization connected their rupa health account */
    rupa_health_members?: UserGenqlSelection
    /** Returns organization state licenses */
    state_licenses?: boolean | number
    /** Suborganizations for this org */
    suborganizations?: OrganizationGenqlSelection
    /** Returns organization tags */
    tags?: TagGenqlSelection
    /** Tax ID of organization */
    tax_id?: boolean | number
    /** The tax is of the organization */
    tax_id_type?: boolean | number
    /** User groups that are in the organization */
    user_groups?: UserGroupGenqlSelection
    /** The users of the organization */
    users?: (UserGenqlSelection & { __args?: {active_status?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), show_all_by_default?: (Scalars['Boolean'] | null)} })
    /** Builder ID for the Zus token */
    zus_builder_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** OrganizationCptCode object */
export interface OrganizationCptCodeTypeGenqlSelection{
    /** The CPT code id */
    cpt_code_id?: boolean | number
    /** date created */
    created_at?: boolean | number
    /** The unique identifier of the join */
    id?: boolean | number
    /** The organization id */
    organization_id?: boolean | number
    /** The price per unit */
    price_per_unit?: boolean | number
    /** date updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Specific information for an organization */
export interface OrganizationInfoGenqlSelection{
    /** The creation date of the organization */
    created_at?: boolean | number
    /** The External ID of the organization */
    external_id?: boolean | number
    /** The unique identifier of the organization info */
    id?: boolean | number
    /** The number type ID of the organization */
    id_number_type?: boolean | number
    /** The location of the organization */
    location?: LocationGenqlSelection
    /** The name of the organization */
    name?: boolean | number
    /** The NPI of the organization */
    npi?: boolean | number
    /** The associated organization */
    organization?: OrganizationGenqlSelection
    /** The other id */
    other_id?: boolean | number
    /** The other ID qualifier (what type of ID it is) */
    other_id_qual?: boolean | number
    /** The phone number of the organization */
    phone_number?: boolean | number
    /** Set billing provider as primary */
    primary?: boolean | number
    /** The tax id of the organization */
    tax_id?: boolean | number
    /** The tax id type of the organization */
    tax_id_type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for adding an organization info */
export interface OrganizationInfoInput {
/** The ID of the organization */
id?: (Scalars['ID'] | null),
/** The location of the organization */
location?: (LocationInput | null),
/** The graphql_name of the organization */
name?: (Scalars['String'] | null),
/** The NPI of the organization */
npi?: (Scalars['String'] | null),
/** The ID of the organization */
organization_id?: (Scalars['ID'] | null),
/** The other ID of the organization */
other_id?: (Scalars['String'] | null),
/** The other ID qual of the organization */
other_id_qual?: (Scalars['String'] | null),
/** The phone number of the organization */
phone_number?: (Scalars['String'] | null),
/** The tax ID of the organization */
tax_id?: (Scalars['String'] | null),
/** The tax ID type of the organization */
tax_id_type?: (Scalars['String'] | null)}


/** An organization membership */
export interface OrganizationMembershipGenqlSelection{
    /** Allows group level actions (e.g. send group messages in chat, assigning group to course modules, request form completions from group) */
    allow_group_level_actions?: boolean | number
    /** If true, clients who this org member has been added as a care team member will be able to schedule appointments with them. */
    allow_self_scheduling_in_care_team?: boolean | number
    /** If true, clients who this org member has been added as a care team member for will automatically see a Chat conversation with this org member. */
    auto_create_convo_for_care_team?: boolean | number
    /** If true, the user can access calendar quick share */
    can_access_calendar_quick_share?: boolean | number
    /** If true, the user should be able to access other active organization members conversations */
    can_access_to_members_chat?: boolean | number
    /** If true, the user can add new clients */
    can_add_clients?: boolean | number
    /** If true, the user can add new people to the organization */
    can_add_members?: boolean | number
    /** If true, the user should be able to add other active organization members to chat */
    can_add_members_to_chat?: boolean | number
    /** If true, the user should be able to assign a task to any member of their organization */
    can_assign_tasks_to_all_org_members?: boolean | number
    /** If true, the user can be added to the care team members list for a client */
    can_be_care_team_member?: boolean | number
    /** If true, the user can charge clients */
    can_charge_clients?: boolean | number
    /** If true, the user can delete charting notes */
    can_delete_charting_notes?: boolean | number
    /** If true, the user can delete faxes */
    can_delete_faxes?: boolean | number
    /** If true, the user can edit appontment types */
    can_edit_appointment_types?: boolean | number
    /** If true, the user can edit calendar */
    can_edit_calendar?: boolean | number
    /** If true, the user can edit client credit */
    can_edit_credit?: boolean | number
    /** If true, the user can edit documents */
    can_edit_docs?: boolean | number
    /** If true, the user can edit eduacation content */
    can_edit_education?: boolean | number
    /** If true, the user can edit forms */
    can_edit_forms?: boolean | number
    /** If true, the user can manage the people and roles in the organization */
    can_edit_members?: boolean | number
    /** If true, the user can edit client packages */
    can_edit_packages?: boolean | number
    /** If true, the user can add ,edit and delete products */
    can_edit_products?: boolean | number
    /** If true, the user can edit settings */
    can_edit_settings?: boolean | number
    /** If true, the user can enroll and remove clients from programs */
    can_enroll_clients_to_programs?: boolean | number
    /**
     * @deprecated Use `can_lock_own_charting_notes` instead
     * deprecated, use can_lock_own_charting_notes instead
     */
    can_lock_form_answer_groups?: boolean | number
    /** If true, the user can lock charting notes other providers created */
    can_lock_others_charting_notes?: boolean | number
    /** If true, the user can lock charting notes they created */
    can_lock_own_charting_notes?: boolean | number
    /** If true, the user should be able to mark tasks that are assigned to other org members as completed */
    can_mark_assigned_tasks_to_other_org_members_as_completed?: boolean | number
    /** If true, the user can merge clients */
    can_merge_clients?: boolean | number
    /** If true, view labs page and view patient lab results */
    can_order_labs?: boolean | number
    /** If true, the user can remove clients */
    can_remove_client?: boolean | number
    /** If true, the user should be able to rename or delete tags */
    can_rename_and_delete_tags?: boolean | number
    /** If true, the user can request to prescribe controlled substances. Requires E-Rx */
    can_request_to_prescribe_controlled_substances?: boolean | number
    /** If true, the user can view the billing tab */
    can_see_billing?: boolean | number
    /** If true, the user can see all calendars in the organization */
    can_see_calendar?: boolean | number
    /** If true, the user can see all clients in the organization */
    can_see_clients?: boolean | number
    /** If true, the user can see documents within the entire org */
    can_see_docs?: boolean | number
    /** If true, the user can see incoming faxes */
    can_see_faxes?: boolean | number
    /** If true user should be able to see fullscript tab in client profile and view fullscript box in homepage */
    can_see_fullscript_tab?: boolean | number
    /** If true, the user should be able see a button that allows them to signup for dosespot in the overview section of the client profile */
    can_see_option_to_use_erx_dosespot?: boolean | number
    /** If true, the user can see sent faxes */
    can_see_sent_faxes?: boolean | number
    /** If true, the user can see transfers tab in billing page */
    can_see_transfers?: boolean | number
    /** If true, the user can set a password for organization clients */
    can_set_client_password?: boolean | number
    /** If true, the user can share documents and folders with organizations members */
    can_share_documents_and_folders_with_org_members?: boolean | number
    /** If true, the user can sign charting notes other providers created */
    can_sign_others_charting_notes?: boolean | number
    /** If true, the user can sign charting notes they created */
    can_sign_own_charting_notes?: boolean | number
    /** When true, user can submit to Candid */
    can_submit_cms_1500s_to_candid_health?: boolean | number
    /** When true, user can submit to Change */
    can_submit_cms_1500s_to_change_health?: boolean | number
    /** If true, the user can submit CMS 1500s to Office Ally */
    can_submit_cms_1500s_to_office_ally?: boolean | number
    /** If true, it will return all organization tasks for current user */
    can_view_all_org_members_tasks?: boolean | number
    /** If true, the user can view/edit cms1500s */
    can_view_cms1500s?: boolean | number
    /** If true can use goal favorites that are shared from other members of the organization */
    can_view_goal_templates?: boolean | number
    /** If true, the user can edit appontment types */
    can_view_labs?: boolean | number
    /** If true, the user can view org dashboard */
    can_view_org_dashboard?: boolean | number
    /** If true, the user can view organization-level reports */
    can_view_reports?: boolean | number
    /** If true, the user can view/edit super bills */
    can_view_super_bills?: boolean | number
    /** If true, the user can write addendums for other org members charting notes */
    can_write_org_addendums?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** E-Rx Dosespot role */
    erx_dosespot_role?: boolean | number
    /** If true, the user will receive notif about failed notif */
    gets_failed_fax_notif?: boolean | number
    /** If true, the user will receive a fax notif */
    gets_fax_notif?: boolean | number
    /** If true the user will have their own branding  */
    has_own_branding?: boolean | number
    /** When true, user sees the primary diagnosis column for diagnoses */
    has_primary_diagnosis_column?: boolean | number
    /** The unique identifier of the of the membership */
    id?: boolean | number
    /** If true, the user has been noted as being an admin */
    is_admin?: boolean | number
    /** When true, the user can view and manage developer features like webhooks. */
    is_developer?: boolean | number
    /** Whether the user is a provider in the organization */
    is_provider?: boolean | number
    /** If true, the user is notified when any client activity including intake forms, journal entries, programs, documents */
    notify_any_client_activity?: boolean | number
    /** If true the user is notified when any appontment is booked within the org */
    notify_on_book?: boolean | number
    /** If true the user is notified when any appontment is cancelled within the org */
    notify_on_cancel?: boolean | number
    /** if true, the user should get an email notification whenever a client payment fails or there is a chargeback. */
    notify_on_payment_failure?: boolean | number
    /** The organization role */
    org_role?: boolean | number
    /** Last applied permission template */
    permission_template?: PermissionTemplateTypeGenqlSelection
    /** Last applying date of permission template */
    permission_template_applied_at?: boolean | number
    /** If true, the user can request eligibility checks */
    request_eligibility_checks?: boolean | number
    /** If true, the user will see all org billing, not just individual */
    sees_all_billing?: boolean | number
    /** If true, the user will see all org clients, not just individual on clients list page */
    sees_all_clients?: boolean | number
    /** Selected licensed in values */
    selected_licensed_in_filter?: boolean | number
    /** Selected locations values */
    selected_locations_filter?: boolean | number
    /** Selected statuses values */
    selected_statuses_filter?: boolean | number
    /** Selected statuses values */
    selected_tags_filter?: boolean | number
    /** If true, the user receive email notification when any client in the organization completes an intake flow */
    send_email_on_intake_flow_complete?: boolean | number
    /** If true, the user receive email notification when any client in the organization starts an intake flow */
    send_email_on_intake_flow_start?: boolean | number
    /** If true, the user will share appontment types with the entire org */
    share_appointment_types?: boolean | number
    /** If true, the user shares custom metrics with entire org */
    share_custom_metrics?: boolean | number
    /** If true user should uses the same API access token for Fullscript */
    share_fullscript?: boolean | number
    /** If true has their goal favorites available to other members of the organization */
    share_goal_templates?: boolean | number
    /** If true, the user shares packages with entire org */
    share_packages?: boolean | number
    /** If true, all active organization members will see shared smart phrases */
    share_smart_phrases?: boolean | number
    /** If true the user will share user groups with the entire org */
    share_user_groups?: boolean | number
    /** Show availability in the calendar by default */
    show_availability_first?: boolean | number
    /** If true, show org link on left hand side */
    show_org_tab?: boolean | number
    /** If true the clients are able to start a new conversation with the member */
    start_conversation_with?: boolean | number
    /** The title of the org member */
    title?: boolean | number
    /** The user attached to the organization membership */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Alternative ID numbers for a provider */
export interface OtherIdNumberGenqlSelection{
    /** The unique identifier of the other id number */
    id?: boolean | number
    /** The label to use for the other id */
    label?: boolean | number
    /** The associated organization */
    organization?: OrganizationGenqlSelection
    /** The ID of the associated organization */
    organization_id?: boolean | number
    /** The other id */
    other_id?: boolean | number
    /** The other ID qualifier (what type of ID it is) */
    other_id_qualifier?: boolean | number
    /**
     * @deprecated You never need to query the user of the other_id
     * The associated user
     */
    user?: UserGenqlSelection
    /** The ID of the associated user */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for another id number */
export interface OtherIdNumberInput {
/** The ID of the other id number */
id?: (Scalars['ID'] | null),
/** The other id number */
other_id?: (Scalars['String'] | null),
/** The qualifier of the other id number */
other_id_qualifier?: (Scalars['String'] | null),
/** The user ID of the other id number */
user_id?: (Scalars['String'] | null)}


/** Autogenerated input type of PairAccounts */
export interface PairAccountsInput {client_id?: (Scalars['ID'] | null),override_current_pairing?: (Scalars['Boolean'] | null),provider_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of PairAccounts. */
export interface PairAccountsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a patient */
export interface PatientInput {
/** The date of birth of the patient */
dob?: (Scalars['String'] | null),
/** The ID of the patient */
id?: (Scalars['ID'] | null),
/** The location of the patient */
location?: (LocationInput | null),
/** The list of policies of the patient */
policies?: ((PolicyInput | null)[] | null),
/** The list of referring physicians of the patient */
referring_physicians?: ((Cms1500ReferringPhysicianInput | null)[] | null),
/** The sex of the patient */
sex?: (Scalars['String'] | null),
/** The social security number of the patient */
ssn?: (Scalars['String'] | null),
/** The full legal name and preferred name of the patient */
full_legal_name_with_preferred?: (Scalars['String'] | null)}


/** A location of a patient */
export interface PatientLocationInputs {
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The graphql_name of the location */
name?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The zip code */
zip?: (Scalars['String'] | null)}


/** An permission templateType */
export interface PermissionTemplateTypeGenqlSelection{
    /** Allows group level actions (e.g. send group messages in chat, assigning group to course modules, request form completions from group) */
    allow_group_level_actions?: boolean | number
    /** If true, clients who this org member has been added as a care team member will be able to schedule appointments with them. */
    allow_self_scheduling_in_care_team?: boolean | number
    /** If true, clients who this org member has been added as a care team member for will automatically see a Chat conversation with this org member. */
    auto_create_convo_for_care_team?: boolean | number
    /** If true, the user can access calendar quick share */
    can_access_calendar_quick_share?: boolean | number
    /** If true, the user should be able to access other active organization members conversations */
    can_access_to_members_chat?: boolean | number
    /** If true, the user can add new clients */
    can_add_clients?: boolean | number
    /** If true, the user can add new people to the organization */
    can_add_members?: boolean | number
    /** If true, the user should be able to add other active organization members to chat */
    can_add_members_to_chat?: boolean | number
    /** If true, the user should be able to assign a task to any member of their organization */
    can_assign_tasks_to_all_org_members?: boolean | number
    /** If true, the user can be added to the care team members list for a client */
    can_be_care_team_member?: boolean | number
    /** If true, the current user can modify this permission template */
    can_be_edited?: boolean | number
    /** If true, the user can charge clients */
    can_charge_clients?: boolean | number
    /** If true, user сan delete charting notes */
    can_delete_charting_notes?: boolean | number
    /** If true, the user can delete faxes */
    can_delete_faxes?: boolean | number
    /** If true, the user can edit appontment types */
    can_edit_appointment_types?: boolean | number
    /** If true, the user can edit calendar */
    can_edit_calendar?: boolean | number
    /** If true, the user can edit client credit */
    can_edit_credit?: boolean | number
    /** If true, the user can edit documents */
    can_edit_docs?: boolean | number
    /** If true, the user can edit eduacation content */
    can_edit_education?: boolean | number
    /** If true, the user can edit forms */
    can_edit_forms?: boolean | number
    /** If true, the user can manage the people and roles in the organization */
    can_edit_members?: boolean | number
    /** If true, the user can edit client packages */
    can_edit_packages?: boolean | number
    /** If true, the user can add ,edit and delete products */
    can_edit_products?: boolean | number
    /** If true, the user can edit settings */
    can_edit_settings?: boolean | number
    /** If true, the user can enroll and remove clients from programs */
    can_enroll_clients_to_programs?: boolean | number
    /** If true, the user can lock charting notes other providers created */
    can_lock_others_charting_notes?: boolean | number
    /** If true, the user can lock charting notes they created */
    can_lock_own_charting_notes?: boolean | number
    /** If true, can mark tasks complete that are assigned to other org members */
    can_mark_assigned_tasks_to_other_org_members_as_completed?: boolean | number
    /** If true, the user can merge clients */
    can_merge_clients?: boolean | number
    /** If true, view labs page and view patient lab results */
    can_order_labs?: boolean | number
    /** If true, the user can remove clients */
    can_remove_client?: boolean | number
    /** If true, the user should be able to rename or delete tags */
    can_rename_and_delete_tags?: boolean | number
    /** If true, the user can view the billing tab */
    can_see_billing?: boolean | number
    /** If true, the user can see all calendars in the organization */
    can_see_calendar?: boolean | number
    /** If true, the user can see all clients in the organization */
    can_see_clients?: boolean | number
    /** If true, the user can see documetns within the entire org */
    can_see_docs?: boolean | number
    /** If true, the user can see incoming faxes */
    can_see_faxes?: boolean | number
    /** If true user should be able to see fullscript tab in client profile and view fullscript box in homepage */
    can_see_fullscript_tab?: boolean | number
    /** If true, the user can see sent faxes */
    can_see_sent_faxes?: boolean | number
    /** If true, the user can see transfers tab in billing page */
    can_see_transfers?: boolean | number
    /** If true, user can set client passwords */
    can_set_client_password?: boolean | number
    /** If true, the user can share documents and folders with organizations members */
    can_share_documents_and_folders_with_org_members?: boolean | number
    /** If true, the user can sign charting notes other providers created */
    can_sign_others_charting_notes?: boolean | number
    /** If true, the user can sign charting notes they created */
    can_sign_own_charting_notes?: boolean | number
    /** If true, the user can submit CMS 1500s to Office Ally */
    can_submit_cms_1500s_to_office_ally?: boolean | number
    /** If true, it will return all organization tasks for current user */
    can_view_all_org_members_tasks?: boolean | number
    /** If true, the user can view/edit cms1500s */
    can_view_cms1500s?: boolean | number
    /** If true can use goal favorites that are shared from other members of the organization */
    can_view_goal_templates?: boolean | number
    /** If true, the user can edit appontment types */
    can_view_labs?: boolean | number
    /** If true, the user can view org dashboard */
    can_view_org_dashboard?: boolean | number
    /** If true, the user can view organization-level reports */
    can_view_reports?: boolean | number
    /** If true, the user can view/edit super bills */
    can_view_super_bills?: boolean | number
    /** If true, the user can write addendums for other org members charting notes */
    can_write_org_addendums?: boolean | number
    /** The date of creation */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** If true, the user will receive notif about failed notif */
    gets_failed_fax_notif?: boolean | number
    /** If true, the user will receive a fax notif */
    gets_fax_notif?: boolean | number
    /** If true the user will have their own branding  */
    has_own_branding?: boolean | number
    /** The unique identifier of the template */
    id?: boolean | number
    /** If true, the user has been noted as being an admin */
    is_admin?: boolean | number
    /** Whether the user is a developer */
    is_developer?: boolean | number
    /** Whether the user is a provider in the organization */
    is_provider?: boolean | number
    /** Name of template */
    name?: boolean | number
    /** If true, the user is notified when any client activity including intake forms, journal entries, programs, documents */
    notify_any_client_activity?: boolean | number
    /** If true the user is notified when any appontment is booked within the org */
    notify_on_book?: boolean | number
    /** If true the user is notified when any appontment is cancelled within the org */
    notify_on_cancel?: boolean | number
    /** If true, user will notified about all failed payments */
    notify_on_payment_failure?: boolean | number
    /** The organization role */
    org_role?: boolean | number
    /** If true, the user can request eligibility checks */
    request_eligibility_checks?: boolean | number
    /** If true, the user will see all org billing, not just individual */
    sees_all_billing?: boolean | number
    /** If true, the user will see all org clients, not just individual on clients list page */
    sees_all_clients?: boolean | number
    /** If true, the user receive email notification when any client in the organization completes an intake flow */
    send_email_on_intake_flow_complete?: boolean | number
    /** If true, the user receive email notification when any client in the organization starts an intake flow */
    send_email_on_intake_flow_start?: boolean | number
    /** If true, the user will share appontment types with the entire org */
    share_appointment_types?: boolean | number
    /** If true, the user shares custom metrics with entire org */
    share_custom_metrics?: boolean | number
    /** If true user should uses the same API access token for Fullscript */
    share_fullscript?: boolean | number
    /** If true has their goal favorites available to other members of the organization */
    share_goal_templates?: boolean | number
    /** If true, the user shares packages with entire org */
    share_packages?: boolean | number
    /** If true, all active organization members will see shared smart phrases */
    share_smart_phrases?: boolean | number
    /** If true the user will share user groups with the entire org */
    share_user_groups?: boolean | number
    /** Show availability in the calendar by default */
    show_availability_first?: boolean | number
    /** If true, show org link on left hand side */
    show_org_tab?: boolean | number
    /** If true the clients are able to start a new conversation with the member */
    start_conversation_with?: boolean | number
    /** Date when record was last updated */
    updated_at?: boolean | number
    /** The user attached to the organization membership */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A pharmacy generated from Dosespot */
export interface PharmacyGenqlSelection{
    /** The city of the address */
    city?: boolean | number
    /** The unique identifier of the pharmacy */
    id?: boolean | number
    /** latitude coordinate of the pharmacy */
    latitude?: boolean | number
    /** The first line of the address */
    line1?: boolean | number
    /** The second line of the address */
    line2?: boolean | number
    /** longitude coordinate of the pharmacy */
    longitude?: boolean | number
    /** The name of the pharmacy */
    name?: boolean | number
    /** The phone number of the pharmacy */
    phone_number?: boolean | number
    /** The state of the address (Uses the 2 letter abbreviation if in US) */
    state?: boolean | number
    /** The zip/postal code of the address */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a location of a physician */
export interface PhysicianLocationInput {
/** The city */
city?: (Scalars['String'] | null),
/** The country code */
country?: (Scalars['String'] | null),
/** The ID of the location */
id?: (Scalars['ID'] | null),
/** The first line of the address */
line1?: (Scalars['String'] | null),
/** The second line of the address */
line2?: (Scalars['String'] | null),
/** The graphql_name of the location */
name?: (Scalars['String'] | null),
/** The NPI of the location */
npi?: (Scalars['String'] | null),
/** The other ID of the location */
other_id?: (Scalars['String'] | null),
/** The other ID qual of the location */
other_id_qual?: (Scalars['String'] | null),
/** The place of service ID of the location */
place_of_service_id?: (Scalars['String'] | null),
/** The state */
state?: (Scalars['String'] | null),
/** The ID of user who owns the location */
user_id?: (Scalars['String'] | null),
/** The zip code */
zip?: (Scalars['String'] | null)}


/** Payload for a referral */
export interface PhysicianReferralInput {
/** If the referral should be destroyed */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the referral */
id?: (Scalars['ID'] | null),
/** The reason for the referral */
referral_reason?: (Scalars['String'] | null),
/** The ID of the user */
user_id?: (Scalars['ID'] | null)}


/** Alternative ID numbers for a provider */
export interface PlaceOfServiceGenqlSelection{
    /** The code for the place of service */
    code?: boolean | number
    /** A combined name and code string, correctly formatted */
    code_name?: boolean | number
    /** The unique identifier of the place of service */
    id?: boolean | number
    /** The name of the place of service */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A plan that can be used for a subscription */
export interface PlanGenqlSelection{
    /** The features of the plan */
    features?: boolean | number
    /** The header of the plan */
    header?: boolean | number
    /** The unique identifier of the plan */
    id?: boolean | number
    /** The subheader of the plan */
    subheader?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A policy */
export interface PolicyGenqlSelection{
    /** Benefits associated with policy */
    benefits?: BenefitGenqlSelection
    /** Call reference information associated with this policy */
    call_reference?: CallReferenceGenqlSelection
    /** Returns a list of errors associated with the policy after doing a Change Health Insurance Eligibility Check */
    claim_eligibility_check_errors?: ClaimEligibilityCheckErrorsGenqlSelection
    /** CPT codes authorized for this policy */
    cpt_codes_policies?: CptCodesPolicyGenqlSelection
    /** Holder's date of birth */
    dob_to_use?: boolean | number
    /** Date policy becomes inactive */
    effective_end?: boolean | number
    /** Date policy becomes active */
    effective_start?: boolean | number
    /** policy group num */
    group_num?: boolean | number
    /** policy holder address */
    holder_address?: boolean | number
    /** policy holder dob, required */
    holder_dob?: boolean | number
    /** holder first name */
    holder_first?: boolean | number
    /** holder gender */
    holder_gender?: boolean | number
    /** holder last name */
    holder_last?: boolean | number
    /** The address of the holder */
    holder_location?: LocationGenqlSelection
    /** holder location id */
    holder_location_id?: boolean | number
    /** holder middle initial */
    holder_mi?: boolean | number
    /** policy holder name */
    holder_name?: boolean | number
    /** holder phone number */
    holder_phone?: boolean | number
    /** policy holder relationship, required */
    holder_relationship?: boolean | number
    /** ICD codes authorized for this policy */
    icd_codes_policies?: IcdCodesPolicyGenqlSelection
    /** The unique identifier of the policy */
    id?: boolean | number
    /** Insurance authorization (eligibility) associated with policy */
    insurance_authorization?: InsuranceAuthorizationTypeGenqlSelection
    /** True if insurance authorization is required */
    insurance_authorization_required?: boolean | number
    /** Document Id of insurance card image(back) */
    insurance_card_back_id?: boolean | number
    /** Document Id of insurance card image(front) */
    insurance_card_front_id?: boolean | number
    /** The insurance plan */
    insurance_plan?: InsurancePlanGenqlSelection
    /** policy plan id, required */
    insurance_plan_id?: boolean | number
    /** The last automated eligibility check run for this policy. */
    last_eligibility_check?: ClaimEligibilityCheckGenqlSelection
    /** The name of the policy */
    name?: boolean | number
    /** Notes in client profile recorded by provider user */
    notes?: boolean | number
    /** policy num, required */
    num?: boolean | number
    /** The address of the insurance plan */
    payer_location?: LocationGenqlSelection
    /** payer locatoin id */
    payer_location_id?: boolean | number
    /** policy phone number */
    policy_phone_number?: boolean | number
    /** Priority of policy for client (primary, secondary, or inactive) */
    priority_type?: boolean | number
    /** Referral added to this policy. Optional field that should not be nil if referral_required is true */
    referral?: ReferralGenqlSelection
    /** True if referral is required for policy */
    referral_required?: boolean | number
    /** Same as client adddress toggle */
    same_address_as_client?: boolean | number
    /** Insurance plan type? */
    type_string?: boolean | number
    /** Date policy was last updated */
    updated_at?: boolean | number
    /** Owner of this policy */
    user?: UserGenqlSelection
    /** user id, required */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a policy */
export interface PolicyInput {
/** The group number */
group_num?: (Scalars['String'] | null),
/** The date of birth of the holder */
holder_dob?: (Scalars['String'] | null),
/** The first name of the holder */
holder_first?: (Scalars['String'] | null),
/** The gender of the holder */
holder_gender?: (Scalars['String'] | null),
/** The last name of the holder */
holder_last?: (Scalars['String'] | null),
/** The location of the holder */
holder_location?: (LocationInput | null),
/** The middle initial of the holder */
holder_mi?: (Scalars['String'] | null),
/** The phone number of the holder */
holder_phone?: (Scalars['String'] | null),
/** The relationship of the holder to the client */
holder_relationship?: (Scalars['String'] | null),
/** The ID of the policy */
id?: (Scalars['ID'] | null),
/** The ID of the insurance card back */
insurance_card_back_id?: (Scalars['String'] | null),
/** The ID of the insurance card front */
insurance_card_front_id?: (Scalars['String'] | null),
/** The insurance plan associated with the policy */
insurance_plan?: (InsurancePlanInput | null),
/** The ID of the insurance plan */
insurance_plan_id?: (Scalars['String'] | null),
/** The name of the policy */
name?: (Scalars['String'] | null),
/** The policy number */
num?: (Scalars['String'] | null),
/** The location of the payer */
payer_location?: (LocationInput | null),
/** The phone number of the policy */
policy_phone_number?: (Scalars['String'] | null),
/** The priority type of the policy */
priority_type?: (Scalars['String'] | null),
/** Whether the holder has the same address as the client */
same_address_as_client?: (Scalars['Boolean'] | null),
/** The type of policy */
type_string?: (Scalars['String'] | null),
/** The ID of the user associated with the policy */
user_id?: (Scalars['String'] | null)}


/** A potential appointment slot */
export interface PotentialAppointmentSlotGenqlSelection{
    /** The ID of the appointment this slot is for */
    appointment_id?: boolean | number
    /** The type of appointment the slot is for. Returns nil if not a group appointment. Returning this for many slots can potentially slow down query times. */
    appointment_type?: AppointmentTypeGenqlSelection
    /** The hexcode color of the slot (Not used in Healthie's default self-scheduling widget) */
    color?: boolean | number
    /** The date of the slot */
    date?: boolean | number
    /** Whether this slot has waitlist enabled */
    has_waitlist_enabled?: boolean | number
    /** Whether this slot is fully booked */
    is_fully_booked?: boolean | number
    /** The length of the appointment type (in minutes) */
    length?: boolean | number
    /** The ID of the user who owns the slot */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Preferred Medical Code */
export interface PreferredMedicalCodeGenqlSelection{
    /** ICD/CPT code description */
    code_description?: boolean | number
    /** ICD/CPT code */
    code_indentifier?: boolean | number
    /** Connected Cpt Code Object */
    cpt_code?: CptCodeGenqlSelection
    /** Formatted name: 'F19.20: psychotics unspecified' */
    display_name?: boolean | number
    /** Connected ICD Code Object */
    icd_code?: IcdCodeGenqlSelection
    /** The unique identifier of the code */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Prescription created in Dosespot */
export interface PrescriptionGenqlSelection{
    /** Comment entered by provider */
    comment?: boolean | number
    /** Date when prescription became ineffective */
    date_inactive?: boolean | number
    /** Date prescription was written */
    date_written?: boolean | number
    /** Number of days supplied prescription should last */
    days_supply?: boolean | number
    /** Direction provided to patient when taking prescription. Entered by provider */
    directions?: boolean | number
    /** The dosage (strength) of the prescription */
    dosage?: boolean | number
    /** The form of the prescription. Example: tablet, capsule, teaspoon */
    dose_form?: boolean | number
    /** The classification of the drug */
    drug_classification?: boolean | number
    /** Date when prescription became effective */
    effective_date?: boolean | number
    /** Encounter entered by provider */
    encounter?: boolean | number
    /** The unique identifier of the prescription */
    id?: boolean | number
    /** If the prescription is urgent */
    is_urgent?: boolean | number
    /** Date prescription was last refilled */
    last_fill_date?: boolean | number
    /**
     * @deprecated Deprecated by vendor, use MedicationOptionType.monograph instead
     * Monograph path entered by provider
     */
    monograph_path?: boolean | number
    /** The prescription's national drug code */
    ndc?: boolean | number
    /** If true, pharmacy has been instructed not to dispense a substitute/generic version */
    no_substitutions?: boolean | number
    /** Over the counter drug */
    otc?: boolean | number
    /** Pharmacy information assigned in dosespot (Not stored in db) */
    pharmacy?: PharmacyGenqlSelection
    /** Notes for pharmacy entered by provider */
    pharmacy_notes?: boolean | number
    /** The name of the prescriber */
    prescriber_name?: boolean | number
    /** Name and dosage of the prescription. Example: ibuprofen 200 mg tablet */
    product_name?: boolean | number
    /** Quantity of medication per refill */
    quantity?: boolean | number
    /** Number of refills prescribed */
    refills?: boolean | number
    /** Form in which prescription is delivered */
    route?: boolean | number
    /** The prescription reference number */
    rx_reference_number?: boolean | number
    /** The prescription rxcui */
    rxcui?: boolean | number
    /** The schedule of medication. Examples: PRN, QD, BID, TID, QID, Q4H, Q6H, Q8H, Q12H, Q24H, Q48H, Q72H, Q96H, QAM, QPM, QHS, QOD, QWEEK, QMONTH, QYEAR */
    schedule?: boolean | number
    /** Status of prescription. Example: Entered, Printed, Sending, eRxSent, Deleted  */
    status?: boolean | number
    /** Unit of medication. Example: tablet, capsule, teaspoon */
    unit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Appointment type price and cpt_code_price */
export interface PriceAndCptPriceTypeGenqlSelection{
    /** The cpt_code_price for this appointment type */
    cpt_price?: boolean | number
    /** The price for this appointment type */
    price?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a primary organization */
export interface PrimaryOrganizationInfoInput {
/** If true, the organization will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The external ID of the organization */
external_id?: (Scalars['String'] | null),
/** The ID of the organization */
id?: (Scalars['ID'] | null),
/** The ID number type of the organization */
id_number_type?: (Scalars['String'] | null),
/** The location of the organization */
location?: (OrgLocationInput | null),
/** The graphql_name of the organization */
name?: (Scalars['String'] | null),
/** The NPI of the organization */
npi?: (Scalars['String'] | null),
/** The other ID of the organization */
other_id?: (Scalars['String'] | null),
/** The other ID qual of the organization */
other_id_qual?: (Scalars['String'] | null),
/** The phone number of the organization */
phone_number?: (Scalars['String'] | null),
/** Whether the organization is primary */
primary?: (Scalars['Boolean'] | null),
/** The tax ID of the organization */
tax_id?: (Scalars['String'] | null),
/** The tax ID type of the organization */
tax_id_type?: (Scalars['String'] | null)}


/** Base class for types */
export interface ProblemGenqlSelection{
    /** Code of the problem */
    code?: boolean | number
    /** Self-descriptive */
    id?: boolean | number
    /** Name of the problem */
    name?: boolean | number
    /** When true, this object must be consolidated as part of a CCDA Ingest */
    requires_consolidation?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Procedure object */
export interface ProcedureGenqlSelection{
    /** The code of the procedure */
    code?: boolean | number
    /** The code system name of the procedure */
    code_system_name?: boolean | number
    /** The CPT code id of the procedure */
    cpt_code_id?: boolean | number
    /** The display name of the procedure */
    display_name?: boolean | number
    /** The unique identifier of the procedure */
    id?: boolean | number
    /** The end date time of the procedure */
    procedure_end_datetime?: boolean | number
    /** The start date time of the procedure */
    procedure_start_datetime?: boolean | number
    /** The status of the procedure */
    status?: boolean | number
    /** The target site of the procedure */
    target_site?: boolean | number
    /** The user id of the procedure */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The product */
export interface ProductGenqlSelection{
    /** The date and time when the product was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The unique identifier of the product */
    id?: boolean | number
    /** The name of the product */
    name?: boolean | number
    /** The price of the product */
    price?: boolean | number
    /** The available amount of the product */
    remaining_quantity?: boolean | number
    /** Tax description */
    tax_description?: boolean | number
    /** Tax rate */
    tax_rate?: boolean | number
    /** If product has tax rate */
    taxable?: boolean | number
    /** Indicates if the product has unlimited amount */
    unlimited_quantity?: boolean | number
    /** Owner of the product */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Product input */
export interface ProductInput {
/** The product id */
id?: (Scalars['String'] | null),
/** The product name */
name?: (Scalars['String'] | null)}


/** Profession */
export interface ProfessionGenqlSelection{
    /** Unique identifier of the profession */
    id?: boolean | number
    /** The name of the profession */
    profession?: boolean | number
    /** The category of the profession */
    profession_category?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a profession */
export interface ProfessionsInput {
/** The graphql_name of the profession */
profession?: (Scalars['String'] | null),
/** The category of the profession */
profession_category?: (Scalars['String'] | null)}


/** A provider appointment location object */
export interface ProviderAppointmentLocationGenqlSelection{
    /** The unique identifier of the appointment location */
    appointment_location_id?: boolean | number
    /** The unique identifier of the location */
    id?: boolean | number
    /** The location (in plain text) */
    location?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload to bind an appointment location to a provider */
export interface ProviderAppointmentLocationsInput {
/** If true, the join table record will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the appointment location */
appointment_location_id?: (Scalars['ID'] | null),
/** The ID of the join table record */
id?: (Scalars['ID'] | null)}


/** Provider appointment type connection */
export interface ProviderApptTypeConnectionGenqlSelection{
    /** The appointment type ID associated with this connection */
    appointment_type_id?: boolean | number
    /** The unique identifier of the connection */
    id?: boolean | number
    /** Name of the provider associated with this appointment type connection */
    provider_name?: boolean | number
    /** User ID of the provider associated with this appointment type connection */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Properties for creating or updating a ProviderCptCode */
export interface ProviderCptCodeInput {
/** The CPT code ID */
cpt_code_id?: (Scalars['ID'] | null),
/** The unique identifier of the code */
id?: (Scalars['ID'] | null),
/** The price per unit of the code */
price_per_unit?: (Scalars['String'] | null),
/** The unique identifier of the provider */
provider_id?: (Scalars['ID'] | null)}


/** ProviderCptCode object */
export interface ProviderCptCodeTypeGenqlSelection{
    /** The CPT code ID */
    cpt_code_id?: boolean | number
    /** The unique identifier of the type */
    id?: boolean | number
    /** The price per unit */
    price_per_unit?: boolean | number
    /** The provider ID */
    provider_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The query root of this schema. See available queries. */
export interface QueryGenqlSelection{
    /** Fetch advance appointment prices */
    advanceAppointmentPrices?: (AdvanceAppointmentPriceGenqlSelection & { __args?: {appointment_type_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Search results for allergies, allergens, and reactions */
    allergySuggestions?: { __args: {
    /** accepts drug, environmental, food, pet, and reaction */
    category?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch an announcement */
    announcement?: (AnnouncementGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch an array of announcements for a provider */
    announcements?: (AnnouncementGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** If true, only show announcements that client has not dismissed */
    exclude_dismissed?: (Scalars['Boolean'] | null), 
    /** Search announcements by name, title and description */
    keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of announcements for a provider */
    announcementsCount?: { __args: {
    /** If true, only show announcements that client has not dismissed */
    exclude_dismissed?: (Scalars['Boolean'] | null), 
    /** Search announcements by name, title and description */
    keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch paginated API Keys collection */
    apiKeys?: (ApiKeyGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), order_by?: (ApiKeyOrderKeys | null)} })
    /** Number of API Keys */
    apiKeysCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** An applied tag to a user */
    appliedTag?: (AppliedTagGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), include_deleted?: (Scalars['Boolean'] | null)} })
    /** Applied tags to a users */
    appliedTags?: (AppliedTagGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), 
    /** The tag ID */
    tag_id?: (Scalars['ID'] | null), order_by?: (AppliedTagOrderKeys | null), 
    /** When passed in, only applied tags updated after the specified datetime are returned. */
    updated_after?: (Scalars['ISO8601DateTime'] | null), 
    /** When passed in, only applied tags updated before the specified datetime are returned. */
    updated_before?: (Scalars['ISO8601DateTime'] | null)} })
    /** fetch an appointment by id, group appointments are (considered public) */
    appointment?: (AppointmentGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), 
    /** When true, deleted appointments can be retrieved via this query. */
    include_deleted?: (Scalars['Boolean'] | null)} })
    /** Return potential booking issues for an appointment, date, time, repeats, attendees, and provider. */
    appointmentBookingWarnings?: (AppointmentBookingWarningGenqlSelection & { __args?: {
    /** (optional) appointment type used to check for credits and for appointment duration. */
    appointment_type_id?: (Scalars['ID'] | null), 
    /** (optional) IDs of clients assigned to the appointment. */
    attendee_ids?: ((Scalars['ID'] | null)[] | null), 
    /** date to check for conflicting events and credit deficits. */
    date?: (Scalars['String'] | null), 
    /** (optional) whether this is a repeating appointment. */
    is_repeating?: (Scalars['Boolean'] | null), 
    /** ID of the provider to check for conflicting events. */
    provider_id?: (Scalars['ID'] | null), 
    /** (optional) what type of interval for repeating appointments (Weekly, Monthly, Biweekly, Every 4 Weeks). */
    repeat_interval?: (Scalars['String'] | null), 
    /** (optional) how many times the appointment repeats. */
    repeat_times?: (Scalars['String'] | null), 
    /** (optional) used to skip checking for conflicts on recurring appointments. */
    recurring_appt_id?: (Scalars['String'] | null), 
    /** The time to check (in conjunction with date parameter) for conflicting events. */
    time?: (Scalars['String'] | null), 
    /** (optional) Timezone used when looking for conflicting events. Will default to timezone of provider if not provided. */
    timezone?: (Scalars['String'] | null), 
    /** (optional) used to skip checking for conflicts on single appointments. */
    current_appt_id?: (Scalars['String'] | null), 
    /** (optional) whether an existing appointment being checked is a group appointment or not. */
    is_group_appt?: (Scalars['Boolean'] | null), 
    /** (optional) whether editing an existing appointment or not. */
    is_editing?: (Scalars['Boolean'] | null), 
    /** (optional) for group appointments where org members are added as attending */
    additional_providers?: (Scalars['String'] | null), 
    /** (optional) used when checking for conflicts for blocks, which have no appointment type with length */
    length_in_minutes?: (Scalars['Int'] | null)} })
    /** returns metadata about appointments for provider dashboard */
    appointmentFrequencyData?: (AppointmentDataTypeGenqlSelection & { __args?: {only_to_current_date?: (Scalars['Boolean'] | null), org_level?: (Scalars['Boolean'] | null)} })
    /** fetch an appointment by id, group appointments are (considered public) */
    appointmentInclusion?: (AppointmentInclusionTypeGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), 
    /** When external reschedule/cancellation is allowed, the UUID can be used to allow the holder to retrieve and update/cancel their inclusion in an appointment. */
    uuid?: (Scalars['ID'] | null)} })
    /** fetch an appointment location by id (considered public) */
    appointmentLocation?: (AppointmentLocationGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** get appointment locations that the current user can use. (considered public) */
    appointmentLocations?: (AppointmentLocationGenqlSelection & { __args?: {
    /** Pass in datetime of the appointment to limit the locations based on room availability */
    appointment_date?: (Scalars['String'] | null), 
    /** Pass in id of the appointment type to limit the locations based on room availability */
    appointment_type_id?: (Scalars['ID'] | null), ids?: ((Scalars['Int'] | null)[] | null), keywords?: (Scalars['String'] | null), location_ids?: (Scalars['String'] | null), org_level?: (Scalars['Boolean'] | null), provider_id?: (Scalars['ID'] | null), provider_ids?: ((Scalars['ID'] | null)[] | null), resource?: (Scalars['String'] | null), 
    /**
     * When true, only locations with associated availabilities are returned.
     * When false, only locations with no associated availabilities are returned.
     * Does nothing unless availability by location enabled.
     * 
     */
    with_availability?: (Scalars['Boolean'] | null)} })
    /** Returns a json hash of the number of appointments in each day of the month. The month is the month that the passed day is in. */
    appointmentNumberPerDayOfMonth?: { __args: {date?: (Scalars['String'] | null), include_blockers?: (Scalars['Boolean'] | null)} } | boolean | number
    /** fetch a Appointment Setting by id (considered public) */
    appointmentSetting?: (AppointmentSettingGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), provider_id?: (Scalars['ID'] | null)} })
    /** fetch an appointment type by id (considered public) */
    appointmentType?: (AppointmentTypeGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch credit history for the specific appointment type */
    appointmentTypeCreditChanges?: (AppointmentCreditChangeGenqlSelection & { __args?: {appointment_type_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Fetch paginated Appointment Type collection (considered public) */
    appointmentTypes?: (AppointmentTypeGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** JSONified array of ids to include */
    appointment_type_ids?: (Scalars['String'] | null), clients_can_book?: (Scalars['Boolean'] | null), embed_or_sharing_link?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offering_id?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), org_level?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['String'] | null), should_paginate?: (Scalars['Boolean'] | null), show_group?: (Scalars['Boolean'] | null), with_deleted_appt_types?: (Scalars['Boolean'] | null), order_by?: (AppointmentTypeOrderKeys | null)} })
    /** Number of appointment types (considered public) */
    appointmentTypesCount?: { __args: {
    /** JSONified array of ids to include */
    appointment_type_ids?: (Scalars['String'] | null), clients_can_book?: (Scalars['Boolean'] | null), embed_or_sharing_link?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offering_id?: (Scalars['String'] | null), org_level?: (Scalars['Boolean'] | null), provider_id?: (Scalars['String'] | null), show_group?: (Scalars['Boolean'] | null), with_deleted_appt_types?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Fetch paginated appointment collection */
    appointments?: (AppointmentGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), colorSchemeId?: (Scalars['String'] | null), currentWeek?: (Scalars['Boolean'] | null), endDate?: (Scalars['String'] | null), 
    /** when true, all appointments with invoices will be excluded */
    exclude_appointments_with_invoice?: (Scalars['Boolean'] | null), 
    /** Options are 'future', 'past', 'ended', 'didnt-occur' */
    filter?: (Scalars['String'] | null), 
    /** Returns appointments of the specified appointment locations. Overrides filter_by_location_id */
    filter_by_appointment_location_ids?: ((Scalars['ID'] | null)[] | null), filter_by_appointment_status?: (Scalars['String'] | null), filter_by_appointment_type_id?: (Scalars['ID'] | null), 
    /** Returns appointments of the specified appointment  Overrides filter_by_appointment_type_id */
    filter_by_appointment_type_ids?: ((Scalars['ID'] | null)[] | null), 
    /** When true, only appointments without an associated chart note will be returned. When false, only appointments with an associated chart note will be return. If nil, has no effect */
    filter_by_chart_note_written?: (Scalars['Boolean'] | null), filter_by_client_confirmed?: (Scalars['Boolean'] | null), filter_by_location_id?: (Scalars['ID'] | null), filter_by_provider_confirmed?: (Scalars['Boolean'] | null), 
    /** When true, no pulled-in synced appointments will be included */
    filter_synced_appointments?: (Scalars['Boolean'] | null), 
    /** When true, only appointments up to the next future scheduled appointment will be included */
    filter_by_invoices?: (Scalars['Boolean'] | null), 
    /** When true, use provider inclusions for lookup of providers */
    use_provider_inclusions?: (Scalars['Boolean'] | null), include_blockers?: (Scalars['Boolean'] | null), 
    /** When true, returns blocking appointments with no appointment type/location/status */
    include_nil_blockers?: (Scalars['Boolean'] | null), 
    /** include all providers in the organization and sub-organizations */
    include_suborganizations?: (Scalars['Boolean'] | null), is_active?: (Scalars['Boolean'] | null), is_confirmed?: (Scalars['Boolean'] | null), 
    /** When true, returns appointments for all providers in the org */
    is_org?: (Scalars['Boolean'] | null), is_upcoming?: (Scalars['Boolean'] | null), is_with_clients?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), 
    /** The number of appointments to return at one time (when should_paginate is true). Maximum of 500 */
    page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), provider_ids?: ((Scalars['ID'] | null)[] | null), should_paginate?: (Scalars['Boolean'] | null), show_appointments?: (Scalars['Boolean'] | null), order_by?: (AppointmentOrderKeys | null), specificDay?: (Scalars['String'] | null), startDate?: (Scalars['String'] | null), unconfirmed?: (Scalars['Boolean'] | null), user_id?: (Scalars['ID'] | null), with_all_statuses?: (Scalars['Boolean'] | null), with_others?: (Scalars['Boolean'] | null), without_status?: (Scalars['Boolean'] | null), 
    /** Returns appointments for the specified attendee_ids */
    attendee_ids?: ((Scalars['ID'] | null)[] | null)} })
    /** Number of Appointments */
    appointmentsCount?: { __args: {currentWeek?: (Scalars['Boolean'] | null), endDate?: (Scalars['String'] | null), 
    /** when true, all appointments with invoices will be excluded */
    exclude_appointments_with_invoice?: (Scalars['Boolean'] | null), filter?: (Scalars['String'] | null), 
    /** Returns appointments of the specified appointment locations. Overrides filter_by_location_id */
    filter_by_appointment_location_ids?: ((Scalars['ID'] | null)[] | null), filter_by_appointment_status?: (Scalars['String'] | null), filter_by_appointment_type_id?: (Scalars['ID'] | null), 
    /** Returns appointments of the specified appointment  Overrides filter_by_appointment_type_id */
    filter_by_appointment_type_ids?: ((Scalars['ID'] | null)[] | null), 
    /** When true, only appointments with an associated chart note will be returned. When false, only appointments without an associated chart note will be return. If nil, has no effect */
    filter_by_chart_note_written?: (Scalars['Boolean'] | null), filter_by_location_id?: (Scalars['ID'] | null), 
    /** When true, no pulled-in synced appointments will be included */
    filter_synced_appointments?: (Scalars['Boolean'] | null), 
    /** When true, only appointments up to the next future scheduled appointment will be included */
    filter_by_invoices?: (Scalars['Boolean'] | null), include_blockers?: (Scalars['Boolean'] | null), 
    /** When true, returns blocking appointments with no appointment type/location/status */
    include_nil_blockers?: (Scalars['Boolean'] | null), 
    /** include all providers in the organization and sub-organizations */
    include_suborganizations?: (Scalars['Boolean'] | null), is_active?: (Scalars['Boolean'] | null), is_confirmed?: (Scalars['Boolean'] | null), is_org?: (Scalars['Boolean'] | null), is_upcoming?: (Scalars['Boolean'] | null), is_with_clients?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), 
    /** This will filter the appointments by the array of provider_ids used here. NOTE: must have is_org set to true for this to argument to be respected. */
    provider_ids?: ((Scalars['ID'] | null)[] | null), show_appointments?: (Scalars['Boolean'] | null), specificDay?: (Scalars['String'] | null), startDate?: (Scalars['String'] | null), unconfirmed?: (Scalars['Boolean'] | null), user_id?: (Scalars['ID'] | null), with_all_statuses?: (Scalars['Boolean'] | null), with_others?: (Scalars['Boolean'] | null), without_status?: (Scalars['Boolean'] | null), 
    /** When true, returns only healthie appointments and excluding external appointments */
    only_healthie_appointments?: (Scalars['Boolean'] | null)} }
    /** Data summary for appointment reports */
    appointmentsSummary?: (AppointmentSummaryDataGenqlSelection & { __args?: {provider_ids?: ((Scalars['ID'] | null)[] | null), range_end?: (Scalars['String'] | null), range_start?: (Scalars['String'] | null), range_type?: (Scalars['String'] | null), 
    /** When provided, the query will require data to be loaded from cache if the appointment count is over the provided number. If data is not in the cache, it will return without data, and load the data in the cache in the background. */
    require_cache_threshold?: (Scalars['Int'] | null)} })
    /** fetch auto task generators belonging to a specific user */
    autoTaskGenerators?: (AutoTaskGeneratorGenqlSelection & { __args?: {user_id?: (Scalars['String'] | null)} })
    /** fetch the automated insurance billing setting */
    automatedInsuranceBillingSetting?: (AutomatedInsuranceBillingSettingGenqlSelection & { __args?: {user_id?: (Scalars['ID'] | null)} })
    /** Fetch availabilities for range */
    availabilities?: (AvailabilityGenqlSelection & { __args?: {appointment_location_id?: (Scalars['String'] | null), appointment_type_id?: (Scalars['String'] | null), 
    /** ID of the provider to show availabilities for, supercedes provider id and is_org */
    availability_provider_id?: (Scalars['ID'] | null), contact_type_id?: (Scalars['String'] | null), 
    /** the end date of availability (datetime string) */
    endDate?: (Scalars['String'] | null), 
    /** Amount of hours after the endDate to pull availabilities in for. This is helpful when using this query with some calendar display libraries */
    end_date_padding?: (Scalars['Int'] | null), includeRepeating?: (Scalars['Boolean'] | null), is_org?: (Scalars['Boolean'] | null), is_repeating?: (Scalars['Boolean'] | null), one_time?: (Scalars['Boolean'] | null), provider_id?: (Scalars['ID'] | null), provider_ids?: ((Scalars['ID'] | null)[] | null), show_availability?: (Scalars['Boolean'] | null), 
    /** the start date of availability (datetime string) */
    startDate?: (Scalars['String'] | null), 
    /** Amount of hours before the startDate to pull availabilities in for. This is helpful when using this query with some calendar display libraries */
    start_date_padding?: (Scalars['Int'] | null), user_id?: (Scalars['String'] | null), timezone?: (Scalars['String'] | null)} })
    /** number of availabilities */
    availabilitiesCount?: { __args: {appointment_location_id?: (Scalars['String'] | null), appointment_type_id?: (Scalars['String'] | null), endDate?: (Scalars['String'] | null), is_org?: (Scalars['Boolean'] | null), provider_id?: (Scalars['ID'] | null), startDate?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch availability */
    availability?: (AvailabilityGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** (Limited availability, subject to breaking changes). JSONified Hash with summary of availability. */
    availabilitySummaryJson?: { __args: {
    /** Date (in YYYY-MM-DD) to retrieve availability summary for */
    date?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch available item types (for use in onboarding items) */
    availableItemTypes?: { __args: {onboarding_flow_id?: (Scalars['String'] | null)} } | boolean | number
    /** Get open appointment times for a date range. Returns array of dates sorted in ascending order (considered public) */
    availableSlotsForRange?: (PotentialAppointmentSlotGenqlSelection & { __args?: {
    /** (optional) The ID of the appointment that will be rescheduled. Only needed if you want to use appointment-specific rescheduling restrictions */
    appointment_to_reschedule_id?: (Scalars['ID'] | null), 
    /** An array of group appointment type IDs can be passed in. When passed in, will return availability for multiple group appointment  Overrides appt_type_id. */
    appointment_type_ids?: ((Scalars['ID'] | null)[] | null), appt_loc_id?: (Scalars['String'] | null), appt_type_id?: (Scalars['String'] | null), clients_can_join_waitlist?: (Scalars['Boolean'] | null), contact_type?: (Scalars['String'] | null), end_date?: (Scalars['String'] | null), 
    /** When passed in, slots after this will not be returned. Inclusive. YYYY-MM-DD format */
    end_date_boundary?: (Scalars['String'] | null), length?: (Scalars['String'] | null), 
    /** Two letter state abbreviation (e.g. "CA", "NY") */
    licensed_in_state?: (Scalars['String'] | null), 
    /** When false, multiple slots for the same time (for different providers) will be returned. */
    make_unique?: (Scalars['Boolean'] | null), org_level?: (Scalars['Boolean'] | null), outside_factors?: (Scalars['Boolean'] | null), 
    /** Required */
    provider_id?: (Scalars['String'] | null), provider_ids?: ((Scalars['String'] | null)[] | null), 
    /** Filters the provider list to only include users who have one of the specified tags applied. Ignored if org_level is not true */
    tag_ids?: ((Scalars['ID'] | null)[] | null), start_date?: (Scalars['String'] | null), 
    /** When passed in, slots before this will not be returned. YYYY-MM-DD format */
    start_date_boundary?: (Scalars['String'] | null), 
    /** When passed in, slots will be calculated with the specified timezone */
    timezone?: (Scalars['String'] | null)} })
    /** Get the Cms1500 Policies object for a given claim and client */
    baseCms1500ForUser?: (Cms1500GenqlSelection & { __args?: {base_date?: (Scalars['String'] | null), cms1500_id?: (Scalars['String'] | null), form_answer_group_id?: (Scalars['ID'] | null), only_active_policies?: (Scalars['Boolean'] | null), patient_id?: (Scalars['ID'] | null), rendering_provider_id?: (Scalars['String'] | null)} })
    /** Get basic info about User from signup token */
    basicUserInfoFromToken?: (UserGenqlSelection & { __args?: {token?: (Scalars['String'] | null)} })
    /**
     * @deprecated All ICD Codes that are allowed to be used in healthecare claims
     * DEPRECATED: All ICD Codes that are allowed to be used in healthecare claims
     */
    billableIcdCodes?: IcdCodeGenqlSelection
    /** fetch a billing item by id */
    billingItem?: (BillingItemGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated billing items collection */
    billingItems?: (BillingItemGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_id?: (Scalars['ID'] | null), 
    /** YYYY-MM-DD format */
    created_at_end?: (Scalars['String'] | null), 
    /** YYYY-MM-DD format */
    created_at_start?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offerings_only?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), 
    /** The number of billing items to return (Max 100) */
    page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), order_by?: (BillingItemOrderKeys | null), status?: ((Scalars['String'] | null)[] | null), user_id?: (Scalars['ID'] | null)} })
    /** Number of billing items */
    billingItemsCount?: { __args: {client_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), status?: ((Scalars['String'] | null)[] | null), provider_id?: (Scalars['ID'] | null), 
    /** YYYY-MM-DD format */
    created_at_start?: (Scalars['String'] | null), 
    /** YYYY-MM-DD format */
    created_at_end?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a Brand by id (considered public) */
    brand?: (BrandGenqlSelection & { __args?: {custom_sign_in_path?: (Scalars['String'] | null), id?: (Scalars['ID'] | null), locationString?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null)} })
    /** fetch a Brand by custom sign in path (considered public) */
    brandFromCustomSignInPath?: (BrandGenqlSelection & { __args?: {custom_sign_in_path?: (Scalars['String'] | null)} })
    /** get info used on authentication pages for either a dietitian or partner */
    brandInfo?: (BrandInfoGenqlSelection & { __args?: {code?: (Scalars['String'] | null), dietitian_id?: (Scalars['String'] | null), invite_code?: (Scalars['String'] | null), partner_name?: (Scalars['String'] | null)} })
    /** Fetch a calendar view settings for current user */
    calendarViewSetting?: CalendarViewSettingGenqlSelection
    /** Fetch an array of campaigns for a provider */
    campaigns?: (CampaignGenqlSelection & { __args?: {offset?: (Scalars['Int'] | null)} })
    /** Number of campaigns for a provider */
    campaignsCount?: boolean | number
    /** Check if the user has access to the package buy limit feature */
    canCapOfferingPurchases?: { __args: {token?: (Scalars['String'] | null)} } | boolean | number
    /** fetch the current users candidhealth connection */
    candidHealthConnection?: CandidHealthConnectionGenqlSelection
    /** Fetch paginated stripe customer accounts with associated errors or soon to expire credit cards */
    cardIssues?: (StripeCustomerDetailGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), offset?: (Scalars['Int'] | null), order_by?: (StripeCustomerDetailOrderKeys | null)} })
    /** Fetch paginated stripe customer accounts with associated errors or soon to expire credit cards */
    cardIssuesCount?: boolean | number
    /** fetch a single care plan */
    carePlan?: (CarePlanGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated care plan collection */
    carePlans?: (CarePlanGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), offset?: (Scalars['Int'] | null), patient_id?: (Scalars['ID'] | null), page_size?: (Scalars['Int'] | null), order_by?: (CarePlanOrderKeys | null), template_search_keywords?: (Scalars['String'] | null), templates_only?: (Scalars['Boolean'] | null)} })
    /** Number of care plans */
    carePlansCount?: { __args: {patient_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Number of care plans templates */
    carePlansTemplatesCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch list of patient-initiated CDA activity events */
    cdaActivityEvents?: CdaActivityEventGenqlSelection
    /** fetch the current users Change Health connection */
    changeClaimSubmitter?: ChangeClaimSubmitterGenqlSelection
    /** fetch a chargeback by the Healthie ID or the Stripe Dispute ID.  */
    chargeBack?: (ChargeBackGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), stripe_dispute_id?: (Scalars['ID'] | null)} })
    /** fetch all charge backs for a user or organization */
    chargeBacks?: (ChargeBackGenqlSelection & { __args?: {
    /** If user has access to all billing for their organization, this will return all chargebacks for the organization */
    show_all_for_org?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), per_page?: (Scalars['Int'] | null), order_by?: (ChargeBackOrderKeys | null)} })
    /** fetch count of all charge backs */
    chargeBacksCount?: { __args: {
    /** If user has access to all billing for their organization, this will return the count of all chargebacks for the organization */
    show_all_for_org?: (Scalars['Boolean'] | null)} } | boolean | number
    /** All items to include in the charting list */
    chartingItems?: (ChartingItemTypeGenqlSelection & { __args?: {custom_module_form_id?: (Scalars['ID'] | null), date?: (Scalars['String'] | null), document_id?: (Scalars['ID'] | null), filler_id?: (Scalars['String'] | null), form_answer_group_id?: (Scalars['String'] | null), include_docs?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), name?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null), 
    /** Filter charting items between date range. The `date` argument supersedes this filter. If an end date is present and no start date is, the start date will default to today. */
    start_date?: (Scalars['String'] | null), 
    /** Filter charting items between date range. The `date` argument supersedes this filter. If an start date is present and no end date is, the end date will default to today. */
    end_date?: (Scalars['String'] | null)} })
    /** All items to include in the charting list */
    chartingItemsCount?: { __args: {custom_module_form_id?: (Scalars['ID'] | null), date?: (Scalars['String'] | null), document_id?: (Scalars['ID'] | null), filler_id?: (Scalars['String'] | null), form_answer_group_id?: (Scalars['String'] | null), include_docs?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), name?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null), 
    /** Filter charting items between date range. The `date` argument supersedes this filter. If an end date is present and no start date is, the start date will default to today. */
    start_date?: (Scalars['String'] | null), 
    /** Filter charting items between date range. The `date` argument supersedes this filter. If an start date is present and no end date is, the end date will default to today. */
    end_date?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch a charting note addendum by id */
    chartingNoteAddendum?: (ChartingNoteAddendumTypeGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** fetch a Chat Setting */
    chatSetting?: (ChatSettingGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** get current video chats for a user. */
    closeToCurrentVideoChats?: (AppointmentGenqlSelection & { __args?: {
    /** User to get video chats that are starting in the next 10 minutes */
    user_id?: (Scalars['String'] | null)} })
    /** Fetch a CMS1500 by ID */
    cms1500?: (Cms1500GenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated Cms1500s collection */
    cms1500s?: (Cms1500GenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (Cms1500OrderKeys | null), status?: (Scalars['String'] | null)} })
    /** Number of Cms1500s */
    cms1500sCount?: { __args: {client_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), status?: (Scalars['String'] | null)} } | boolean | number
    /** Color Code Options for a given category */
    colorCodeOptions?: (ColorCodeOptionGenqlSelection & { __args?: {appointment_setting_id?: (Scalars['String'] | null), color_code_by?: (Scalars['String'] | null)} })
    /** Fetch comment */
    comment?: (CommentGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch comments collection */
    comments?: (CommentGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), entry_id?: (Scalars['ID'] | null), 
    /** An array of entry IDs to grab comments for. Overrides entry_id if passed in */
    entry_ids?: ((Scalars['ID'] | null)[] | null), offset?: (Scalars['Int'] | null), 
    /** If should paginate is true, the number of results to return on a page. Max 1000 */
    page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null)} })
    /** number of comments */
    commentsCount?: { __args: {entry_id?: (Scalars['ID'] | null), 
    /** An array of entry IDs to grab comments for. Overrides entry_id if passed in */
    entry_ids?: ((Scalars['ID'] | null)[] | null)} } | boolean | number
    /** fetch a completedCourseItem by course_item_id and user_id */
    completedCourseItem?: (CompletedCourseItemGenqlSelection & { __args?: {course_item_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Get the completed onboarding item by ID */
    completedOnboardingItem?: (CompletedOnboardingItemGenqlSelection & { __args: {
    /** The ID of the completed onboarding item */
    id: Scalars['ID']} })
    /** All Contact Types For Current User */
    contactTypes?: boolean | number
    /** fetch a conversation by id */
    conversation?: (ConversationGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** fetch a conversation membership by id */
    conversationMembership?: (ConversationMembershipGenqlSelection & { __args?: {
    /** The id of the conversation, will return the membership object for the conversation owner */
    id?: (Scalars['ID'] | null), 
    /** The id of the conversation membership, must have access to the conversation to use */
    conversation_membership_id?: (Scalars['ID'] | null)} })
    /** fetch a conversationmembership by id and invitees */
    conversationMembershipInvitees?: (ConversationMembershipGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated conversationmemberships collection */
    conversationMemberships?: (ConversationMembershipGenqlSelection & { __args: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), active_status?: (Scalars['String'] | null), client_id?: (Scalars['String'] | null), conversation_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), notes_type?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), 
    /** If true with client_id, only returns client messages that are shared with the provider */
    only_include_shared_memberships?: (Scalars['Boolean'] | null), 
    /** If TRUE: fetch organization members conversations */
    org_chat?: (Scalars['Boolean'] | null), 
    /** ID of the provider to get conversation for (if nil, will return current users) */
    provider_id?: (Scalars['ID'] | null), 
    /** Used to filter org chat conversations by provider ids */
    provider_ids?: ((Scalars['ID'] | null)[] | null), read_status?: (Scalars['String'] | null), order_by?: (ConversationMembershipOrderKeys | null)} })
    /** Number of conversationmembership */
    conversationMembershipsCount?: { __args: {active_status?: (Scalars['String'] | null), client_id?: (Scalars['String'] | null), conversation_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), 
    /** If true with client_id, only returns client messages that are shared with the provider */
    only_include_shared_memberships?: (Scalars['Boolean'] | null), notes_type?: (Scalars['String'] | null), 
    /** If TRUE: count organization members conversations */
    org_chat?: (Scalars['Boolean'] | null), 
    /** ID of the provider to get conversation for (if nil, will return current users) */
    provider_id?: (Scalars['ID'] | null), 
    /** Used to filter org chat conversations by provider ids */
    provider_ids?: ((Scalars['ID'] | null)[] | null), read_status?: (Scalars['String'] | null)} }
    /** Fetch current user's conversations. It is normally better to use the conversationMemberships query. */
    conversations?: (ConversationGenqlSelection & { __args?: {
    /** Get conversations between the current user and a given user */
    user_id?: (Scalars['ID'] | null)} })
    /** Number of conversation */
    conversationsCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a course by id (considered public) */
    course?: (CourseGenqlSelection & { __args?: {course_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null)} })
    /** fetch clients belonging to a course by course_id */
    courseClients?: (CourseMembershipGenqlSelection & { __args?: {course_id?: (Scalars['ID'] | null), course_status?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null)} })
    /** total number of clients for a specific course */
    courseClientsCount?: { __args: {course_id?: (Scalars['ID'] | null), course_status?: (Scalars['String'] | null)} } | boolean | number
    /** Get course completion info for users and user_groups */
    courseCompletetionInfo?: (CourseCompletionInfoTypeGenqlSelection & { __args?: {course_id?: (Scalars['ID'] | null)} })
    /** Course group memberships for the course */
    courseGroupClients?: (UserGenqlSelection & { __args?: {course_group_id?: (Scalars['String'] | null), course_id?: (Scalars['ID'] | null), course_status?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null)} })
    /** Total clients in course group memberships */
    courseGroupClientsCount?: { __args: {course_group_id?: (Scalars['String'] | null), course_id?: (Scalars['ID'] | null), course_status?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a courseitem by id (considered public) */
    courseItem?: (CourseItemGenqlSelection & { __args?: {course_membership_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null)} })
    /** get all custom custom emails for a current user */
    courseItemCustomEmails?: CustomEmailGenqlSelection
    /** get all documents for current user, can optionally include the attached org document by providing course_id and course_item_id. */
    courseItemDocuments?: (DocumentGenqlSelection & { __args?: {course_item_id?: (Scalars['ID'] | null)} })
    /** get all custom module forms for a current user */
    courseItemForms?: CustomModuleFormGenqlSelection
    /** Course items info for the course membership */
    courseItems?: (CourseItemGenqlSelection & { __args?: {client_id?: (Scalars['ID'] | null), course_id?: (Scalars['ID'] | null), find_for_provider?: (Scalars['Boolean'] | null), include_emails?: (Scalars['Boolean'] | null)} })
    /** fetch a courseMembership by id */
    courseMembership?: (CourseMembershipGenqlSelection & { __args?: {course_id?: (Scalars['ID'] | null), course_item_id?: (Scalars['ID'] | null), course_membership_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null), user_group_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Fetch paginated course membership collection */
    courseMemberships?: (CourseMembershipGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_id?: (Scalars['ID'] | null), fetch_all?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of course memberships */
    courseMembershipsCount?: { __args: {client_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch paginated course collection */
    courses?: (CourseGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), active?: (Scalars['Boolean'] | null), course_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), only_available?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null)} })
    /** Number of course */
    coursesCount?: { __args: {active?: (Scalars['Boolean'] | null), course_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null)} } | boolean | number
    /** All CPT Codes */
    cptCodes?: (CptCodeGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), for_superbill?: (Scalars['Boolean'] | null), is_favorited?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null)} })
    /** CPT Codes count */
    cptCodesCount?: { __args: {is_favorited?: (Scalars['Boolean'] | null)} } | boolean | number
    /** fetch the current user. */
    currentUser?: UserGenqlSelection
    /** fetch the current users notifications count. */
    currentUserNotificationsCount?: UserNotificationsCountGenqlSelection
    /** get current video chats for a user. */
    currentVideoChats?: (AppointmentGenqlSelection & { __args?: {only_current?: (Scalars['Boolean'] | null), 
    /** User to get current video chats for (if left blank, defaults to current user) */
    user_id?: (Scalars['String'] | null)} })
    /** Custom Email object */
    customEmail?: (CustomEmailGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), id?: (Scalars['ID'] | null)} })
    /** A HTML string containing mailer template for certain email type */
    customEmailPreview?: { __args: {course_id?: (Scalars['String'] | null), email_body_only?: (Scalars['Boolean'] | null), email_type?: (Scalars['String'] | null), find_record?: (Scalars['Boolean'] | null), greeting?: (Scalars['String'] | null), id?: (Scalars['String'] | null), message_body?: (Scalars['String'] | null), preview_email_type?: (Scalars['String'] | null), reactivation_wait_days?: (Scalars['String'] | null), subject?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch paginated custom emails collection */
    customEmails?: (CustomEmailGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), email_type?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of custom emails */
    customEmailsCount?: { __args: {email_type?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a custom module form by ID (templates are considered public) */
    customModuleForm?: (CustomModuleFormGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), charting?: (Scalars['Boolean'] | null), default?: (Scalars['Boolean'] | null), 
    /** The ID of the custom module form */
    id?: (Scalars['ID'] | null)} })
    /** All form templates for the current user */
    customModuleForms?: (CustomModuleFormGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), active_status?: (Scalars['Boolean'] | null), category?: (Scalars['String'] | null), include_default_templates?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (CustomModuleFormOrderKeys | null)} })
    /** Fetch paginated count for provider custom module forms */
    customModuleFormsCount?: { __args: {active_status?: (Scalars['Boolean'] | null), category?: (Scalars['String'] | null), include_default_templates?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null)} } | boolean | number
    /** get open appointment times for a range (considered public) */
    daysAvailableForRange?: { __args: {
    /** (optional) The ID of the appointment that will be rescheduled. Only needed if you want to use appointment-specific rescheduling restrictions */
    appointment_to_reschedule_id?: (Scalars['ID'] | null), appt_loc_id?: (Scalars['String'] | null), appt_type_id?: (Scalars['String'] | null), clients_can_join_waitlist?: (Scalars['Boolean'] | null), contact_type?: (Scalars['String'] | null), date_from_month?: (Scalars['String'] | null), 
    /** When passed in, supercedes date_from_month. Must be passed in along with start_date */
    end_date?: (Scalars['String'] | null), 
    /** When passed in, slots after this will not be returned. Inclusive. YYYY-MM-DD format */
    end_date_boundary?: (Scalars['String'] | null), length?: (Scalars['String'] | null), 
    /** Two letter state abbreviation (e.g. "CA", "NY") */
    licensed_in_state?: (Scalars['String'] | null), 
    /** Required True if querying multiple providers */
    org_level?: (Scalars['Boolean'] | null), outside_factors?: (Scalars['Boolean'] | null), 
    /** Required */
    provider_id?: (Scalars['String'] | null), provider_ids?: ((Scalars['String'] | null)[] | null), 
    /** Filters the provider list to only include users who have one of the specified tags applied. Ignored if org_level is not true */
    tag_ids?: ((Scalars['ID'] | null)[] | null), 
    /** When passed in, supercedes date_from_month. Must be passed in along with end_date */
    start_date?: (Scalars['String'] | null), 
    /** When passed in, slots before this will not be returned. YYYY-MM-DD format */
    start_date_boundary?: (Scalars['String'] | null), timezone?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a document by id */
    document?: (DocumentGenqlSelection & { __args?: {care_plan_id?: (Scalars['ID'] | null), course_id?: (Scalars['ID'] | null), course_item_id?: (Scalars['ID'] | null), custom_module_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null)} })
    /** Get Document Viewings for a specific document. A 'View' is when a document is downloaded or opened in a new tab */
    documentViewings?: (DocumentViewingGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), document_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null), 
    /** The number of document views to return per page. Maximum 500 */
    per_page?: (Scalars['Int'] | null)} })
    /** Number of instances for a document viewings for a specific document */
    documentViewingsCount?: { __args: {document_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch paginated documents collection */
    documents?: (DocumentGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), consolidated_user_id?: (Scalars['String'] | null), file_type?: (Scalars['String'] | null), filter?: (Scalars['String'] | null), folder_id?: (Scalars['String'] | null), for_template_use?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), private_user_id?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (DocumentOrderKeys | null), viewable_user_id?: (Scalars['String'] | null)} })
    /** Number of documents */
    documentsCount?: { __args: {consolidated_user_id?: (Scalars['String'] | null), file_type?: (Scalars['String'] | null), filter?: (Scalars['String'] | null), folder_id?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), private_user_id?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), viewable_user_id?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch User Info on DoseSpot Object */
    dosespotUserInfo?: (DoseSpotGenqlSelection & { __args?: {user_id?: (Scalars['ID'] | null)} })
    /** Fetch the iframe link to prescribe for a given patient (patient must have valid phone_number, dob, location.line1, location.city, location.state, and location.zip) */
    dosespot_ui_link?: { __args: {patient_id?: (Scalars['ID'] | null)} } | boolean | number
    /** draft by conversation_membership id */
    draft?: (DraftGenqlSelection & { __args?: {conversation_membership_id?: (Scalars['ID'] | null)} })
    /** Fetch an allergen by ID */
    drugAllergen?: (DrugAllergenTypeGenqlSelection & { __args: {id: Scalars['ID']} })
    /** Search for allergens by name */
    drugAllergens?: (DrugAllergenTypeGenqlSelection & { __args: {keywords: Scalars['String']} })
    /** Fetch a link from Fullscript to create a treatment plan for a given user */
    dynamicLink?: { __args: {user_id?: (Scalars['String'] | null)} } | boolean | number
    /** fetch embed steps based off of params */
    embedWidgetSteps?: (EmbedWidgetStepTypeGenqlSelection & { __args?: {is_for_web?: (Scalars['Boolean'] | null), locationString?: (Scalars['String'] | null)} })
    /** Fetch paginated entries collection */
    entries?: (EntryGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** The category of entry (e.g Weight or Blood Pressure) to return */
    category?: (Scalars['String'] | null), client_id?: (Scalars['String'] | null), 
    /** This field takes in a datetime string, and returns entries before that datetime. Must be sent in with a start_datetime_range */
    end_datetime_range?: (Scalars['String'] | null), 
    /** This field takes in a date (e.g 2020-11-29), and returns entries before the beginning of that day. Must be sent in with a start_range */
    end_range?: (Scalars['String'] | null), entry_id?: (Scalars['String'] | null), group_id?: (Scalars['String'] | null), 
    /** When true, returns entries for all client in the organization */
    is_org?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), 
    /** If should paginate is true, the number of results to return on a page. Max 500 */
    page_size?: (Scalars['Int'] | null), order_by?: (EntryOrderKeys | null), 
    /** This field takes in a datetime string, and returns entries after that datetime. Must be sent in with a end_datetime_range */
    start_datetime_range?: (Scalars['String'] | null), 
    /** This field takes in a date (e.g 2020-11-28), and returns entries starting at the beginning of that day */
    start_range?: (Scalars['String'] | null), summary_view?: (Scalars['Boolean'] | null), 
    /** The type of entry (e.g MetricEntry) to return */
    type?: (Scalars['String'] | null)} })
    /** Number of entries */
    entriesCount?: { __args: {category?: (Scalars['String'] | null), client_id?: (Scalars['String'] | null), 
    /** This field takes in a datetime string, and returns entries before that datetime. Must be sent in with a start_datetime_range */
    end_datetime_range?: (Scalars['String'] | null), 
    /** This field takes in a date (e.g 2020-11-29), and returns entries before the beginning of that day. Must be sent in with a start_range */
    end_range?: (Scalars['String'] | null), group_id?: (Scalars['String'] | null), 
    /** When true, returns entries for all client in the organization */
    is_org?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), 
    /** When passed in, the count query will never return a higher number than this. This can significantly speed up performance if you are just want users to scroll through recent entries */
    maximum_count?: (Scalars['Int'] | null), 
    /** This field takes in a datetime string, and returns entries after that datetime. Must be sent in with a end_datetime_range */
    start_datetime_range?: (Scalars['String'] | null), 
    /** This field takes in a date (e.g 2020-11-28), and returns entries starting at the beginning of that day */
    start_range?: (Scalars['String'] | null), type?: (Scalars['String'] | null)} } | boolean | number
    /** fetch an entry by id */
    entry?: (EntryGenqlSelection & { __args?: {client_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null), type?: (Scalars['String'] | null)} })
    /** fetch a featureToggle by id */
    featureToggle?: (FeatureToggleGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** fetch a featureToggle by id */
    featureToggleForEditing?: (FeatureToggleGenqlSelection & { __args?: {care_plan_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null), user_group_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** fetch a folder by id */
    folder?: (FolderGenqlSelection & { __args?: {custom_module_id?: (Scalars['ID'] | null), id?: (Scalars['String'] | null)} })
    /** Fetch paginated folders collection */
    folders?: (FolderGenqlSelection & { __args?: {client_id?: (Scalars['String'] | null), consolidated_user_id?: (Scalars['String'] | null), document_to_move_id?: (Scalars['ID'] | null), filter?: (Scalars['String'] | null), folder_id?: (Scalars['String'] | null), folder_to_move_id?: (Scalars['ID'] | null), for_template_use?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), private_user_id?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (FolderOrderKeys | null), viewable_user_id?: (Scalars['String'] | null)} })
    /** Number of folders */
    foldersCount?: { __args: {consolidated_user_id?: (Scalars['String'] | null), filter?: (Scalars['String'] | null), folder_id?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), private_user_id?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), viewable_user_id?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch food items */
    foodSearch?: (FoodGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), exclude_recent?: (Scalars['Boolean'] | null), food_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), upc?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} })
    /** Get size of food items that matches the keyword */
    foodSearchCount?: { __args: {exclude_recent?: (Scalars['Boolean'] | null), food_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), upc?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch a form answer group by id */
    formAnswerGroup?: (FormAnswerGroupGenqlSelection & { __args?: {for_superbills?: (Scalars['Boolean'] | null), external_id?: (Scalars['String'] | null), id?: (Scalars['ID'] | null), ids?: ((Scalars['ID'] | null)[] | null), 
    /** If TRUE, create form history 'opened' event */
    track_opened_event?: (Scalars['Boolean'] | null)} })
    /** All filled forms for a given set of arguments */
    formAnswerGroups?: (FormAnswerGroupGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), custom_module_form_id?: (Scalars['ID'] | null), date?: (Scalars['String'] | null), filler_id?: (Scalars['String'] | null), form_answer_group_id?: (Scalars['String'] | null), 
    /** Accepts an array of FormAnswerGroup ids */
    ids?: ((Scalars['ID'] | null)[] | null), include_group_notes?: (Scalars['Boolean'] | null), name?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null), locked_status?: (Scalars['Boolean'] | null), signed_status?: (Scalars['Boolean'] | null), 
    /** When passed in, only objects updated after the specified datetime are returned. */
    updated_after?: (Scalars['ISO8601DateTime'] | null), 
    /** When passed in, only objects updated before the specified datetime are returned. */
    updated_before?: (Scalars['ISO8601DateTime'] | null), should_paginate?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), order_by?: (FormAnswerGroupOrderKeys | null)} })
    /** The number of filled forms for a given set of a arguments */
    formAnswerGroupsCount?: { __args: {date?: (Scalars['String'] | null), filler_id?: (Scalars['String'] | null), form_answer_group_id?: (Scalars['String'] | null), 
    /** Accepts an array of FormAnswerGroup ids */
    ids?: ((Scalars['ID'] | null)[] | null), name?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null), locked_status?: (Scalars['Boolean'] | null), signed_status?: (Scalars['Boolean'] | null), 
    /** When passed in, only objects updated after the specified datetime are returned. */
    updated_after?: (Scalars['ISO8601DateTime'] | null), 
    /** When passed in, only objects updated before the specified datetime are returned. */
    updated_before?: (Scalars['ISO8601DateTime'] | null)} } | boolean | number
    /** Form histories owned by a patient and related to a sourceable form (RequsetedFormCompletion / OnboardingItem) */
    formHistories?: (FormHistoryGenqlSelection & { __args?: {
    /** The patient ID who owns the form */
    patient_id?: (Scalars['ID'] | null), 
    /** Source object ID */
    sourceable_id?: (Scalars['ID'] | null), 
    /** Source object type */
    sourceable_type?: (FormHistorySourceable | null), offset?: (Scalars['Int'] | null)} })
    /** Total count of form histories owned by a patient and related to a sourceable form (RequsetedFormCompletion / OnboardingItem) */
    formHistoriesCount?: { __args: {
    /** The patient ID who owns the form */
    patient_id?: (Scalars['ID'] | null), 
    /** Source object ID */
    sourceable_id?: (Scalars['ID'] | null), 
    /** Source object type */
    sourceable_type?: (FormHistorySourceable | null)} } | boolean | number
    /** Fetch available forms to request */
    formTypesToRequest?: (FormTypesToRequestGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null)} })
    /** Fullscript practitioners that share the same clinic id as organization owner */
    fullscriptPractitionerTypes?: FullscriptPractitionerTypeTypeGenqlSelection
    /** Fullscript practitioners that share the same clinic id as organization owner */
    fullscriptPractitioners?: FullscriptPractitionerTypeGenqlSelection
    /** fetch a goal by id */
    goal?: (GoalGenqlSelection & { __args?: {client_id?: (Scalars['ID'] | null), date?: (Scalars['String'] | null), get_client_goal?: (Scalars['Boolean'] | null), id?: (Scalars['ID'] | null), patient_goal_module?: (Scalars['Boolean'] | null), program_goal?: (Scalars['Boolean'] | null)} })
    /** All completed goals for a given set of users */
    goalHistories?: (GoalHistoryGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), category?: (Scalars['String'] | null), include_subgoals?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), unique?: (Scalars['Boolean'] | null), user_id?: (Scalars['ID'] | null)} })
    /** All completed goals for a given set of users */
    goalHistoriesCount?: { __args: {category?: (Scalars['String'] | null), include_subgoals?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), unique?: (Scalars['Boolean'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch goal history */
    goalHistory?: (GoalHistoryGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** A goal's instances */
    goalInstances?: (GoalInstanceGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), end_range?: (Scalars['String'] | null), goal_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), per_page?: (Scalars['Int'] | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null)} })
    /** Number of instances for a goal */
    goalInstancesCount?: { __args: {end_range?: (Scalars['String'] | null), goal_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), per_page?: (Scalars['Int'] | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null)} } | boolean | number
    /** Goal templates for given user */
    goalTemplates?: (GoalTemplateGenqlSelection & { __args?: {
    /** Can be 'personal', 'organizational', or 'default' */
    category?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Number of Goal templates for given user */
    goalTemplatesCount?: { __args: {keywords?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** All goals, either for a given user or for all of the providers clients */
    goals?: (GoalGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), category?: (Scalars['String'] | null), end_range?: (Scalars['String'] | null), 
    /** Can be daily, weekly, or one_time */
    frequency_filter?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), per_page?: (Scalars['Int'] | null), rel_goal_id?: (Scalars['String'] | null), order_by?: (GoalOrderKeys | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Number of goal */
    goalsCount?: { __args: {category?: (Scalars['String'] | null), end_range?: (Scalars['String'] | null), 
    /** Can be daily, weekly, or one_time */
    frequency_filter?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), rel_goal_id?: (Scalars['String'] | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** All goals data */
    goalsData?: (GoalDataTypeGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** Search over goals' repeat property */
    category?: (Scalars['String'] | null), end_range?: (Scalars['String'] | null), 
    /** Can be daily, weekly, or one_time */
    frequency_filter?: (Scalars['String'] | null), 
    /** Search over goals' names and descriptions */
    keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), per_page?: (Scalars['Int'] | null), 
    /** the goal ID */
    rel_goal_id?: (Scalars['String'] | null), order_by?: (GoalOrderKeys | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} })
    /**
     * @deprecated Use goalsOverallCompletionRateInfo instead
     * Overall completion percentage of goals
     */
    goalsOverallCompletionRate?: { __args: {category?: (Scalars['String'] | null), end_range?: (Scalars['String'] | null), 
    /** Can be daily, weekly, or one_time */
    frequency_filter?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), rel_goal_id?: (Scalars['String'] | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Overall completion percentage of goals */
    goalsOverallCompletionRateInfo?: (GoalOverallCompletionRateInfoGenqlSelection & { __args?: {category?: (Scalars['String'] | null), end_range?: (Scalars['String'] | null), 
    /** Can be daily, weekly, or one_time */
    frequency_filter?: (Scalars['String'] | null), goal_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Overall completion percentage of goals */
    goalsStreakCount?: { __args: {category?: (Scalars['String'] | null), end_range?: (Scalars['String'] | null), 
    /** Can be daily, weekly, or one_time */
    frequency_filter?: (Scalars['String'] | null), goal_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), start_range?: (Scalars['String'] | null), 
    /** Can be complete or not_complete */
    status_filter?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** When true, the user can set up question conditions in the form builder */
    hasConditionalQuestionEditing?: boolean | number
    /** When true, the user can add sublabels to questions in the form builder */
    hasSubLabels?: boolean | number
    /** Fetch a single health assessment */
    healthAssessment?: (HealthAssessmentGenqlSelection & { __args?: {device_token?: (Scalars['String'] | null), device_type?: (Scalars['String'] | null), email?: (Scalars['String'] | null), run_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Fetch Health Assessments */
    healthAssessments?: (HealthAssessmentGenqlSelection & { __args?: {device_token?: (Scalars['String'] | null), device_type?: (Scalars['String'] | null), email?: (Scalars['String'] | null), run_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Fetch ICD Code by ID */
    icdCode?: (IcdCodeGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** All ICD Codes */
    icdCodes?: (IcdCodeGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), is_billable?: (Scalars['Boolean'] | null), 
    /** The favorited status of the ICD Code */
    is_favorited?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), 
    /** Whether results are paginated, highly recommended for use */
    should_paginate?: (Scalars['Boolean'] | null), order_by?: (IcdCodeOrderKeys | null)} })
    /** Count of all ICD Codes */
    icdCodesCount?: { __args: {is_billable?: (Scalars['Boolean'] | null), 
    /** The favorited status of the ICD Code */
    is_favorited?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null)} } | boolean | number
    /** fetch import data request by user_id */
    importDataRequest?: (ImportDataRequestGenqlSelection & { __args?: {user_id?: (Scalars['ID'] | null)} })
    /** A new CMS1500 form with some objects already prefilled */
    initialCms1500?: (Cms1500GenqlSelection & { __args?: {form_answer_group_id?: (Scalars['ID'] | null), patient_id?: (Scalars['ID'] | null), provider_id?: (Scalars['String'] | null)} })
    /** Initial form answers for a given user and template */
    initialFormAnswers?: (FormAnswerGenqlSelection & { __args?: {custom_module_form_id?: (Scalars['ID'] | null), incomplete_form_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** appointment types related to offering */
    initializedOfferingIncludes?: (OfferingIncludeGenqlSelection & { __args?: {offering_id?: (Scalars['ID'] | null)} })
    /** Insurance Authorization belonging to a client */
    insuranceAuthorization?: (InsuranceAuthorizationTypeGenqlSelection & { __args?: {
    /** Client to get insurance authorization for */
    client_id?: (Scalars['ID'] | null), 
    /** id of insurance authorization */
    id?: (Scalars['ID'] | null)} })
    /** Get all potential insurance plans */
    insurancePlans?: (InsurancePlanGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** Array of plan ids */
    ids?: (Scalars['String'] | null), 
    /** The accepted status of the insurance plan */
    is_accepted?: (Scalars['Boolean'] | null), 
    /** Get custom insurance plans */
    is_custom?: (Scalars['Boolean'] | null), 
    /** Search keywords */
    keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (InsurancePlanOrderKeys | null)} })
    /** Get all potential insurance plans */
    insurancePlansCount?: { __args: {
    /** Array of plan ids */
    ids?: (Scalars['String'] | null), 
    /** The accepted status of the insurance plan */
    is_accepted?: (Scalars['Boolean'] | null), 
    /** Get custom insurance plans */
    is_custom?: (Scalars['Boolean'] | null), 
    /** Search keywords */
    keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch intake flow */
    intakeFlow?: (IntakeFlowTypeGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null), order_by?: (IntakeFlowOrderKeys | null), user_id?: (Scalars['ID'] | null), 
    /** Filter records by list of statuses */
    statuses?: ((FormStatus | null)[] | null), 
    /** Filter records by list of form types */
    form_types?: ((FormType | null)[] | null)} })
    /** Fetch list of  available integrations */
    integrationsList?: (IntegrationCategoryTypeGenqlSelection & { __args?: {category?: (Scalars['String'] | null)} })
    /** Initial date of service for a new form answer group */
    intitialServiceDate?: { __args: {appointment_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** get the base price for the invoice based off the associated item */
    invoiceBasePrice?: { __args: {cms1500_id?: (Scalars['ID'] | null), offering_id?: (Scalars['ID'] | null)} } | boolean | number
    invoiceTemplates?: (RequestedPaymentTemplateGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null)} })
    /** Get options for lab filters */
    labFiltersData?: LabFiltersDataTypeGenqlSelection
    /** Fetch all lab options (considered public) */
    labOptions?: LabOptionGenqlSelection
    /** Fetch onboarding flows collection */
    labOrder?: (LabOrderGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch lab orders collection */
    labOrders?: (LabOrderGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_filter?: (Scalars['String'] | null), client_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), lab_filter?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), provider_filter?: (Scalars['String'] | null), recent_orders?: (Scalars['Boolean'] | null), order_by?: (LabOrderOrderKeys | null), status_filter?: (Scalars['String'] | null)} })
    /** Number of lab orders related to the current user */
    labOrdersCount?: { __args: {client_filter?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), lab_filter?: (Scalars['String'] | null), provider_filter?: (Scalars['String'] | null), status_filter?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch a laboratory result by ID */
    labResult?: (LabResultGenqlSelection & { __args: {
    /** The ID of the lab result */
    id: Scalars['ID']} })
    /** Fetch most recent conversationMembership */
    lastCM?: (ConversationMembershipGenqlSelection & { __args?: {active_status?: (Scalars['String'] | null), 
    /** ID of the provider to get conversation for (if nil, will return current users) */
    provider_id?: (Scalars['ID'] | null)} })
    /** The 6 most recently active clients */
    lastClientActivities?: (UserGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null)} })
    /** has loadMoreNotes been called */
    loadMoreNotesCalled?: boolean | number
    /** fetch a location by id */
    location?: (LocationGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Get location resources */
    locationResources?: (LocationResourceTypeGenqlSelection & { __args?: {location_ids?: (Scalars['String'] | null)} })
    /** Get locations for a given user (or current user) */
    locations?: (LocationGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** Pass in true to get service facilities for CMS 1500 */
    has_name?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), user_id?: (Scalars['String'] | null), 
    /** Pass in true to get service facilities for CMS 1500 */
    has_service_facilities?: (Scalars['Boolean'] | null)} })
    /** A count of available locations for the current user */
    locationsCount?: { __args: {has_name?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), 
    /** Pass in true to get service facilities for CMS 1500 */
    has_service_facilities?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Fetch user meals */
    mealSearch?: (MealGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), user_id?: (Scalars['String'] | null)} })
    /** Get size of user meals that matches the keyword */
    mealSearchCount?: { __args: {keywords?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} } | boolean | number
    /** Meal plan options from user Living Plate account. Nil if no Living Plate account associated */
    meal_plan_options?: MealPlanGenqlSelection
    /** Fetch a medication by ID */
    medication?: (MedicationTypeGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    medication_option?: (MedicationOptionTypeGenqlSelection & { __args: {id: Scalars['ID']} })
    /** Fetch an array of medications options. Considered Public */
    medication_options?: (MedicationOptionTypeGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null)} })
    /** Fetch an array of medications for a given patient */
    medications?: (MedicationTypeGenqlSelection & { __args?: {active?: (Scalars['Boolean'] | null), patient_id?: (Scalars['ID'] | null), 
    /** When true, only unreconciled objects are returned. Otherwise, they are not included */
    unreconciled_from_ccda_ingest?: (Scalars['Boolean'] | null)} })
    /** Fetch count of medications for a given patient */
    medications_count?: { __args: {active?: (Scalars['Boolean'] | null), patient_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch data for the metric graphs for a given user */
    metricGraphData?: (MetricGraphDataTypeGenqlSelection & { __args?: {category?: (Scalars['String'] | null), 
    /** End of the date range, must be sent in with a start date. */
    end_date?: (Scalars['String'] | null), entry_type?: (Scalars['String'] | null), 
    /** When false, returns no third-party data. When true, returns only third-party data. If not passed in, will return all data */
    has_third_party_source?: (Scalars['Boolean'] | null), multiplier?: (Scalars['String'] | null), 
    /** Start of the date range, must be sent in with an end date. */
    start_date?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} })
    /** Fetch data for the metric graphs for a given user */
    metricGraphsData?: (MetricGraphDataTypeGenqlSelection & { __args?: {
    /** End of the date range, must be sent in with a start date. */
    end_date?: (Scalars['String'] | null), 
    /** When false, returns no third-party data. When true, returns only third-party data. If not passed in, will return all data */
    has_third_party_source?: (Scalars['Boolean'] | null), 
    /** Start of the date range, must be sent in with an end date. */
    start_date?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} })
    minimumOfferingPrice?: { __args: {lab_option_ids?: ((Scalars['ID'] | null)[] | null), state?: (Scalars['String'] | null)} } | boolean | number
    /** returns metadata about montly payments */
    monthlyBillingItemsData?: (MonthlyBillingItemsDataTypeGenqlSelection & { __args?: {gross?: (Scalars['Boolean'] | null), org_level?: (Scalars['Boolean'] | null)} })
    /** Fetch data for multi line metric graphs for a given user */
    multiLineMetricGraphData?: (MultiLineMetricGraphDataTypeGenqlSelection & { __args?: {category?: (Scalars['String'] | null), 
    /** End of the date range, must be sent in with a start date. */
    end_date?: (Scalars['String'] | null), entry_type?: (Scalars['String'] | null), food_graph_type?: (Scalars['String'] | null), 
    /** Start of the date range, must be sent in with an end date. */
    start_date?: (Scalars['String'] | null), sub_category?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} })
    /** String containing info for the user about the client upgrade price */
    newClientPriceString?: { __args: {new_client_num?: (Scalars['Int'] | null)} } | boolean | number
    /** String containing info for the user about the org upgrade price */
    newOrganizationPriceString?: { __args: {new_provder_num?: (Scalars['Int'] | null)} } | boolean | number
    /** String containing info for the user about the org upgrade price when adding a new support user */
    newOrganizationSupportPriceString?: { __args: {new_support_num?: (Scalars['Int'] | null)} } | boolean | number
    /** Fetch closest appointment */
    nextAppointment?: AppointmentGenqlSelection
    /** get open appointment times for a range (considered public) */
    nextAvailableSlot?: { __args: {
    /** (optional) The ID of the appointment that will be rescheduled. Only needed if you want to use appointment-specific rescheduling restrictions */
    appointment_to_reschedule_id?: (Scalars['ID'] | null), appt_loc_id?: (Scalars['String'] | null), appt_type_id?: (Scalars['String'] | null), contact_type?: (Scalars['String'] | null), 
    /** When passed in, slots after this will not be returned. Inclusive. YYYY-MM-DD format */
    end_date_boundary?: (Scalars['String'] | null), length?: (Scalars['String'] | null), 
    /** Two letter state abbreviation (e.g. "CA", "NY") */
    licensed_in_state?: (Scalars['String'] | null), org_level?: (Scalars['Boolean'] | null), outside_factors?: (Scalars['Boolean'] | null), 
    /** Required */
    provider_id?: (Scalars['String'] | null), provider_ids?: ((Scalars['String'] | null)[] | null), 
    /** Filters the provider list to only include users who have one of the specified tags applied. Ignored if org_level is not true */
    tag_ids?: ((Scalars['ID'] | null)[] | null), 
    /** When passed in, slots before this will not be returned. YYYY-MM-DD format */
    start_date_boundary?: (Scalars['String'] | null), timezone?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a courseitem by id (considered public) */
    nextCourseItem?: (CourseItemGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** fetch a note by id */
    note?: (NoteGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** get the viewed status of a note */
    noteViewedStatus?: { __args: {id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch note scheduler by id */
    note_scheduler?: (NoteSchedulerGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated note collection for given conversation */
    notes?: (NoteGenqlSelection & { __args: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), conversation_id?: (Scalars['ID'] | null), ids?: ((Scalars['ID'] | null)[] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), 
    /** If TRUE: get base user as a conversation owner */
    org_chat?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), scheduled_notes?: (Scalars['Boolean'] | null), since_note_id?: (Scalars['ID'] | null), order_by?: (NoteOrderKeys | null), 
    /** If TRUE: get notes with tasks */
    with_tasks?: (Scalars['Boolean'] | null)} })
    /** Number of notes */
    notesCount?: { __args: {conversation_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), 
    /** If TRUE: get base user as a conversation owner */
    org_chat?: (Scalars['Boolean'] | null), provider_id?: (Scalars['ID'] | null), scheduled_notes?: (Scalars['Boolean'] | null)} }
    /** get count of notifications for a given user (or for the current user) */
    notificationCount?: { __args: {other_party_id?: (Scalars['String'] | null), read_status?: (Scalars['Boolean'] | null), seen_status?: (Scalars['Boolean'] | null), types?: ((Scalars['String'] | null)[] | null)} } | boolean | number
    /** fetch a Notification Setting by id */
    notificationSetting?: (NotificationSettingGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** get notifications for a given user (or for the current user) */
    notifications?: (NotificationGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), offset?: (Scalars['Int'] | null), other_party_id?: (Scalars['String'] | null), page_size?: (Scalars['Int'] | null), read_status?: (Scalars['Boolean'] | null), seen_status?: (Scalars['Boolean'] | null), order_by?: (NotificationOrderKeys | null), types?: ((Scalars['String'] | null)[] | null)} })
    /** fetch an offering by id (considered public) */
    offering?: (OfferingGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated list of users associated with an offering */
    offeringBillingItems?: (BillingItemGenqlSelection & { __args?: {offering_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null)} })
    /** Number of users associated with an offering */
    offeringBillingItemsCount?: { __args: {offering_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch paginated coupon offerings collection */
    offeringCoupons?: (OfferingCouponGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), from_package_details?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offering_id?: (Scalars['ID'] | null), page_size?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), order_by?: (OfferingCouponOrderKeys | null), user_id?: (Scalars['ID'] | null)} })
    /** Number of offering coupons */
    offeringCouponsCount?: { __args: {from_package_details?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offering_id?: (Scalars['ID'] | null)} } | boolean | number
    /** get all user groups relating to offerings */
    offeringGroupVisibilities?: (OfferingGroupVisibilityGenqlSelection & { __args?: {
    /** the provider ID we want to use to fetch all user groups relating to offerings */
    provider_id?: (Scalars['ID'] | null)} })
    /** All OfferingImage that have no user_id */
    offeringImages?: OfferingImageGenqlSelection
    /** Fetch paginated offerings collection (considered public) */
    offerings?: (OfferingGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_visibility?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offering_id?: (Scalars['ID'] | null), offering_ids?: ((Scalars['ID'] | null)[] | null), offering_user_group_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null), only_client_visible?: (Scalars['Boolean'] | null), 
    /** The number of packages to return at one time (when should_paginate is true) */
    page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), should_paginate?: (Scalars['Boolean'] | null), show_only_visible?: (Scalars['Boolean'] | null), order_by?: (OfferingOrderKeys | null), status?: (Scalars['String'] | null)} })
    /** Number of offerings (considered public) */
    offeringsCount?: { __args: {client_visibility?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offering_id?: (Scalars['ID'] | null), offering_ids?: ((Scalars['ID'] | null)[] | null), offering_user_group_id?: (Scalars['ID'] | null), only_client_visible?: (Scalars['Boolean'] | null), provider_id?: (Scalars['ID'] | null), should_paginate?: (Scalars['Boolean'] | null), status?: (Scalars['String'] | null)} } | boolean | number
    /** returns metadata about offerings purchased */
    offeringsData?: (OfferingsDataTypeGenqlSelection & { __args?: {org_level?: (Scalars['Boolean'] | null)} })
    /** fetch the current users officeally sftp connection */
    officeallySftpAccount?: OfficeallySftpAccountGenqlSelection
    /** Fetch an onboarding flow by id or uuid */
    onboardingFlow?: (OnboardingFlowGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null), 
    /** Fetch onboarding flow by unique identifier. Considered public */
    uuid?: (Scalars['String'] | null)} })
    /** Fetch onboarding flows collection */
    onboardingFlows?: (OnboardingFlowGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null), order_by?: (OnboardingFlowOrderKeys | null)} })
    /** Number of onboarding flows */
    onboardingFlowsCount?: { __args: {keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null)} } | boolean | number
    /** fetch an onboarding item by id (considered public) */
    onboardingItem?: (OnboardingItemGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), 
    /** Patient ID who owns the form */
    user_id?: (Scalars['ID'] | null), 
    /** If TRUE, create form history 'opened' event */
    track_opened_event?: (Scalars['Boolean'] | null)} })
    /** Returns all cpt codes associated with org providers */
    orgProvidersCptCodes?: (ProviderCptCodeTypeGenqlSelection & { __args?: {org_id?: (Scalars['ID'] | null)} })
    /** fetch an organization by id, by provider id, or by the current_user, demographic org info is (considered public) */
    organization?: (OrganizationGenqlSelection & { __args?: {email?: (Scalars['String'] | null), for_client?: (Scalars['Boolean'] | null), id?: (Scalars['ID'] | null), provider_id?: (Scalars['ID'] | null), provider_ids?: ((Scalars['ID'] | null)[] | null), state_licenses?: ((Scalars['String'] | null)[] | null)} })
    /** Fetch organization info by id */
    organizationInfo?: (OrganizationInfoGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** fetch members of organization */
    organizationMembers?: (UserGenqlSelection & { __args?: {conversation_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), 
    /** Two letter state abbreviation (e.g. "CA", "NY") */
    licensed_in_state?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), 
    /** The number of organization members to return (Max 100) */
    page_size?: (Scalars['Int'] | null), order_by?: (UserOrderKeys | null)} })
    /** org members count */
    organizationMembersCount?: { __args: {conversation_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), 
    /** Two letter state abbreviation (e.g. "CA", "NY") */
    licensed_in_state?: (Scalars['String'] | null)} } | boolean | number
    /** Get the organization membership info of the current user, basic org member info is (considered public) */
    organizationMembership?: (OrganizationMembershipGenqlSelection & { __args?: {
    /** The id of a user */
    user_id?: (Scalars['ID'] | null), 
    /** The id of an organization membership */
    id?: (Scalars['ID'] | null)} })
    /** Get the organization memberships */
    organizationMemberships?: (OrganizationMembershipGenqlSelection & { __args?: {id?: (Scalars['String'] | null), order_by?: (OrganizationMembershipOrderKeys | null), user_ids?: ((Scalars['ID'] | null)[] | null)} })
    /** fetch an Other Id Number by id */
    otherIdNumber?: (OtherIdNumberGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** A collection of Other ID's and its Qualifiers for given user */
    otherIdNumbers?: (OtherIdNumberGenqlSelection & { __args?: {user_id?: (Scalars['ID'] | null)} })
    /** returns true if the there are more transfers to load */
    paginate_transfers?: { __args: {limit?: (Scalars['Int'] | null), starting_after?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch permission template */
    permissionTemplate?: (PermissionTemplateTypeGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Get Permission Templates */
    permissionTemplates?: (PermissionTemplateTypeGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of permission templates */
    permissionTemplatesCount?: boolean | number
    /**
     * @deprecated Use `pharmacy` instead
     * Fetch a pharmacy given dosespot pharmacy id
     */
    pharamcy?: (PharmacyGenqlSelection & { __args?: {
    /** id assigned by dosespot */
    id?: (Scalars['String'] | null)} })
    /** Fetch an array of pharmacies given search parameters */
    pharmacies?: (PharmacyGenqlSelection & { __args: {
    /** requires at least 3 characters */
    address?: (Scalars['String'] | null), 
    /** requires at least 3 characters */
    city?: (Scalars['String'] | null), 
    /** keywords for name of pharmacy, requires at least 3 characters */
    name?: (Scalars['String'] | null), ncpdp_id?: (Scalars['String'] | null), phone_or_fax?: (Scalars['String'] | null), 
    /** Array of pharmacy  accepted values: EPCS, TwentyFourHourPharmacy, LongTermCarePharmacy, MailOrder, SpecialtyPharmacy, Retail */
    specialties?: ((Scalars['String'] | null)[] | null), 
    /** two letter abbreviation (i.e ny, ca, md) */
    state?: (Scalars['String'] | null), 
    /** requires at least 3 numeric characters */
    zip?: (Scalars['String'] | null)} })
    /** Fetch a pharmacy given dosespot pharmacy id */
    pharmacy?: (PharmacyGenqlSelection & { __args?: {
    /** id assigned by dosespot */
    id?: (Scalars['String'] | null)} })
    /** fetch all place of services */
    placeOfServices?: PlaceOfServiceGenqlSelection
    /** fetch a Plan by id (considered public) */
    plan?: (PlanGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** fetch a policy by id */
    policy?: (PolicyGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch collection of preferred CPT/ICD codes */
    preferred_medical_codes?: (PreferredMedicalCodeGenqlSelection & { __args?: {code_type?: (Scalars['String'] | null)} })
    /** Fetch a prescriptions for a given patient and prescription id pulled from Dosespot */
    prescription?: (PrescriptionGenqlSelection & { __args?: {patient_id?: (Scalars['ID'] | null), prescription_id?: (Scalars['String'] | null)} })
    /** Fetch an array of prescriptions for a given patient pulled from Dosespot */
    prescriptions?: (PrescriptionGenqlSelection & { __args?: {patient_id?: (Scalars['ID'] | null), status?: (Scalars['String'] | null)} })
    /** fetch a courseitem by id (considered public) */
    prevCourseItem?: (CourseItemGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated product collection */
    products?: (ProductGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), page_size?: (Scalars['Int'] | null), order_by?: (ProductOrderKeys | null)} })
    /** Number of products */
    productsCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a provider by id */
    provider?: (UserGenqlSelection & { __args?: {client_id?: (Scalars['ID'] | null), id?: (Scalars['ID'] | null), 
    /** Change provider tax id based off the specified organization info */
    organization_info_id?: (Scalars['ID'] | null), super_bill_id?: (Scalars['ID'] | null)} })
    /** get provider appointment locations. */
    providerAppointmentLocations?: (AppointmentLocationGenqlSelection & { __args?: {provider_id?: (Scalars['ID'] | null)} })
    /** Returns all cpt codes associated with this provider */
    providerCptCodes?: (ProviderCptCodeTypeGenqlSelection & { __args?: {provider_id?: (Scalars['ID'] | null)} })
    /** Fetch generic custom modules for use in the form builder */
    questionBankModules?: (CustomModuleGenqlSelection & { __args?: {category?: (Scalars['String'] | null)} })
    /** Fetch receipt_line_items collection by super_bill_id */
    receiptLineItems?: (ReceiptLineItemGenqlSelection & { __args?: {super_bill_id?: (Scalars['ID'] | null)} })
    /** Fetch received direct message via ID */
    receivedDirectMessage?: (ReceivedDirectMessageGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch Received Direct Meessages */
    receivedDirectMessages?: (ReceivedDirectMessageGenqlSelection & { __args?: {offset?: (Scalars['Int'] | null), keywords?: (Scalars['String'] | null), order_by?: (ReceivedDirectMessageOrderKeys | null)} })
    /** Fetch number of Received Direct Meessages */
    receivedDirectMessagesCount?: { __args: {offset?: (Scalars['Int'] | null), keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch Received Fax by ID */
    receivedFax?: (ReceivedFaxGenqlSelection & { __args?: {
    /** The ID of the Received Fax */
    id?: (Scalars['ID'] | null)} })
    /** Fetch paginated Received Faxes collection */
    receivedFaxes?: (ReceivedFaxGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), active_status?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), order_by?: (ReceivedFaxOrderKeys | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of Received Faxes */
    receivedFaxesCount?: { __args: {active_status?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch recent food items */
    recentFoods?: (FoodGenqlSelection & { __args?: {food_type?: (Scalars['String'] | null), keywords?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} })
    /** Fetch recurring forms collection */
    recurringForms?: (RecurringFormGenqlSelection & { __args?: {connectable_id?: (Scalars['String'] | null), connectable_type?: (Scalars['String'] | null)} })
    /** Fetch a recurring payment by id */
    recurringPayment?: (RecurringPaymentGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch active recurring_payments */
    recurringPayments?: (RecurringPaymentGenqlSelection & { __args?: {active_status?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Fetch Referral by ID */
    referral?: (ReferralGenqlSelection & { __args?: {
    /** The ID of the Referral */
    id?: (Scalars['ID'] | null)} })
    /** Get referring physician based on id */
    referringPhysician?: (ReferringPhysicianGenqlSelection & { __args?: {has_fax_number?: (Scalars['Boolean'] | null), id?: (Scalars['ID'] | null), 
    /** The id of the patient the referring physician is associated with */
    user_id?: (Scalars['String'] | null)} })
    /** all referring physicians based on current user */
    referringPhysicians?: (ReferringPhysicianGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), has_fax_number?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (ReferringPhysicianOrderKeys | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of referring physicians */
    referringPhysiciansCount?: boolean | number
    /** fetch a requested form completion by id */
    requestedFormCompletion?: (RequestedFormCompletionGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), 
    /** If TRUE, create form history 'opened' event */
    track_opened_event?: (Scalars['Boolean'] | null)} })
    /** Fetch requested form completions collection */
    requestedFormCompletions?: (RequestedFormCompletionGenqlSelection & { __args?: {keywords?: (Scalars['String'] | null), status?: (Scalars['String'] | null), user_id?: (Scalars['ID'] | null)} })
    /** fetch a requested payment (invoice) by id */
    requestedPayment?: (RequestedPaymentGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), invoice_id?: (Scalars['String'] | null), preview?: (Scalars['Boolean'] | null), uuid?: (Scalars['String'] | null)} })
    /** Fetch paginated Requested Payments collection */
    requestedPayments?: (RequestedPaymentGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), preview?: (Scalars['Boolean'] | null), 
    /** will return all requested payments with this ID as the sender or recipient */
    sender_id?: (Scalars['ID'] | null), order_by?: (RequestedPaymentOrderKeys | null), 
    /** Can be paid, partial or unpaid */
    status_filter?: (Scalars['String'] | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of Requested Payments */
    requestedPaymentsCount?: { __args: {keywords?: (Scalars['String'] | null), sender_id?: (Scalars['ID'] | null), 
    /** Can be paid, partial or unpaid */
    status_filter?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch specific saved filter */
    savedFilter?: (SavedFilterGenqlSelection & { __args?: {id?: (Scalars['ID'] | null), uuid?: (Scalars['ID'] | null)} })
    /** Fetch all saved filters for a user or organization */
    savedFilters?: (SavedFilterGenqlSelection & { __args?: {user_id?: (Scalars['ID'] | null), organization_id?: (Scalars['ID'] | null)} })
    /** Fetch user's scheduled message blasts */
    scheduledMessageBlasts?: (NoteSchedulerGenqlSelection & { __args?: {
    /** If True - returns organization membership scheduled message blasts */
    org_chat?: (Scalars['Boolean'] | null), 
    /** Only include relevant scheduled message blasts for client */
    client_id?: (Scalars['String'] | null), 
    /** ID of the provider to get conversation for (if nil, will return current users) */
    provider_id?: (Scalars['ID'] | null), 
    /** Used to filter org chat conversations by provider ids */
    provider_ids?: ((Scalars['ID'] | null)[] | null)} })
    /** Fetch collection of all scheduled packages */
    scheduledUserPackageSelections?: (ScheduledUserPackageSelectionGenqlSelection & { __args?: {
    /** ID of the user to load the list of given packages */
    user_id?: (Scalars['ID'] | null)} })
    /** SDK configuration */
    sdkConfig?: (SDKConfigGenqlSelection & { __args?: {
    /** SDK version to obtain the configuration for */
    version?: (Scalars['String'] | null)} })
    /** Fetch sent direct message via ID */
    sentDirectMessage?: (SentDirectMessageGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch number of Sent Direct Messages */
    sentDirectMessages?: (SentDirectMessageGenqlSelection & { __args?: {offset?: (Scalars['Int'] | null), keywords?: (Scalars['String'] | null), order_by?: (SentDirectMessageOrderKeys | null)} })
    /** Fetch number of Sent Direct Meessages */
    sentDirectMessagesCount?: { __args: {offset?: (Scalars['Int'] | null), keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch sent Fax by ID */
    sentFax?: (SentFaxGenqlSelection & { __args: {
    /** The ID of the sent Fax */
    id: Scalars['ID']} })
    /** Fetch paginated Sent Faxes collection */
    sentFaxes?: (SentFaxGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), order_by?: (SentFaxOrderKeys | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of Sent Faxes */
    sentFaxesCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch notification list for a specific client or list of clients. */
    sentNotificationRecords?: (SentNotificationRecordGenqlSelection & { __args?: {end_date?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), 
    /** Used in conjunction with provider_id. When true, returns sent notification records for all patients in the organization */
    org_level?: (Scalars['Boolean'] | null), 
    /** The ID of the patient to return sent notification records for. */
    patient_id?: (Scalars['ID'] | null), 
    /** When passed in, returns sent notification records for the given provider's patients. Overrides patient_id. Current user must be an admin to use this param */
    provider_id?: (Scalars['ID'] | null), 
    /** Must be true if provider_id is passed in. */
    should_paginate?: (Scalars['Boolean'] | null), start_date?: (Scalars['String'] | null), status?: (Scalars['String'] | null), type?: (Scalars['String'] | null)} })
    /** Get number of SentNotificationRecord entries */
    sentNotificationRecordsCount?: { __args: {end_date?: (Scalars['String'] | null), 
    /** Used in conjunction with provider_id. When true, returns sent notification records for all patients in the organization */
    org_level?: (Scalars['Boolean'] | null), 
    /** The ID of the patient to return sent notification records for. */
    patient_id?: (Scalars['ID'] | null), 
    /** When passed in, returns sent notification records for the given provider's patients. Overrides patient_id. Current user must be an admin to use this param */
    provider_id?: (Scalars['ID'] | null), start_date?: (Scalars['String'] | null), status?: (Scalars['String'] | null), type?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch paginated Webhooks collection */
    sentWebhooks?: (SentWebhookGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), order_by?: (SentWebhookOrderKeys | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of Webhooks */
    sentWebhooksCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Fetch serving sizes for a food */
    servingSizes?: (ServingSizeGenqlSelection & { __args?: {food_id?: (Scalars['String'] | null)} })
    /** A HTML string of charting note answers */
    shareNotePreview?: { __args: {answers?: (Scalars['String'] | null), form_answer_group_id?: (Scalars['String'] | null), letterhead?: (Scalars['Boolean'] | null), user_id?: (Scalars['String'] | null)} } | boolean | number
    /** Should current user see scheduled chat tab */
    showScheduledTab?: boolean | number
    /** Get the signed stream name for a given stream name */
    signedStreamName?: { __args: {
    /** The id of the conversation to get the signed stream name for */
    conversation_id?: (Scalars['ID'] | null), 
    /** The type of stream to get the signed stream name for */
    type: SignedStreamName} }
    /** Fetch user smart phrases */
    smartPhrases?: (SmartPhraseGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null)} })
    /** Get size of user smart phrases that matches the keyword */
    smartPhrasesCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** initial cpt codes for a new super bill */
    startingSuperBillCptCodes?: (CptCodesSuperBillGenqlSelection & { __args?: {form_answer_group_id?: (Scalars['ID'] | null), form_answer_group_ids?: ((Scalars['ID'] | null)[] | null), user_id?: (Scalars['ID'] | null)} })
    /** initial icd10 codes for a new super bill */
    startingSuperBillIcd10s?: (IcdCodesSuperBillGenqlSelection & { __args?: {form_answer_group_id?: (Scalars['ID'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Return providers' state licenses */
    stateLicenses?: (StateLicenseGenqlSelection & { __args?: {provider_id?: (Scalars['ID'] | null), provider_ids?: ((Scalars['ID'] | null)[] | null)} })
    /** Default Stripe bank account object associated to a practitioner stripe account */
    stripeBankAccount?: StripeBankAccountTypeGenqlSelection
    /** Information about the user's stripe company */
    stripeCompany?: StripeCompanyTypeGenqlSelection
    /** An array containing infoformation about countries that stripe supports */
    stripeCountries?: StripeCountryGenqlSelection
    /** An object containing info about a country that stripe supports */
    stripeCountry?: (StripeCountryGenqlSelection & { __args?: {country_code?: (Scalars['String'] | null)} })
    /** Fetch all stripe payment cards for user */
    stripeCustomerDetails?: (StripeCustomerDetailGenqlSelection & { __args?: {user_id?: (Scalars['ID'] | null)} })
    /** All subgoals for a given goal */
    subGoals?: (GoalGenqlSelection & { __args?: {goal_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null), user_id?: (Scalars['ID'] | null)} })
    /** Number of subgoals */
    subGoalsCount?: { __args: {goal_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null), user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Get the current users subscription */
    subscription?: SubscriptionInstanceGenqlSelection
    /** fetch a superbill by id */
    superBill?: (SuperBillGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated super bills collection */
    superBills?: (SuperBillGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), provider_id?: (Scalars['ID'] | null), order_by?: (SuperBillOrderKeys | null), page_size?: (Scalars['Int'] | null), 
    /** status to filter superbills, default all  */
    status?: (Scalars['String'] | null)} })
    /** Number of super bills */
    superBillsCount?: { __args: {client_id?: (Scalars['ID'] | null), keywords?: (Scalars['String'] | null), provider_id?: (Scalars['ID'] | null), 
    /** status to filter superbills, default all  */
    status?: (Scalars['String'] | null)} } | boolean | number
    /** A collection of tags related to current patient/provider/organization */
    tags?: (TagGenqlSelection & { __args?: {
    /** When true, only returns tags applied to providers in the organization */
    applied_to_providers?: (Scalars['Boolean'] | null), ids?: ((Scalars['ID'] | null)[] | null), order_by?: (TagOrderKeys | null), user_id?: (Scalars['String'] | null)} })
    /** Number of tags */
    tagsCount?: { __args: {
    /** When true, only returns tags applied to providers in the organization */
    applied_to_providers?: (Scalars['Boolean'] | null), ids?: ((Scalars['ID'] | null)[] | null), user_id?: (Scalars['String'] | null)} } | boolean | number
    task?: (TaskGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** All tasks assigned to a provider or client */
    tasks?: (TaskGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), client_id?: (Scalars['String'] | null), completed_status?: (Scalars['String'] | null), 
    /** Nil -> does nothing, false -> tasks created by others, true -> tasks created by current user */
    created_by_self?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), per_page?: (Scalars['Int'] | null), show_hidden?: (Scalars['Boolean'] | null), order_by?: (TaskOrderKeys | null), type?: (Scalars['String'] | null), withoutPagination?: (Scalars['Boolean'] | null)} })
    /** All tasks assigned to a provider or client */
    tasksCount?: { __args: {completed_status?: (Scalars['String'] | null), 
    /** Nil -> does nothing, false -> tasks created by others, true -> tasks created by current user */
    created_by_self?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), show_hidden?: (Scalars['Boolean'] | null), type?: (Scalars['String'] | null)} } | boolean | number
    /** @deprecated use availableSlotsForRange. */
    timesForRange?: { __args: {appt_loc_id?: (Scalars['String'] | null), appt_type_id?: (Scalars['String'] | null), endDate?: (Scalars['String'] | null), length?: (Scalars['String'] | null), startDate?: (Scalars['String'] | null)} } | boolean | number
    /** fetch transactions for the current user */
    transactions?: (TransactionTypeGenqlSelection & { __args?: {payout_id?: (Scalars['String'] | null), user_id?: (Scalars['String'] | null)} })
    /** fetch transfers for the current user */
    transfers?: (TransferTypeGenqlSelection & { __args?: {limit?: (Scalars['Int'] | null), order_by?: (TransferOrderKeys | null), starting_after?: (Scalars['String'] | null)} })
    /** Fetch an array of treatment plans and recommended products from Fullscript given a user id */
    treatmentPlans?: (FullscriptTreatmentPlanTypeGenqlSelection & { __args?: {user_id?: (Scalars['String'] | null)} })
    /** Get the users completed onboarding items, that are not part of the users current flow */
    unassociatedCompletedOnboardingItems?: (CompletedOnboardingItemGenqlSelection & { __args?: {
    /** User to get unassociated onboarding items */
    user_id?: (Scalars['ID'] | null)} })
    /** fetch ungrouped course memberhips belonging to a a specific course */
    ungroupedCourseMemberships?: (CourseMembershipGenqlSelection & { __args?: {course_id?: (Scalars['ID'] | null), course_status?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null)} })
    /** count of ungrouped course memberhips for a specific course */
    ungroupedCourseMembershipsCount?: { __args: {course_id?: (Scalars['ID'] | null), course_status?: (Scalars['String'] | null)} } | boolean | number
    /** fetch a user by id */
    user?: (UserGenqlSelection & { __args?: {clear_notifs?: (Scalars['Boolean'] | null), id?: (Scalars['ID'] | null), or_current_user?: (Scalars['Boolean'] | null)} })
    /** fetch a user group by id */
    userGroup?: (UserGroupGenqlSelection & { __args?: {id?: (Scalars['ID'] | null)} })
    /** Fetch paginated user groups collection */
    userGroups?: (UserGroupGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), should_paginate?: (Scalars['Boolean'] | null), order_by?: (UserGroupOrderKeys | null), page_size?: (Scalars['Int'] | null), 
    /** checks the allow_group_level_actions permission on org membership */
    check_group_level_actions?: (Scalars['Boolean'] | null)} })
    /** Number of user groups */
    userGroupsCount?: { __args: {keywords?: (Scalars['String'] | null), 
    /** checks the allow_group_level_actions permission on org membership */
    check_group_level_actions?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Fetch collection of all purchased packages */
    userPackageSelections?: (UserPackageSelectionGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** ID of the offering to filter the list */
    offering_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null), page_size?: (Scalars['Int'] | null), 
    /** ID of the user to load the list of given packages */
    user_id?: (Scalars['ID'] | null)} })
    userPackageSelectionsCount?: { __args: {
    /** ID of the offering to filter the list */
    offering_id?: (Scalars['ID'] | null), offset?: (Scalars['Int'] | null), 
    /** ID of the user to load the list of given packages */
    user_id?: (Scalars['ID'] | null)} } | boolean | number
    /** Fetch paginated patients collection (use organizationMembers query for providers) */
    users?: (UserGenqlSelection & { __args: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), 
    /** Possible options: [active, archived] */
    active_status?: (Scalars['String'] | null), conversation_id?: (Scalars['ID'] | null), convo_patients_only?: (Scalars['Boolean'] | null), 
    /** When this is true, but conversation_id is nil, we return no users */
    expect_conversation_id?: (Scalars['Boolean'] | null), from_superadmin?: (Scalars['Boolean'] | null), group_id?: (Scalars['String'] | null), 
    /** When true, only clients with credit cards will be returned. Passing false does nothing */
    has_cc_on_file?: (Scalars['Boolean'] | null), id?: (Scalars['ID'] | null), ids?: ((Scalars['ID'] | null)[] | null), keywords?: (Scalars['String'] | null), limited_to_provider?: (Scalars['Boolean'] | null), offset?: (Scalars['Int'] | null), 
    /** The number of users to return (Max 100) */
    page_size?: (Scalars['Int'] | null), provider_id?: (Scalars['String'] | null), should_paginate?: (Scalars['Boolean'] | null), show_all_by_default?: (Scalars['Boolean'] | null), order_by?: (UserOrderKeys | null), tag_ids?: ((Scalars['ID'] | null)[] | null), with_feature_toggles?: (Scalars['Boolean'] | null)} })
    /** Number of users */
    usersCount?: { __args: {active_status?: (Scalars['String'] | null), conversation_id?: (Scalars['ID'] | null), convo_patients_only?: (Scalars['Boolean'] | null), 
    /** When this is true, but conversation_id is nil, we return no users */
    expect_conversation_id?: (Scalars['Boolean'] | null), group_id?: (Scalars['String'] | null), 
    /** When true, only clients with credit cards will be returned. Passing false does nothing */
    has_cc_on_file?: (Scalars['Boolean'] | null), keywords?: (Scalars['String'] | null), limited_to_provider?: (Scalars['Boolean'] | null), provider_id?: (Scalars['String'] | null), tag_ids?: ((Scalars['ID'] | null)[] | null)} } | boolean | number
    /** Check if a coupon is valid, and return the new price (considered public) */
    validateCoupon?: (ValidateOfferingCouponGenqlSelection & { __args?: {coupon_code?: (Scalars['String'] | null), offering_id?: (Scalars['ID'] | null), provider_id?: (Scalars['ID'] | null), requested_payment_id?: (Scalars['ID'] | null)} })
    /** Check if a reset passwrd token is valid */
    validateResetPasswordToken?: { __args: {token?: (Scalars['String'] | null)} } | boolean | number
    /** Check if a signup token is valid */
    validateSignupToken?: { __args: {token?: (Scalars['String'] | null)} } | boolean | number
    waterIntakeEntry?: (EntryGenqlSelection & { __args?: {
    /** Date entry was posted */
    created_at?: (Scalars['String'] | null), 
    /** Entry to query daily intake total if present. */
    entry_id?: (Scalars['ID'] | null)} })
    /** Fetch possible Webhook event types */
    webhookEventTypes?: boolean | number
    /** Fetch paginated Webhooks collection */
    webhooks?: (WebhookGenqlSelection & { __args?: {
    /** Cursor to fetch results after */
    after?: (Scalars['Cursor'] | null), keywords?: (Scalars['String'] | null), offset?: (Scalars['Int'] | null), order_by?: (WebhookOrderKeys | null), page_size?: (Scalars['Int'] | null)} })
    /** Number of Webhooks */
    webhooksCount?: { __args: {keywords?: (Scalars['String'] | null)} } | boolean | number
    /** Whitelabel setting to use */
    whitelabelSetting?: (WhitelabelSettingGenqlSelection & { __args?: {branded_url?: (Scalars['String'] | null)} })
    /** Generate a JWT to be used in the client-side Zoom SDK. This is just available on production, and requires your account to be approved by Healthie. The JWT is valid for 1 day. */
    zoomSdkJwt?: { __args: {
    /** The Zoom meeting or webinar number */
    mn?: (Scalars['String'] | null), 
    /** The user role. 0 to specify participant, 1 to specify host */
    role?: (Scalars['String'] | null)} } | boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** receipt line item */
export interface ReceiptLineItemGenqlSelection{
    /** Date of service (as a date) */
    created_at?: boolean | number
    /** description of line item */
    description?: boolean | number
    /** The unique identifier of the line item */
    id?: boolean | number
    /** previous price */
    previous_price?: boolean | number
    /** price of line item */
    price?: boolean | number
    /** id of super bill */
    super_bill_id?: boolean | number
    /** updated at */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a receipt line item */
export interface ReceiptLineItemInput {
/** The time the receipt line item was created */
created_at?: (Scalars['String'] | null),
/** The description of the receipt line item */
description?: (Scalars['String'] | null),
/** The ID of the receipt line item */
id?: (Scalars['ID'] | null),
/** The previous price of the receipt line item */
previous_price?: (Scalars['String'] | null),
/** The current price of the receipt line item */
price?: (Scalars['String'] | null)}


/** A Received Direct Message */
export interface ReceivedDirectMessageGenqlSelection{
    /** The number of attachments for the received direct message */
    attachments_count?: boolean | number
    /** The XML data contained in the attach CDA file */
    cda_xml?: boolean | number
    /** The received date of the direct message */
    created_at?: boolean | number
    /** Array of direct message attachments */
    direct_message_attachments?: DirectMessageAttachmentGenqlSelection
    /** When true, the message has an attached CDA */
    has_cda?: boolean | number
    /** The unique identifier of the fax */
    id?: boolean | number
    /** The listed recipient */
    listed_recipient?: boolean | number
    /** The listed sender */
    listed_sender?: boolean | number
    /** The message body of the direct message */
    message_body?: boolean | number
    /** The subject */
    subject?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Received Fax */
export interface ReceivedFaxGenqlSelection{
    /** The archived status of the fax */
    archived?: boolean | number
    /** Any user added comments on the fax */
    comments?: boolean | number
    /** The received date of the fax */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The number of the sender of the fax */
    from_number?: boolean | number
    /** The unique identifier of the fax */
    id?: boolean | number
    /** Returns the referral provider name if fax number is found */
    referring_provider_name?: boolean | number
    /** Whether the received fax has been viewed by the current user */
    viewed_by_current_user?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Care Plan Recommendation */
export interface RecommendationGenqlSelection{
    /** The unique identifier of the recommendation */
    id?: boolean | number
    /** Recommendation text */
    recommendation_body?: boolean | number
    /** The type of recommendation (1)Activity, (2)Nutrition, (3)Supplement, (4)Other */
    recommendation_type?: boolean | number
    /** Sanitized recommendation_body */
    sanitized_body?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Recurring Appointment */
export interface RecurringAppointmentGenqlSelection{
    /** The unique identifier of the recurring appointment */
    id?: boolean | number
    /** Auto-register clients for all appointments in series */
    join_all?: boolean | number
    /** Interval between each appointment in the series */
    repeat_interval?: boolean | number
    /** Count of the appointment recurrences */
    repeat_times?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a recurring appointment */
export interface RecurringAppointmentInput {
/** The unique identifier of the recurring appointment */
id?: (Scalars['ID'] | null),
/** If true, all appointments will be joined into one appointment */
join_all?: (Scalars['Boolean'] | null),
/** Options are ["Weekly", "Biweekly", "Monthly", or "Every 4 Weeks"] */
repeat_interval?: (Scalars['String'] | null),
/** Options are ["2", "3", "4", "5", "6", "7", "8", "9", "10"] */
repeat_times?: (Scalars['String'] | null)}


/** Each data point has a time range and the days that are in that time range */
export interface RecurringDaysDataGenqlSelection{
    /** The days that are in the time range */
    day_ranges?: DayRangeTypeGenqlSelection
    /** The unique identifier of the recurring days data */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The recurring days input */
export interface RecurringDaysInputObjectType {
/** The list of day ranges */
day_ranges?: ((DayRangeInputObjectType | null)[] | null),
/** The id of the recurring day */
id?: (Scalars['ID'] | null)}


/** A Recurring Form */
export interface RecurringFormGenqlSelection{
    /** Associated custom module form */
    custom_module_form?: CustomModuleFormGenqlSelection
    /** The ID of the form itself */
    form_id?: boolean | number
    /** The type of form */
    form_type?: boolean | number
    /** Whether the user or group is connected to the recurring form */
    has_connected_recipient?: { __args: {
    /** The ID of the user or group */
    connectable_id?: (Scalars['ID'] | null), 
    /** The type of the user or group */
    connectable_type?: (Scalars['String'] | null)} } | boolean | number
    /** The unique identifier of the recurring form */
    id?: boolean | number
    /** The interval of recurrence. Can be: '23:12' / 'Monday, Tuesday' / '31st' */
    interval?: boolean | number
    /** The type of recurrence('Daily'(1) / 'Weekly'(2) / 'Monthly'(3)) */
    interval_type?: boolean | number
    /** Wherther the recurrence is active or not */
    is_active?: boolean | number
    /** The day when reccurence ends */
    recurrence_end_at?: boolean | number
    /** Get user_group assigned to the recurring form */
    userGroups?: UserGroupGenqlSelection
    /** The ID of the provider who set up recurrence */
    user_id?: boolean | number
    /** Get patients assigned to the recurring form */
    users?: UserGenqlSelection
    /** The identifiers of associated users and groups: ['1', '2', 'group-5', 'group-13'] */
    users_and_groups?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Recurring Payment */
export interface RecurringPaymentGenqlSelection{
    /** The amount of recurring payment */
    amount_paid?: boolean | number
    /** The amount to be paid for the next payment */
    amount_to_pay?: boolean | number
    /** The ID of the appointment associated with this recurring payment */
    appointment_id?: boolean | number
    /** The frequency the payment should be made */
    billing_frequency?: boolean | number
    /** The number of billing items */
    billing_items_count?: boolean | number
    /** The date on which the recurring payment is canceled */
    canceled_at?: boolean | number
    /** The provider who canceled the recurring payment */
    canceled_by?: UserGenqlSelection
    /** The date on which the recurring payment is created */
    created_at?: boolean | number
    /** Includes the next payment date, returns true if next payment date is set and payments remanining is greater than zero */
    has_next_payment_date?: boolean | number
    /** Whether or not this recurring payment has scheduled billing item */
    has_scheduled_billing_item?: boolean | number
    /** The unique identifier of the recurring payment */
    id?: boolean | number
    /** If the recurring payment has been canceled */
    is_canceled?: boolean | number
    /** Whether or not the recurring payments has been paused */
    is_paused?: boolean | number
    /** The last billing item for this recurring payment */
    last_billing_item?: BillingItemGenqlSelection
    /** The date of the next payment */
    next_payment_date?: boolean | number
    /** The next payment date if the recurring payment is restarted */
    next_restart_payment_date?: boolean | number
    /** The ID of the coupon */
    offering_coupon_id?: boolean | number
    /** The offering ID */
    offering_id?: boolean | number
    /** The name of the offering associated with recurring payment */
    offering_name?: boolean | number
    /** The original price */
    original_price?: boolean | number
    /** The date on which the recurring payment is paused */
    paused_at?: boolean | number
    /**  The provider who paused the recurring payment */
    paused_by?: UserGenqlSelection
    /** Count remaining payments or returns Until Canceled */
    payments_remaining?: boolean | number
    /** The ID of the receiver */
    recipient_id?: boolean | number
    /** The number of times the payment should repeat */
    repeat_tiems?: boolean | number
    /** The ID oft the sender */
    sender_id?: boolean | number
    /** The date payments should begin */
    start_at?: boolean | number
    /** The updated at date */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A referral */
export interface ReferralGenqlSelection{
    /** created at */
    created_at?: boolean | number
    /** The unique identifier of the referral */
    id?: boolean | number
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata?: boolean | number
    /** The reason the client was referred to the physician */
    referral_reason?: boolean | number
    /** The referring physician */
    referring_physician?: ReferringPhysicianGenqlSelection
    /** id of the referring physician */
    referring_physician_id?: boolean | number
    /** updated at */
    updated_at?: boolean | number
    /** The referred client */
    user?: UserGenqlSelection
    /** id of the referred client */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The referral information for a CMS1500 claim */
export interface ReferralInfoGenqlSelection{
    /** The state the auto accident occurred in */
    auto_accident_state?: boolean | number
    /** The date of current illness, injury, or pregnancy */
    case_date?: boolean | number
    /** The qualifier for case_date */
    case_qualifier?: boolean | number
    /**
     * @deprecated You are no longer able to get the cms1500 from the referral info
     * The associated CMS1500
     */
    cms1500?: Cms1500GenqlSelection
    /** The id of the associated CMS1500 */
    cms1500_id?: boolean | number
    /** Options that the condition can be related to */
    condition_related_to?: boolean | number
    /** The end of the hospitalization period */
    hospitalization_end?: boolean | number
    /** The start of the hospitalization period */
    hospitalization_start?: boolean | number
    /** The unique identifier of the referral info */
    id?: boolean | number
    /** This field identifies additional date information about the patient's condition or treatment. */
    other_associated_date?: boolean | number
    /** The qualifier for other_associated_date */
    other_associated_qualifier?: boolean | number
    /** The prior authorization number */
    prior_auth_number?: boolean | number
    /** The first name of the referring provider */
    ref_provider_first?: boolean | number
    /** The last name of the referring provider */
    ref_provider_last?: boolean | number
    /** The middle name of the referring provider */
    ref_provider_middle?: boolean | number
    /** The NPI of the referring provider */
    ref_provider_npi?: boolean | number
    /** The other id of the referring provider */
    ref_provider_other_id?: boolean | number
    /** The other id qualifier of the referring provider */
    ref_provider_other_id_qual?: boolean | number
    /** The qualifications of the referring provider */
    ref_provider_qual?: boolean | number
    /** The date of the referral */
    referral_date?: boolean | number
    /** The associated referring physician */
    referring_physician?: ReferringPhysicianGenqlSelection
    /** The id of associated referring physician */
    referring_physician_id?: boolean | number
    /** The end of the unable to work period */
    unable_to_work_end?: boolean | number
    /** The start of the unable to work period */
    unable_to_work_start?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a referral info */
export interface ReferralInfoInput {
/** The state of the auto accident */
auto_accident_state?: (Scalars['String'] | null),
/** The date of the case */
case_date?: (Scalars['String'] | null),
/** The qualifier of the case */
case_qualifier?: (Scalars['String'] | null),
/** The condition relationships */
condition_related_to?: ((Scalars['String'] | null)[] | null),
/** The end date of the hospitalization */
hospitalization_end?: (Scalars['String'] | null),
/** The start date of the hospitalization */
hospitalization_start?: (Scalars['String'] | null),
/** The id of the referral info */
id?: (Scalars['ID'] | null),
/** The other associated date */
other_associated_date?: (Scalars['String'] | null),
/** The other qualifier */
other_associated_qualifier?: (Scalars['String'] | null),
/** The prior auth number */
prior_auth_number?: (Scalars['String'] | null),
/** The first name of the referring provider */
ref_provider_first?: (Scalars['String'] | null),
/** The last name of the referring provider */
ref_provider_last?: (Scalars['String'] | null),
/** The middle name of the referring provider */
ref_provider_middle?: (Scalars['String'] | null),
/** The NPI of the referring provider */
ref_provider_npi?: (Scalars['String'] | null),
/** The other id of the referring provider */
ref_provider_other_id?: (Scalars['String'] | null),
/** The other id qualifier of the referring provider */
ref_provider_other_id_qual?: (Scalars['String'] | null),
/** The qualifier of the referring provider */
ref_provider_qual?: (Scalars['String'] | null),
/** The id of the referring physician */
referring_physician_id?: (Scalars['ID'] | null),
/** The end date of the unable to work */
unable_to_work_end?: (Scalars['String'] | null),
/** The start date of the unable to work */
unable_to_work_start?: (Scalars['String'] | null)}


/** Payload for a referral */
export interface ReferralInput {
/** If true, the referral will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the referral */
id?: (Scalars['ID'] | null),
/** The referring physician object */
referring_physician?: (ReferringPhysicianInput | null),
/** The ID of the referring physician */
referring_physician_id?: (Scalars['ID'] | null)}


/** a referring physician */
export interface ReferringPhysicianGenqlSelection{
    accepts_insurance?: boolean | number
    /** Business Name of physician */
    business_name?: boolean | number
    /** created at */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** email of physician */
    email?: boolean | number
    /** fax number of physician */
    fax_number?: boolean | number
    /** first name of physician */
    first_name?: boolean | number
    /** full name of physician */
    full_name?: boolean | number
    /** The unique identifier of the physician */
    id?: boolean | number
    /** last name of physician */
    last_name?: boolean | number
    /** The associated location */
    location?: LocationGenqlSelection
    /** location id */
    location_id?: boolean | number
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata?: boolean | number
    /** Dietitian's notes */
    notes?: boolean | number
    /** npi of physician */
    npi?: boolean | number
    /** Saved Other ID associated with this provider */
    other_id?: boolean | number
    /** Qualifier for Other ID */
    other_id_qualifier?: boolean | number
    /** phone number of physician */
    phone_number?: boolean | number
    /** The user who entered the referring physician */
    provider?: UserGenqlSelection
    /** Associated users */
    referrals?: ReferralGenqlSelection
    /** Associated users count */
    referrals_count?: boolean | number
    /** Physician's speciality */
    speciality?: boolean | number
    /** updated at */
    updated_at?: boolean | number
    /** Physician's website */
    website?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a referring physician */
export interface ReferringPhysicianInput {
/** If true, the referring physician will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The email of the referring physician */
email?: (Scalars['String'] | null),
/** The fax number of the referring physician */
fax_number?: (Scalars['String'] | null),
/** The first name of the referring physician */
first_name?: (Scalars['String'] | null),
/** The ID of the referring physician */
id?: (Scalars['ID'] | null),
/** The last name of the referring physician */
last_name?: (Scalars['String'] | null),
/** The legal name of the referring physician */
legalname?: (Scalars['String'] | null),
/** The location of the referring physician */
location?: (ClientLocationInput | null),
/** The NPI of the referring physician */
npi?: (Scalars['String'] | null),
/** The phone number of the referring physician */
phone_number?: (Scalars['String'] | null)}


/** Autogenerated input type of RefetchChangeHealthLabOrder */
export interface RefetchChangeHealthLabOrderInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of RefetchChangeHealthLabOrder. */
export interface RefetchChangeHealthLabOrderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of RefreshHostLinks */
export interface RefreshHostLinksInput {user_id: Scalars['ID']}


/** Autogenerated return type of RefreshHostLinks. */
export interface RefreshHostLinksPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A refinding item of a related billing item */
export interface RefundItemGenqlSelection{
    /** The ID of the billing_item */
    billing_item_id?: boolean | number
    /** The currency */
    currency?: boolean | number
    /** The unique identifier of the refund */
    id?: boolean | number
    /** The refund amount */
    refund_amount?: boolean | number
    /** The refund date */
    refund_date?: boolean | number
    /** The status of refunding */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Related Object */
export interface RelatedObjectGenqlSelection{
    /** A combined string to use for labels */
    full_name?: boolean | number
    /** The Healthie unique identifier */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A reminder object */
export interface ReminderGenqlSelection{
    /** The unique identifier of the reminder */
    id?: boolean | number
    /** Interval of a reminder ex. daily */
    interval_type?: boolean | number
    /** Value of the reminder interval ex. monday */
    interval_value?: boolean | number
    /** True if reminder is active */
    is_enabled?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a reminder */
export interface ReminderInput {
/** The ID of the reminder. If no id is given, a reminder will be created */
id?: (Scalars['ID'] | null),
/** The type of the reminder interval. Options are daily, weekly, once */
interval_type?: (Scalars['String'] | null),
/** For daily interval -> don't send anything. For weekly interval, send in comma separated all lower-case day of week (e.g wednesday, friday). For once, send in the date (e.g 2020-11-28) */
interval_value?: (Scalars['String'] | null),
/** If not set to true, the reminder will not be sent */
is_enabled?: (Scalars['Boolean'] | null),
/** Send in true to delete the reminder */
remove_reminder?: (Scalars['Boolean'] | null)}


/** Autogenerated input type of RemoveCardOnFile */
export interface RemoveCardOnFileInput {id: Scalars['ID'],remove_card_on_file: Scalars['Boolean']}


/** Autogenerated return type of RemoveCardOnFile. */
export interface RemoveCardOnFilePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The selected date range for specific report */
export interface ReportsDateFilterSelectionGenqlSelection{
    /** The selected date range for appointments */
    appointments?: boolean | number
    /** The selected date range for authorizations */
    authorization?: boolean | number
    /** The selected date range for bank transfers */
    bank_transfers?: boolean | number
    /** The selected date range for client activities */
    client_activity?: boolean | number
    /** The selected date range for client blood sugar metrics */
    client_blood_sugar_metrics?: boolean | number
    /** The selected date range for client credits */
    client_credits?: boolean | number
    /** The selected date range for clients list */
    client_list?: boolean | number
    /** The selected date range for client metrics */
    client_metrics?: boolean | number
    /** The selected date range for client statuses */
    client_status?: boolean | number
    /** The selected date range for cms 1500s */
    cms_1500s?: boolean | number
    /** The unique identifier of the selection */
    id?: boolean | number
    /** The selected date range for payments */
    payments?: boolean | number
    /** The selected date range for superbills */
    superbills?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A request, from a provider to a client, to fill out a form */
export interface RequestedFormCompletionGenqlSelection{
    /** The form to fill out */
    custom_module_form?: CustomModuleFormGenqlSelection
    /** The ID of the form to fill out */
    custom_module_form_id?: boolean | number
    /** The relevant date to show */
    date_to_show?: boolean | number
    /** The filled form that completes the request */
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The id of the filled form that completes the request */
    form_answer_group_id?: boolean | number
    /** The unique identifier of the form */
    id?: boolean | number
    /** type of form requested */
    item_type?: boolean | number
    /** The recipient (client) */
    recipient?: UserGenqlSelection
    /** The ID of the recipient (client) */
    recipient_id?: boolean | number
    /** Recurring Form related to the request */
    recurring_form?: RecurringFormGenqlSelection
    /** The sender (provider) */
    sender?: UserGenqlSelection
    /** The ID of the sender (provider) */
    sender_id?: boolean | number
    /** The status of the request */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The status of the requested form */
export interface RequestedFormStatusTypeGenqlSelection{
    /** Used to return something after request if the job has been triggered */
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Requested Payer for the Invoice */
export interface RequestedPayerGenqlSelection{
    /** The address of the requested payer */
    address?: boolean | number
    /** The email of the requested payer */
    email?: boolean | number
    /** The unique identifier of the requested payer */
    id?: boolean | number
    /** The name of the requested payer */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a requested payer */
export interface RequestedPayerInput {
/** The address of the requested payer */
address?: (Scalars['String'] | null),
/** The email of the requested payer */
email?: (Scalars['String'] | null),
/** The ID of the requested payer */
id?: (Scalars['ID'] | null),
/** The graphql_name of the requested payer */
name?: (Scalars['String'] | null)}


/** A request, from a provider to a client, to make a payment */
export interface RequestedPaymentGenqlSelection{
    /** The appointment associated with this requested payment */
    appointment?: AppointmentGenqlSelection
    /** The ID of the appointment associated with this requested payment */
    appointment_id?: boolean | number
    /** The id of the filled form that completes the request */
    billing_item_id?: boolean | number
    /** The payments that completes the request */
    billing_items?: (BillingItemGenqlSelection & { __args?: {
    /** Only return successful billing items */
    only_successful?: (Scalars['Boolean'] | null)} })
    /** The ID of the CMS1500 to pay for */
    cms1500_id?: boolean | number
    /** The CMS1500 service date */
    cms1500_service_date?: boolean | number
    /** The currency of the requested payment (invoice) */
    currency?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The relevant date to show */
    date_to_show?: boolean | number
    /**
     * @deprecated use debt_decimal instead
     * Balance to pay
     */
    debt?: boolean | number
    /** The debt, including decimals */
    debt_decimal?: boolean | number
    /** The details of the invoice (based off of associated item) */
    details?: boolean | number
    /** The datetime that the share email was last sent, nil if never */
    email_sent_at?: boolean | number
    /** The unique identifier of the payment */
    id?: boolean | number
    /** The generated invoice ID */
    invoice_id?: boolean | number
    /** The type of invoice */
    invoice_type?: boolean | number
    /** True if requested payment was manually paid */
    is_manually_paid?: boolean | number
    /** True if the invoice is still in preview mode */
    is_preview?: boolean | number
    /** Extra details on the invoice */
    notes?: boolean | number
    /** The offering to purchase */
    offering?: OfferingGenqlSelection
    /** The ID of the offering to buy */
    offering_id?: boolean | number
    /** The requested payer. This will return null if the requested payer exists as a client in Healthie */
    other_requested_payer?: RequestedPayerGenqlSelection
    /** The datetime that the invoice was paid */
    paid_at?: boolean | number
    /** Percent from total price which has been paid (if status == Partial) */
    paid_percent?: boolean | number
    /** price of payment requested */
    price?: boolean | number
    /** The recipient (client) */
    recipient?: UserGenqlSelection
    /** The ID of the recipient (client) */
    recipient_id?: boolean | number
    /** Individual responsible for payment. If user_id, the user exists in Healthie, otherwise the individual doesn't have a Healthie account. */
    requested_payer?: RequestedPayerGenqlSelection
    /** The ID of the requested payer */
    requested_payer_id?: boolean | number
    /** The template used to create this requested payment */
    requested_payment_template?: RequestedPaymentTemplateGenqlSelection
    /** The sender (provider) */
    sender?: UserGenqlSelection
    /** The ID of the sender (provider) */
    sender_id?: boolean | number
    /** The service date */
    service_date?: boolean | number
    /** The services provided */
    services_provided?: boolean | number
    /** The status of the request */
    status?: boolean | number
    /** User Package Selection connected to this requested payment */
    user_package_selection?: UserPackageSelectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Requested payment template */
export interface RequestedPaymentTemplateGenqlSelection{
    /** Whether the template is active or not */
    active_template?: boolean | number
    /** The unique identifier of the template */
    id?: boolean | number
    /** The name of the template */
    name?: boolean | number
    /** The requested payment of the template */
    requested_payment?: RequestedPaymentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a requested payment template */
export interface RequestedPaymentTemplateInput {
/** Whether or not the requested payment template is active */
active_template?: (Scalars['Boolean'] | null),
/** The ID of the requested payment template */
id?: (Scalars['ID'] | null),
/** The graphql_name of the requested payment template */
name?: (Scalars['String'] | null)}


/** A room at a location */
export interface RoomGenqlSelection{
    /** Unique ID for this room */
    id?: boolean | number
    /** When true, there can only be one appointment at a time in the room */
    limit_to_one?: boolean | number
    /** Name of the room */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a Room */
export interface RoomInput {
/** If true, the room will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the room */
id?: (Scalars['ID'] | null),
/** If true, only one user can be in the room at a time */
limit_to_one?: (Scalars['Boolean'] | null),
/** The graphql_name of the room */
name?: (Scalars['String'] | null)}


/** Configuration for the SDK */
export interface SDKConfigGenqlSelection{
    /** Stripe's publishable key */
    stripe_publishable_key?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A set of filter options saved for quick loading in the calendar */
export interface SavedFilterGenqlSelection{
    /** JSON-formatted options to use for setting filter */
    filter_data?: boolean | number
    /** Unique ID for this filter */
    id?: boolean | number
    /** Name of the filter */
    name?: boolean | number
    /** The organization_id that has access to the filter */
    organization_id?: boolean | number
    /** The user that created the filter */
    user_id?: boolean | number
    /** The unique UUID/string of the filter, used for sharing */
    uuid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Billing items that are scheduled and will have a user package selection associated with them */
export interface ScheduledUserPackageSelectionGenqlSelection{
    /** The unique identifier of the room */
    id?: boolean | number
    /** Related offering */
    offering?: OfferingGenqlSelection
    /** Related recurring_payment */
    recurring_payment?: RecurringPaymentGenqlSelection
    /** Related user */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of SendSpeakToTrainerNotification */
export interface SendSpeakToTrainerNotificationInput {email?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of SendSpeakToTrainerNotification. */
export interface SendSpeakToTrainerNotificationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of SendWelcomeEmail */
export interface SendWelcomeEmailInput {user_id: Scalars['ID']}


/** Autogenerated return type of SendWelcomeEmail. */
export interface SendWelcomeEmailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Received Direct Message */
export interface SentDirectMessageGenqlSelection{
    /** The number of attachments for the received direct message */
    attachments_count?: boolean | number
    /** The received date of the direct message */
    created_at?: boolean | number
    /** When true, the message has an attached CDA */
    has_cda?: boolean | number
    /** The unique identifier of the fax */
    id?: boolean | number
    /** The body of the direct message */
    message_body?: boolean | number
    /** The outbound recipient */
    outbound_recipient?: boolean | number
    /** ID of the related patient */
    patient_id?: boolean | number
    /** The status */
    status?: boolean | number
    /** The subject of the direct message */
    subject?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Sent Fax */
export interface SentFaxGenqlSelection{
    /** The creation date of the fax */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** Where the fax was sent */
    destination_number?: boolean | number
    /** The unique identifier of the fax */
    id?: boolean | number
    /** The ids of the chart notes sent with the fax */
    parsed_form_answer_group_ids?: boolean | number
    /** The patient that the fax is in regards to */
    patient?: UserGenqlSelection
    /** False if no document ids or form answer group ids (fax existed before the addition of document ids column) */
    resendable?: boolean | number
    /** The sender of the fax */
    sender?: UserGenqlSelection
    /** The status of the fax */
    status?: boolean | number
    /** The display string of the fax status */
    status_display_string?: boolean | number
    /** The updated date of the sent fax */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Sent Notification */
export interface SentNotificationRecordGenqlSelection{
    /** The enumerated values: [:sms, :push, :email] */
    category?: boolean | number
    /** The time when the record was created */
    created_at?: boolean | number
    /** The enumerated values: [:sent, :delivered, :bounced] */
    delivery_status?: boolean | number
    /** The unique identifier of the record */
    id?: boolean | number
    /** Description of notification context. (Ex: 'Follow-up Session on Nov 16 at 1:00 PM EST with Joe Smith') */
    notification_description?: boolean | number
    /** Examples: 'appointment_reminder', 'folder_shared', 'reminder_to_work_on_a_goal' */
    notification_type?: boolean | number
    /** The type categorizing notification_type into subgroups. Accepted values: [appointments, billing, chat_messages, accounting, documents, forms, goals, journals, packages, programs] */
    representation_type?: boolean | number
    /** The ID of the user this notification was sent to */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The record of a sent webhook */
export interface SentWebhookGenqlSelection{
    /** The datetime that the webhook was sent */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The type of webhook */
    event_type?: boolean | number
    /** Whether the webhook is enabled or not */
    http_response_status?: boolean | number
    /** The unique identifier of the webhook */
    id?: boolean | number
    /** The id of the resource the sent webhook related to */
    resource_id?: boolean | number
    /** The type of resource the sent webhook related to */
    resource_id_type?: boolean | number
    /** The URL that the webhook was sent to */
    url?: boolean | number
    /** The configured webhook thst was sent */
    webhook_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A serving size object */
export interface ServingSizeGenqlSelection{
    /** The number of servings */
    amount?: boolean | number
    /** The calories of serving size */
    calories?: boolean | number
    /** Whether or not this serving size was imported from the USDA database */
    fdc_import?: boolean | number
    /** The food id of the food this serving size belongs to */
    food_id?: boolean | number
    /** The id of the food portion this serving size belongs to */
    food_portion_id?: boolean | number
    /** The unique identifier of the serving size */
    id?: boolean | number
    /** percentage of 100g. For example if modifier is 2.5 then this serving size is 250g */
    modifier?: boolean | number
    /** The nutrients of this serving size */
    nutrients?: (FoodNutrientGenqlSelection & { __args?: {
    /** If true, only returns nutrients if food is created by user () */
    food_search?: (Scalars['Boolean'] | null)} })
    /** The type of serving (i.e grams, scoop, spoonful) */
    unit?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The serving size of a food */
export interface ServingSizeInput {
/** The amount of the serving size */
amount?: (Scalars['String'] | null),
/** The id of the serving size */
id?: (Scalars['ID'] | null),
/** The unit of the serving size */
unit?: (Scalars['String'] | null)}


/** A Shapa Connection */
export interface ShapaConnectionGenqlSelection{
    /** The unique identifier of the connection */
    id?: boolean | number
    /** The last time Shapa was synced */
    last_sync_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A smart phrase object */
export interface SmartPhraseGenqlSelection{
    /** The time when the smart phrase was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The unique identifier of the smatr phrase */
    id?: boolean | number
    /** The name of the smart phrase */
    name?: boolean | number
    /** The content of the smart phrase */
    phrase?: boolean | number
    /** The smart phrase owner */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Smoking Status object */
export interface SmokingStatusGenqlSelection{
    /** The unique identifier of the status */
    id?: boolean | number
    /** The smoking status code */
    smoking_status_code?: boolean | number
    /** The end date of the status */
    status_end_datetime?: boolean | number
    /** The start date of the status */
    status_start_datetime?: boolean | number
    /** The id of the user the status belongs to */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Snomed terms */
export interface SnomedTermGenqlSelection{
    /** id for snomed term */
    concept_id?: boolean | number
    /** snomed term name */
    term?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The properties of the specialty */
export interface SpecialtiesInput {
/** The graphql_name of the specialty */
specialty?: (Scalars['String'] | null),
/** The category of the specialty */
specialty_category?: (Scalars['String'] | null)}


/** Specialty */
export interface SpecialtyGenqlSelection{
    /** The unique identifier of the specialty */
    id?: boolean | number
    /** The name of the specialty */
    specialty?: boolean | number
    /** The name of the specialty category */
    specialty_category?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Information on an SsoConnection */
export interface SsoConnectionGenqlSelection{
    /** Whether or not to allow Just-In-Time provisioning */
    allow_jit_provisioning?: boolean | number
    /** The type of user this SSO is for (either patient or staff) */
    for_user_type?: boolean | number
    /** The unique identifier of the SSO connection */
    id?: boolean | number
    /** The label to display on the sign in button */
    label?: boolean | number
    /** The URL to take the user to to sign in via SSO */
    sign_in_url?: boolean | number
    /** The URL to take the user to to sign out via SSO */
    sign_out_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A state license object */
export interface StateLicenseGenqlSelection{
    /** The full name of the state */
    full_state_name?: boolean | number
    /** The unique identifier of the state license */
    id?: boolean | number
    /** The abbreviation of the state */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a state license */
export interface StateLicensesInput {
/** If true, the state license will be destroyed */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the state license */
id?: (Scalars['ID'] | null),
/** The code of the state */
state?: (Scalars['String'] | null)}


/** A Stripe bank account */
export interface StripeBankAccountTypeGenqlSelection{
    /** The name of the account holder */
    account_holder_name?: boolean | number
    /** The type of the account holder (Individual or Company) */
    account_holder_type?: boolean | number
    /** The last 4 digits of the bank account number */
    accounts_number_last_4?: boolean | number
    /** The city of the business address */
    city?: boolean | number
    /** The country of the business address */
    country?: boolean | number
    /** The currency the bank account is in */
    currency?: boolean | number
    /** The date of birth of the company's business representative */
    dob?: boolean | number
    /** The ID of the bank account object (generated by Stripe) */
    id?: boolean | number
    /** If the holder has verified government issued id */
    id_image_provided?: boolean | number
    /** The first line of the business address */
    line1?: boolean | number
    /** The second line of the business address */
    line2?: boolean | number
    /** The last 4 digits of the routing number */
    routing_number_last_4?: boolean | number
    /** If the holder has a verified social security number */
    ssn_last_4_provided?: boolean | number
    /** The state of the business address */
    state?: boolean | number
    /** If the holder has a verified business tax ID */
    tax_id_provided?: boolean | number
    /** The zip code of the business address */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Stripe company address object */
export interface StripeCompanyAddressTypeGenqlSelection{
    /** The city or town of the address. */
    city?: boolean | number
    /** The two-letter country code of the address. */
    country?: boolean | number
    /** The first line of the address. */
    line1?: boolean | number
    /** The second line of the address. */
    line2?: boolean | number
    /** The postal code of the address. */
    postal_code?: boolean | number
    /** The state or province of the address. */
    state?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Stripe company */
export interface StripeCompanyTypeGenqlSelection{
    /** The company address */
    address?: StripeCompanyAddressTypeGenqlSelection
    /** Whether the company directors have been provided */
    directors_provided?: boolean | number
    /** Whether the company executives have been provided */
    executives_provided?: boolean | number
    /** The legal name of the company */
    name?: boolean | number
    /** Whether the company owners have been provided */
    owners_provided?: boolean | number
    /** The company phone number */
    phone?: boolean | number
    /** Whether the company tax ID has been provided */
    tax_id_provided?: boolean | number
    /** The verification status of the company */
    verification?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Stripe country */
export interface StripeCountryGenqlSelection{
    /** The accepted currencies for this country */
    accepted_currencies?: boolean | number
    /** The country code */
    country_code?: boolean | number
    /** The currency of the country */
    currency?: boolean | number
    /** A custom field 1 */
    field1?: boolean | number
    /** A custom field 2 */
    field2?: boolean | number
    /** The name of the country */
    name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Details of the client's credit card */
export interface StripeCustomerDetailGenqlSelection{
    /** The name of the bank the bank account is with (nil for 'Card' source types) */
    bank_type?: boolean | number
    /** The brand of the card */
    card_type?: boolean | number
    /** The type of card indicated by the user. Defaults to personal, Options are 'hsa', 'fsa', and 'personal' */
    card_type_label?: boolean | number
    /** Stripe card country */
    country?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The expiration date of the card */
    expiration?: boolean | number
    /** Whether the card is expiring next month */
    expiring_next_month?: boolean | number
    /** The unique identifier of the customer detail object */
    id?: boolean | number
    /** The last 4 digits of the credit card */
    last_four?: boolean | number
    /** The status of the payment method */
    source_status?: boolean | number
    /** The type of payment method (either 'Card' or 'Bank Account') */
    source_type?: boolean | number
    /** The ID of the client (in Stripe) */
    stripe_id?: boolean | number
    /** The client associated with stripe account(in Healthie) */
    user?: UserGenqlSelection
    /** The ID of the client (in Healthie) */
    user_id?: boolean | number
    /** Stripe card address zip */
    zip?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An invoice from stripe as object */
export interface StripeInvoiceGenqlSelection{
    /** The list of add-ons applied to the invoice. */
    add_ons?: StripePlanGenqlSelection
    /** The amount of the invoice, as a positive or negative integer in the smallest currency unit (e.g., 100 cents to charge $1.00 or -100 to credit $1.00). The value is multiplied by the quantity to get the full amount. If the total is zero, this field will be absent. */
    applied_balance?: StripePlanGenqlSelection
    /** The base amount of the invoice, not including any discounts, in cents. */
    base_plan?: StripePlanGenqlSelection
    /** The list of credits applied to the invoice. */
    credits?: StripePlanGenqlSelection
    /** The discount applied to the invoice. */
    discount?: DiscountGenqlSelection
    /** The unique identifier of the invoice */
    id?: boolean | number
    /** The end of the period the invoice covers. */
    period_end?: boolean | number
    /** The start of the period the invoice covers. */
    period_start?: boolean | number
    /** The total amount of the invoice, including all discounts and add-ons. */
    total?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A discount from stripe as object */
export interface StripePlanGenqlSelection{
    /** The amount in cents to be charged on the interval specified */
    amount?: boolean | number
    /** The annual cost of the plan */
    annual_cost?: boolean | number
    /** The description of the plan */
    description?: boolean | number
    /** The unique identifier of the plan */
    id?: boolean | number
    /** The interval when the plan is charged */
    interval?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a sub-organization */
export interface SubOrganizationInfoInput {
/** Whether to copy the appointment settings from the parent organization */
copy_appointment_settings?: (Scalars['Boolean'] | null),
/** Whether to copy the onboarding flows from the parent organization */
copy_onboarding_flows?: (Scalars['Boolean'] | null),
/** Whether to copy the packages from the parent organization */
copy_packages?: (Scalars['Boolean'] | null),
/** Whether to copy the programs from the parent organization */
copy_programs?: (Scalars['Boolean'] | null),
/** The ID of the suborganization */
id?: (Scalars['ID'] | null),
/** Whether to inherit appointment types from the parent organization */
inherit_appointment_types?: (Scalars['Boolean'] | null),
/** Whether to inherit custom module forms from the parent organization */
inherit_custom_module_forms?: (Scalars['Boolean'] | null),
/** Whether to inherit the stripe account from the parent organization */
inherit_stripe_account?: (Scalars['Boolean'] | null)}


/** Payload for a sub-entry */
export interface SubentryInput {
/** The category of the sub-entry */
category?: (Scalars['String'] | null),
/** The description of the sub-entry */
description?: (Scalars['String'] | null),
/** The ID of the sub-entry */
id?: (Scalars['ID'] | null),
/** The statistic of the sub-entry */
metric_stat?: (Scalars['String'] | null),
/** The type of the sub-entry */
type?: (Scalars['String'] | null)}


/** Payload for a sub-goal */
export interface SubgoalInput {
/** Whether or not this sub-goal should be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The ID of the user who created it */
created_user_id?: (Scalars['String'] | null),
/** The description of the sub-goal */
description?: (Scalars['String'] | null),
/** The date the sub-goal should end - format should be: yyyy-mm-dd */
due_date?: (Scalars['String'] | null),
/** The ID of the sub-goal. If no id is given, a sub-goal will be created */
id?: (Scalars['ID'] | null),
/** The graphql_name of the sub-goal */
name?: (Scalars['String'] | null),
/** The ID of the parent goal */
parent_id?: (Scalars['String'] | null),
/** The frequency of this goal. Possible values are: 'Daily','Weekly', 'Once' */
repeat?: (Scalars['String'] | null),
/** The ID of the sub-goal's template used to create this sub-goal */
source_template_id?: (Scalars['String'] | null),
/** The sub-goal title hyperlink. Opens when the sub-goal graphql_name is clicked on. */
title_link?: (Scalars['String'] | null),
/** The ID of the user who created this sub-goal. If no user_id is given, the current user will be used */
user_id?: (Scalars['String'] | null)}


/** Subscriptions for events tracking */
export interface SubscriptionGenqlSelection{
    /** Track changes in appointments where user is participated */
    appointmentUserDevicesSubscription?: (AppointmentGenqlSelection & { __args?: {
    /** The ID of the appointment to track */
    id?: (Scalars['ID'] | null)} })
    /** Track changes in conversations */
    conversationChangedSubscription?: (ConversationGenqlSelection & { __args?: {
    /** The ID of the conversation to track */
    id?: (Scalars['ID'] | null)} })
    /** Track new members of conversations */
    conversationMembershipAddedSubscription?: (ConversationMembershipGenqlSelection & { __args?: {
    /** The notes_type state of conversations, for getting last_task */
    notesType?: (Scalars['String'] | null)} })
    /** Track new updates to members of conversations */
    conversationMembershipUpdatedSubscription?: (ConversationMembershipGenqlSelection & { __args?: {
    /** The notes_type state of conversations, for getting last_task */
    notesType?: (Scalars['String'] | null)} })
    /** Track modifications of form answer groups */
    formAnswerGroupModifiedSubscription?: (FormAnswerGroupGenqlSelection & { __args?: {
    /** The ID of trackable FormAnswerGroup */
    id?: (Scalars['ID'] | null)} })
    /** Track clients added to group appointment */
    groupAppointmentClientsAddedSubscription?: AppointmentGenqlSelection
    /** Track added notes */
    noteAddedSubscription?: (NoteGenqlSelection & { __args?: {
    /** The ID of the conversation to track */
    conversationId?: (Scalars['String'] | null)} })
    /** Track user updates */
    userUpdatedSubscription?: UserNotificationsCountGenqlSelection
    /** Track video chats */
    videoChatsSubscription?: VideoChatsSubscriptionPayloadGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** a subscription object */
export interface SubscriptionInstanceGenqlSelection{
    /** When a customer cancels, or is set to cancel, this will be a datetime of when access will cease */
    access_will_stop_at?: boolean | number
    /** Amount difference if switching to annual/monthly */
    amount_saved_if_plan_switched?: boolean | number
    /** Amount savings from monthly to annual */
    amount_savings_on_base_plan?: boolean | number
    /** Total cost of subscription for the year */
    annual_total?: boolean | number
    /** Expiration of credit card on Stripe */
    card_expiration?: boolean | number
    /** Returns true if card is expired */
    card_expired?: boolean | number
    /** Type of credit card on Stripe (Mastercard, Visa, Amex, etc.) */
    card_type?: boolean | number
    /** Number of clients under the user that owns the subscription */
    client_count?: boolean | number
    /** Cost per month of annual plan */
    cost_of_annual_base_plan?: boolean | number
    /** Shows how many days are left in the users trial */
    days_left_in_trial?: boolean | number
    /** Discounts currently active on Stripe account */
    discounts?: DiscountGenqlSelection
    /** Array of discounts applied in Stripe (most possible is 2) */
    discounts_if_switched?: DiscountGenqlSelection
    /** Returns true if there is already a scheduled subscription change on this account */
    has_scheduled_change?: boolean | number
    /** The unique identifier of the subscription */
    id?: boolean | number
    /** The interval of the subscription */
    interval?: boolean | number
    /** Example of next invoice if switching plan */
    invoice_if_switched?: StripeInvoiceGenqlSelection
    /** Returns true if the user is trialing */
    is_trialing?: boolean | number
    /** Last four digits of credit card on Stripe */
    last_four?: boolean | number
    /** Last attempted invoice in Stripe */
    last_invoice?: StripeInvoiceGenqlSelection
    /** When the user is scheduled to be locked out due to non-payment */
    locked_out_at?: boolean | number
    /** Total cost of subscription for the month */
    month_total?: boolean | number
    /** Cost per month of annual plan */
    monthly_cost_of_annual_base_plan?: boolean | number
    /** Cost per month for base plan */
    monthly_cost_of_base_plan?: boolean | number
    /** The number of providers that the subscription covers */
    paid_for_providers?: boolean | number
    /** The number of support staff that the subscription covers */
    paid_for_support?: boolean | number
    /** Percent difference if switching to annual/monthly */
    percent_change_if_plan_switched?: boolean | number
    /** Percent savings from monthly to annual */
    percent_savings_on_base_plan?: boolean | number
    /** Array of line items applied to Stripe subscription other than base plan (i.e fax line, extra providers, office ally etc.) */
    plan_add_ons?: StripePlanGenqlSelection
    /** The ID of the plan in Healthie */
    plan_id?: boolean | number
    /** Name of the plan in Stripe */
    plan_name?: boolean | number
    /** Returns true if the user is set to cancel */
    set_to_cancel?: boolean | number
    /** Remaining balance on stripe customer */
    stripe_balance?: boolean | number
    /** The ID of the customer in Stripe */
    stripe_id?: boolean | number
    /** Stripe Subscription plan name */
    stripe_plan?: boolean | number
    /** The ID of the subscription in Stripe */
    stripe_subscription_id?: boolean | number
    /** Upcoming invoice in Stripe */
    upcoming_invoice?: StripeInvoiceGenqlSelection
    /** Owner of this subscription */
    user?: UserGenqlSelection
    /** The ID of the user who owns the subscription */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Base class for types */
export interface SuccessGenqlSelection{
    human_id?: boolean | number
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** SuperBill */
export interface SuperBillGenqlSelection{
    /** address */
    address?: boolean | number
    /** amount of super bill */
    amount_paid?: boolean | number
    /** amount due after amount paid is subtracted from total fee */
    balance_due?: boolean | number
    /** Returns cpt codes names list comma separated */
    cpt_code_names?: boolean | number
    /** CPT codes in use for this super bill */
    cpt_codes_super_bills?: CptCodesSuperBillGenqlSelection
    /** date super bill was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** date superbill was deleted */
    deleted_at?: boolean | number
    /** id of dietitian */
    dietitian_id?: boolean | number
    /** ICD codes in use for this super bill */
    icd_codes_super_bills?: IcdCodesSuperBillGenqlSelection
    /** The unique identifier of the bill */
    id?: boolean | number
    /** license number */
    license_num?: boolean | number
    /** location */
    location?: LocationGenqlSelection
    /** location id */
    location_id?: boolean | number
    /** npi number */
    npi?: boolean | number
    /** patient of this superbill */
    patient?: UserGenqlSelection
    /** dob of patient */
    patient_dob?: boolean | number
    /** id of patient */
    patient_id?: boolean | number
    /** location */
    patient_location?: LocationGenqlSelection
    /** patient location id */
    patient_location_id?: boolean | number
    /** name of patient */
    patient_name?: boolean | number
    /** phone number of patient */
    patient_phone?: boolean | number
    /** place of service */
    place_of_service?: PlaceOfServiceGenqlSelection
    /** place of service id */
    place_of_service_id?: boolean | number
    /** city */
    prov_city?: boolean | number
    /** email */
    prov_email?: boolean | number
    /** address line one */
    prov_line1?: boolean | number
    /** address line one */
    prov_line2?: boolean | number
    /** phone */
    prov_phone?: boolean | number
    /** state */
    prov_state?: boolean | number
    /** zip */
    prov_zip?: boolean | number
    /** provider */
    provider?: UserGenqlSelection
    /** name of provider */
    provider_name?: boolean | number
    /** receipt line items of this super bill */
    receipt_line_items?: ReceiptLineItemGenqlSelection
    /** name of referrer */
    referrer_name?: boolean | number
    /** npi of referrer */
    referrer_npi?: boolean | number
    /** Date of service (as a date) */
    service_date?: boolean | number
    /** status */
    status?: boolean | number
    /** tax id */
    tax_id?: boolean | number
    /** total fee for superbill */
    total_fee?: boolean | number
    /** date super bill was updated */
    updated_at?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Symptom Option */
export interface SymptomOptionGenqlSelection{
    /** Custom Symptoms use numeric IDs. Standard symptoms just use the symptom name */
    id?: boolean | number
    /** The symptom name */
    name?: boolean | number
    /** The symptom value */
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A custom tag that can be applied on a user */
export interface TagGenqlSelection{
    /** The number of active users who have the tag */
    active_users_count?: boolean | number
    /** The name of the user who created the tag */
    added_by?: boolean | number
    /** The number of archived users who have the tag */
    archived_users_count?: boolean | number
    /** The time when the tag was created */
    created_at?: boolean | number
    /** The unique identifier of the tag */
    id?: boolean | number
    /** A human-readable name of the tag */
    name?: boolean | number
    /** The number of org members who have the tag */
    org_members_count?: boolean | number
    /** The array of tagged users */
    tagged_users?: (UserGenqlSelection & { __args?: {
    /** The pagination offset (if pagination required) */
    offset?: (Scalars['Int'] | null), 
    /** Require pagination of tagged users */
    should_paginate?: (Scalars['Boolean'] | null)} })
    /** The last time the tag was updated */
    updated_at?: boolean | number
    /** The user who created the tag */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Tasks for providers to create, complete, and optionally assign to client profiles */
export interface TaskGenqlSelection{
    /** The client tagged to this task */
    client?: UserGenqlSelection
    /** The indentifier of the client tagged on this task */
    client_id?: boolean | number
    /** If true, user has marked task complete */
    complete?: boolean | number
    /** Date and time this task was completed */
    completed_at?: boolean | number
    /** User ID of the user who completed this task */
    completed_by_id?: boolean | number
    /** Details describing this task */
    content?: boolean | number
    /** Date and time this task was created */
    created_at?: boolean | number
    /** ID of an auto generator */
    created_by_generator_id?: boolean | number
    /** User id of user who created this task */
    created_by_id?: boolean | number
    /** The user who created this task */
    creator?: UserGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** Date and time this task was is due to be complete */
    due_date?: boolean | number
    /** If true, hide completed task from top nav bar */
    hidden?: boolean | number
    /** The unique identifier of the task */
    id?: boolean | number
    /** Get associated chat message with a task */
    note?: NoteGenqlSelection
    /** Get relative path to view the note */
    note_path?: boolean | number
    /** Order in which tasks are displayed (ascending) */
    position?: boolean | number
    /** Level of urgency for this task(0 = standard priority, 1 = high priority) */
    priority?: boolean | number
    /** ID of additional relation */
    ref_source?: boolean | number
    /** Reminder object for a given goal */
    reminder?: ReminderGenqlSelection
    /** If truem, user has viewed this task in top navbar  */
    seen?: boolean | number
    /** Indicates to smart task */
    smart?: boolean | number
    /** Get category of smart task */
    smart_category?: boolean | number
    /** The last date and time that the task was updated */
    updated_at?: boolean | number
    /** The user assigned to complete this task */
    user?: UserGenqlSelection
    /** User ID of the user assigned to this task */
    user_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a task reminder */
export interface TaskReminderInput {
/** Id of the reminder. If no id is given, a reminder will be created */
id?: (Scalars['ID'] | null),
/** The type of interval. Options are daily, weekly, once */
interval_type?: (Scalars['String'] | null),
/** For a daily interval send nothing. For a weekly interval, send a comma separated day of week in the lower case (e.g wednesday, friday). To remind once, send the date (e.g 2020-11-28) */
interval_value?: (Scalars['String'] | null),
/** If not set to true, the reminder will not be sent */
is_enabled?: (Scalars['Boolean'] | null),
/** Time for reminder */
reminder_time?: (Scalars['Int'] | null),
/** Send in true to delete the reminder */
remove_reminder?: (Scalars['Boolean'] | null)}


/** Autogenerated input type of Toggle2Fa */
export interface Toggle2FaInput {enable: Scalars['String'],id: Scalars['ID']}


/** Autogenerated return type of Toggle2Fa. */
export interface Toggle2FaPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ToggleAdvancedSettings */
export interface ToggleAdvancedSettingsInput {enable: Scalars['String'],role: Scalars['String'],user_id: Scalars['ID']}


/** Autogenerated return type of ToggleAdvancedSettings. */
export interface ToggleAdvancedSettingsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ToggleAvailability */
export interface ToggleAvailabilityInput {enable: Scalars['String'],id: Scalars['ID'],setting: Scalars['String']}


/** Autogenerated return type of ToggleAvailability. */
export interface ToggleAvailabilityPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ToggleBaa */
export interface ToggleBaaInput {enable: Scalars['String'],id: Scalars['ID']}


/** Autogenerated return type of ToggleBaa. */
export interface ToggleBaaPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of TogglePaywall */
export interface TogglePaywallInput {enable: Scalars['String'],id: Scalars['String']}


/** Autogenerated return type of TogglePaywall. */
export interface TogglePaywallPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of ToggleReasonForAppt */
export interface ToggleReasonForApptInput {
/** Appointment Type ID */
appointment_type_id: Scalars['ID'],
/** Boolean.to_String() to Enable/Disable */
enable: Scalars['String']}


/** Autogenerated return type of ToggleReasonForAppt. */
export interface ToggleReasonForApptPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transaction */
export interface TransactionTypeGenqlSelection{
    /** The currency of the transaction */
    currency?: boolean | number
    /** The amount for the transaction after fees */
    displayed_amount?: boolean | number
    /** Charge ID associated to transaction. Can be matched with billing_item.stripe_charge_id */
    source_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A transfer */
export interface TransferTypeGenqlSelection{
    /** The amount for the transfer */
    amount?: boolean | number
    /** The currency of the transfer */
    currency?: boolean | number
    /** The amount to display (formatted and with currency symbol) */
    displayed_amount?: boolean | number
    /** The expected to happen date to display */
    displayed_expected_to_happen?: boolean | number
    /** The initiation date to display */
    displayed_initiated?: boolean | number
    /** The date that the transfer is expected to complete */
    expected_to_happen?: boolean | number
    /** Total of all fees deducted from all transactions */
    fees?: boolean | number
    /** Stripe ID for this transfer */
    id?: boolean | number
    /** The initiation time of the transfer */
    initiated?: boolean | number
    /** The status for the transfer */
    status?: boolean | number
    /** Number of transactions */
    transactions_count?: boolean | number
    /** The type of transfer */
    type?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** UniqueDeviceIdentifier object */
export interface UniqueDeviceIdentifierGenqlSelection{
    /** The assigning authority for the device code */
    assigning_authority?: boolean | number
    /** The device code */
    device_code?: boolean | number
    /** The display name for the device code */
    display_name?: boolean | number
    /** The unique identifier of the identifier */
    id?: boolean | number
    /** The scoping entity for the device code */
    scoping_entity?: boolean | number
    /** The UDI code for the device */
    udi_code?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateCalorieLevel */
export interface UpdateCalorieLevelInput {device_token?: (Scalars['String'] | null),device_type?: (Scalars['String'] | null),email?: (Scalars['String'] | null),high_end_caloric_intake?: (Scalars['String'] | null),run_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of UpdateCalorieLevel. */
export interface UpdateCalorieLevelPayloadGenqlSelection{
    assessment?: HealthAssessmentGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateClaimSubmitter */
export interface UpdateClaimSubmitterInput {
/** ChangeClaimSubmitter ID used to locate ClaimSubmitter */
change_health_submitter_id: Scalars['ID'],
/** ID of the User */
user_id: Scalars['ID'],
/** ID of the Organization */
organization_id: Scalars['ID'],
/** Healthie Biller ID */
biller_id: Scalars['String'],
/** Change Health Username */
change_username: Scalars['String'],
/** Submitter ID */
submitter_id: Scalars['String']}


/** Autogenerated return type of UpdateClaimSubmitter. */
export interface UpdateClaimSubmitterPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateCurrency */
export interface UpdateCurrencyInput {user_id: Scalars['ID'],currency: Scalars['String']}


/** Autogenerated return type of UpdateCurrency. */
export interface UpdateCurrencyPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateHiddenSettings */
export interface UpdateHiddenSettingsInput {
/** User's AppointmentSetting ID */
appointment_setting_id: Scalars['ID'],
/** Appointment Setting Params */
appointment_setting_params: AppointmentSettingInputs}


/** Autogenerated return type of UpdateHiddenSettings. */
export interface UpdateHiddenSettingsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of Update */
export interface UpdateInput {
/** Healthie organization ID */
organization_id: Scalars['ID'],
/** Zus Parameters */
zus_params: ZusInputs}


/** Autogenerated input type of UpdateMacronutrientSplit */
export interface UpdateMacronutrientSplitInput {carbs_percentage?: (Scalars['String'] | null),device_token?: (Scalars['String'] | null),device_type?: (Scalars['String'] | null),email?: (Scalars['String'] | null),fat_percentage?: (Scalars['String'] | null),protein_percentage?: (Scalars['String'] | null),run_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of UpdateMacronutrientSplit. */
export interface UpdateMacronutrientSplitPayloadGenqlSelection{
    assessment?: HealthAssessmentGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of Update. */
export interface UpdatePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateUiConfiguration */
export interface UpdateUiConfigurationInput {role: OrganizationMembershipRole,ui_configuration: Scalars['JSON']}


/** Autogenerated return type of UpdateUiConfiguration. */
export interface UpdateUiConfigurationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organization?: OrganizationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of UpdateUserEmail */
export interface UpdateUserEmailInput {current_email: Scalars['String'],new_email: Scalars['String'],user_id: Scalars['ID']}


/** Autogenerated return type of UpdateUserEmail. */
export interface UpdateUserEmailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An user entry, returns basic user information */
export interface UserGenqlSelection{
    /** Access Token (for iCal) */
    access_token?: boolean | number
    /** The status of whether the user is active or not (if false, patient is archived) */
    active?: boolean | number
    /** Active care plan for the user */
    active_care_plan?: CarePlanGenqlSelection
    /** Active group care plan for the user */
    active_group_care_plan?: CarePlanGenqlSelection
    /** All active patients associated with this user. */
    active_patients?: (UserGenqlSelection & { __args?: {
    /** If provided, only returns patients with this course */
    course_id?: (Scalars['ID'] | null), 
    /** Search keywords */
    keywords?: (Scalars['String'] | null), 
    /** Page offset */
    offset?: (Scalars['Int'] | null), 
    /** Enables pagination if true */
    should_paginate?: (Scalars['Boolean'] | null)} })
    /** A number of all active patients associated with this user. */
    active_patients_count?: { __args: {
    /** If provided, only returns patients with this course */
    course_id?: (Scalars['ID'] | null)} } | boolean | number
    /** A collection of tags applied on the specific user */
    active_tags?: TagGenqlSelection
    /** Additional tabs to display within the provider's view of the client profile */
    additional_client_profile_items?: CustomSidebarOverrideGenqlSelection
    /** Additional links to display within gear menu in patient's header */
    additional_header_dropdown_items?: CustomSidebarOverrideGenqlSelection
    /** additional phone number for user */
    additional_phone_number?: boolean | number
    /** additional unique record identifier for user */
    additional_record_identifier?: boolean | number
    /** Additional links to display on patient sidebar */
    additional_sidebar_items?: CustomSidebarOverrideGenqlSelection
    /** Appointment prices associated with this user */
    advance_appointment_prices?: AdvanceAppointmentPriceGenqlSelection
    /**
     * @deprecated NO LONGER USED
     * The user's lead dyno affiliate info
     */
    affiliate?: AffiliateGenqlSelection
    /** The age of the user (in years) */
    age?: boolean | number
    /** All Verification fields left for the provider to fill out */
    all_verification_fields?: boolean | number
    /** Allergies, Sensitivities, Intolerances, and Preferences reported by client */
    allergy_sensitivities?: (AllergySensitivityGenqlSelection & { __args?: {
    /** Only returns allergies with this category */
    category?: (Scalars['String'] | null), 
    /** Only return current allergies */
    is_current?: (Scalars['Boolean'] | null), 
    /** When true, only unreconciled objects are returned. Otherwise, they are not included */
    unreconciled_from_ccda_ingest?: (Scalars['Boolean'] | null)} })
    /** Allow the user to send messages in community chat */
    allow_community_chat?: { __args: {
    /** Set to true if all sent in users are known to be patients */
    all_patients?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Allow the user to send direct messages in chat */
    allow_direct_chat?: { __args: {
    /** Set to true if all sent in users are known to be patients */
    all_patients?: (Scalars['Boolean'] | null)} } | boolean | number
    /** All announcements associated with this user. For a dietitian it returns all announcements created including those created in organization if applicable. For a patient it returns announcements generated by his/her dietitian. */
    announcements?: (AnnouncementGenqlSelection & { __args?: {
    /** If true, excludes announcements that patient has dismissed */
    exclude_dismissed?: (Scalars['Boolean'] | null)} })
    /** If the user has incomplete onboarding steps */
    any_incomplete_onboarding_steps?: boolean | number
    /** If the user has courses shared with them */
    any_shared_courses?: boolean | number
    /** If the user has docs shared with them */
    any_shared_documents?: boolean | number
    /** If the user has courses shared with them */
    any_shared_incomplete_courses?: boolean | number
    /** Whether the user has docs shared with them that they have not viewed */
    any_unviewed_documents?: boolean | number
    /** AppleHealth for the user */
    apple_health?: AppleHealthGenqlSelection
    /** Appointment Locations for the user */
    appointment_locations?: AppointmentLocationGenqlSelection
    /** Appointment Settings for the user */
    appointment_setting?: AppointmentSettingGenqlSelection
    /** All Appointment Type Credits for this user */
    appointment_type_credits?: (AppointmentTypeCreditGenqlSelection & { __args?: {
    /** Only returns credits for this appointment type */
    appointment_type_id?: (Scalars['ID'] | null)} })
    /** All available appointment types for the provider. */
    appointment_types?: (AppointmentTypeGenqlSelection & { __args?: {
    /** Filter types by these ids */
    appointment_type_ids?: (Scalars['String'] | null), 
    /** Only return bookable types */
    require_client_bookable?: (Scalars['Boolean'] | null)} })
    /** Appointments for the user */
    appointments?: AppointmentGenqlSelection
    /** Datetime of archival. This field will only be populated with archived changes made after Aug 7, 2023 */
    archived_at?: boolean | number
    /** If true, user has seen popup explaining how to assign providers and clients to tasks */
    assign_tasks_seen?: boolean | number
    /** Tasks assigned by the user to other users */
    assigned_tasks?: (TaskGenqlSelection & { __args?: {
    /** The maximum number of tasks to return */
    limit?: (Scalars['Int'] | null), 
    /** If true, return hidden tasks */
    show_hidden?: (Scalars['Boolean'] | null)} })
    /** When false, the user is opted out of the automatic charge feature. */
    auto_charge_enabled?: boolean | number
    /** All available contact types for the provider. */
    available_contact_types?: boolean | number
    /** The link to the avatar image (nil if no image has been uploaded) */
    avatar_url?: boolean | number
    /** The status of the user's bank account */
    bank_account_verified_status?: boolean | number
    /** If user still has verification steps for stripe, returns deadline timestamp */
    bank_verification_deadline?: boolean | number
    /** All Billing Items for this user */
    billing_items?: BillingItemGenqlSelection
    /** If a user has seen the message blast alert */
    blast_seen?: boolean | number
    /** Displays bmi percentile for growth charts */
    bmi_percentile?: boolean | number
    /** Displays standard by which bmi percentile is calculated */
    bmi_percentile_standard?: boolean | number
    /** The brand that the user made */
    brand?: (BrandGenqlSelection & { __args?: {
    /** If true, return the brand with all fields */
    is_for_editing?: (Scalars['Boolean'] | null)} })
    /** The URL of the brand's alternative logo */
    brand_alt_logo_url?: boolean | number
    /** The URL of the brand logo */
    brand_logo_url?: boolean | number
    /** The Brand Name Of the User */
    brand_name?: boolean | number
    /** The name of the Brand */
    branded_name?: boolean | number
    /** Broken synced calendar */
    broken_synced_cal?: ExternalCalendarGenqlSelection
    /** HTML String to display on top of the calendar */
    calendar_text?: boolean | number
    /** Calendar timezone */
    calendar_timezone?: boolean | number
    /** Call references made for a patient's insurances */
    call_references?: CallReferenceGenqlSelection
    /** If true, has Zus credential */
    can_access_zus?: boolean | number
    /** Allow the user to add clients */
    can_add_clients?: boolean | number
    /** If the provider can add members */
    can_add_members?: boolean | number
    /** If true this user to archive clients */
    can_archive_clients?: boolean | number
    /** Allow this user to charge clients */
    can_charge_clients?: boolean | number
    /** Allow the user to Check Eligibility */
    can_check_eligibility?: boolean | number
    /** If true, the user can delete charting notes */
    can_delete_charting_notes?: boolean | number
    /** If true this user to delete faxes */
    can_delete_faxes?: boolean | number
    /** If true,  the user to edit Appointment Types */
    can_edit_appointment_types?: boolean | number
    /** If true, the user can edit brand */
    can_edit_brand?: boolean | number
    /** If true, the user can edit client credit */
    can_edit_credit?: boolean | number
    /** If true, the user can edit org documents */
    can_edit_docs?: boolean | number
    /** If the provider can edit forms */
    can_edit_forms?: boolean | number
    /** If the provider can edit members */
    can_edit_members?: boolean | number
    /** If true, the user to edit org calendar */
    can_edit_org_calendar?: boolean | number
    /** If true, the user can edit packages */
    can_edit_packages?: boolean | number
    /** If true, the user can add, edit and delete products */
    can_edit_products?: boolean | number
    /** If true, the user can add or remove clients within programs */
    can_edit_program_clients?: boolean | number
    /** If true, the user can edit programs */
    can_edit_programs?: boolean | number
    /** Allow the user to edit account settings */
    can_edit_settings?: boolean | number
    /** If the provider organization can have suborgs */
    can_have_suborgs?: boolean | number
    /** If the user can add suborgs */
    can_insert_suborgs?: boolean | number
    /** If true, the user can lock other providers charting notes */
    can_lock_others_charting_notes?: boolean | number
    /** If true, the user can lock their own charting notes */
    can_lock_own_charting_notes?: boolean | number
    /** If the provider can mark tasks that are assigned to other org members as completed */
    can_mark_assigned_tasks_to_other_org_members_as_completed?: boolean | number
    /** If true, the user can merge clients */
    can_merge_clients?: boolean | number
    /** If true, can order new lab using labs widget */
    can_order_labs?: boolean | number
    /** Allow this user to schedule appointments (Linked accounts) */
    can_schedule_appointments?: boolean | number
    /** If true, user can see products tab in client profile and see fullscript box on homepage if not linked to fullscript */
    can_see_fullscript_tab?: boolean | number
    /** Show insurance info for a client */
    can_see_insurance_authorization?: boolean | number
    /** When true, the user should see option to use erx dosespot */
    can_see_option_to_use_erx_dosespot?: boolean | number
    /** If true, can view transfer tab in billing page */
    can_see_transfers?: boolean | number
    /** If true, the user can sign other providers charting notes */
    can_sign_others_charting_notes?: boolean | number
    /** If true, the user can sign their own charting notes */
    can_sign_own_charting_notes?: boolean | number
    /** If true, can access to labs widget */
    can_view_labs?: boolean | number
    /** If True, the user will be able to add addendums for an other org member locked form answer groups */
    can_write_org_addendums?: boolean | number
    /** If true, the user cannot access org settings */
    cannot_access_org_member_settings?: boolean | number
    /**
     * @deprecated Use can_lock_own_charting_notes instead
     * If True, the user will not be able to lock form answer groups
     */
    cannot_lock_form_answer_groups?: boolean | number
    /** Fetch paginated stripe customer accounts with associated errors or soon to expire credit cards */
    card_issues_count?: boolean | number
    /** A JSON object containing validation errors for the patient's CDA file */
    cda_validation_errors_json?: boolean | number
    /** The Patient's CDA */
    cda_xml?: { __args: {end_date?: (Scalars['String'] | null), start_date?: (Scalars['String'] | null)} } | boolean | number
    /** Hash for Chameleon */
    chameleon_hash?: boolean | number
    /** When true, user will be able to check insurance eligibility via Change Healthcare */
    change_healthcare_insurance_eligibility_connected?: boolean | number
    /** Clearstep Connection for the user. If the Shapa integration is enabled, then the Clearstep integration should automatically appear as enabled */
    clearstep_connection?: ShapaConnectionGenqlSelection
    /** Info about how a user was acquired */
    client_source?: ClientSourceGenqlSelection
    /** Completed Tasks of organzation if user has permission, or user if not */
    completed_tasks?: (TaskGenqlSelection & { __args?: {
    /** The maximum number of tasks to return */
    limit?: (Scalars['Int'] | null), 
    /** If true, return hidden tasks */
    show_hidden?: (Scalars['Boolean'] | null)} })
    /** Whether the user has accepted the lab order waiver */
    consented_to_labs?: boolean | number
    /** course membership scoped by specific course */
    course_membership_via_course?: CourseMembershipGenqlSelection
    /** All course memberships for this user */
    course_memberships?: CourseMembershipGenqlSelection
    /**
     * @deprecated This field has a typo. use User.course_memberships instead
     * All course memberships for this user
     */
    course_membrships?: CourseMembershipGenqlSelection
    /** The date this user created an account */
    created_at?: boolean | number
    /** The credit balance of the user */
    credit_balance?: boolean | number
    /** The most recent generated summary. Null if no summary has been generated */
    current_summary?: GeneratedSummaryGenqlSelection
    /** Pagination cursor */
    cursor?: boolean | number
    /** All custom custom emails associated with this user. */
    custom_custom_emails?: CustomEmailGenqlSelection
    /** Custom Metric of the user */
    custom_metrics?: CustomMetricGenqlSelection
    /** The default currency for the user */
    default_currency?: boolean | number
    /** When set for a client, the provider's Dosespot iFrame will launch into this clinic. When null, the Dosespot iframe will launch into the provider's default clinic. This will error unless the provider is connected to that clinic in Dosespot. Only used for patients. */
    default_dosespot_clinic_id?: boolean | number
    /** Default external videochat URL for scheduling with this user */
    default_external_video_url?: boolean | number
    /** The id of the users default onboarding flow */
    default_onboarding_flow?: OnboardingFlowGenqlSelection
    /** The id of the users default onboarding flow */
    default_onboarding_flow_id?: boolean | number
    /** Patient's default pharmacy. Only applicable to dosespot users */
    default_pharmacy?: PharmacyGenqlSelection
    /** Default stripe payment card */
    default_stripe_customer_detail_id?: boolean | number
    /** Check that user has no video or audio devices (or both) */
    devices_unavailability?: boolean | number
    /** Dexcom Connection for the user */
    dexcom_connection?: DexcomConnectionGenqlSelection
    /** diagnoses for the user */
    diagnoses?: DiagnosisGenqlSelection
    /** Dietitian of this user */
    dietitian?: UserGenqlSelection
    /** The Dietitian ID of the Client */
    dietitian_id?: boolean | number
    /** Dismisses a small advertisement about the ability to sync calendars */
    dimissed_calendar_prompt?: boolean | number
    /** Dismisses a notice warn about charting note addendum */
    dismissed_charting_note_addendum_warning?: boolean | number
    /** If true, do not show fullscript box in provider homepage */
    dismissed_fullscript?: boolean | number
    /** Dismisses the warning while insurance eligibility checking should not be shown */
    dismissed_insurance_eligibility_warning?: boolean | number
    /** Dismisses the warning while locking a charting note should not be shown */
    dismissed_lock_charting_note_warning?: boolean | number
    /** If true, do not show fullscript box in provider homepage */
    dismissed_products_tab?: boolean | number
    /** The Brand that controls the look of the website for the user */
    displayed_brand?: BrandGenqlSelection
    /** date of birth of user */
    dob?: boolean | number
    /** An ID used for document, course, and conversation sharing */
    doc_share_id?: boolean | number
    /** Number of notifications from Dosespot (e-prescriptions) */
    dosespot_notification_count?: boolean | number
    /** Dosespot assigned ID for this patient. nil if the patient is not connected to Dosespot */
    dosespot_patient_id?: boolean | number
    /** The email of this user */
    email?: boolean | number
    /** The erx dosespot role */
    erx_dosespot_role?: boolean | number
    /** Amount of money waiting to be paid out, as a float */
    estimated_future_payouts?: boolean | number
    /** Patient cards that have expired (requires can_see_billing for org level patients) */
    expired_client_cards_count?: boolean | number
    /** Patient cards that will expire by next recurring payment (requires can_see_billing for org level patients) */
    expiring_client_cards_count?: boolean | number
    /** Family history conditions for user */
    family_history_conditions?: FamilyHistoryConditionGenqlSelection
    /** Fax line request data */
    fax_line_request?: FaxLineRequestGenqlSelection
    /** Fax number belonging to the user */
    fax_number?: boolean | number
    /** Feature Toggle of the user */
    feature_toggle?: FeatureToggleGenqlSelection
    /** Date of the first client entry */
    first_client_entry_date?: boolean | number
    /** The first (preferred) name of this user */
    first_name?: boolean | number
    /** The first name and last initial of the user */
    first_name_last_initial?: boolean | number
    /** Fitbit for the user */
    fitbit?: FitbitGenqlSelection
    /** The number of food entries the user has */
    food_entries_count?: boolean | number
    /** All filled out forms for this user */
    form_answer_groups?: FormAnswerGroupGenqlSelection
    /** Formatted string of money waiting to be paid out, including currency symbol */
    formatted_estimated_future_payouts?: boolean | number
    /** The full legal name of this user */
    full_legal_name?: boolean | number
    /**
     * The full legal name of this user with preferred name in parentheses. e.g 'Jonathan (Jon) Jones'
     * 
     */
    full_legal_name_with_preferred?: boolean | number
    /** The full name of the user */
    full_name?: boolean | number
    /** Fullscript for the user */
    fullscript?: fullscriptGenqlSelection
    /** Practitioner id for the user's Fullscript account */
    fullscript_practitioner_id?: boolean | number
    /** gender of user */
    gender?: boolean | number
    /** Gender identity of user (typically nil unless gender field is 'Other') */
    gender_identity?: boolean | number
    /** User gender identity code */
    gender_identity_code?: boolean | number
    /** id of generated reports folder */
    generated_reports_folder_id?: boolean | number
    /** The Number of goals the user has */
    goals_count?: boolean | number
    /** The Google Calendar Account for this user */
    google_calendar?: ExternalCalendarGenqlSelection
    /** Google Fit for the user */
    google_fit?: GoogleFitGenqlSelection
    /** The name of the patients user group */
    group_name?: boolean | number
    /** When true, the user can see client portal setting in notification contact form */
    has_access_to_client_portal_setting_in_notification_contact?: boolean | number
    /** When true, the user can access CMS 1500 content in the CMS 1500 tab */
    has_access_to_cms_1500s_content?: boolean | number
    /** When true, the user can see insurance billing automation features */
    has_access_to_insurance_billing_automation?: boolean | number
    /** When true, the user can see the connect button to sign up on dosespot on the settings integrations section */
    has_access_to_sign_up_on_dosespot?: boolean | number
    /**
     * @deprecated Megazap is now enabled by default, so this is always true
     * When true, the user can see the zus megazap component
     */
    has_access_to_zus_megazap_component?: boolean | number
    /** If true, the user's account can take ACH payments */
    has_ach?: boolean | number
    /** If true, user has at least one entry type to track */
    has_any_entry_types?: boolean | number
    /** If the user's organization has API access */
    has_api_access?: boolean | number
    /** If true, the user has access to download the mobile app */
    has_available_mobile_app?: boolean | number
    /** (Considered public) If true, the user has bookable appts */
    has_bookable_appts?: boolean | number
    /** (Considered public) If true, the user has bookable packages */
    has_bookable_packages?: boolean | number
    /** Whether the user has CCDA feature available */
    has_ccda?: boolean | number
    /** True if the user has change health connection */
    has_change_health?: boolean | number
    /** If true, the user has complted their intake forms */
    has_completed_intake_forms?: boolean | number
    /** If courses exist for an organization or provider */
    has_courses?: boolean | number
    /** If true, the user has created a password */
    has_created_password?: boolean | number
    /** Allow the user to change the color of their calendar */
    has_custom_color_schemes?: boolean | number
    /** Check if user has any custom food item */
    has_custom_food?: boolean | number
    /** Check if user has any created meals */
    has_custom_meals?: boolean | number
    /** When true, the user can set scheduling priority levels for providers */
    has_custom_scheduling_prioritization?: boolean | number
    /** When true, the user can have custom text for SMS reminders for specific appointment types */
    has_custom_text_reminders?: boolean | number
    /** If the user is marked as a developer and can modify webhooks and api keys. */
    has_developer_access?: boolean | number
    /** If true, user is a provider with a dosespot account linked */
    has_dosespot?: boolean | number
    /** If True, the user has enterprise plan */
    has_enterprise_plan?: boolean | number
    /** If True, the user has expanded vbc charting fields */
    has_expanded_vbc_charting_fields?: boolean | number
    /** True if the user can add external videochat URLs */
    has_external_videochat_urls?: boolean | number
    /** If true, the user has connected their Fullscript account to Healthie */
    has_fullscript?: boolean | number
    /** If true, the user have available appointment slots in future */
    has_future_availabilities?: { __args: {
    /** When passed in, will always make has_future_availabilities return true if the offerings do not have bookable appointment types */
    offering_ids?: ((Scalars['ID'] | null)[] | null)} } | boolean | number
    /** True if the user has access to goal title links */
    has_goal_title_links?: boolean | number
    /** Can the user receive inbound faxes? */
    has_inbound_faxing?: boolean | number
    /** Allow this user to access increased branding */
    has_increased_branding?: boolean | number
    /** Insurance Pay checks to see if there IS an insurance policy for the client */
    has_insurance_pay?: boolean | number
    /** If true, patient's most recent demographic information(phone, dob, location, gender, name) could not be updated in dosespot because information is invalid */
    has_invalid_dosespot_info?: boolean | number
    /** True if the user has any lab orders */
    has_lab_orders?: boolean | number
    /** Whether users has a lab order from lab_testing_api */
    has_lab_testing_api_orders?: boolean | number
    /** If true, user is a provider with a living plate linked */
    has_living_plate?: boolean | number
    /** When true, the user can have a custom email sent out when an appointment is marked as no-show */
    has_marked_as_no_show_email?: boolean | number
    /** When true, the user can have a custom email sent out when an appointment is marked as rescheduled */
    has_marked_as_rescheduled_email?: boolean | number
    /** True if user is able to see conversations of all organization members */
    has_org_chat_access?: boolean | number
    /** Check to see if the user has any other active org members */
    has_other_org_members?: boolean | number
    /** When true, the user has their own appointment setting */
    has_own_appointment_setting?: boolean | number
    /** When true, the user has their own custom emails */
    has_own_custom_emails?: boolean | number
    /** When true, the provider can control settings around allow rescheduling past appointments. */
    has_past_rescheduling_settings?: boolean | number
    /** Whether or not this user has plus plan and above */
    has_plus_or_above_plan?: boolean | number
    /** True if the user has PP features */
    has_practice_plus?: boolean | number
    /** Has had payment in the last 30 days */
    has_recent_payments?: boolean | number
    /** True if the user has rupa connection */
    has_rupa_health?: boolean | number
    /** Self Pay checks to see if there is NOT an insurance policy for the client */
    has_self_pay?: boolean | number
    /** If true, user has shared appointment settings with at least one memember in org */
    has_shared_appt_setting_with_org?: boolean | number
    /** If the provider controls settings around enforcing state licensing restrictions for appointments */
    has_state_licensing_restrictions?: boolean | number
    /** If true, suborganization owner has stripe account from the parent organization owner */
    has_stripe_id_from_parent_org?: boolean | number
    /** Whether the user has a synced calendar */
    has_synced_cal?: boolean | number
    /** When true, the user can set appointment settings for specific appointment types */
    has_type_specific_appointment_settings?: boolean | number
    /** Check to see if the user has any user groups */
    has_user_groups?: boolean | number
    /** Check to see if the user can switch to another user */
    has_user_switch_options?: boolean | number
    /** True if the user is allowed to use Zoom */
    has_zoom_access?: boolean | number
    /** Heads Up Health SSO link for user; always returns nil if Heads Up Health add-on is not enabled */
    heads_up_health_sso_link?: boolean | number
    /** height of user */
    height?: boolean | number
    /** Displays height percentile for growth charts */
    height_percentile?: boolean | number
    /** Displays standard by which height percentile is calculated */
    height_percentile_standard?: boolean | number
    /** String of height including units */
    height_str?: boolean | number
    /** Hash for Help Scout */
    helpscout_hash?: boolean | number
    /** ID of the human */
    human_id?: boolean | number
    /** The unique identifier of the user */
    id?: boolean | number
    /** A collection of immunizations for this client */
    immunizations?: ImmunizationGenqlSelection
    /** Implantable device users for the user */
    implantable_devices_users?: ImplantableDeviceUserGenqlSelection
    /** True if User organization with multiple providers */
    in_multiple_providers_org?: boolean | number
    /** If a user is in an org */
    in_org?: { __args: {
    /** Some times we already know the user is an an org when we run the query, so we can just return true */
    known_to_be_in_org?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Incomplete Tasks of organization if user has permissions, or user if not */
    incomplete_tasks?: (TaskGenqlSelection & { __args?: {
    /** The maximum number of tasks to return */
    limit?: (Scalars['Int'] | null), 
    /** If true, return hidden tasks */
    show_hidden?: (Scalars['Boolean'] | null)} })
    /** Insurance Authorization for this user */
    insurance_authorization?: InsuranceAuthorizationTypeGenqlSelection
    /**
     * @deprecated NO LONGER USED
     * Hash for intercom
     */
    intercom_hash?: boolean | number
    /** The invite code for the provider */
    invite_code?: boolean | number
    /** Get filter string for user invoices */
    invoices_filter?: boolean | number
    /** Check if the user is an active provider in an organization */
    is_active_provider?: boolean | number
    /** True if chat autoresponding is active */
    is_chat_autoresponding?: boolean | number
    /** boolean for if the user has ever logged in to Healthie as a provider */
    is_first_time_provider?: boolean | number
    /** If true, the user is in an organization */
    is_org?: boolean | number
    /** True if the user an organization admin */
    is_org_admin?: boolean | number
    /** If true, the user is in an organization with more than one user */
    is_org_with_multiple_users?: boolean | number
    /** the status of whether the user is the owner of their org or not */
    is_owner?: boolean | number
    /** the status of whether the user is a patient or not */
    is_patient?: { __args: {
    /** If true, we already know the value and can skip the query */
    already_known_value?: (Scalars['Boolean'] | null)} } | boolean | number
    /** Whether a user is a super admin */
    is_super_admin?: boolean | number
    /** Whether the user is trialing */
    is_trialing?: boolean | number
    /** If the user aware they switched providers on specific login (can only do for current user) */
    knows_about_provider?: boolean | number
    /**
     * @deprecated NO LONGER USED
     * The client-side Kustomer API Key. (Only applies to specific custom whitelabels)
     */
    kustomer_api_key?: boolean | number
    /** last date user was active through web or mobile */
    last_active?: boolean | number
    /** last date the user was active */
    last_activity?: boolean | number
    /** String of the last date the user was active */
    last_activity_string?: boolean | number
    /** The User's last active appointment object */
    last_app?: AppointmentGenqlSelection
    /** the last payment made by client */
    last_billing_item?: BillingItemGenqlSelection
    /** id of last conversation */
    last_conversation_id?: boolean | number
    /** The last name of this user */
    last_name?: boolean | number
    /** last date the user signed in */
    last_sign_in_at?: boolean | number
    /** Last time allergy/sensitivity was updated */
    last_updated_allergy?: (AllergySensitivityGenqlSelection & { __args?: {
    /** Category of allergy/sensitivity */
    category?: (Scalars['String'] | null)} })
    /** The last weighing date of the user */
    last_weighing_date?: boolean | number
    /** Link to most recent roadmap article on helpscout */
    latest_article_link?: boolean | number
    /** Last product roadmap article number */
    latest_article_number?: boolean | number
    /** The legal first name of this user */
    legal_name?: boolean | number
    /** license number of user */
    license_num?: boolean | number
    /** Graphs to show in line graph form */
    line_graph_metric_categories?: boolean | number
    /** A collections of users who are in relationship with this client */
    linked_relatives?: NotificationContactGenqlSelection
    /** Link automatically signs user into Living plate dashboard without entering login credentials */
    living_plate_magic_link?: boolean | number
    /** The address of this user */
    location?: LocationGenqlSelection
    /** All available locations for the client. */
    locations?: LocationGenqlSelection
    /** Fetch count of medications for a given patient */
    medications_count?: { __args: {
    /** If true, only return active medications */
    active?: (Scalars['Boolean'] | null), 
    /** The patient ID to fetch medications for */
    patient_id?: (Scalars['ID'] | null)} } | boolean | number
    /** A serialized JSON string of metadata. Maximum character limit of 128,000. */
    metadata?: boolean | number
    /** The number of metric entries the user has */
    metric_entries_count?: boolean | number
    /** The number of mirror entries the user has */
    mirror_entries_count?: boolean | number
    /** The amount of money the user owes. If the user is a provider this will return 0 */
    money_owed?: boolean | number
    /** All tasks assigned to user */
    my_tasks?: (TaskGenqlSelection & { __args?: {
    /** The maximum number of tasks to return */
    limit?: (Scalars['Int'] | null), 
    /** If true, return hidden tasks */
    show_hidden?: (Scalars['Boolean'] | null)} })
    /** The full name of the user */
    name?: boolean | number
    /** The User's next upcoming active appointment object */
    next_app?: AppointmentGenqlSelection
    /**
     * @deprecated use next_appt_date instead
     * The User's next upcoming active appointment date (method)
     */
    next_appointment?: boolean | number
    /** The Users next upcoming active appointment date (field) */
    next_appt_date?: boolean | number
    /** The next onboarding item that the user has to fill */
    next_onboarding_step?: OnboardingItemGenqlSelection
    /** Recurring payment with next upcoming payment date */
    next_recurring_payment?: RecurringPaymentGenqlSelection
    /** The next step preventing the user from moving forward. nil if user has completed all steps */
    next_required_step?: boolean | number
    /** If True, the user has non paid plan */
    non_paid?: boolean | number
    /** notification contacts for the user */
    notification_contacts?: NotificationContactGenqlSelection
    /** Notification Settings for the user */
    notification_setting?: NotificationSettingGenqlSelection
    /** NPI of the user */
    npi?: boolean | number
    /** Number of entries for the client */
    num_entries?: boolean | number
    /** All offering_coupons associated with this provider. */
    offering_coupons?: OfferingCouponGenqlSelection
    /** All available offerings for the provider. */
    offerings?: OfferingGenqlSelection
    /** User onc gender identity */
    onc_gender_identity?: boolean | number
    /** The number open payments for the user */
    open_payments_count?: boolean | number
    /** Returns name of the org if exists, otherwise returns full name */
    org_name_or_self_name?: boolean | number
    /** The user of the organization token */
    organization?: OrganizationGenqlSelection
    /** The organization membership of the user */
    organization_membership?: OrganizationMembershipGenqlSelection
    /** Single Other ID number for the user */
    other_id_number?: (OtherIdNumberGenqlSelection & { __args?: {
    /** CMS1500 ID */
    cms1500_id?: (Scalars['ID'] | null), 
    /** The ID to filter by */
    id?: (Scalars['ID'] | null), 
    /** If true, only return the last CMS1500 ID */
    is_last_cms1500?: (Scalars['Boolean'] | null)} })
    /** All other id numbers for this user */
    other_id_numbers?: OtherIdNumberGenqlSelection
    /** Other organization members. */
    other_org_members?: (UserGenqlSelection & { __args?: {
    /** If true, only return active users */
    only_active?: (Scalars['Boolean'] | null)} })
    /** Other organization members for sharing */
    other_org_members_for_sharing?: UserGenqlSelection
    /** The IDs of other care team members for the client */
    other_provider_ids?: boolean | number
    /** The Outlook Calendar Account for this user */
    outlook?: ExternalCalendarGenqlSelection
    /** Status paid for fax */
    paid_for_fax_status?: boolean | number
    /**
     * @deprecated NO LONGER USED.
     * boolean for If a user is a part of the journify organization
     */
    part_of_journify?: boolean | number
    /** When true, the user is a patient and has auto submit cms1500 enabled */
    patient_has_cms1500_auto_submission_enabled?: boolean | number
    /** All patients associated with this user. */
    patients?: (UserGenqlSelection & { __args?: {
    /** The client IDs to filter by */
    client_ids?: ((Scalars['ID'] | null)[] | null), 
    /** If true, only return active users */
    only_active?: (Scalars['Boolean'] | null)} })
    /** The number of all active patients associated with this user. */
    patients_count?: { __args: {
    /** When true, this will only return the number of patients whose primary provider is this user */
    only_primary?: (Scalars['Boolean'] | null)} } | boolean | number
    /** the number of notifications belonging to a patient */
    patients_notification_count?: { __args: {
    /** The types of notifications to exclude */
    excluded_types?: (Scalars['String'] | null)} } | boolean | number
    /** All patients with a credit card on file associated with this user. */
    patients_with_cc?: UserGenqlSelection
    /** When true, the user will never be prompted to change their timezone */
    permanently_disable_tz_prompt?: boolean | number
    /** The phone number of the user */
    phone_number?: boolean | number
    /** Place of service for this user */
    place_of_service?: PlaceOfServiceGenqlSelection
    /** All policies associated with this user */
    policies?: PolicyGenqlSelection
    /** All policies associated with this user */
    policiesOrderAscending?: PolicyGenqlSelection
    /** Preferred language based on language code */
    preferred_language?: boolean | number
    /** User preferred language code */
    preferred_language_code?: boolean | number
    /** Fetch count of prescriptions for a given patient pulled from Dosespot */
    prescriptions_count?: { __args: {
    /** The patient ID to fetch prescriptions for */
    patient_id?: (Scalars['ID'] | null), 
    /** The status of the prescriptions to fetch */
    status?: (Scalars['String'] | null)} } | boolean | number
    /** Displays administrator account as other user account */
    pretend_to_be?: boolean | number
    /** The primary ethnicity value based on ethnicity code */
    primary_ethnicity?: boolean | number
    /** User primary ethnicity code */
    primary_ethnicity_code?: boolean | number
    /** User primary race */
    primary_race?: boolean | number
    /** User primary race code */
    primary_race_code?: boolean | number
    /** Problems for the user */
    problems?: (ProblemGenqlSelection & { __args?: {
    /** When true, only unreconciled objects are returned. Otherwise, they are not included */
    unreconciled_from_ccda_ingest?: (Scalars['Boolean'] | null)} })
    /** Professions of the user */
    professions?: ProfessionGenqlSelection
    /** Pronouns that the client identifies with */
    pronouns?: boolean | number
    /** Provider appointment locations */
    provider_appointment_locations?: ProviderAppointmentLocationGenqlSelection
    /** When true, the user is a provider and has auto submit cms1500 enabled */
    provider_has_cms1500_auto_submission_enabled?: boolean | number
    /** All providers associated with the client */
    providers?: (UserGenqlSelection & { __args?: {
    /** If true, only return providers that can be scheduled */
    can_be_scheduled_with?: (Scalars['Boolean'] | null)} })
    /** Meal Plans from Living Plate */
    purchased_meal_plans?: MealPlanGenqlSelection
    /** qualifications of the user */
    qualifications?: boolean | number
    /** quicks notes for a given user */
    quick_notes?: boolean | number
    /** All reactivation custom emails associated with this user. */
    reactivation_emails?: CustomEmailGenqlSelection
    /** unique record identifier for user */
    record_identifier?: boolean | number
    /** referrals for the user */
    referrals?: ReferralGenqlSelection
    /** An array of referring physicians associated to all referrals associated with a client */
    referring_physicians?: ReferringPhysicianGenqlSelection
    /** NPI of the referring provider */
    referring_provider_id?: boolean | number
    /** Name of the referring provider */
    referring_provider_name?: boolean | number
    /** NPI of the referring provider */
    referring_provider_npi?: boolean | number
    /** The date range filter selections for each report */
    reports_date_filter_selection?: ReportsDateFilterSelectionGenqlSelection
    /** The number of forms that have been requested for the user */
    requested_form_count?: boolean | number
    /** If true, the user is a patient with required fields to create dosespot patient. If false, then either the provider doesn't have a linked dosespot account, or the patient has all required fields. */
    required_dosespot_fields?: boolean | number
    /** User subscription has been inactive and needs to be reactivated before allowing acccess */
    requires_reactivation?: boolean | number
    /** User subscription has been inactive for 91+ days and should receive 7 day trial upon reactivation */
    requires_shortened_trial?: boolean | number
    /** Patient ID on the rupa health */
    rupa_patient_id?: boolean | number
    /** Providers with higher priority will be chosen first when availability is generated for self-scheduling. Defaults to 0 */
    scheduling_priority?: boolean | number
    /** The secondary ethnicity value based on ethnicity code */
    secondary_ethnicity?: boolean | number
    /** User secondary ethnicity code */
    secondary_ethnicity_code?: boolean | number
    /** User secondary race */
    secondary_race?: boolean | number
    /** User secondary race code */
    secondary_race_code?: boolean | number
    /** True if user is up to date with all product roadmap articles */
    seen_last_article?: boolean | number
    /** A link that takes a user to set their password. This will return null if the user has set a password, or the authenticated user is not an admin */
    set_password_link?: boolean | number
    /** Sex of the user (Stated on ID card for insurance purposes) */
    sex?: boolean | number
    /** Sexual orientation of the user */
    sexual_orientation?: boolean | number
    /** The sexual orientation code of the user, corresponds to sexual orientation */
    sexual_orientation_code?: boolean | number
    /** The sexual orientation value if other */
    sexual_orientation_other?: boolean | number
    /** Shapa Connection for the user */
    shapa_connection?: ShapaConnectionGenqlSelection
    /** An ID that includes the shard the user is on. Matches ID unless user is on a custom shard */
    shard_aware_id?: boolean | number
    /** Show appointments tab on the sidebar */
    show_appointments_tab?: boolean | number
    /** Show "Billing Dropdown" on patient sidebar */
    show_billing_dropdown_item?: boolean | number
    /** Show billing tab on the sidebar */
    show_billing_tab?: boolean | number
    /** Show brand link in the header */
    show_brand_tab?: boolean | number
    /** Allow this user to view care plan (Linked accounts) */
    show_care_plan_area?: boolean | number
    /** Show chat tab on the sidebar */
    show_chat_tab?: boolean | number
    /** If to show the client credits in the UI */
    show_client_appointment_credits?: boolean | number
    /** Show Cms1500s tab on the sidebar */
    show_cms1500s_tab?: boolean | number
    /** Show the option to view the dashboard */
    show_dashboard?: boolean | number
    /** Show documents tab on the sidebar */
    show_documents_tab?: boolean | number
    /** Show education tab on the sidebar */
    show_education_tab?: boolean | number
    /** Display DOB next to the name of the client */
    show_expanded_label?: boolean | number
    /** Show forms tab on the sidebar */
    show_forms_tab?: boolean | number
    /** Allow this user to view goals (Linked accounts) */
    show_goals_area?: boolean | number
    /** If true, user will be able to view Grow settings page */
    show_grow?: boolean | number
    /** Show "Integrations" option in gear menu */
    show_integrations_dropdown_item?: boolean | number
    /** Allow this user to view journal entries (Linked accounts) */
    show_journal_entries_area?: boolean | number
    /** Show the organization tab on sidebar */
    show_org_tab?: boolean | number
    /** Show packages tab on the sidebar */
    show_packages_tab?: boolean | number
    /** Show "Update Payment Methods" option in gear menu */
    show_payment_methods_dropdown_item?: boolean | number
    /** Show payments tab on the sidebar */
    show_payments_tab?: boolean | number
    /** Show received fax tab on the sidebar */
    show_received_fax_tab?: boolean | number
    /** Show reports tab on the sidebar */
    show_reports_tab?: boolean | number
    /** Show scheduled tab on the chat page */
    show_scheduled_chat_tab?: boolean | number
    /** Show sent fax tab on the sidebar */
    show_sent_fax_tab?: boolean | number
    /** Show subscription link in the settings dropdown */
    show_subscription_link?: boolean | number
    /** If a user has seen the message blast alert */
    show_superbill_org_select?: boolean | number
    /** Show Superbill tab on the sidebar */
    show_superbills_tab?: boolean | number
    /** The total number of sidebar notifications to be displayed for the user */
    sidebar_notification_count?: boolean | number
    /** True if the user skipped adding a bank account */
    skipped_bank_account?: boolean | number
    /** The status of whether the user has a real email or not */
    skipped_email?: boolean | number
    /** Specialties of the user */
    specialties?: SpecialtyGenqlSelection
    /** The SSN of the user */
    ssn?: boolean | number
    /** Returns a user state licenses */
    state_licenses?: StateLicenseGenqlSelection
    /** Stripe Info of the client */
    stripe_customer_detail?: StripeCustomerDetailGenqlSelection
    /** Stripe credit cards of the client */
    stripe_customer_details?: StripeCustomerDetailGenqlSelection
    /** The stripe id of the user (Used to look up bank account details for provider) */
    stripe_id?: boolean | number
    /** ID of account representative in Stripe. Nil if not staff/provider */
    stripe_person_id?: boolean | number
    /** Returns the subscription for this user.  Nil if not staff/provider */
    subscription?: SubscriptionInstanceGenqlSelection
    /** Address to use on super bills */
    super_bill_address?: boolean | number
    /** Providers location to use on super bills */
    super_bill_location?: LocationGenqlSelection
    /** Patient location to use on super bills */
    super_bill_patient_location?: LocationGenqlSelection
    /** Provider's phone number to use on super bills */
    super_bill_phone_number?: boolean | number
    /** Other users this account can switch to */
    switchable_users?: UserGenqlSelection
    /** Number of other users this account can switch to */
    switchable_users_count?: boolean | number
    /** Number of tasks */
    tasks_count?: { __args: {
    /** If true, only count tasks created by others */
    only_created_by_others?: (Scalars['Boolean'] | null), 
    /** If true, count hidden tasks */
    show_hidden?: (Scalars['Boolean'] | null), 
    /** Type of task to count */
    type?: (Scalars['String'] | null)} } | boolean | number
    /** tax id of user */
    tax_id?: boolean | number
    /** The user's timezone */
    timezone?: boolean | number
    /** Access token */
    token?: boolean | number
    /** Total active packages credits */
    total_active_packages_with_credits?: boolean | number
    /** Total clients with appointment credits greater than 0 */
    total_clients_with_appt_type_credits?: boolean | number
    /** Total count of the user lab orders objects */
    total_lab_orders?: boolean | number
    /** The authenticated human if an account is masked */
    true_human_id?: boolean | number
    /** The number unconfirmed appointments for the user */
    unconfirmed_appointment_count?: { __args: {
    /** If true, include appointments unconfirmed by clients */
    unconfirmed_by_clients?: (Scalars['Boolean'] | null)} } | boolean | number
    /** The number of unseen conversations for the user */
    unread_convo_count?: boolean | number
    /** The number of unscheduled lab orders */
    unscheduled_lab_orders_count?: boolean | number
    /** The number of unseen appointment notfications */
    unseen_appt_notification_count?: boolean | number
    /** The number of unseen comment notfications */
    unseen_comment_notification_count?: boolean | number
    /** The number of unseen document notfications */
    unseen_document_notification_count?: boolean | number
    /** The number of unseen entry notfications */
    unseen_entry_notification_count?: boolean | number
    /** The number of unseen goal notfications */
    unseen_goal_notification_count?: boolean | number
    /** The number of unseen note notfications */
    unseen_note_notification_count?: boolean | number
    /**
     * @deprecated use unseen_notifications_count_mobile
     * The number of unseen notifications for the user (mobile only)
     */
    unseen_notification_count?: boolean | number
    /** The number of unseen notifications for the user (web only) */
    unseen_notifications_count?: boolean | number
    /** The number of unseen notifications for the user (this field only used by mobile) [identical to :unseen_notification_count] */
    unseen_notifications_count_mobile?: boolean | number
    /** The number of unseen payment notfications */
    unseen_payment_notification_count?: boolean | number
    /** Number of unseen bounced notification records */
    unseen_sent_notification_records_count?: boolean | number
    /** All active upcoming appointments of the user */
    upcoming_appointments?: AppointmentGenqlSelection
    /** All active upcoming payments of the user */
    upcoming_payments?: RecurringPaymentGenqlSelection
    /** Date user was last updated */
    updated_at?: boolean | number
    /** File name of uploaded avatar image */
    uploaded_avatar_file_name?: boolean | number
    /** User Group of this user */
    user_group?: UserGroupGenqlSelection
    /** The ID of the patient's user group */
    user_group_id?: boolean | number
    /** All user groups associated with this provider. */
    user_groups?: (UserGroupGenqlSelection & { __args: {
    /** If true, will check the OrganizationMembership permission. default: false */
    check_group_level_actions?: (Scalars['Boolean'] | null), 
    /** If provided, only return user groups associated with this course */
    course_id?: (Scalars['ID'] | null), 
    /** Search keywords */
    keywords?: (Scalars['String'] | null), 
    /** Page offset */
    offset?: (Scalars['Int'] | null), 
    /** Enables pagination if true */
    should_paginate?: (Scalars['Boolean'] | null)} })
    /** A number of user groups associated with this provider. */
    user_groups_count?: { __args: {
    /** If true, will check the OrganizationMembership permission. default: false */
    check_group_level_actions?: (Scalars['Boolean'] | null), 
    /** If provided, only return user groups associated with this course */
    course_id?: (Scalars['ID'] | null)} }
    /** User of who sent this member an invite */
    user_who_invited_member?: UserGenqlSelection
    /** Verification fields left for the provider to fill out */
    verification_fields?: boolean | number
    /** The last weight of the user */
    weight?: boolean | number
    /** Displays weight percentile for growth charts */
    weight_percentile?: boolean | number
    /** Displays standard by which weight percentile is calculated */
    weight_percentile_standard?: boolean | number
    /** Withings Connection for the user */
    withings_connection?: WithingsConnectionGenqlSelection
    /** The number of workout entries the user has */
    workout_entries_count?: boolean | number
    /** If user has Zus, returns Zus proxy token */
    zus_proxy_token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A user group, returns basic info about the user group */
export interface UserGroupGenqlSelection{
    /** The date the user group was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** An ID used for document, course, and conversation sharing */
    doc_share_id?: boolean | number
    /** The unique identifier of the user group */
    id?: boolean | number
    /** The invite code */
    invite_code?: boolean | number
    /** The name of the user group */
    name?: boolean | number
    /** Onboarding Flow of this user group */
    onboarding_flow?: OnboardingFlowGenqlSelection
    /** The id of the associated onboarding flow */
    onboarding_flow_id?: boolean | number
    /** Recurring Form Names for this user group */
    recurring_forms?: RecurringFormGenqlSelection
    /** Recurring Forms Count for this user group */
    recurring_forms_count?: boolean | number
    /** Owner of this user group */
    user?: UserGenqlSelection
    /** ids of user in group */
    user_ids?: boolean | number
    /** All patients associated with this user group. */
    users?: (UserGenqlSelection & { __args?: {
    /** The active status of the users in the group. Can be "active" or "inactive" */
    active_status?: (Scalars['String'] | null), 
    /** The id of the conversation to filter users by */
    convo_id?: (Scalars['ID'] | null), 
    /** Sort the returned users by last name */
    should_sort?: (Scalars['Boolean'] | null)} })
    /** The number of users in the group */
    users_count?: boolean | number
    /** Users in user group with course membership */
    users_with_membership?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Counts of different types of notifications for a user */
export interface UserNotificationsCountGenqlSelection{
    /** The number of unread conversation notifications */
    conversation_notification_count?: boolean | number
    /** The unique identifier of the counter */
    id?: boolean | number
    /** The number of unscheduled lab orders */
    unscheduled_lab_orders_count?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A user package selection */
export interface UserPackageSelectionGenqlSelection{
    /** The related billing item */
    billing_item?: BillingItemGenqlSelection
    /** The id of the related billing item */
    billing_item_id?: boolean | number
    /** The time when the user package selection was created */
    created_at?: boolean | number
    /** Pagination cursor */
    cursor?: boolean | number
    /** The unique identifier of the user package selection */
    id?: boolean | number
    /** The amount of the first payment for a package, including promo discounts */
    initial_price_with_offering_coupon?: boolean | number
    /** The related offering */
    offering?: OfferingGenqlSelection
    /** The id of the related offering coupon */
    offering_coupon_id?: boolean | number
    /** The related recurring payment */
    recurring_payment?: RecurringPaymentGenqlSelection
    /** The related requested payment */
    requested_payment?: RequestedPaymentGenqlSelection
    /** The id of the related requested payment */
    requested_payment_id?: boolean | number
    /** The related user */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a user policy */
export interface UserPolicyInput {
/** If true, the policy will be deleted */
_destroy?: (Scalars['Boolean'] | null),
/** The group number */
group_num?: (Scalars['String'] | null),
/** The date of birth of the policy holder */
holder_dob?: (Scalars['String'] | null),
/** The first name of the policy holder */
holder_first?: (Scalars['String'] | null),
/** The gender of the policy holder */
holder_gender?: (Scalars['String'] | null),
/** The last name of the policy holder */
holder_last?: (Scalars['String'] | null),
/** The location of the policy holder */
holder_location?: (ClientLocationInput | null),
/** The middle initial of the policy holder */
holder_mi?: (Scalars['String'] | null),
/** The phone number of the policy holder */
holder_phone?: (Scalars['String'] | null),
/** The relationship of the policy holder to the client */
holder_relationship?: (Scalars['String'] | null),
/** The ID of the policy */
id?: (Scalars['ID'] | null),
/** The back of the insurance card */
insurance_card_back?: (Scalars['Upload'] | null),
/** The ID of the back of the insurance card */
insurance_card_back_id?: (Scalars['String'] | null),
/** The front of the insurance card */
insurance_card_front?: (Scalars['Upload'] | null),
/** The ID of the front of the insurance card */
insurance_card_front_id?: (Scalars['String'] | null),
/** The insurance plan */
insurance_plan?: (ClientInsurancePlanInput | null),
/** The ID of the insurance plan */
insurance_plan_id?: (Scalars['String'] | null),
/** The name of the policy */
name?: (Scalars['String'] | null),
/** The policy number */
num?: (Scalars['String'] | null),
/** The location of the payer */
payer_location?: (ClientLocationInput | null),
/** The policy-related phone number */
policy_phone_number?: (Scalars['String'] | null),
/** The priority type of the policy */
priority_type?: (Scalars['String'] | null),
/** Whether the policy holder has the same address as the client */
same_address_as_client?: (Scalars['Boolean'] | null),
/** The type of the policy */
type_string?: (Scalars['String'] | null),
/** The ID of the user */
user_id?: (Scalars['String'] | null),
/** Either ID of related intake flow item which this policy was created for. Usually it is Insurance Form. Email notification will be triggered if this field is passed */
onboarding_item_id?: (Scalars['ID'] | null)}


/** Information based on if an offering coupon is valid */
export interface ValidateOfferingCouponGenqlSelection{
    /** The reason why the promo code was not successfully applied */
    fail_reason?: boolean | number
    /** Discount amount for first payment */
    first_amount?: boolean | number
    /** The size of the discount with the promo code applied to the first payment (in case offering has a different first payment amount) */
    new_first_price?: boolean | number
    /** The new price with a promo code applied */
    new_price?: boolean | number
    /** Indicates number of discount periods */
    repeat_times?: boolean | number
    /** Indicates necessary of displaying CC form */
    still_ask_for_cc?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Video chat info for subscriptions */
export interface VideoChatGenqlSelection{
    /** The type of contact for the video chat */
    contact_type?: boolean | number
    /** The date of the video chat */
    date?: boolean | number
    /** The ID of the video chat */
    id?: boolean | number
    /** Whether the video chat is a group chat */
    is_group?: boolean | number
    /** The name of the video chat provider */
    provider_name?: boolean | number
    /** The user who created the video chat */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of VideoChatsSubscription. */
export interface VideoChatsSubscriptionPayloadGenqlSelection{
    /** Updates of the current chat */
    current_video_chat?: VideoChatGenqlSelection
    /** Information about an ended chat */
    ended_video_chat?: VideoChatGenqlSelection
    /** Information about an upcoming chat */
    upcoming_video_chat?: VideoChatGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A default video URL */
export interface VideoUrlDefaultGenqlSelection{
    /** The default URL to use for anyone with the connected appointment setting */
    default_url?: boolean | number
    /** The unique identifier of the url */
    id?: boolean | number
    /** The ID of the connected user */
    user_id?: boolean | number
    /** The options for the connected video URL */
    video_url_options?: VideoUrlOptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a new VideoUrlDefault */
export interface VideoUrlDefaultInput {
/** The default url for the video url default */
default_url?: (Scalars['String'] | null),
/** The ID of the video url default */
id?: (Scalars['ID'] | null),
/** The ID of the user who owns the video url default */
user_id?: (Scalars['ID'] | null),
/** The video url options */
video_url_options?: ((VideoUrlOptionInput | null)[] | null)}


/** A video URL option */
export interface VideoUrlOptionGenqlSelection{
    /** The unique identifier of the option */
    id?: boolean | number
    /** The default URL to use for the connected provider */
    url?: boolean | number
    /** The ID of the connected provider */
    url_by_item_id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a video url */
export interface VideoUrlOptionInput {
/** The ID of the video url */
id?: (Scalars['ID'] | null),
/** The url of the video */
url?: (Scalars['String'] | null),
/** The url of the video by item id */
url_by_item_id?: (Scalars['String'] | null)}


/** Info about a visitor to the site */
export interface VisitorGenqlSelection{
    /** Message from visitor */
    about_me?: boolean | number
    /** Email of the visitor */
    email?: boolean | number
    /** First name of visitor */
    first_name?: boolean | number
    /** The unique identifier of the visitor */
    id?: boolean | number
    /** Last name of visitor */
    last_name?: boolean | number
    /** Phone number of visitor */
    phone_number?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A configured webhook */
export interface WebhookGenqlSelection{
    /** Pagination cursor */
    cursor?: boolean | number
    /** The type of webhook */
    event_type?: boolean | number
    /** The unique identifier of the webhook */
    id?: boolean | number
    /** Whether the webhook is enabled or not */
    is_enabled?: boolean | number
    /** The secret key used to sign the webhook */
    signature_secret?: boolean | number
    /** The URL that the webhook will be sent to */
    url?: boolean | number
    /** The date and time that the customer was wamed about the webhook failing */
    warned_at?: boolean | number
    /** The events that the webhook is subscribed to */
    webhook_events?: WebhookEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** The events that the webhook is subscribed to */
export interface WebhookEventGenqlSelection{
    /** The date and time that the webhook was created */
    created_at?: boolean | number
    /** The type of webhook */
    event_type?: boolean | number
    /** The date and time that the webhook first failed */
    first_failed_at?: boolean | number
    /** The unique identifier of the webhook */
    id?: boolean | number
    /** The date and time that the webhook last failed */
    last_failed_at?: boolean | number
    /** The number of times the webhook has been retried */
    retry_count?: boolean | number
    /** The date and time that the webhook was last updated */
    updated_at?: boolean | number
    /** The webhook that the event is associated with */
    webhook?: WebhookGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Payload for a webhook event */
export interface WebhookEventInput {
/** The ID of the webhook event */
id?: (Scalars['ID'] | null),
/** The type of webhook event */
event_type: Scalars['String']}


/** Info for Whitelabeling */
export interface WhitelabelSettingGenqlSelection{
    /** Amplitude API Key */
    amplitude_api_key?: { __args: {
    /** The branded URL of the backend (used in certain whitelabel setups) */
    branded_url?: (Scalars['String'] | null)} } | boolean | number
    /** URL of whitelabeled Android app */
    android_app_link?: boolean | number
    /** The branded URL of the backend (used in certain whitelabel setups) */
    branded_backend_url?: boolean | number
    /** Branded email of whitelabel */
    branded_email?: boolean | number
    /** Branded favicon url of whitelabel */
    branded_favicon_url?: boolean | number
    /** Branded logo url of whitelabel */
    branded_logo_url?: boolean | number
    /** Branded name of whitelabel */
    branded_name?: boolean | number
    /** URL of whitelabel site */
    branded_url?: boolean | number
    /** URL of whitelabeled Food icon */
    food_icon_url?: boolean | number
    /** The unique identifier of the setting */
    id?: boolean | number
    /** The number of minutes of allowable inactivity */
    inactivity_minutes_timeout?: boolean | number
    /** URL of whitelabeled iOS app */
    ios_app_link?: boolean | number
    /** URL of whitelabeled Metric icon */
    metric_icon_url?: boolean | number
    /** Mixpanel Project Token */
    mixpanel_project_token?: { __args: {
    /** The branded URL of the backend (used in certain whitelabel setups) */
    branded_url?: (Scalars['String'] | null)} } | boolean | number
    /** The namespace that the whitelabel setting is in. */
    namespace?: boolean | number
    /** The whitelabel's patient SSO connection */
    patient_sso_connection?: SsoConnectionGenqlSelection
    /** The whitelabel's patient SSO connections */
    patient_sso_connections?: SsoConnectionGenqlSelection
    /** JSON hash of whitelabel replacement words */
    replacement_words_json?: boolean | number
    /** URL of whitelabeled Selfie icon */
    selfie_icon_url?: boolean | number
    /** The whitelabel's staff SSO connection */
    staff_sso_connection?: SsoConnectionGenqlSelection
    /** The whitelabel's staff SSO connections */
    staff_sso_connections?: SsoConnectionGenqlSelection
    /** URL of whitelabeled Workout icon */
    workout_icon_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Withings Connection */
export interface WithingsConnectionGenqlSelection{
    /** The unique identifier of the connections */
    id?: boolean | number
    /** The last time Withings was synced */
    last_sync_date?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Zoom meeting retrieved from Zoom API */
export interface ZoomAppointmentGenqlSelection{
    /** The total number of minutes attended by the meeting's host and participants */
    duration?: boolean | number
    /** End time of meeting */
    end_time?: boolean | number
    /** The unique identifier of the zoom appointment */
    id?: boolean | number
    /** The number of meeting participants */
    participants_count?: boolean | number
    /** Start time of meeting */
    start_time?: boolean | number
    /** The meeting's duration, in minutes */
    total_minutes?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Zoom Feature Inputs */
export interface ZoomFeatureInputs {
/** True/false string of cohost enable zoom feature */
cohost_enable?: (Scalars['String'] | null),
/** True/false string of breakout rooms enable feature */
breakout_rooms_enable?: (Scalars['String'] | null),
/** Cloud/local/none string of cloud recording enable feature */
cloud_recording_enable?: (Scalars['String'] | null),
/** True/false string of live captions enable feature */
live_captions_enable?: (Scalars['String'] | null),
/** Location string for automatic recording enable feature */
automatic_recording_enable?: (Scalars['String'] | null)}


/** Zus Inputs */
export interface ZusInputs {
/** Zus-provided Builder ID */
builder_id: Scalars['String'],
/** Zus-provided Display Name */
display_name: Scalars['String'],
/** Healthie domain for enterprise clients (https://nothealthie.com) */
system_url: Scalars['String'],
/** Zus-provided Organization ID */
zus_organization_id: Scalars['String']}


/** Autogenerated input type of addLivingPlate */
export interface addLivingPlateInput {api_key: Scalars['String'],user_id: Scalars['ID']}


/** Autogenerated return type of addLivingPlate. */
export interface addLivingPlatePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of addZusMember */
export interface addZusMemberInput {
/** Healthie organization ID */
organization_id: Scalars['ID'],
/** Healthie user ID */
user_id: Scalars['ID']}


/** Autogenerated return type of addZusMember. */
export interface addZusMemberPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkApplyCarePlanTemplate */
export interface bulkApplyCarePlanTemplateInput {force_activation?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),user_group_ids?: ((Scalars['ID'] | null)[] | null),user_ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of bulkApplyCarePlanTemplate. */
export interface bulkApplyCarePlanTemplatePayloadGenqlSelection{
    carePlans?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkApply */
export interface bulkApplyInput {ids?: ((Scalars['ID'] | null)[] | null),
/** The ID of the user to apply a tag on */
taggable_user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of bulkApply. */
export interface bulkApplyPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tags?: TagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkCreateAvailability */
export interface bulkCreateAvailabilityInput {appointment_location_id?: (Scalars['String'] | null),appointment_type_id?: (Scalars['String'] | null),availabilities?: ((AvailabilityInput | null)[] | null),contact_type_id?: (Scalars['String'] | null),end_on?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of bulkCreateAvailability. */
export interface bulkCreateAvailabilityPayloadGenqlSelection{
    availabilities?: AvailabilityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkCreateEntries */
export interface bulkCreateEntriesInput {entries?: ((BulkEntryInput | null)[] | null)}


/** Autogenerated return type of bulkCreateEntries. */
export interface bulkCreateEntriesPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    entries?: EntryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkDeleteTasks */
export interface bulkDeleteTasksInput {ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of bulkDeleteTasks. */
export interface bulkDeleteTasksPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tasks?: TaskGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkUpdateCardIssues */
export interface bulkUpdateCardIssuesInput {mark_all_as_seen?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of bulkUpdateCardIssues. */
export interface bulkUpdateCardIssuesPayloadGenqlSelection{
    card_issues?: StripeCustomerDetailGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkUpdateCarePlanUsers */
export interface bulkUpdateCarePlanUsersInput {activate?: (Scalars['Boolean'] | null),ids?: ((Scalars['ID'] | null)[] | null),notify?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of bulkUpdateCarePlanUsers. */
export interface bulkUpdateCarePlanUsersPayloadGenqlSelection{
    carePlans?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkUpdateClients */
export interface bulkUpdateClientsInput {active_status?: (Scalars['Boolean'] | null),ids?: ((Scalars['ID'] | null)[] | null),other_provider_ids?: (Scalars['String'] | null),select_all_excluded_ids?: ((Scalars['ID'] | null)[] | null),select_all_status?: (Scalars['String'] | null),user_group_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of bulkUpdateClients. */
export interface bulkUpdateClientsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    users?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkUpdateNotificationRecords */
export interface bulkUpdateNotificationRecordsInput {user_id?: (Scalars['ID'] | null),viewed_bounced_records?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of bulkUpdateNotificationRecords. */
export interface bulkUpdateNotificationRecordsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkUpdateNotifications */
export interface bulkUpdateNotificationsInput {
/** If this is left out, updateAllNotifications must be sent as true */
notification_ids?: ((Scalars['String'] | null)[] | null),seen?: (Scalars['Boolean'] | null),
/** When true, recent (last 500) notifications will be updated */
updateAllNotifications?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of bulkUpdateNotifications. */
export interface bulkUpdateNotificationsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    current_user?: UserGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notifications?: NotificationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of bulkUpdateTasks */
export interface bulkUpdateTasksInput {complete?: (Scalars['Boolean'] | null),seen?: (Scalars['Boolean'] | null),task_ids?: ((Scalars['ID'] | null)[] | null),update_all_tasks?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of bulkUpdateTasks. */
export interface bulkUpdateTasksPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tasks?: TaskGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of clearUnreconciledObjects */
export interface clearUnreconciledObjectsInput {user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of clearUnreconciledObjects. */
export interface clearUnreconciledObjectsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of completeCheckout */
export interface completeCheckoutInput {appointment_id?: (Scalars['String'] | null),
/** An array of group appointment IDs. When passed in, the user will be registered for all at the same time. */
appointment_ids?: ((Scalars['ID'] | null)[] | null),appointment_location_id?: (Scalars['String'] | null),appointment_type_id?: (Scalars['String'] | null),contact_type?: (Scalars['String'] | null),coupon_code?: (Scalars['String'] | null),date?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),form_answer_group?: (CheckoutFormAnswerGroupInput | null),gift?: (GiftInput | null),intake_flow_uuid?: (Scalars['String'] | null),is_gift?: (Scalars['Boolean'] | null),is_joining_waitlist?: (Scalars['Boolean'] | null),last_name?: (Scalars['String'] | null),
/** Optional: The user's legal first name */
legal_name?: (Scalars['String'] | null),location?: (Scalars['String'] | null),offering_id?: (Scalars['String'] | null),
/** Currently just used for Klarna. The ID of the completed payment intent that should be used to completed the checkout. */
payment_intent_id?: (Scalars['ID'] | null),phone_number?: (Scalars['String'] | null),price?: (Scalars['String'] | null),provider_id?: (Scalars['String'] | null),reason?: (Scalars['String'] | null),requested_payment_id?: (Scalars['String'] | null),stripe_idempotency_key?: (Scalars['String'] | null),timezone?: (Scalars['String'] | null),
/** Token for credit card, created by Stripe.JS */
token?: (Scalars['String'] | null)}


/** Autogenerated return type of completeCheckout. */
export interface completeCheckoutPayloadGenqlSelection{
    appointment?: AppointmentGenqlSelection
    /** An array of all group appointments that were registered for. Used in conjunction with appointment_ids argument. */
    appointments?: AppointmentGenqlSelection
    billingItem?: BillingItemGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    formAnswerGroupSaved?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    patientEmail?: boolean | number
    /** Returns true if client booking appointment is newly created and has never logged into their account or booked future appointments */
    reassignClientProvider?: boolean | number
    userPackageSelection?: UserPackageSelectionGenqlSelection
    widgetCompletedSubheaderHtml?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of completeCourseDocument */
export interface completeCourseDocumentInput {
/** The ID of related course_item */
course_item_id: Scalars['ID'],
/** The ID of user */
user_id: Scalars['ID']}


/** Autogenerated return type of completeCourseDocument. */
export interface completeCourseDocumentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** New CompletedCourseItem */
    completedCourseItem?: CompletedCourseItemGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of copyCourse */
export interface copyCourseInput {id?: (Scalars['String'] | null)}


/** Autogenerated return type of copyCourse. */
export interface copyCoursePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    course?: CourseGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of copyCustomModuleForm */
export interface copyCustomModuleFormInput {id?: (Scalars['ID'] | null),id_list?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of copyCustomModuleForm. */
export interface copyCustomModuleFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModuleForm?: CustomModuleFormGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of copyCustomModule */
export interface copyCustomModuleInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of copyCustomModule. */
export interface copyCustomModulePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModule?: CustomModuleGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of copyOffering */
export interface copyOfferingInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of copyOffering. */
export interface copyOfferingPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    offering?: OfferingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAcceptedInsurancePlan */
export interface createAcceptedInsurancePlanInput {insurance_plan_ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of createAcceptedInsurancePlan. */
export interface createAcceptedInsurancePlanPayloadGenqlSelection{
    accepted_insurance_plans?: AcceptedInsurancePlanGenqlSelection
    appointment_setting?: AppointmentSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAddendum */
export interface createAddendumInput {content?: (Scalars['String'] | null),form_answer_group_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createAddendum. */
export interface createAddendumPayloadGenqlSelection{
    addendum?: ChartingNoteAddendumTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAllergySensitivity */
export interface createAllergySensitivityInput {category?: (Scalars['String'] | null),category_type?: (Scalars['String'] | null),custom_name?: (Scalars['String'] | null),custom_reaction?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),
/** The date of onset */
onset_date?: (Scalars['String'] | null),reaction?: (Scalars['String'] | null),
/** The type of reaction. Options are [allergy, adverse_reaction] */
reaction_type?: (Scalars['String'] | null),severity?: (Scalars['String'] | null),
/** Options are [active, inactive, resolved]. Defaults to active */
status?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),
/** The drug allergen id to associate with the allergy sensitivity */
drug_allergen_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createAllergySensitivity. */
export interface createAllergySensitivityPayloadGenqlSelection{
    allergy_sensitivity?: AllergySensitivityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    duplicate_allergy?: AllergySensitivityGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAnnouncement */
export interface createAnnouncementInput {active?: (Scalars['Boolean'] | null),announcement_image?: (AnnouncementImageUpload | null),description?: (Scalars['String'] | null),name?: (Scalars['String'] | null),title?: (Scalars['String'] | null),user_group_ids?: (Scalars['String'] | null)}


/** Autogenerated return type of createAnnouncement. */
export interface createAnnouncementPayloadGenqlSelection{
    announcement?: AnnouncementGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createApiKey */
export interface createApiKeyInput {
/** A used-defined name for the API key. Optional */
name?: (Scalars['String'] | null),
/** The ID of the user to create an API key for. Required */
user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createApiKey. */
export interface createApiKeyPayloadGenqlSelection{
    api_key?: boolean | number
    api_key_object?: ApiKeyGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAppleHealth */
export interface createAppleHealthInput {is_enabled?: (Scalars['Boolean'] | null),last_sync_date?: (Scalars['String'] | null)}


/** Autogenerated return type of createAppleHealth. */
export interface createAppleHealthPayloadGenqlSelection{
    apple_health?: AppleHealthGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAppointment */
export interface createAppointmentInput {appointment_location_id?: (Scalars['String'] | null),appointment_type_id?: (Scalars['String'] | null),attendee_ids?: (Scalars['String'] | null),
/** The type of appointment (video, in person, phone call, etc.) */
contact_type?: (Scalars['String'] | null),
/** Cpt code associated with this appointment */
cpt_code_id?: (Scalars['ID'] | null),date?: (Scalars['String'] | null),
/** Timestamp in YYYY-MM-DD HH:MM:SS or ISO8601 format, supercedes date, time params. */
datetime?: (Scalars['String'] | null),end_date?: (Scalars['String'] | null),end_time?: (Scalars['String'] | null),exclude_no_credits?: (Scalars['Boolean'] | null),
/** When passed in, this video chat URL will be used instead of built-in Video Chat or Zoom */
external_videochat_url?: (Scalars['String'] | null),insurance_billing_enabled?: (Scalars['Boolean'] | null),is_blocker?: (Scalars['Boolean'] | null),is_zoom_chat?: (Scalars['Boolean'] | null),location?: (Scalars['String'] | null),max_attendees?: (Scalars['String'] | null),
/** a serialized JSON string of metadata */
metadata?: (Scalars['JSON'] | null),notes?: (Scalars['String'] | null),other_party_id?: (Scalars['String'] | null),
/** The price associated with this appointment */
price?: (Scalars['String'] | null),providers?: (Scalars['String'] | null),recurring_appointment?: (RecurringAppointmentInput | null),room_id?: (Scalars['String'] | null),start_immediately?: (Scalars['Boolean'] | null),time?: (Scalars['String'] | null),
/** Timezone to use for date and time fields. Overrides the timezone of the current user */
timezone?: (Scalars['String'] | null),
/** Units to use as a multiplier for appointment price */
units?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createAppointment. */
export interface createAppointmentPayloadGenqlSelection{
    appointment?: AppointmentGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAppointmentSetting */
export interface createAppointmentSettingInput {allow_appointment_type_pricing?: (Scalars['Boolean'] | null),allow_clients_to_cancel_appt?: (Scalars['Boolean'] | null),allow_external_videochat_urls?: (Scalars['Boolean'] | null),always_send_confirm_notification?: (Scalars['Boolean'] | null),appointment_locations?: ((AppointmentLocationInput | null)[] | null),appt_type_confirmed_email?: (Scalars['Boolean'] | null),appt_type_reminder_email?: (Scalars['Boolean'] | null),appt_type_website_booking_email?: (Scalars['Boolean'] | null),ask_clients_to_confirm?: (Scalars['Boolean'] | null),ask_to_confirm_via_text?: (Scalars['Boolean'] | null),auto_create_cms1500?: (Scalars['Boolean'] | null),auto_schedule_charges_for_late_cancellation_no_show?: (Scalars['Boolean'] | null),auto_submit_cms1500?: (Scalars['Boolean'] | null),auto_invoicing?: (Scalars['Boolean'] | null),booking_interval_restriction?: (Scalars['Int'] | null),buffer?: (Scalars['String'] | null),calendar_color_schemes?: ((CalendarColorSchemeInput | null)[] | null),charge_for_occured_appts?: (Scalars['Boolean'] | null),client_should_call_provider?: (Scalars['Boolean'] | null),clients_have_billing?: (Scalars['Boolean'] | null),confirm_by_default?: (Scalars['Boolean'] | null),contact_type_overrides?: ((ContactTypeOverrideInput | null)[] | null),default_appt_form_to_group?: (Scalars['Boolean'] | null),default_charting_template_id?: (Scalars['String'] | null),default_group_charting_template_id?: (Scalars['ID'] | null),default_to_zoom?: (Scalars['Boolean'] | null),default_video_service?: (Scalars['String'] | null),disable_requested_form_notifications?: (Scalars['Boolean'] | null),end_time?: (Scalars['String'] | null),hide_link?: (Scalars['Boolean'] | null),insurance_eligibility_integration?: (Scalars['Boolean'] | null),invoice_clients_without_payment_method?: (Scalars['Boolean'] | null),
/** The late cancellation fee in cents */
late_cancellation_fee?: (Scalars['Int'] | null),max_days_in_future?: (Scalars['String'] | null),
/** Prevents the patient from canceling too close the appointment time. In minutes */
minimum_advance_cancel_time?: (Scalars['Int'] | null),
/** Prevents the patient from rescheduling too close the appointment time. In minutes */
minimum_advance_reschedule_time?: (Scalars['Int'] | null),
/** Prevents the patient from scheduling too close to the desired appointment time. In minutes */
minimum_advance_schedule_time?: (Scalars['Int'] | null),
/** The no show fee in cents */
no_show_fee?: (Scalars['Int'] | null),prevent_client_booking?: (Scalars['Boolean'] | null),prevent_no_credit_booking?: (Scalars['Boolean'] | null),reply_to_provider?: (Scalars['Boolean'] | null),restore_credit_on_cancel?: (Scalars['Boolean'] | null),same_day_appointments?: (Scalars['Boolean'] | null),send_appointment_cancellation_email?: (Scalars['Boolean'] | null),send_appointment_update_email?: (Scalars['Boolean'] | null),send_booking_notice?: (Scalars['Boolean'] | null),send_email_before_appointment?: (Scalars['Boolean'] | null),send_intake_forms_reminder?: (Scalars['Boolean'] | null),send_push_before_appointment?: (Scalars['Boolean'] | null),send_reminder_four_days_before?: (Scalars['Boolean'] | null),send_reminder_one_day_before?: (Scalars['Boolean'] | null),send_reminder_one_hour_before?: (Scalars['Boolean'] | null),send_reminder_three_days_before?: (Scalars['Boolean'] | null),send_reminder_two_days_before?: (Scalars['Boolean'] | null),send_reminder_two_hours_before?: (Scalars['Boolean'] | null),send_text_reminder_four_days_before?: (Scalars['Boolean'] | null),send_text_reminder_one_day_before?: (Scalars['Boolean'] | null),send_text_reminder_one_hour_before?: (Scalars['Boolean'] | null),send_text_reminder_three_days_before?: (Scalars['Boolean'] | null),send_text_reminder_two_days_before?: (Scalars['Boolean'] | null),send_text_reminder_two_hours_before?: (Scalars['Boolean'] | null),
/** NOTE: Your organization MUST have its own Twilio account configured to have this feature, and have AppointmentSetting.send_email_before_appointment enabled */
send_text_reminder_five_minutes_before?: (Scalars['Boolean'] | null),set_default_videochat_url?: (Scalars['Boolean'] | null),show_care_plans?: (Scalars['Boolean'] | null),show_faxes?: (Scalars['Boolean'] | null),show_insurance_authorization?: (Scalars['Boolean'] | null),start_time?: (Scalars['String'] | null),
/** Allows times to be grouped by appointment type. NOTE: changing this value will clear all prior availability */
times_by_appointment_type?: (Scalars['Boolean'] | null),
/** Allows times to be grouped by contact type. NOTE: changing this value will clear all prior availability */
times_by_contact_type?: (Scalars['Boolean'] | null),
/** Allows times to be grouped by location. NOTE: changing this value will clear all prior availability */
times_by_location?: (Scalars['Boolean'] | null),use_appointment_type_cpt_units_and_fees?: (Scalars['Boolean'] | null),use_client_credit_system?: (Scalars['Boolean'] | null),use_client_sources?: (Scalars['Boolean'] | null),use_zoom_waiting_room?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null),video_url_default?: (VideoUrlDefaultInput | null)}


/** Autogenerated return type of createAppointmentSetting. */
export interface createAppointmentSettingPayloadGenqlSelection{
    appointmentSetting?: AppointmentSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAppointmentTypeCptCode */
export interface createAppointmentTypeCptCodeInput {appointment_type_id?: (Scalars['ID'] | null),cpt_code_id?: (Scalars['ID'] | null),units?: (Scalars['String'] | null),fee_per_unit?: (Scalars['Int'] | null),insurance_billing_enabled?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createAppointmentTypeCptCode. */
export interface createAppointmentTypeCptCodePayloadGenqlSelection{
    appointment_type_cpt_code?: AppointmentTypeCptCodeTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAppointmentType */
export interface createAppointmentTypeInput {appointment_setting?: (AppointmentTypeAppointmentSettingInput | null),appointment_type_cpt_code?: (AppointmentTypeCptCode | null),bookable_by_groups?: (Scalars['Boolean'] | null),bookable_group_ids?: (Scalars['String'] | null),bookable_without_group?: (Scalars['Boolean'] | null),
/** When false, clients will not have the ability to self-book this appointment */
clients_can_book?: (Scalars['Boolean'] | null),
/** When set, will be used as the appointment type name shown to clients in the client booking widget UI. */
client_facing_display_name?: (Scalars['String'] | null),contact_type_overrides?: ((Scalars['String'] | null)[] | null),
/** When true, the client will not be asked to add a reason when booking an appointment of this type */
dont_ask_for_reason?: (Scalars['Boolean'] | null),form_requests_before_appointment?: ((AppointmentTypeFormConnectionInput | null)[] | null),form_requests_after_appointment?: ((AppointmentTypeFormConnectionInput | null)[] | null),form_requests_after_appointment_booking?: ((AppointmentTypeFormConnectionInput | null)[] | null),
/** When true, indicates that this appointment type is used for group appointments */
is_group?: (Scalars['Boolean'] | null),is_waitlist_enabled?: (Scalars['Boolean'] | null),
/** The length of the appointment type in minutes */
length?: (Scalars['Int'] | null),
/** Metadata for an appointment type. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),
/** The name of the appointment type */
name?: (Scalars['String'] | null),pricing?: (Scalars['String'] | null),
/** Available options are CUSTOM and CPT_CODE */
pricing_option?: (Scalars['String'] | null),provider_ids_for_appt_type_connections?: (Scalars['String'] | null),require_in_state_clients?: (Scalars['Boolean'] | null),require_specific_providers?: (Scalars['Boolean'] | null),specific_groups?: (Scalars['Boolean'] | null),user_group_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createAppointmentType. */
export interface createAppointmentTypePayloadGenqlSelection{
    appointmentType?: AppointmentTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAutoTaskGenerator */
export interface createAutoTaskGeneratorInput {category?: (Scalars['String'] | null),days_due_from_created_at?: (Scalars['Int'] | null),is_enabled?: (Scalars['Boolean'] | null),number_description?: (Scalars['String'] | null),number_to_check?: (Scalars['String'] | null),task_description?: (Scalars['String'] | null),user_id_for_task?: (Scalars['String'] | null)}


/** Autogenerated return type of createAutoTaskGenerator. */
export interface createAutoTaskGeneratorPayloadGenqlSelection{
    auto_task_generator?: AutoTaskGeneratorGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAutomatedInsuranceBillingSetting */
export interface createAutomatedInsuranceBillingSettingInput {auto_create_cms1500s?: (Scalars['Boolean'] | null),auto_submit_cms1500s?: (Scalars['Boolean'] | null),use_cpt_codes_units_and_fees_with_appointment_types?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createAutomatedInsuranceBillingSetting. */
export interface createAutomatedInsuranceBillingSettingPayloadGenqlSelection{
    automated_insurance_billing_setting?: AutomatedInsuranceBillingSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createAvailability */
export interface createAvailabilityInput {appointment_location_id?: (Scalars['String'] | null),appointment_type_id?: (Scalars['String'] | null),contact_type_id?: (Scalars['String'] | null),day_of_week?: (Scalars['Int'] | null),end_on?: (Scalars['String'] | null),
/** Required time format: `HH MM``, e.g., `07 30`` or `19 00` */
end_time?: (Scalars['String'] | null),is_repeating?: (Scalars['Boolean'] | null),
/** Required date format: `month_name DD, YYYY``, e.g., `August 16, 2022` */
range_start?: (Scalars['String'] | null),
/** Required time format: `HH MM``, e.g., `07 30`` or `19 00` */
time?: (Scalars['String'] | null),timezone?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),end_datetime?: (Scalars['String'] | null),range_end?: (Scalars['String'] | null),start_datetime?: (Scalars['String'] | null)}


/** Autogenerated return type of createAvailability. */
export interface createAvailabilityPayloadGenqlSelection{
    availability?: AvailabilityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createBillingItem */
export interface createBillingItemInput {amount_paid?: (Scalars['String'] | null),created_at?: (Scalars['String'] | null),note?: (Scalars['String'] | null),offering_coupon_id?: (Scalars['ID'] | null),offering_id?: (Scalars['ID'] | null),payment_due_date?: (Scalars['String'] | null),payment_medium?: (Scalars['String'] | null),recipient_id?: (Scalars['ID'] | null),requested_payer_id?: (Scalars['ID'] | null),requested_payment_id?: (Scalars['ID'] | null),sender_id?: (Scalars['ID'] | null),should_charge?: (Scalars['Boolean'] | null),
/** When passed in, the patient will be charged on the given payment source. Patient will be charged on their default source if left blank. Comes from the relevant StripeCustomerDetail object. */
stripe_customer_detail_id?: (Scalars['ID'] | null),stripe_idempotency_key?: (Scalars['String'] | null),user_package_selection_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createBillingItem. */
export interface createBillingItemPayloadGenqlSelection{
    billingItem?: BillingItemGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    stripeError?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createBrand */
export interface createBrandInput {about_description?: (Scalars['String'] | null),bg_color?: (Scalars['String'] | null),brand_email?: (Scalars['String'] | null),brand_name?: (Scalars['String'] | null),brand_phone?: (Scalars['String'] | null),contact_description?: (Scalars['String'] | null),custom_sign_in_path?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),email_background_color?: (Scalars['String'] | null),facebook?: (Scalars['String'] | null),font_color?: (Scalars['String'] | null),instagram?: (Scalars['String'] | null),logo?: (Scalars['Upload'] | null),selected_color?: (Scalars['String'] | null),slogan?: (Scalars['String'] | null),tab_accent_color?: (Scalars['String'] | null),titles?: (Scalars['String'] | null),twitter?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}


/** Autogenerated return type of createBrand. */
export interface createBrandPayloadGenqlSelection{
    brand?: BrandGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCampaign */
export interface createCampaignInput {
/** Text displayed in button below email body */
button_text?: (Scalars['String'] | null),
/** URL in email button below email body */
button_url?: (Scalars['String'] | null),
/** Text displayed in email body */
email_body?: (Scalars['String'] | null),
/** Text displayed before client name (example: 'Hello <client_name>', 'Greetings <client_name>', ....) */
email_greeting?: (Scalars['String'] | null),email_subject?: (Scalars['String'] | null),
/** Image shown above email body */
image?: (Scalars['Upload'] | null),include_archived_clients?: (Scalars['Boolean'] | null),is_draft?: (Scalars['Boolean'] | null),is_email?: (Scalars['Boolean'] | null),is_sms?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),
/** comma-separated example: "user-12, group-23, tag-34" */
recipient_ids?: (Scalars['String'] | null),
/** SMS text content */
sms_body?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createCampaign. */
export interface createCampaignPayloadGenqlSelection{
    campaign?: CampaignGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCarePlan */
export interface createCarePlanInput {is_hidden?: (Scalars['Boolean'] | null),is_managing_templates?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),patient_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createCarePlan. */
export interface createCarePlanPayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createChatSetting */
export interface createChatSettingInput {auto_welcome_text?: (Scalars['String'] | null),content?: (Scalars['String'] | null),end_date?: (Scalars['String'] | null),is_active?: (Scalars['Boolean'] | null),is_recurring_active?: (Scalars['Boolean'] | null),no_end_date?: (Scalars['Boolean'] | null),receive_notifications?: (Scalars['Boolean'] | null),receive_notifications_recurring?: (Scalars['Boolean'] | null),recurring_content?: (Scalars['String'] | null),recurring_days_data?: (RecurringDaysInputObjectType | null),recurring_turned_on?: (Scalars['Boolean'] | null),scheduled_turned_on?: (Scalars['Boolean'] | null),send_auto_welcome?: (Scalars['Boolean'] | null),start_date?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createChatSetting. */
export interface createChatSettingPayloadGenqlSelection{
    chatSetting?: ChatSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createClient */
export interface createClientInput {additional_record_identifier?: (Scalars['String'] | null),
/** Also known as the provider ID */
dietitian_id?: (Scalars['String'] | null),
/** format: YYYY-MM-DD */
dob?: (Scalars['String'] | null),
/** if true, welcome email is not sent */
dont_send_welcome?: (Scalars['Boolean'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),
/** Ex. Male */
gender?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),legal_name?: (Scalars['String'] | null),
/** A serialized JSON string of metadata. Maximum character limit of 10,000. */
metadata?: (Scalars['String'] | null),other_provider_ids?: ((Scalars['String'] | null)[] | null),phone_number?: (Scalars['String'] | null),record_identifier?: (Scalars['String'] | null),
/** When true, the client will not be placed into a set password state (where links sent to the client will first take them to set a password) */
skip_set_password_state?: (Scalars['Boolean'] | null),skipped_email?: (Scalars['Boolean'] | null),
/** Timezone of the client. IANA DB name format. */
timezone?: (Scalars['String'] | null),user_group_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createClient. */
export interface createClientPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCms1500 */
export interface createCms1500Input {accept_assignment?: (Scalars['Boolean'] | null),amount_paid?: (Scalars['String'] | null),client_sig_on_file?: (Scalars['Boolean'] | null),cms1500_policies?: ((Cms1500PolicyInput | null)[] | null),cpt_codes_cms1500s?: ((CptCodesCms1500Input | null)[] | null),dietitian?: (DietitianInput | null),dietitian_id?: (Scalars['String'] | null),form_answer_group_id?: (Scalars['ID'] | null),icd_codes_cms1500s?: ((IcdCodesCms1500Input | null)[] | null),include_referrer_information?: (Scalars['Boolean'] | null),insured_sig_on_file?: (Scalars['Boolean'] | null),nineteen_reserved?: (Scalars['String'] | null),organization_info?: (OrganizationInfoInput | null),organization_info_id?: (Scalars['String'] | null),orig_ref_number?: (Scalars['String'] | null),patient?: (PatientInput | null),patient_account_num?: (Scalars['String'] | null),referral_info?: (ReferralInfoInput | null),rendering_provider_other_id?: (Scalars['String'] | null),rendering_provider_other_id_number?: (OtherIdNumberInput | null),resubmission_code?: (Scalars['String'] | null),service_location_id?: (Scalars['String'] | null),tend_reserved?: (Scalars['String'] | null),use_indiv_npi?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createCms1500. */
export interface createCms1500PayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cms1500?: Cms1500GenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCognitiveStatus */
export interface createCognitiveStatusInput {cognitive_status?: (Scalars['String'] | null),start_date?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createCognitiveStatus. */
export interface createCognitiveStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cognitive_status?: CognitiveStatusGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createComment */
export interface createCommentInput {content?: (Scalars['String'] | null),entry_id?: (Scalars['ID'] | null),is_reaction?: (Scalars['Boolean'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createComment. */
export interface createCommentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    comment?: CommentGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCompletedCourseItem */
export interface createCompletedCourseItemInput {completed_item_id?: (Scalars['String'] | null),completed_item_type?: (Scalars['String'] | null),course_item_id?: (Scalars['String'] | null),id?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createCompletedCourseItem. */
export interface createCompletedCourseItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    completedCourseItem?: CompletedCourseItemGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    redirect_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCompletedOnboardingItem */
export interface createCompletedOnboardingItemInput {onboarding_item_id?: (Scalars['ID'] | null),skipped?: (Scalars['Boolean'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createCompletedOnboardingItem. */
export interface createCompletedOnboardingItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    completed_onboarding_item?: CompletedOnboardingItemGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createContact */
export interface createContactInput {about_me?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),first_url?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null)}


/** Autogenerated return type of createContact. */
export interface createContactPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    visitor?: VisitorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createConversation */
export interface createConversationInput {appointment_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),
/** The ID of the owner of the conversation. Defaults to current_user when not sent in */
owner_id?: (Scalars['ID'] | null),added_users?: ((AddedUsersInput | null)[] | null),note?: (NoteInput | null),
/** The value of the select all toggle. This overrides simple_added_users and allows you to easily add all of a category to the conversation. Requires simple_added_users to be sent in as well */
select_all_status?: (Scalars['String'] | null),simple_added_users?: (Scalars['String'] | null)}


/** Autogenerated return type of createConversation. */
export interface createConversationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    conversation?: ConversationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCourseBenefit */
export interface createCourseBenefitInput {benefit?: (Scalars['String'] | null),course_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createCourseBenefit. */
export interface createCourseBenefitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseBenefit?: CourseBenefitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCourse */
export interface createCourseInput {course_type?: (Scalars['String'] | null),description?: (Scalars['String'] | null),external_preview_image_url?: (Scalars['String'] | null),formatted_benefits?: (Scalars['String'] | null),late_enroll?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),preview_image?: (Scalars['Upload'] | null),preview_video_content?: (Scalars['String'] | null),start_date?: (Scalars['String'] | null)}


/** Autogenerated input type of createCourseItem */
export interface createCourseItemInput {completion_required_for_next_module?: (Scalars['Boolean'] | null),course_id?: (Scalars['String'] | null),item_id?: (Scalars['String'] | null),item_type?: (Scalars['String'] | null),name?: (Scalars['String'] | null),new_item_type_name?: (Scalars['String'] | null),scheduled_release?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),video_url?: (Scalars['String'] | null)}


/** Autogenerated return type of createCourseItem. */
export interface createCourseItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseItem?: CourseItemGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    redirect_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of createCourse. */
export interface createCoursePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    course?: CourseGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCustomEmail */
export interface createCustomEmailInput {email_type?: (Scalars['String'] | null),greeting?: (Scalars['String'] | null),message_body?: (Scalars['String'] | null),reactivation_wait_days?: (Scalars['String'] | null),subject?: (Scalars['String'] | null)}


/** Autogenerated return type of createCustomEmail. */
export interface createCustomEmailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customEmail?: CustomEmailGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCustomFood */
export interface createCustomFoodInput {name?: (Scalars['String'] | null),nutrients?: (NutrientsInput | null),serving_size?: (ServingSizeInput | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createCustomFood. */
export interface createCustomFoodPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customFood?: FoodGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCustomModuleForm */
export interface createCustomModuleFormInput {external_id?: (Scalars['String'] | null),external_id_type?: (Scalars['String'] | null),is_video?: (Scalars['Boolean'] | null),
/** Maximum character limit of 10,000. */
metadata?: (Scalars['String'] | null),name?: (Scalars['String'] | null),on_completion_ifs_tag_id?: (Scalars['String'] | null),prefill?: (Scalars['Boolean'] | null),use_for_charting?: (Scalars['Boolean'] | null),use_for_program?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createCustomModuleForm. */
export interface createCustomModuleFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModuleForm?: CustomModuleFormGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createCustomModule */
export interface createCustomModuleInput {custom_module_form_id?: (Scalars['String'] | null),external_id?: (Scalars['String'] | null),external_id_type?: (Scalars['String'] | null),index?: (Scalars['Int'] | null),is_custom?: (Scalars['Boolean'] | null),label?: (Scalars['String'] | null),
/** A serialized JSON string of metadata. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),mod_type?: (Scalars['String'] | null),options?: (Scalars['String'] | null),parent_custom_module_id?: (Scalars['String'] | null),required?: (Scalars['Boolean'] | null),sublabel?: (Scalars['String'] | null)}


/** Autogenerated return type of createCustomModule. */
export interface createCustomModulePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModule?: CustomModuleGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createDocument */
export interface createDocumentInput {care_plan_id?: (Scalars['ID'] | null),clients_ids?: (Scalars['String'] | null),course_id?: (Scalars['String'] | null),
/** Requires additional permissions to edit */
created_at?: (Scalars['String'] | null),description?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),file?: (Scalars['Upload'] | null),file_string?: (Scalars['String'] | null),folder_id?: (Scalars['String'] | null),from_date?: (Scalars['String'] | null),from_program_create?: (Scalars['Boolean'] | null),
/** When true, a CCDA document is created for the specified rel_user */
generate_ccda_for_rel_user_id?: (Scalars['Boolean'] | null),
/** When true, a human-readable CCDA document is created for the specified rel_user */
generate_human_readable_ccda_for_rel_user_id?: (Scalars['Boolean'] | null),include_in_charting?: (Scalars['Boolean'] | null),is_photo_id?: (Scalars['Boolean'] | null),
/** Metadata for an document type. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),
/** Optional. This is passed in when a document is uploaded via a Form Upload question module. Should be the User ID. Otherwise, nil. */
on_form_for_user_id?: (Scalars['ID'] | null),org_level?: (Scalars['Boolean'] | null),payout_id?: (Scalars['ID'] | null),provider_ids?: ((Scalars['String'] | null)[] | null),rcf_id?: (Scalars['ID'] | null),rel_user_id?: (Scalars['String'] | null),
/** If using the report_type parameter, value must be one of the following options: "Short Client List", "Long Client List", "Client Activity List", "Client Metrics", "Appointments", "Courses", "Program Forms", "Clients Credits", "Payments", "Transfers", "Transactions", "CMS1500s", "Superbills", "Referring Physicians", "Insurance Authorization", "Client Blood Sugar", "Requested Payments" */
report_type?: (Scalars['String'] | null),
/** A comma-separated list of doc_share_ids */
share_users?: (Scalars['String'] | null),share_with_rel?: (Scalars['Boolean'] | null),to_date?: (Scalars['String'] | null),
/** Requires additional permissions to edit */
updated_at?: (Scalars['String'] | null)}


/** Autogenerated return type of createDocument. */
export interface createDocumentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    currentUser?: UserGenqlSelection
    document?: DocumentGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createDosespotClinician */
export interface createDosespotClinicianInput {
/** Required */
business_address?: (Scalars['String'] | null),
/** Required */
city?: (Scalars['String'] | null),
/** Required */
date_of_birth?: (Scalars['String'] | null),
/** Required when role is prescribing provider and prescribe_controlled_substances checked */
dea_number?: (Scalars['String'] | null),
/** Required for prescribing provider */
eligible_prescribe_medications?: (Scalars['Boolean'] | null),
/** Required */
fax_number?: (Scalars['String'] | null),
/** Required */
full_name?: (Scalars['String'] | null),
/** Required for prescribing provider */
npi_number?: (Scalars['String'] | null),prescribe_controlled_substances?: (Scalars['Boolean'] | null),
/** Required. Dosespot user role (Prescribing Provider: 1, Proxy: 6) */
role?: (Scalars['Int'] | null),
/** Required */
state?: (Scalars['String'] | null),
/** Required */
work_phone_number?: (Scalars['String'] | null),
/** Required */
zip?: (Scalars['String'] | null)}


/** Autogenerated return type of createDosespotClinician. */
export interface createDosespotClinicianPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    dosespot_user?: DoseSpotGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createDosespot */
export interface createDosespotInput {
/** The ID of the clinic */
clinic_id: Scalars['String'],
/** The key of the clinic */
clinic_key: Scalars['String'],
/** The ID of the Dosespot user */
dosespot_user_id: Scalars['String'],
/** The ID of the user */
user_id: Scalars['ID'],
/** This user is a clinic admin in dosespot */
is_clinic_admin?: Scalars['Boolean']}


/** Autogenerated return type of createDosespot. */
export interface createDosespotPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createDraft */
export interface createDraftInput {content?: (Scalars['String'] | null),conversation_membership_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createDraft. */
export interface createDraftPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    draft?: DraftGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createEbook */
export interface createEbookInput {email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),first_url?: (Scalars['String'] | null)}


/** Autogenerated return type of createEbook. */
export interface createEbookPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    visitor?: VisitorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createEntry */
export interface createEntryInput {category?: (Scalars['String'] | null),created_at?: (Scalars['String'] | null),description?: (Scalars['String'] | null),ed_posthunger?: (Scalars['String'] | null),ed_prehunger?: (Scalars['String'] | null),emotions?: (Scalars['String'] | null),food_items?: (Scalars['String'] | null),image?: (Scalars['Upload'] | null),image_string?: (Scalars['String'] | null),meal_ids?: (Scalars['String'] | null),meal_name?: (Scalars['String'] | null),metric_stat?: (Scalars['String'] | null),other_symptom?: (Scalars['String'] | null),percieved_hungriness?: (Scalars['String'] | null),reflection?: (Scalars['String'] | null),symptoms?: (Scalars['String'] | null),
/** Options are apple_health, google_fit, or fitbit */
third_party_source?: (Scalars['String'] | null),
/** One of MetricEntry, FoodEntry, WorkoutEntry, MirrorEntry, SleepEntry, NoteEntry, WaterIntakeEntry, PoopEntry, SymptomEntry */
type?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),subentries?: ((SubentryInput | null)[] | null)}


/** Autogenerated return type of createEntry. */
export interface createEntryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    entry?: EntryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createExternalCalendar */
export interface createExternalCalendarInput {access_token?: (Scalars['String'] | null),
/** Optional. The resource name (sync partner assigned ID) for the sync */
resource_name?: (Scalars['String'] | null),
/** When true, appointments will automatically be pushed to the external calendar */
add_to_calendar?: (Scalars['Boolean'] | null),
/** The email of the Google or Outlook account that is being synced */
email?: (Scalars['String'] | null),
/** The date and time the token will expire. In ISO8601 format. */
expiry_date?: (Scalars['String'] | null),
/** The type of External Calendar. Can either be Google or Outlook */
external_type?: (Scalars['String'] | null),
/** When true, appointments will automatically be pulled from the external calendar */
pull_from_calendar?: (Scalars['Boolean'] | null),
/** (Only for Google). The calendars to pull in from. Defaults to the primary calendar */
pulled_in_calendars?: ((Scalars['String'] | null)[] | null),
/** The refresh token that can be used to generate new access tokens for the sync. This requires whitelabeled calendar sync to be enabled for your account */
refresh_token?: (Scalars['String'] | null),token_type?: (Scalars['String'] | null)}


/** Autogenerated return type of createExternalCalendar. */
export interface createExternalCalendarPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    external_calendar?: ExternalCalendarGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFamilyHistory */
export interface createFamilyHistoryInput {relationships?: ((Scalars['String'] | null)[] | null),concept_id?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createFamilyHistory. */
export interface createFamilyHistoryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    duplicate_family_history_condition?: FamilyHistoryConditionGenqlSelection
    family_history_condition?: FamilyHistoryConditionGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFaxAcctInfo */
export interface createFaxAcctInfoInput {aes_key?: (Scalars['String'] | null),api_key?: (Scalars['String'] | null),fax_number?: (Scalars['String'] | null),notify_provider?: (Scalars['Boolean'] | null),user_id?: (Scalars['ID'] | null),username?: (Scalars['String'] | null)}


/** Autogenerated return type of createFaxAcctInfo. */
export interface createFaxAcctInfoPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFaxLineRequest */
export interface createFaxLineRequestInput {area_code?: (Scalars['String'] | null),bill?: (Scalars['Upload'] | null),city?: (Scalars['String'] | null),loa?: (Scalars['Upload'] | null),request_type?: (Scalars['String'] | null),state?: (Scalars['String'] | null)}


/** Autogenerated return type of createFaxLineRequest. */
export interface createFaxLineRequestPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    faxLineRequest?: FaxLineRequestGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFeatureToggle */
export interface createFeatureToggleInput {allow_apple_health_sync?: (Scalars['Boolean'] | null),allow_clearstep_sync?: (Scalars['Boolean'] | null),allow_community_chat?: (Scalars['Boolean'] | null),allow_direct_chat?: (Scalars['Boolean'] | null),allow_fitbit_sync?: (Scalars['Boolean'] | null),allow_google_fit_sync?: (Scalars['Boolean'] | null),allow_shapa_sync?: (Scalars['Boolean'] | null),allow_withings_sync?: (Scalars['Boolean'] | null),apply_eating_disorder_default?: (Scalars['Boolean'] | null),can_schedule_appointments?: (Scalars['Boolean'] | null),can_track_poop?: (Scalars['Boolean'] | null),can_track_symptoms?: (Scalars['Boolean'] | null),can_track_water_intake?: (Scalars['Boolean'] | null),can_view_care_plan?: (Scalars['Boolean'] | null),can_view_documents?: (Scalars['Boolean'] | null),can_view_forms?: (Scalars['Boolean'] | null),can_view_goals?: (Scalars['Boolean'] | null),can_view_journal_entries?: (Scalars['Boolean'] | null),can_view_packages?: (Scalars['Boolean'] | null),can_view_payments?: (Scalars['Boolean'] | null),can_view_programs?: (Scalars['Boolean'] | null),care_plan_id?: (Scalars['ID'] | null),custom_metric_overrides?: ((CustomMetricOverridesInput | null)[] | null),custom_metrics?: ((CustomMetricInput | null)[] | null),default_water_intake?: (Scalars['String'] | null),do_not_auto_submit_cms1500?: (Scalars['Boolean'] | null),email_notification_frequency?: (Scalars['String'] | null),push_notification_frequency?: (Scalars['String'] | null),send_unpaid_invoice_reminder?: (Scalars['Boolean'] | null),seperate_provider_metric_from_client?: (Scalars['Boolean'] | null),show_a1c_metric?: (Scalars['Boolean'] | null),show_bf_percent_metric?: (Scalars['Boolean'] | null),show_blood_pressure_metric?: (Scalars['Boolean'] | null),show_blood_sugar_metric?: (Scalars['Boolean'] | null),show_bmi_graph?: (Scalars['Boolean'] | null),show_bmi_growth_chart?: (Scalars['Boolean'] | null),show_bmr_metric?: (Scalars['Boolean'] | null),show_body_temperature_metric?: (Scalars['Boolean'] | null),show_client_a1c_metric?: (Scalars['Boolean'] | null),show_client_bf_percent_metric?: (Scalars['Boolean'] | null),show_client_blood_pressure_metric?: (Scalars['Boolean'] | null),show_client_blood_sugar_metric?: (Scalars['Boolean'] | null),show_client_bmi_graph?: (Scalars['Boolean'] | null),show_client_bmi_growth_chart?: (Scalars['Boolean'] | null),show_client_bmr_metric?: (Scalars['Boolean'] | null),show_client_body_temperature_metric?: (Scalars['Boolean'] | null),show_client_harris_benedict?: (Scalars['Boolean'] | null),show_client_height_growth_chart?: (Scalars['Boolean'] | null),show_client_ox_sat_metric?: (Scalars['Boolean'] | null),show_client_waist_circumference_metric?: (Scalars['Boolean'] | null),show_client_weight_growth_chart?: (Scalars['Boolean'] | null),show_client_weight_metric?: (Scalars['Boolean'] | null),show_ed_posthunger?: (Scalars['Boolean'] | null),show_ed_prehunger?: (Scalars['Boolean'] | null),show_food?: (Scalars['Boolean'] | null),show_food_category?: (Scalars['Boolean'] | null),show_food_emotion?: (Scalars['Boolean'] | null),show_food_reflection?: (Scalars['Boolean'] | null),show_harris_benedict?: (Scalars['Boolean'] | null),show_healthiness?: (Scalars['Boolean'] | null),show_height_graph?: (Scalars['Boolean'] | null),show_height_growth_chart?: (Scalars['Boolean'] | null),show_metric?: (Scalars['Boolean'] | null),show_mirror?: (Scalars['Boolean'] | null),show_normal_hunger?: (Scalars['Boolean'] | null),show_note?: (Scalars['Boolean'] | null),show_note_emotion?: (Scalars['Boolean'] | null),show_nutrients_tracking?: (Scalars['Boolean'] | null),show_ox_sat_metric?: (Scalars['Boolean'] | null),show_waist_circumference_metric?: (Scalars['Boolean'] | null),show_weight_growth_chart?: (Scalars['Boolean'] | null),show_weight_metric?: (Scalars['Boolean'] | null),show_workout?: (Scalars['Boolean'] | null),use_metric_system?: (Scalars['Boolean'] | null),user_group_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null),view_not_track?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createFeatureToggle. */
export interface createFeatureTogglePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    feature_toggle?: FeatureToggleGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFitbit */
export interface createFitbitInput {access_token?: (Scalars['String'] | null),expires_at?: (Scalars['String'] | null),last_sync_date?: (Scalars['String'] | null),refresh_token?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createFitbit. */
export interface createFitbitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    fitbit?: FitbitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFolder */
export interface createFolderInput {folder_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),rel_user_id?: (Scalars['String'] | null),share_users?: (Scalars['String'] | null),share_with_rel?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createFolder. */
export interface createFolderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    folder?: FolderGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFormAnswerGroup */
export interface createFormAnswerGroupInput {appointment_id?: (Scalars['ID'] | null),course_id?: (Scalars['String'] | null),course_item_id?: (Scalars['ID'] | null),created_at?: (Scalars['String'] | null),custom_module_form_id?: (Scalars['String'] | null),date?: (Scalars['String'] | null),dismissed_lock_charting_note_warning?: (Scalars['Boolean'] | null),external_id?: (Scalars['String'] | null),finished?: (Scalars['Boolean'] | null),form_answers?: ((FormAnswerInput | null)[] | null),formatted_date?: (Scalars['String'] | null),marked_complete?: (Scalars['Boolean'] | null),marked_locked?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),
/** Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),requested_form_completion_id?: (Scalars['ID'] | null),set_initial_answers?: (Scalars['Boolean'] | null),time?: (Scalars['String'] | null),
/** Requires additional permissions to edit */
updated_at?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),
/** Creation of a form_answer_group in the context of an onboarding_item_id */
onboarding_item_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createFormAnswerGroup. */
export interface createFormAnswerGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFormAnswerGroupSigning */
export interface createFormAnswerGroupSigningInput {form_answer_group_id?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createFormAnswerGroupSigning. */
export interface createFormAnswerGroupSigningPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    formAnswerGroupSigning?: FormAnswerGroupSigningGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFullscriptPractitioner */
export interface createFullscriptPractitionerInput {email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),practitioner_type_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createFullscriptPractitioner. */
export interface createFullscriptPractitionerPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    fullscript_practitioner?: FullscriptPractitionerTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createFunctionalStatus */
export interface createFunctionalStatusInput {functional_condition?: (Scalars['String'] | null),start_date?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createFunctionalStatus. */
export interface createFunctionalStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    functional_status?: FunctionalStatusGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createGoalHistory */
export interface createGoalHistoryInput {
/** The day the goal should be marked complete for. Should be of the form: 'yyyy-mm-dd' */
completed_on?: (Scalars['String'] | null),goal_id?: (Scalars['String'] | null),
/** If true, will mark parent goal completed (must be a subgoal) */
mark_parent_complete?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createGoalHistory. */
export interface createGoalHistoryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    goalHistory?: GoalHistoryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createGoal */
export interface createGoalInput {
/** The id of associated care plan */
care_plan_id?: (Scalars['ID'] | null),description?: (Scalars['String'] | null),
/** The date the goal should end - format should be: yyyy-mm-dd */
due_date?: (Scalars['String'] | null),name?: (Scalars['String'] | null),parent_id?: (Scalars['String'] | null),
/** If true, create goal for program */
program_goal?: (Scalars['Boolean'] | null),reminder?: (ReminderInput | null),
/** The frequency of this goal. Possible values are: 'Daily','Weekly', 'Once' */
repeat?: (Scalars['String'] | null),
/** The id of goal template used to create this goal */
source_template_id?: (Scalars['String'] | null),
/** The date the goal should start - format should be: yyyy-mm-dd */
start_on?: (Scalars['String'] | null),subgoals?: ((SubgoalInput | null)[] | null),
/** Title hyperlink. Opens when the name is clicked on. */
title_link?: (Scalars['String'] | null),
/** If true, use this goal as a template(favorite) */
use_as_template?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createGoal. */
export interface createGoalPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    goal?: GoalGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createGoogleFit */
export interface createGoogleFitInput {access_token?: (Scalars['String'] | null),expiry_date?: (Scalars['String'] | null),is_enabled?: (Scalars['Boolean'] | null),last_sync_date?: (Scalars['String'] | null),refresh_token?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createGoogleFit. */
export interface createGoogleFitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    google_fit?: GoogleFitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createGroup */
export interface createGroupInput {name?: (Scalars['String'] | null)}


/** Autogenerated return type of createGroup. */
export interface createGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user_group?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createHealthConcern */
export interface createHealthConcernInput {code?: (Scalars['String'] | null),description?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),effective_time?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createHealthConcern. */
export interface createHealthConcernPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    health_concern?: HealthConcernGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createImmunization */
export interface createImmunizationInput {additional_notes?: (Scalars['String'] | null),cvx_code?: (Scalars['Int'] | null),received_at?: (Scalars['String'] | null),status?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),vaccine_name?: (Scalars['String'] | null)}


/** Autogenerated return type of createImmunization. */
export interface createImmunizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    immunization?: ImmunizationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createImplantableDeviceUser */
export interface createImplantableDeviceUserInput {user_id?: (Scalars['ID'] | null),udi?: (Scalars['String'] | null),active?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null)}


/** Autogenerated return type of createImplantableDeviceUser. */
export interface createImplantableDeviceUserPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    implantable_device_user?: ImplantableDeviceUserGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createImportDataRequest */
export interface createImportDataRequestInput {clients_template?: (Scalars['Upload'] | null),display_name?: (Scalars['String'] | null),extension?: (Scalars['String'] | null),optional_comment?: (Scalars['String'] | null),request_type?: (Scalars['String'] | null)}


/** Autogenerated return type of createImportDataRequest. */
export interface createImportDataRequestPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    importDataRequest?: ImportDataRequestGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createInsuranceAuthorization */
export interface createInsuranceAuthorizationInput {authorization_number?: (Scalars['String'] | null),end_on?: (Scalars['String'] | null),policy_id?: (Scalars['String'] | null),start_on?: (Scalars['String'] | null),unit_type?: (Scalars['String'] | null),units_authorized?: (Scalars['String'] | null),units_used?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),visits_authorized?: (Scalars['String'] | null),visits_used?: (Scalars['String'] | null)}


/** Autogenerated return type of createInsuranceAuthorization. */
export interface createInsuranceAuthorizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    insuranceAuthorization?: InsuranceAuthorizationTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createInsurancePlan */
export interface createInsurancePlanInput {add_as_accepted_insurance_plan?: (Scalars['Boolean'] | null),payer_id?: (Scalars['String'] | null),payer_name?: (Scalars['String'] | null)}


/** Autogenerated return type of createInsurancePlan. */
export interface createInsurancePlanPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    insurance_plan?: InsurancePlanGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createLabOrder */
export interface createLabOrderInput {
/** Required. The ID of the PDF or HL7 document containing the lab results. Needs to be pre-created and have a rel_user_id matching the patient ID */
document_id?: (Scalars['ID'] | null),
/** Required. The lab panel that was ordered */
lab?: (Scalars['String'] | null),
/** Required. The lab company who processed the order */
lab_company?: (Scalars['String'] | null),
/** Required. The ID of the user in Healthie who ordered the lab */
orderer_id?: (Scalars['ID'] | null),
/** Required. The ID of the patient */
patient_id?: (Scalars['ID'] | null),
/** A list of the discrete data points that will be collected in the lab panel */
lab_observation_requests?: ((LabObservationRequestInput | null)[] | null)}


/** Autogenerated return type of createLabOrder. */
export interface createLabOrderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    currentUserNotificationsCount?: UserNotificationsCountGenqlSelection
    lab_order?: LabOrderGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createLocation */
export interface createLocationInput {city?: (Scalars['String'] | null),country?: (Scalars['String'] | null),line1?: (Scalars['String'] | null),line2?: (Scalars['String'] | null),name?: (Scalars['String'] | null),npi?: (Scalars['String'] | null),other_id?: (Scalars['String'] | null),other_id_qual?: (Scalars['String'] | null),place_of_service_id?: (Scalars['String'] | null),state?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),zip?: (Scalars['String'] | null)}


/** Autogenerated return type of createLocation. */
export interface createLocationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    location?: LocationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createMeal */
export interface createMealInput {food_items?: (Scalars['String'] | null),name?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createMeal. */
export interface createMealPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    meal?: MealGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createMedication */
export interface createMedicationInput {active?: (Scalars['Boolean'] | null),code?: (Scalars['String'] | null),comment?: (Scalars['String'] | null),
/** Requires additional permissions to edit */
created_at?: (Scalars['String'] | null),custom_name?: (Scalars['String'] | null),directions?: (Scalars['String'] | null),dosage?: (Scalars['String'] | null),
/** The dosage option id to associate with the medication */
dosage_option_id?: (Scalars['ID'] | null),end_date?: (Scalars['String'] | null),frequency?: (Scalars['String'] | null),name?: (Scalars['String'] | null),route?: (Scalars['String'] | null),start_date?: (Scalars['String'] | null),
/** Requires additional permissions to edit */
updated_at?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createMedication. */
export interface createMedicationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    medication?: MedicationTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createMessageBlast */
export interface createMessageBlastInput {dietitian_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),note?: (NoteInput | null),patient_id?: (Scalars['String'] | null),scheduled_at?: (Scalars['String'] | null),
/** The value of the select all toggle. This overrides simple_added_users and allows you to easily add all of a category to the conversation. Requires simple_added_users to be sent in as well */
select_all_status?: (Scalars['String'] | null),simple_added_users?: (Scalars['String'] | null)}


/** Autogenerated return type of createMessageBlast. */
export interface createMessageBlastPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    message?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createNote */
export interface createNoteInput {attached_audio?: (Scalars['Upload'] | null),attached_document?: (Scalars['Upload'] | null),attached_image?: (Scalars['Upload'] | null),attached_image_string?: (Scalars['String'] | null),content?: (Scalars['String'] | null),conversation_id?: (Scalars['String'] | null),created_at?: (Scalars['String'] | null),hide_org_chat_confirmation?: (Scalars['Boolean'] | null),
/** True, if a note create action called in the organization chat context */
org_chat?: (Scalars['Boolean'] | null),scheduled_at?: (Scalars['String'] | null),updated_at?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createNote. */
export interface createNotePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    note?: NoteGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createNotificationContact */
export interface createNotificationContactInput {client_portal_access?: (Scalars['Boolean'] | null),client_portal_setting?: (ClientPortalSettingInput | null),contact_form?: (Scalars['String'] | null),
/** Valid values: adult, minor */
contact_type?: (Scalars['String'] | null),copy_notifications?: (Scalars['Boolean'] | null),email?: (Scalars['String'] | null),emergency?: (Scalars['Boolean'] | null),first_name?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),
/** Valid values: caregiver, child, dependent, family_member, legal_guardian, is_parent, spouse, other */
relationship?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),dietitian_id?: (Scalars['String'] | null),linked_client_id?: (Scalars['String'] | null),send_invitation?: (Scalars['Boolean'] | null),user_group_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createNotificationContact. */
export interface createNotificationContactPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notificationContact?: NotificationContactGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOfferingCoupon */
export interface createOfferingCouponInput {amount_off?: (Scalars['String'] | null),code?: (Scalars['String'] | null),expires_at?: (Scalars['String'] | null),flat_amount_off?: (Scalars['String'] | null),offering_ids?: (Scalars['String'] | null),promo_type?: (Scalars['String'] | null),repeat_times?: (Scalars['String'] | null),usage_limit?: (Scalars['String'] | null)}


/** Autogenerated return type of createOfferingCoupon. */
export interface createOfferingCouponPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    offeringCoupon?: OfferingCouponGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOffering */
export interface createOfferingInput {billing_frequency?: (Scalars['String'] | null),can_be_gifted?: (Scalars['Boolean'] | null),charge_immediately?: (Scalars['Boolean'] | null),course_id?: (Scalars['ID'] | null),course_ids?: (Scalars['String'] | null),default_selection_image_url?: (Scalars['String'] | null),description?: (Scalars['String'] | null),first_time_payment?: (Scalars['String'] | null),lab_option_ids?: (Scalars['String'] | null),living_plate_meal_plan_id?: (Scalars['String'] | null),max_purchases?: (Scalars['String'] | null),name?: (Scalars['String'] | null),offering_image?: (OfferingImageUpload | null),offering_includes?: ((OfferingIncludesFields | null)[] | null),offering_products?: ((OfferingProductInput | null)[] | null),override_group_on_purchase?: (Scalars['Boolean'] | null),price?: (Scalars['String'] | null),repeat_times?: (Scalars['String'] | null),require_booking_purchase?: (Scalars['Boolean'] | null),selected_image_id?: (Scalars['ID'] | null),show_free_text?: (Scalars['Boolean'] | null),show_offering?: (Scalars['Boolean'] | null),user_group_id?: (Scalars['ID'] | null),user_group_ids?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),video_url?: (Scalars['String'] | null),visibility_status?: (Scalars['String'] | null)}


/** Autogenerated return type of createOffering. */
export interface createOfferingPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    offering?: OfferingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOfficeallySftpAccount */
export interface createOfficeallySftpAccountInput {ftp_url?: (Scalars['String'] | null),password?: (Scalars['String'] | null),username?: (Scalars['String'] | null)}


/** Autogenerated return type of createOfficeallySftpAccount. */
export interface createOfficeallySftpAccountPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    officeally_sftp_account?: OfficeallySftpAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOnboardingFlow */
export interface createOnboardingFlowInput {groups_to_use_onboarding_flow?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** Autogenerated return type of createOnboardingFlow. */
export interface createOnboardingFlowPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    onboardingFlow?: OnboardingFlowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOnboardingItem */
export interface createOnboardingItemInput {billing_disclaimer?: (Scalars['String'] | null),is_skippable?: (Scalars['Boolean'] | null),item_id?: (Scalars['String'] | null),item_type?: (Scalars['String'] | null),new_form_name?: (Scalars['String'] | null),onboarding_flow_id?: (Scalars['String'] | null),policy_disclaimer?: (Scalars['String'] | null),welcome_text?: (Scalars['String'] | null)}


/** Autogenerated return type of createOnboardingItem. */
export interface createOnboardingItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    onboardingItem?: OnboardingItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOrAddToWaterIntakeEntry */
export interface createOrAddToWaterIntakeEntryInput {created_at?: (Scalars['String'] | null),metric_stat?: (Scalars['String'] | null),type?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createOrAddToWaterIntakeEntry. */
export interface createOrAddToWaterIntakeEntryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    entry?: EntryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOrganizationCptCode */
export interface createOrganizationCptCodeInput {cpt_code_id?: (Scalars['ID'] | null),organization_id?: (Scalars['ID'] | null),price_per_unit?: (Scalars['String'] | null)}


/** Autogenerated return type of createOrganizationCptCode. */
export interface createOrganizationCptCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organization_cpt_code?: OrganizationCptCodeTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createOrganization */
export interface createOrganizationInput {
/** When true, the new organization will be created as a sub-organization of the current users. Healthie support needs to enable this ability on your account. Must be passed along with user details */
create_as_suborganization?: (Scalars['Boolean'] | null),email?: (Scalars['String'] | null),
/** Must be provided with create_as_suborganization, last_name, and email. When passed will create a new user that will be the owner of the suborg */
first_name?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),organization_info?: (PrimaryOrganizationInfoInput | null),
/** Can optionally be passed in along with last_name, first_name, and email. When passed in, the newly created user will have this password */
password?: (Scalars['String'] | null),
/** When email is passed in, this determines whether to send an invite email to the newly created organization user */
send_invite_email?: (Scalars['Boolean'] | null),sub_org_settings?: (SubOrganizationInfoInput | null)}


/** Autogenerated input type of createOrganizationMembership */
export interface createOrganizationMembershipInput {email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),
/** Options are ["Standard", "Support"] */
org_role?: (Scalars['String'] | null),
/** Required: The ID of the organization */
organization_id?: (Scalars['ID'] | null),
/** Can optionally be passed in along with last_name, first_name, and email. When passed in, the newly created user will have this password */
password?: (Scalars['String'] | null),professions?: ((ProfessionsInput | null)[] | null),
/** When true, an invite email will be sent to the newly created organization member */
send_invite_email?: (Scalars['Boolean'] | null),specialties?: ((SpecialtiesInput | null)[] | null),
/** Organization’s member timezone */
timezone?: (Scalars['String'] | null),
/** Lets you add extra metadata about the organization membership. Not used in Healthie UI */
title?: (Scalars['String'] | null),
/** Selected permission template */
permission_template_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createOrganizationMembership. */
export interface createOrganizationMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organizationMembership?: OrganizationMembershipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of createOrganization. */
export interface createOrganizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organization?: OrganizationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createPartner */
export interface createPartnerInput {about_me?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),first_url?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null)}


/** Autogenerated return type of createPartner. */
export interface createPartnerPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    visitor?: VisitorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createPaymentIntent */
export interface createPaymentIntentInput {
/** The amount to charge in decimal format. e.g 10.99 */
amount_to_pay?: (Scalars['String'] | null),coupon_code?: (Scalars['String'] | null),
/** The currency the payment will be made in. e.g 'usd' */
currency?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),
/** Optional. Defaults to first_name if left blank. */
legal_name?: (Scalars['String'] | null),offering_id?: (Scalars['ID'] | null),
/** An array of possible payment method  Required. Only current option is 'klarna' */
payment_method_types?: ((Scalars['String'] | null)[] | null),
/** Optional */
phone_number?: (Scalars['String'] | null),
/** The ID of the provider who will receive the payment. */
recipient_id?: (Scalars['ID'] | null),
/** Optional, but recommended. Used to prevent duplicate PaymentIntents from being created. */
stripe_idempotency_key?: (Scalars['String'] | null),
/** Optional */
timezone?: (Scalars['String'] | null)}


/** Autogenerated return type of createPaymentIntent. */
export interface createPaymentIntentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    intentClientSecret?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createPermissionTemplate */
export interface createPermissionTemplateInput {allow_self_scheduling_in_care_team?: (Scalars['Boolean'] | null),auto_create_convo_for_care_team?: (Scalars['Boolean'] | null),can_access_calendar_quick_share?: (Scalars['Boolean'] | null),can_access_to_members_chat?: (Scalars['Boolean'] | null),can_add_clients?: (Scalars['Boolean'] | null),can_add_members?: (Scalars['Boolean'] | null),can_add_members_to_chat?: (Scalars['Boolean'] | null),can_assign_tasks_to_all_org_members?: (Scalars['Boolean'] | null),can_be_care_team_member?: (Scalars['Boolean'] | null),can_charge_clients?: (Scalars['Boolean'] | null),can_delete_charting_notes?: (Scalars['Boolean'] | null),can_delete_faxes?: (Scalars['Boolean'] | null),can_edit_appointment_types?: (Scalars['Boolean'] | null),can_edit_calendar?: (Scalars['Boolean'] | null),can_edit_credit?: (Scalars['Boolean'] | null),can_edit_docs?: (Scalars['Boolean'] | null),can_edit_education?: (Scalars['Boolean'] | null),can_edit_forms?: (Scalars['Boolean'] | null),can_edit_members?: (Scalars['Boolean'] | null),can_edit_packages?: (Scalars['Boolean'] | null),can_edit_products?: (Scalars['Boolean'] | null),can_edit_settings?: (Scalars['Boolean'] | null),can_enroll_clients_to_programs?: (Scalars['Boolean'] | null),can_lock_others_charting_notes?: (Scalars['Boolean'] | null),can_lock_own_charting_notes?: (Scalars['Boolean'] | null),can_mark_assigned_tasks_to_other_org_members_as_completed?: (Scalars['Boolean'] | null),can_merge_clients?: (Scalars['Boolean'] | null),can_order_labs?: (Scalars['Boolean'] | null),can_view_labs?: (Scalars['Boolean'] | null),can_remove_client?: (Scalars['Boolean'] | null),can_rename_and_delete_tags?: (Scalars['Boolean'] | null),can_see_billing?: (Scalars['Boolean'] | null),can_see_calendar?: (Scalars['Boolean'] | null),can_see_clients?: (Scalars['Boolean'] | null),can_see_docs?: (Scalars['Boolean'] | null),can_see_faxes?: (Scalars['Boolean'] | null),can_see_fullscript_tab?: (Scalars['Boolean'] | null),can_see_sent_faxes?: (Scalars['Boolean'] | null),can_see_transfers?: (Scalars['Boolean'] | null),can_set_client_password?: (Scalars['Boolean'] | null),can_share_documents_and_folders_with_org_members?: (Scalars['Boolean'] | null),can_sign_others_charting_notes?: (Scalars['Boolean'] | null),can_sign_own_charting_notes?: (Scalars['Boolean'] | null),can_submit_cms_1500s_to_office_ally?: (Scalars['Boolean'] | null),can_view_all_org_members_tasks?: (Scalars['Boolean'] | null),can_view_cms1500s?: (Scalars['Boolean'] | null),can_view_goal_templates?: (Scalars['Boolean'] | null),can_view_org_dashboard?: (Scalars['Boolean'] | null),can_view_reports?: (Scalars['Boolean'] | null),can_view_super_bills?: (Scalars['Boolean'] | null),can_write_org_addendums?: (Scalars['Boolean'] | null),gets_failed_fax_notif?: (Scalars['Boolean'] | null),gets_fax_notif?: (Scalars['Boolean'] | null),has_own_branding?: (Scalars['Boolean'] | null),is_admin?: (Scalars['Boolean'] | null),is_provider?: (Scalars['Boolean'] | null),is_developer?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),notify_any_client_activity?: (Scalars['Boolean'] | null),notify_on_book?: (Scalars['Boolean'] | null),notify_on_cancel?: (Scalars['Boolean'] | null),notify_on_payment_failure?: (Scalars['Boolean'] | null),org_role?: (Scalars['String'] | null),organization_id?: (Scalars['ID'] | null),request_eligibility_checks?: (Scalars['Boolean'] | null),sees_all_billing?: (Scalars['Boolean'] | null),sees_all_clients?: (Scalars['Boolean'] | null),send_email_on_intake_flow_complete?: (Scalars['Boolean'] | null),send_email_on_intake_flow_start?: (Scalars['Boolean'] | null),share_appointment_types?: (Scalars['Boolean'] | null),share_custom_metrics?: (Scalars['Boolean'] | null),share_fullscript?: (Scalars['Boolean'] | null),share_goal_templates?: (Scalars['Boolean'] | null),share_packages?: (Scalars['Boolean'] | null),share_smart_phrases?: (Scalars['Boolean'] | null),show_availability_first?: (Scalars['Boolean'] | null),show_org_tab?: (Scalars['Boolean'] | null),start_conversation_with?: (Scalars['Boolean'] | null),share_user_groups?: (Scalars['Boolean'] | null),allow_group_level_actions?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createPermissionTemplate. */
export interface createPermissionTemplatePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    newPermissionTemplate?: PermissionTemplateTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createPersonalizationQuestionnaire */
export interface createPersonalizationQuestionnaireInput {clients_in_a_month?: (Scalars['String'] | null),plans_to_add_more_users?: (Scalars['String'] | null),professions?: ((Scalars['String'] | null)[] | null)}


/** Autogenerated return type of createPersonalizationQuestionnaire. */
export interface createPersonalizationQuestionnairePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    was_saved?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createPreferredMedicalCode */
export interface createPreferredMedicalCodeInput {code_ids?: ((Scalars['ID'] | null)[] | null),code_type?: (Scalars['String'] | null)}


/** Autogenerated return type of createPreferredMedicalCode. */
export interface createPreferredMedicalCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    preferred_medical_codes?: PreferredMedicalCodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createProcedure */
export interface createProcedureInput {code?: (Scalars['String'] | null),code_system_name?: (Scalars['String'] | null),cpt_code_id?: (Scalars['ID'] | null),display_name?: (Scalars['String'] | null),procedure_end_datetime?: (Scalars['String'] | null),procedure_start_datetime?: (Scalars['String'] | null),status?: (Scalars['String'] | null),target_site?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createProcedure. */
export interface createProcedurePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    procedure?: ProcedureGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createProduct */
export interface createProductInput {name?: (Scalars['String'] | null),price?: (Scalars['String'] | null),remaining_quantity?: (Scalars['String'] | null),tax_description?: (Scalars['String'] | null),tax_rate?: (Scalars['String'] | null),unlimited_quantity?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of createProduct. */
export interface createProductPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    product?: ProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createProviderCptCodes */
export interface createProviderCptCodesInput {provider_cpt_codes?: ((ProviderCptCodeInput | null)[] | null),provider_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createProviderCptCodes. */
export interface createProviderCptCodesPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createRecommendation */
export interface createRecommendationInput {care_plan_id?: (Scalars['ID'] | null),form_answer_id?: (Scalars['ID'] | null),recommendation_body?: (Scalars['String'] | null),recommendation_type?: (Scalars['String'] | null)}


/** Autogenerated return type of createRecommendation. */
export interface createRecommendationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    recommendation?: RecommendationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createReferral */
export interface createReferralInput {
/** A serialized JSON string of metadata. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),referral_reason?: (Scalars['String'] | null),referring_physician_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createReferral. */
export interface createReferralPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    referral?: ReferralGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createReferringPhysician */
export interface createReferringPhysicianInput {accepts_insurance?: (Scalars['Boolean'] | null),business_name?: (Scalars['String'] | null),email?: (Scalars['String'] | null),fax_number?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),location?: (PhysicianLocationInput | null),
/** A serialized JSON string of metadata. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),notes?: (Scalars['String'] | null),npi?: (Scalars['String'] | null),other_id?: (Scalars['String'] | null),other_id_qualifier?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),referrals?: ((PhysicianReferralInput | null)[] | null),speciality?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}


/** Autogenerated return type of createReferringPhysician. */
export interface createReferringPhysicianPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    duplicated_physician?: ReferringPhysicianGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    referring_physician?: ReferringPhysicianGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createRequestedForm */
export interface createRequestedFormInput {custom_module_form_id?: (Scalars['ID'] | null),item_type?: (Scalars['String'] | null),recipient_id?: (Scalars['ID'] | null),ends_on?: (Scalars['String'] | null),
/** The ID of the custom form OR the name of the generic form (e.g 'billing_info') */
form?: (Scalars['String'] | null),frequency?: (Scalars['String'] | null),hour?: (Scalars['String'] | null),is_recurring?: (Scalars['Boolean'] | null),minute?: (Scalars['String'] | null),monthday?: (Scalars['String'] | null),period?: (Scalars['String'] | null),
/** A comma-separated list of user IDs and/or user group IDs. If passing user group IDs, they should take the following format: 'group_1,group_2,group_3' You can pass both user IDs and user group IDs. Example: '1,2,3,group_1,group_2' If you pass a user group ID, all users in that group will be sent the form. */
recipient_ids?: (Scalars['String'] | null),recurrence_ends?: (Scalars['Boolean'] | null),weekday?: (Scalars['String'] | null)}


/** Autogenerated return type of createRequestedForm. */
export interface createRequestedFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    requestedFormCompletion?: RequestedFormCompletionGenqlSelection
    requestedFormCompletionStatus?: RequestedFormStatusTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createRequestedPayment */
export interface createRequestedPaymentInput {appointment_id?: (Scalars['ID'] | null),cms1500_id?: (Scalars['ID'] | null),invoice_type?: (Scalars['String'] | null),is_preview?: (Scalars['Boolean'] | null),notes?: (Scalars['String'] | null),offering_id?: (Scalars['ID'] | null),price?: (Scalars['String'] | null),recipient_id?: (Scalars['ID'] | null),requested_payer?: (RequestedPayerInput | null),requested_payment_template?: (RequestedPaymentTemplateInput | null),sender_id?: (Scalars['ID'] | null),service_date?: (Scalars['String'] | null),services_provided?: (Scalars['String'] | null),status?: (Scalars['String'] | null),user_package_selection_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createRequestedPayment. */
export interface createRequestedPaymentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    requestedPayment?: RequestedPaymentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createRupaOrder */
export interface createRupaOrderInput {client_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createRupaOrder. */
export interface createRupaOrderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    rupa_order_url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSavedFilter */
export interface createSavedFilterInput {
/** Name of the new saved filter */
name: Scalars['String'],
/** ID of the organization with access to the filter. Will be assigned to organization ID of user if not provided */
organization_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createSavedFilter. */
export interface createSavedFilterPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    savedFilter?: SavedFilterGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSentDirectMessage */
export interface createSentDirectMessageInput {message_body?: (Scalars['String'] | null),outbound_recipient?: (Scalars['String'] | null),subject?: (Scalars['String'] | null),patient_id?: (Scalars['ID'] | null),binary_attachment_document_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createSentDirectMessage. */
export interface createSentDirectMessagePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    sent_direct_message?: SentDirectMessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSentFax */
export interface createSentFaxInput {answer_ids?: (Scalars['String'] | null),date?: (Scalars['String'] | null),destination_number?: (Scalars['String'] | null),
/** AKA the provider. Required */
dietitian?: (FaxDietitianInput | null),document_id?: (Scalars['String'] | null),document_ids?: (Scalars['String'] | null),form_answer_group_ids?: (Scalars['String'] | null),include_header_on_every_page?: (Scalars['Boolean'] | null),include_hipaa_disclaimer?: (Scalars['Boolean'] | null),patient_id?: (Scalars['String'] | null),recipient_company?: (Scalars['String'] | null),recipient_name?: (Scalars['String'] | null),remarks?: (Scalars['String'] | null),skip_cover_page?: (Scalars['Boolean'] | null),subject?: (Scalars['String'] | null)}


/** Autogenerated return type of createSentFax. */
export interface createSentFaxPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    sent_fax?: SentFaxGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSmartPhrase */
export interface createSmartPhraseInput {name?: (Scalars['String'] | null),phrase?: (Scalars['String'] | null)}


/** Autogenerated return type of createSmartPhrase. */
export interface createSmartPhrasePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    smartPhrase?: SmartPhraseGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSmokingStatus */
export interface createSmokingStatusInput {smoking_status_code?: (Scalars['String'] | null),status_end_datetime?: (Scalars['String'] | null),status_start_datetime?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createSmokingStatus. */
export interface createSmokingStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    smokingStatus?: SmokingStatusGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createStripeCustomerDetail */
export interface createStripeCustomerDetailInput {
/** Options are 'hsa', 'fsa', and 'personal'. Defaults to personal */
card_type_label?: (Scalars['String'] | null),is_default?: (Scalars['Boolean'] | null),token?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createStripeCustomerDetail. */
export interface createStripeCustomerDetailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    stripeError?: boolean | number
    stripe_customer_detail?: StripeCustomerDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSubscription */
export interface createSubscriptionInput {plan_id?: (Scalars['String'] | null),
/** Can be passed in instead of plan_id to select which plan the subscription should be on. Normally preferable to use plan_id */
plan_name?: (Scalars['String'] | null),token?: (Scalars['String'] | null),billing_address?: (BillingAddressInput | null)}


/** Autogenerated return type of createSubscription. */
export interface createSubscriptionPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    subscription?: SubscriptionInstanceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createSuperBill */
export interface createSuperBillInput {address?: (Scalars['String'] | null),amount_paid?: (Scalars['String'] | null),cpt_codes_super_bills?: ((CptCodesSuperBillInput | null)[] | null),dietitian_id?: (Scalars['ID'] | null),icd_codes_super_bills?: ((IcdCodesSuperBillInput | null)[] | null),license_num?: (Scalars['String'] | null),location?: (LocationInputs | null),location_id?: (Scalars['ID'] | null),npi?: (Scalars['String'] | null),patient_dob?: (Scalars['String'] | null),patient_id?: (Scalars['ID'] | null),patient_location?: (PatientLocationInputs | null),patient_name?: (Scalars['String'] | null),patient_phone?: (Scalars['String'] | null),place_of_service_id?: (Scalars['ID'] | null),prov_city?: (Scalars['String'] | null),prov_email?: (Scalars['String'] | null),prov_line1?: (Scalars['String'] | null),prov_line2?: (Scalars['String'] | null),prov_phone?: (Scalars['String'] | null),prov_state?: (Scalars['String'] | null),prov_zip?: (Scalars['String'] | null),provider_name?: (Scalars['String'] | null),receipt_line_items?: ((ReceiptLineItemInput | null)[] | null),referrer_name?: (Scalars['String'] | null),referrer_npi?: (Scalars['String'] | null),service_date?: (Scalars['String'] | null),status?: (Scalars['String'] | null),tax_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createSuperBill. */
export interface createSuperBillPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    superBill?: SuperBillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createTag */
export interface createTagInput {name?: (Scalars['String'] | null),
/** The ID of the user to apply a tag on */
taggable_user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createTag. */
export interface createTagPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tag?: TagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createTask */
export interface createTaskInput {client_id?: (Scalars['String'] | null),complete?: (Scalars['Boolean'] | null),completed_by_id?: (Scalars['ID'] | null),content?: (Scalars['String'] | null),created_by_id?: (Scalars['String'] | null),due_date?: (Scalars['String'] | null),note_id?: (Scalars['ID'] | null),priority?: (Scalars['Int'] | null),reminder?: (TaskReminderInput | null),seen?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of createTask. */
export interface createTaskPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    task?: TaskGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createUniqueDeviceIdentifier */
export interface createUniqueDeviceIdentifierInput {assigning_authority?: (Scalars['String'] | null),device_code?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),scoping_entity?: (Scalars['String'] | null),udi_code?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of createUniqueDeviceIdentifier. */
export interface createUniqueDeviceIdentifierPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    unique_device_identifier?: UniqueDeviceIdentifierGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createVisitor */
export interface createVisitorInput {email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),first_url?: (Scalars['String'] | null)}


/** Autogenerated return type of createVisitor. */
export interface createVisitorPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    visitor?: VisitorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createWebhook */
export interface createWebhookInput {event_type?: (Scalars['String'] | null),is_enabled?: (Scalars['Boolean'] | null),
/** A valid URL per the WHATWG specification */
url?: (Scalars['String'] | null),
/** Webhook events to create */
webhook_events?: ((WebhookEventInput | null)[] | null)}


/** Autogenerated return type of createWebhook. */
export interface createWebhookPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    webhook?: WebhookGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of createZus */
export interface createZusInput {
/** String of comma-separated users */
user_id: Scalars['ID'],
/** Healthie organization ID */
organization_id: Scalars['ID'],
/** Zus Parameters */
zus_params: ZusInputs}


/** Autogenerated return type of createZus. */
export interface createZusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAcceptedInsurancePlan */
export interface deleteAcceptedInsurancePlanInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAcceptedInsurancePlan. */
export interface deleteAcceptedInsurancePlanPayloadGenqlSelection{
    accepted_insurance_plan?: AcceptedInsurancePlanGenqlSelection
    appointment_setting?: AppointmentSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAllergySensitivity */
export interface deleteAllergySensitivityInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAllergySensitivity. */
export interface deleteAllergySensitivityPayloadGenqlSelection{
    allergy_sensitivity?: AllergySensitivityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteApiKey */
export interface deleteApiKeyInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteApiKey. */
export interface deleteApiKeyPayloadGenqlSelection{
    api_key?: ApiKeyGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAppleHealth */
export interface deleteAppleHealthInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAppleHealth. */
export interface deleteAppleHealthPayloadGenqlSelection{
    apple_health?: AppleHealthGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAppointment */
export interface deleteAppointmentInput {appointment_inclusion_uuid?: (Scalars['ID'] | null),deleteRecurring?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAppointment. */
export interface deleteAppointmentPayloadGenqlSelection{
    appointment?: AppointmentGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAppointmentTypeCptCode */
export interface deleteAppointmentTypeCptCodeInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAppointmentTypeCptCode. */
export interface deleteAppointmentTypeCptCodePayloadGenqlSelection{
    appointment_type_cpt_code?: AppointmentTypeCptCodeTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAppointmentType */
export interface deleteAppointmentTypeInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAppointmentType. */
export interface deleteAppointmentTypePayloadGenqlSelection{
    appointmentType?: AppointmentTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAutoTaskGenerator */
export interface deleteAutoTaskGeneratorInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAutoTaskGenerator. */
export interface deleteAutoTaskGeneratorPayloadGenqlSelection{
    auto_task_generator?: AutoTaskGeneratorGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteAvailability */
export interface deleteAvailabilityInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteAvailability. */
export interface deleteAvailabilityPayloadGenqlSelection{
    availability?: AvailabilityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteBillingItem */
export interface deleteBillingItemInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteBillingItem. */
export interface deleteBillingItemPayloadGenqlSelection{
    billingItem?: BillingItemGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCarePlanConnection */
export interface deleteCarePlanConnectionInput {care_plan_id?: (Scalars['ID'] | null),connectable_id?: (Scalars['ID'] | null),connectable_type?: (Scalars['String'] | null)}


/** Autogenerated return type of deleteCarePlanConnection. */
export interface deleteCarePlanConnectionPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    connection?: CarePlanConnectionGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCarePlan */
export interface deleteCarePlanInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCarePlan. */
export interface deleteCarePlanPayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCms1500 */
export interface deleteCms1500Input {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCms1500. */
export interface deleteCms1500PayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cms1500?: Cms1500GenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCognitiveStatus */
export interface deleteCognitiveStatusInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCognitiveStatus. */
export interface deleteCognitiveStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cognitive_status?: CognitiveStatusGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteComment */
export interface deleteCommentInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteComment. */
export interface deleteCommentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    comment?: CommentGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteConversationMembership */
export interface deleteConversationMembershipInput {conversation_id?: (Scalars['ID'] | null),group_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteConversationMembership. */
export interface deleteConversationMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    conversationMembership?: ConversationMembershipGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCourseBenefit */
export interface deleteCourseBenefitInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCourseBenefit. */
export interface deleteCourseBenefitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseBenefit?: CourseBenefitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCourseGroup */
export interface deleteCourseGroupInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCourseGroup. */
export interface deleteCourseGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseGroup?: CourseGroupGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCourse */
export interface deleteCourseInput {id?: (Scalars['ID'] | null)}


/** Autogenerated input type of deleteCourseItem */
export interface deleteCourseItemInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCourseItem. */
export interface deleteCourseItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseItem?: CourseItemGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCourseMembership */
export interface deleteCourseMembershipInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCourseMembership. */
export interface deleteCourseMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseMembership?: CourseMembershipGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of deleteCourse. */
export interface deleteCoursePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    course?: CourseGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCustomEmail */
export interface deleteCustomEmailInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCustomEmail. */
export interface deleteCustomEmailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customEmail?: CustomEmailGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCustomFood */
export interface deleteCustomFoodInput {id?: (Scalars['ID'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of deleteCustomFood. */
export interface deleteCustomFoodPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customFood?: FoodGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCustomModuleForm */
export interface deleteCustomModuleFormInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCustomModuleForm. */
export interface deleteCustomModuleFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModuleForm?: CustomModuleFormGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteCustomModule */
export interface deleteCustomModuleInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteCustomModule. */
export interface deleteCustomModulePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModule?: CustomModuleGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteDexcomConnection */
export interface deleteDexcomConnectionInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteDexcomConnection. */
export interface deleteDexcomConnectionPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    dexcom_connection?: DexcomConnectionGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteDocument */
export interface deleteDocumentInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteDocument. */
export interface deleteDocumentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    document?: DocumentGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteDosespot */
export interface deleteDosespotInput {
/** The ID of the dosespot object to delete */
dosespot_object_id?: (Scalars['ID'] | null),
/** The ID of the dosespot user to delete */
dosespot_user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteDosespot. */
export interface deleteDosespotPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteEntry */
export interface deleteEntryInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteEntry. */
export interface deleteEntryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    entry?: EntryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteExternalCalendar */
export interface deleteExternalCalendarInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteExternalCalendar. */
export interface deleteExternalCalendarPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    external_calendar?: ExternalCalendarGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteFamilyHistory */
export interface deleteFamilyHistoryInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteFamilyHistory. */
export interface deleteFamilyHistoryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    family_history_condition?: FamilyHistoryConditionGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteFitbit */
export interface deleteFitbitInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteFitbit. */
export interface deleteFitbitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    fitbit?: FitbitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteFolder */
export interface deleteFolderInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteFolder. */
export interface deleteFolderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    folder?: FolderGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteFormAnswerGroup */
export interface deleteFormAnswerGroupInput {id?: (Scalars['ID'] | null),
/** If passed, the connection between a form_answer_group and a group appointment for the given user will be removed */
user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteFormAnswerGroup. */
export interface deleteFormAnswerGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteFunctionalStatus */
export interface deleteFunctionalStatusInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteFunctionalStatus. */
export interface deleteFunctionalStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    functional_status?: FunctionalStatusGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteGoalHistory */
export interface deleteGoalHistoryInput {completed_on?: (Scalars['String'] | null),
/** ID of the goal to remove a goal history for */
id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteGoalHistory. */
export interface deleteGoalHistoryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    goal_history?: GoalHistoryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteGoal */
export interface deleteGoalInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteGoal. */
export interface deleteGoalPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    goal?: GoalGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteGoogleFit */
export interface deleteGoogleFitInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteGoogleFit. */
export interface deleteGoogleFitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    google_fit?: GoogleFitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteHealthConcern */
export interface deleteHealthConcernInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteHealthConcern. */
export interface deleteHealthConcernPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    health_concern?: HealthConcernGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteImplantableDeviceUser */
export interface deleteImplantableDeviceUserInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteImplantableDeviceUser. */
export interface deleteImplantableDeviceUserPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    implantable_device_user?: ImplantableDeviceUserGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteInsuranceAuthorization */
export interface deleteInsuranceAuthorizationInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteInsuranceAuthorization. */
export interface deleteInsuranceAuthorizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    insuranceAuthorization?: InsuranceAuthorizationTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteInsurancePlan */
export interface deleteInsurancePlanInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteInsurancePlan. */
export interface deleteInsurancePlanPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    insurance_plan?: InsurancePlanGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteLocation */
export interface deleteLocationInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteLocation. */
export interface deleteLocationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    location?: LocationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteMeal */
export interface deleteMealInput {id?: (Scalars['ID'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of deleteMeal. */
export interface deleteMealPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    meal?: MealGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteNote */
export interface deleteNoteInput {deleted_by_user?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteNote. */
export interface deleteNotePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    note?: NoteGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteNotificationContact */
export interface deleteNotificationContactInput {id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteNotificationContact. */
export interface deleteNotificationContactPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notificationContact?: NotificationContactGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOfferingCoupon */
export interface deleteOfferingCouponInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOfferingCoupon. */
export interface deleteOfferingCouponPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    offeringCoupon?: OfferingCouponGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOffering */
export interface deleteOfferingInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOffering. */
export interface deleteOfferingPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    offering?: OfferingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOnboardingFlow */
export interface deleteOnboardingFlowInput {flow_to_receive_groups?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOnboardingFlow. */
export interface deleteOnboardingFlowPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    onboardingFlow?: OnboardingFlowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOnboardingItem */
export interface deleteOnboardingItemInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOnboardingItem. */
export interface deleteOnboardingItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    onboardingItem?: OnboardingItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOrganizationCptCode */
export interface deleteOrganizationCptCodeInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOrganizationCptCode. */
export interface deleteOrganizationCptCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organization_cpt_code?: OrganizationCptCodeTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOrganizationInfo */
export interface deleteOrganizationInfoInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOrganizationInfo. */
export interface deleteOrganizationInfoPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organizationInfo?: OrganizationInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteOrganizationMembership */
export interface deleteOrganizationMembershipInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteOrganizationMembership. */
export interface deleteOrganizationMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organizationMembership?: OrganizationMembershipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deletePermissionTemplate */
export interface deletePermissionTemplateInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deletePermissionTemplate. */
export interface deletePermissionTemplatePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    permission_template?: PermissionTemplateTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deletePreferredMedicalCode */
export interface deletePreferredMedicalCodeInput {code_ids?: ((Scalars['ID'] | null)[] | null),code_type?: (Scalars['String'] | null)}


/** Autogenerated return type of deletePreferredMedicalCode. */
export interface deletePreferredMedicalCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    preferred_medical_codes?: PreferredMedicalCodeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteProcedure */
export interface deleteProcedureInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteProcedure. */
export interface deleteProcedurePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    procedure?: ProcedureGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteProduct */
export interface deleteProductInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteProduct. */
export interface deleteProductPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    product?: ProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteProviderCptCode */
export interface deleteProviderCptCodeInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteProviderCptCode. */
export interface deleteProviderCptCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    provider_cpt_code?: ProviderCptCodeTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteReceivedFax */
export interface deleteReceivedFaxInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteReceivedFax. */
export interface deleteReceivedFaxPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    receivedFax?: ReceivedFaxGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteRecommendation */
export interface deleteRecommendationInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteRecommendation. */
export interface deleteRecommendationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    recommendation?: RecommendationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteReferral */
export interface deleteReferralInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteReferral. */
export interface deleteReferralPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    referral?: ReferralGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteReferringPhysician */
export interface deleteReferringPhysicianInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteReferringPhysician. */
export interface deleteReferringPhysicianPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    referringPhysician?: ReferringPhysicianGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteRequestedForm */
export interface deleteRequestedFormInput {id?: (Scalars['ID'] | null),recurringFormId?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteRequestedForm. */
export interface deleteRequestedFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    requestedFormCompletion?: RequestedFormCompletionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteRequestedPayment */
export interface deleteRequestedPaymentInput {id: Scalars['ID']}


/** Autogenerated return type of deleteRequestedPayment. */
export interface deleteRequestedPaymentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    requested_payment?: RequestedPaymentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteSavedFilter */
export interface deleteSavedFilterInput {
/** ID of the saved filter to delete */
id: Scalars['ID']}


/** Autogenerated return type of deleteSavedFilter. */
export interface deleteSavedFilterPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    savedFilter?: SavedFilterGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteShapaConnection */
export interface deleteShapaConnectionInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteShapaConnection. */
export interface deleteShapaConnectionPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    shapa_connection?: ShapaConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteSmartPhrase */
export interface deleteSmartPhraseInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteSmartPhrase. */
export interface deleteSmartPhrasePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    smartPhrase?: SmartPhraseGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteSmokingStatus */
export interface deleteSmokingStatusInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteSmokingStatus. */
export interface deleteSmokingStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    smokingStatus?: SmokingStatusGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteStripeCustomerDetail */
export interface deleteStripeCustomerDetailInput {card_id?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of deleteStripeCustomerDetail. */
export interface deleteStripeCustomerDetailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    stripe_customer_detail?: StripeCustomerDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteSuperBill */
export interface deleteSuperBillInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteSuperBill. */
export interface deleteSuperBillPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    superBill?: SuperBillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteTag */
export interface deleteTagInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteTag. */
export interface deleteTagPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tag?: TagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteTask */
export interface deleteTaskInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteTask. */
export interface deleteTaskPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    task?: TaskGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteUniqueDeviceIdentifier */
export interface deleteUniqueDeviceIdentifierInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteUniqueDeviceIdentifier. */
export interface deleteUniqueDeviceIdentifierPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    unique_device_identifier?: UniqueDeviceIdentifierGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteUserGroup */
export interface deleteUserGroupInput {group_to_receive_clients?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteUserGroup. */
export interface deleteUserGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user_group?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteWebhook */
export interface deleteWebhookInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteWebhook. */
export interface deleteWebhookPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    webhook?: WebhookGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of deleteWithingsConnection */
export interface deleteWithingsConnectionInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of deleteWithingsConnection. */
export interface deleteWithingsConnectionPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    withings_connection?: WithingsConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of destroyAnnouncement */
export interface destroyAnnouncementInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of destroyAnnouncement. */
export interface destroyAnnouncementPayloadGenqlSelection{
    announcement?: AnnouncementGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of destroyFaxAcctInfo */
export interface destroyFaxAcctInfoInput {aes_key?: (Scalars['String'] | null),api_key?: (Scalars['String'] | null),fax_number?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),username?: (Scalars['String'] | null)}


/** Autogenerated return type of destroyFaxAcctInfo. */
export interface destroyFaxAcctInfoPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of destroyMedication */
export interface destroyMedicationInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of destroyMedication. */
export interface destroyMedicationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    medication?: MedicationTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of destroyRecurringForm */
export interface destroyRecurringFormInput {connectable_id?: (Scalars['ID'] | null),connectable_type?: (Scalars['String'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of destroyRecurringForm. */
export interface destroyRecurringFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    recurringForm?: RecurringFormGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of dismissAllAnnouncements */
export interface dismissAllAnnouncementsInput {patient_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of dismissAllAnnouncements. */
export interface dismissAllAnnouncementsPayloadGenqlSelection{
    announcements?: AnnouncementGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of dismissAnnouncement */
export interface dismissAnnouncementInput {id?: (Scalars['ID'] | null),patient_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of dismissAnnouncement. */
export interface dismissAnnouncementPayloadGenqlSelection{
    announcement?: AnnouncementGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of dosespotSSO */
export interface dosespotSSOInput {
/** The patient ID */
patient_id: Scalars['ID'],
/** The user ID of the provider */
user_id: Scalars['ID']}


/** Autogenerated return type of dosespotSSO. */
export interface dosespotSSOPayloadGenqlSelection{
    /** The additional info */
    additional_info?: boolean | number
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of dummyUser */
export interface dummyUserInput {
/** The ID of the clinic */
user_id: Scalars['ID']}


/** Autogenerated return type of dummyUser. */
export interface dummyUserPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of editAvailability */
export interface editAvailabilityInput {appointment_location_id?: (Scalars['String'] | null),appointment_type_id?: (Scalars['String'] | null),contact_type_id?: (Scalars['String'] | null),day_of_week?: (Scalars['Int'] | null),end_on?: (Scalars['String'] | null),end_time?: (Scalars['String'] | null),id?: (Scalars['String'] | null),is_repeating?: (Scalars['Boolean'] | null),range_end?: (Scalars['String'] | null),range_start?: (Scalars['String'] | null),time?: (Scalars['String'] | null),timezone?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of editAvailability. */
export interface editAvailabilityPayloadGenqlSelection{
    availability?: AvailabilityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of enableGoogleIntegrations */
export interface enableGoogleIntegrationsInput {
/** Healthie Provider ID */
user_id: Scalars['ID'],
/** Google Analytics ID */
ga_id?: (Scalars['String'] | null),
/** Google Tag Manager ID */
gtm_id?: (Scalars['String'] | null)}


/** Autogenerated return type of enableGoogleIntegrations. */
export interface enableGoogleIntegrationsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success message */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of enableSelfSignup */
export interface enableSelfSignupInput {
/** The user ID of the provider */
user_id: Scalars['ID'],
/** To enable or disable */
enable: Scalars['String']}


/** Autogenerated return type of enableSelfSignup. */
export interface enableSelfSignupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of expireWebhookSignature */
export interface expireWebhookSignatureInput {
/** The ID of the webhook */
id: Scalars['ID']}


/** Autogenerated return type of expireWebhookSignature. */
export interface expireWebhookSignaturePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    webhook?: WebhookGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of exportClientEhi */
export interface exportClientEhiInput {
/** The ID of the client to export EHI data for. */
client_id?: (Scalars['ID'] | null),
/** Whether or not we should export the client EHI data in a job. */
should_run_in_job?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of exportClientEhi. */
export interface exportClientEhiPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The banner message shown when successful. */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of exportToTemplate */
export interface exportToTemplateInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of exportToTemplate. */
export interface exportToTemplatePayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A fullscript Sync */
export interface fullscriptGenqlSelection{
    /** The unique identifier of the fullscript */
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of generateChartingPdf */
export interface generateChartingPdfInput {form_answer_group_array?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),include_header_on_every_page?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of generateChartingPdf. */
export interface generateChartingPdfPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of mergeClients */
export interface mergeClientsInput {
/** the two user IDs to merge */
ids?: ((Scalars['ID'] | null)[] | null),
/** Optional: the email to update the remaining user to */
target_email?: (Scalars['String'] | null),
/** the user that will remain */
target_user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of mergeClients. */
export interface mergeClientsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of parseCcdaDocument */
export interface parseCcdaDocumentInput {file?: (Scalars['Upload'] | null)}


/** Autogenerated return type of parseCcdaDocument. */
export interface parseCcdaDocumentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    xml_file_name?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of removeAppliedTag */
export interface removeAppliedTagInput {id?: (Scalars['ID'] | null),
/** The ID of the user to remove a tag from */
taggable_user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of removeAppliedTag. */
export interface removeAppliedTagPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tag?: TagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of removeDraft */
export interface removeDraftInput {id?: (Scalars['ID'] | null)}


/** Autogenerated return type of removeDraft. */
export interface removeDraftPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    draft?: DraftGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of removeUserFromGroupCarePlan */
export interface removeUserFromGroupCarePlanInput {care_plan_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of removeUserFromGroupCarePlan. */
export interface removeUserFromGroupCarePlanPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    groupCarePlanUserConnection?: GroupCarePlanUserConnectionGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of resendSentFax */
export interface resendSentFaxInput {sent_fax_id?: (Scalars['String'] | null)}


/** Autogenerated return type of resendSentFax. */
export interface resendSentFaxPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    sent_fax?: SentFaxGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of resetPassword */
export interface resetPasswordInput {email?: (Scalars['String'] | null),
/** The authentication namespace to check reset passwords for. */
namespace?: (Scalars['String'] | null)}


/** Autogenerated return type of resetPassword. */
export interface resetPasswordPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of restoreVersions */
export interface restoreVersionsInput {
/** The PaperTrail::HealthieVersion ID */
version_id: Scalars['ID']}


/** Autogenerated return type of restoreVersions. */
export interface restoreVersionsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of resyncRupaLabOrders */
export interface resyncRupaLabOrdersInput {
/** DO NOT USE */
clientMutationId?: (Scalars['String'] | null)}


/** Autogenerated return type of resyncRupaLabOrders. */
export interface resyncRupaLabOrdersPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of revokeToken */
export interface revokeTokenInput {
/** DO NOT USE */
clientMutationId?: (Scalars['String'] | null)}


/** Autogenerated return type of revokeToken. */
export interface revokeTokenPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of runEligibilityCheckMutation */
export interface runEligibilityCheckMutationInput {
/** The ID of the policy to check */
id?: (Scalars['ID'] | null),
/** An array of service type codes to check benefits for. */
service_codes?: ((Scalars['String'] | null)[] | null)}


/** Autogenerated return type of runEligibilityCheckMutation. */
export interface runEligibilityCheckMutationPayloadGenqlSelection{
    /** The result of the check */
    claim_eligibility_check?: ClaimEligibilityCheckGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of sendCarePlanEmail */
export interface sendCarePlanEmailInput {id?: (Scalars['ID'] | null),patient_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of sendCarePlanEmail. */
export interface sendCarePlanEmailPayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of shareAnswersAsDocument */
export interface shareAnswersAsDocumentInput {answers?: (Scalars['String'] | null),email_notification?: (Scalars['Boolean'] | null),form_answer_group_id?: (Scalars['ID'] | null),letterhead?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of shareAnswersAsDocument. */
export interface shareAnswersAsDocumentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    document?: DocumentGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of shareCourse */
export interface shareCourseInput {course_share_recipient?: (Scalars['String'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of shareCourse. */
export interface shareCoursePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    course?: CourseGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of shareCustomModuleForm */
export interface shareCustomModuleFormInput {form_share_recipient?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),
/** (DEPRECATED) Does nothing. Permissions are always checked */
validate_permissions?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of shareCustomModuleForm. */
export interface shareCustomModuleFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModuleForm?: CustomModuleFormGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of signIn */
export interface signInInput {
/** User email */
email?: (Scalars['String'] | null),
/** Username */
username?: (Scalars['String'] | null),
/** When true, an additional API key will be generated (versus replacing the old one) */
allow_multiple_api_keys?: (Scalars['Boolean'] | null),
/** When true, an API key will be returned, versus a session token. This replaces an existing key. */
generate_api_token?: (Scalars['Boolean'] | null),
/** The authentication namespace to sign into. Whitelabels can have their own separated auth namespace. */
namespace?: (Scalars['String'] | null),
/** Password */
password?: (Scalars['String'] | null),
/** Reset Token */
reset_token?: (Scalars['String'] | null),
/** Timezone of user */
timezone?: (Scalars['String'] | null),
/** API Token */
token?: (Scalars['String'] | null)}


/** Autogenerated return type of signIn. */
export interface signInPayloadGenqlSelection{
    /** API Key created */
    api_key?: boolean | number
    /** Blocked by 2fa status */
    blocked_by_2fa?: boolean | number
    /** 2fa challenge type */
    blocked_by_2fa_type?: boolean | number
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** Token returned for authorization */
    token?: boolean | number
    /** User info */
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of signUp */
export interface signUpInput {
/** The ID of the provider to create a patient for. Required if signing up as a patient and invite_code is not present */
dietitian_id?: (Scalars['String'] | null),email?: (Scalars['String'] | null),exploring_healthie_reason?: (Scalars['String'] | null),exploring_healthie_reason_other?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),first_url?: (Scalars['String'] | null),
/** Required if signing up as a patient and dietitian_id is not present */
invite_code?: (Scalars['String'] | null),last_name?: (Scalars['String'] | null),legal_name?: (Scalars['String'] | null),password?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),provider_type?: (Scalars['String'] | null),
/** Affliate id used for conversion tracking */
ps_xid?: (Scalars['String'] | null),
/** 'patient' to create a patient, 'dietitian' to create a staff member or provider */
role?: (Scalars['String'] | null),
/** timezone from TZ database names in IANA Timezone list */
timezone?: (Scalars['String'] | null)}


/** Autogenerated return type of signUp. */
export interface signUpPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    initialMessage?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    nextRequiredStep?: boolean | number
    token?: boolean | number
    user?: UserGenqlSelection
    whitelabelSetting?: WhitelabelSettingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of toggleCarePlanStatusForSpecificUser */
export interface toggleCarePlanStatusForSpecificUserInput {activate: Scalars['Boolean'],id?: (Scalars['ID'] | null),patient_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of toggleCarePlanStatusForSpecificUser. */
export interface toggleCarePlanStatusForSpecificUserPayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of unblockIpAddress */
export interface unblockIpAddressInput {
/** ID of User */
user_id: Scalars['ID'],
/** Ip address to unblock */
ip_address: Scalars['String']}


/** Autogenerated return type of unblockIpAddress. */
export interface unblockIpAddressPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** Status */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of unlockChartingNote */
export interface unlockChartingNoteInput {
/** The ID of the FormAnswerGroup to be unlocked */
fang_id: Scalars['ID']}


/** Autogenerated return type of unlockChartingNote. */
export interface unlockChartingNotePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of unsubscribeFromNotification */
export interface unsubscribeFromNotificationInput {notification_setting_uuid?: (Scalars['String'] | null),type_of_notification?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of unsubscribeFromNotification. */
export interface unsubscribeFromNotificationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notificationSettingUpdated?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAddendum */
export interface updateAddendumInput {content?: (Scalars['String'] | null),form_answer_group_id?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateAddendum. */
export interface updateAddendumPayloadGenqlSelection{
    addendum?: ChartingNoteAddendumTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAllergySensitivity */
export interface updateAllergySensitivityInput {category?: (Scalars['String'] | null),category_type?: (Scalars['String'] | null),custom_name?: (Scalars['String'] | null),custom_reaction?: (Scalars['String'] | null),id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),
/** The date of onset_date */
onset_date?: (Scalars['String'] | null),reaction?: (Scalars['String'] | null),
/** The type of reaction. Options are [allergy, adverse_reaction] */
reaction_type?: (Scalars['String'] | null),severity?: (Scalars['String'] | null),
/** Options are [active, inactive, resolved]. Defaults to active */
status?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateAllergySensitivity. */
export interface updateAllergySensitivityPayloadGenqlSelection{
    allergy_sensitivity?: AllergySensitivityGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    duplicate_allergy?: AllergySensitivityGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAnnouncement */
export interface updateAnnouncementInput {active?: (Scalars['Boolean'] | null),announcement_image?: (AnnouncementImageUpload | null),delete_image?: (Scalars['Boolean'] | null),description?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),title?: (Scalars['String'] | null),user_group_ids?: (Scalars['String'] | null)}


/** Autogenerated return type of updateAnnouncement. */
export interface updateAnnouncementPayloadGenqlSelection{
    announcement?: AnnouncementGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAppleHealth */
export interface updateAppleHealthInput {is_enabled?: (Scalars['Boolean'] | null),last_sync_date?: (Scalars['String'] | null)}


/** Autogenerated return type of updateAppleHealth. */
export interface updateAppleHealthPayloadGenqlSelection{
    apple_health?: AppleHealthGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAppointmentInclusion */
export interface updateAppointmentInclusionInput {
/** Indicate whether a group appointment attendee have taken part in the appointment */
attended?: (Scalars['Boolean'] | null),
/** Indicate if a group appointment attendee cancelled the appointment */
cancelled?: (Scalars['Boolean'] | null),
/** Indicate if a group appointment attendee has confirmed. For 1:1 appointments, use client_confirmed on Appointment object */
confirmed?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateAppointmentInclusion. */
export interface updateAppointmentInclusionPayloadGenqlSelection{
    appointment_inclusion?: AppointmentInclusionTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAppointment */
export interface updateAppointmentInput {actual_duration?: (Scalars['String'] | null),appointment_inclusion_uuid?: (Scalars['ID'] | null),appointment_location_id?: (Scalars['String'] | null),appointment_type_id?: (Scalars['String'] | null),attended_clients?: ((AttendedClientsInput | null)[] | null),attendee_ids?: (Scalars['String'] | null),client_confirmed?: (Scalars['Boolean'] | null),client_updating?: (Scalars['Boolean'] | null),confirmed?: (Scalars['Boolean'] | null),contact_type?: (Scalars['String'] | null),
/** Cpt code associated with this appointment */
cpt_code_id?: (Scalars['ID'] | null),date?: (Scalars['String'] | null),
/** Timestamp in YYYY-MM-DD HH:MM:SS or ISO8601 format, supercedes date, time params. */
datetime?: (Scalars['String'] | null),end_date?: (Scalars['String'] | null),end_time?: (Scalars['String'] | null),
/** When passed in, this video chat URL will be used instead of built-in Video Chat or Zoom */
external_videochat_url?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),insurance_billing_enabled?: (Scalars['Boolean'] | null),is_blocker?: (Scalars['Boolean'] | null),is_zoom_chat?: (Scalars['Boolean'] | null),
/** The late cancellation fee in cents */
late_cancellation_fee?: (Scalars['Int'] | null),location?: (Scalars['String'] | null),max_attendees?: (Scalars['String'] | null),
/** a serialized JSON string of metadata */
metadata?: (Scalars['JSON'] | null),
/** The no show fee in cents */
no_show_fee?: (Scalars['Int'] | null),notes?: (Scalars['String'] | null),other_party_id?: (Scalars['String'] | null),pm_status?: (Scalars['String'] | null),
/** The price associated with this appointment */
price?: (Scalars['String'] | null),providers?: (Scalars['String'] | null),recurring_appointment?: (RecurringAppointmentInput | null),room_id?: (Scalars['String'] | null),time?: (Scalars['String'] | null),
/** Timezone to use for date and time fields. Overrides the timezone of the current user */
timezone?: (Scalars['String'] | null),
/** Units to use as a multiplier for appointment price */
units?: (Scalars['String'] | null),updateRecurring?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateAppointment. */
export interface updateAppointmentPayloadGenqlSelection{
    appointment?: AppointmentGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAppointmentSetting */
export interface updateAppointmentSettingInput {advance_pricing_options?: (Scalars['String'] | null),allow_appointment_type_pricing?: (Scalars['Boolean'] | null),allow_clients_to_cancel_appt?: (Scalars['Boolean'] | null),allow_clients_to_reschedule_appt?: (Scalars['Boolean'] | null),allow_external_videochat_urls?: (Scalars['Boolean'] | null),always_send_confirm_notification?: (Scalars['Boolean'] | null),appointment_locations?: ((AppointmentLocationInput | null)[] | null),appt_type_confirmed_email?: (Scalars['Boolean'] | null),appt_type_reminder_email?: (Scalars['Boolean'] | null),appt_type_website_booking_email?: (Scalars['Boolean'] | null),ask_clients_to_confirm?: (Scalars['Boolean'] | null),ask_to_confirm_via_text?: (Scalars['Boolean'] | null),auto_create_cms1500?: (Scalars['Boolean'] | null),auto_schedule_charges_for_late_cancellation_no_show?: (Scalars['Boolean'] | null),auto_submit_cms1500?: (Scalars['Boolean'] | null),auto_invoicing?: (Scalars['Boolean'] | null),booking_interval_restriction?: (Scalars['Int'] | null),buffer?: (Scalars['String'] | null),calendar_color_schemes?: ((CalendarColorSchemeInput | null)[] | null),calendar_interval?: (Scalars['String'] | null),charge_for_occured_appts?: (Scalars['Boolean'] | null),client_should_call_provider?: (Scalars['Boolean'] | null),clients_have_billing?: (Scalars['Boolean'] | null),confirm_by_default?: (Scalars['Boolean'] | null),contact_type_overrides?: ((ContactTypeOverrideInput | null)[] | null),default_appt_form_to_group?: (Scalars['Boolean'] | null),default_charting_template_id?: (Scalars['String'] | null),default_group_charting_template_id?: (Scalars['ID'] | null),default_to_zoom?: (Scalars['Boolean'] | null),default_video_service?: (Scalars['String'] | null),disable_requested_form_notifications?: (Scalars['Boolean'] | null),end_time?: (Scalars['String'] | null),hide_insurance_getting_started_info?: (Scalars['Boolean'] | null),hide_link?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),insurance_eligibility_integration?: (Scalars['Boolean'] | null),invoice_clients_without_payment_method?: (Scalars['Boolean'] | null),
/** The late cancellation fee in cents */
late_cancellation_fee?: (Scalars['Int'] | null),max_days_in_future?: (Scalars['String'] | null),
/** Prevents the patient from canceling too close the appointment time. In minutes */
minimum_advance_cancel_time?: (Scalars['Int'] | null),
/** Prevents the patient from rescheduling too close the appointment time. In minutes */
minimum_advance_reschedule_time?: (Scalars['Int'] | null),
/** Prevents the patient from scheduling too close to the desired appointment time. In minutes */
minimum_advance_schedule_time?: (Scalars['Int'] | null),
/** The no show fee in cents */
no_show_fee?: (Scalars['Int'] | null),prevent_client_booking?: (Scalars['Boolean'] | null),prevent_no_credit_booking?: (Scalars['Boolean'] | null),reply_to_provider?: (Scalars['Boolean'] | null),restore_credit_on_cancel?: (Scalars['Boolean'] | null),same_day_appointments?: (Scalars['Boolean'] | null),send_appointment_cancellation_email?: (Scalars['Boolean'] | null),send_appointment_update_email?: (Scalars['Boolean'] | null),send_booking_notice?: (Scalars['Boolean'] | null),send_email_before_appointment?: (Scalars['Boolean'] | null),send_intake_forms_reminder?: (Scalars['Boolean'] | null),send_push_before_appointment?: (Scalars['Boolean'] | null),send_reminder_four_days_before?: (Scalars['Boolean'] | null),send_reminder_one_day_before?: (Scalars['Boolean'] | null),send_reminder_one_hour_before?: (Scalars['Boolean'] | null),send_reminder_three_days_before?: (Scalars['Boolean'] | null),send_reminder_two_days_before?: (Scalars['Boolean'] | null),send_reminder_two_hours_before?: (Scalars['Boolean'] | null),send_text_reminder_four_days_before?: (Scalars['Boolean'] | null),send_text_reminder_one_day_before?: (Scalars['Boolean'] | null),send_text_reminder_one_hour_before?: (Scalars['Boolean'] | null),send_text_reminder_three_days_before?: (Scalars['Boolean'] | null),send_text_reminder_two_days_before?: (Scalars['Boolean'] | null),send_text_reminder_two_hours_before?: (Scalars['Boolean'] | null),
/** NOTE: Your organization MUST have its own Twilio account configured to have this feature, and have AppointmentSetting.send_email_before_appointment enabled */
send_text_reminder_five_minutes_before?: (Scalars['Boolean'] | null),set_default_videochat_url?: (Scalars['Boolean'] | null),show_care_plans?: (Scalars['Boolean'] | null),show_cms1500s?: (Scalars['Boolean'] | null),show_faxes?: (Scalars['Boolean'] | null),show_insurance_authorization?: (Scalars['Boolean'] | null),show_office_ally?: (Scalars['Boolean'] | null),show_superbills?: (Scalars['Boolean'] | null),start_time?: (Scalars['String'] | null),
/** Allows times to be grouped by appointment type. */
times_by_appointment_type?: (Scalars['Boolean'] | null),
/** Allows times to be grouped by contact type. */
times_by_contact_type?: (Scalars['Boolean'] | null),
/** Allows times to be grouped by location. */
times_by_location?: (Scalars['Boolean'] | null),use_appointment_type_cpt_units_and_fees?: (Scalars['Boolean'] | null),use_client_credit_system?: (Scalars['Boolean'] | null),use_client_sources?: (Scalars['Boolean'] | null),use_zoom_waiting_room?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null),video_url_default?: (VideoUrlDefaultInput | null)}


/** Autogenerated return type of updateAppointmentSetting. */
export interface updateAppointmentSettingPayloadGenqlSelection{
    appointmentSetting?: AppointmentSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAppointmentTypeCptCode */
export interface updateAppointmentTypeCptCodeInput {appointment_type_id?: (Scalars['ID'] | null),cpt_code_id?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null),units?: (Scalars['String'] | null),fee_per_unit?: (Scalars['Int'] | null),insurance_billing_enabled?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateAppointmentTypeCptCode. */
export interface updateAppointmentTypeCptCodePayloadGenqlSelection{
    appointment_type_cpt_code?: AppointmentTypeCptCodeTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAppointmentType */
export interface updateAppointmentTypeInput {appointment_setting?: (AppointmentTypeAppointmentSettingInput | null),appointment_type_cpt_code?: (AppointmentTypeCptCode | null),auto_increase_charge_for_actual_duration?: (Scalars['Boolean'] | null),bookable_by_groups?: (Scalars['Boolean'] | null),bookable_group_ids?: (Scalars['String'] | null),bookable_without_group?: (Scalars['Boolean'] | null),
/** When set, will be used as the appointment type name shown to clients in the client booking widget UI. */
client_facing_display_name?: (Scalars['String'] | null),
/** When false, clients will not have the ability to self-book this appointment */
clients_can_book?: (Scalars['Boolean'] | null),contact_type_override_in_person?: (ContactTypeOverride | null),contact_type_override_phone_call?: (ContactTypeOverride | null),contact_type_override_video_chat?: (ContactTypeOverride | null),
/** If the provider's organization has this feature, setting this will customize the content of SMS reminder's Healthie sends. */
custom_text_reminder_body?: (Scalars['String'] | null),
/** When true, the client will not be asked to add a reason when booking an appointment of this type */
dont_ask_for_reason?: (Scalars['Boolean'] | null),embed_question_form_id?: (Scalars['String'] | null),form_requests_before_appointment?: ((AppointmentTypeFormConnectionInput | null)[] | null),form_requests_after_appointment?: ((AppointmentTypeFormConnectionInput | null)[] | null),form_requests_after_appointment_booking?: ((AppointmentTypeFormConnectionInput | null)[] | null),has_specific_appointment_settings?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),
/** When true, indicates that this appointment type is used for group appointments */
is_group?: (Scalars['Boolean'] | null),is_waitlist_enabled?: (Scalars['Boolean'] | null),
/** The length of the appointment type in minutes */
length?: (Scalars['Int'] | null),
/** Metadata for an appointment type. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),
/** The name of the appointment type */
name?: (Scalars['String'] | null),pricing?: (Scalars['String'] | null),
/** Available options are CUSTOM and CPT_CODE */
pricing_option?: (Scalars['String'] | null),provider_ids_for_appt_type_connections?: (Scalars['String'] | null),require_in_state_clients?: (Scalars['Boolean'] | null),require_specific_providers?: (Scalars['Boolean'] | null),row_order?: (Scalars['Int'] | null),specific_groups?: (Scalars['Boolean'] | null),user_group_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateAppointmentType. */
export interface updateAppointmentTypePayloadGenqlSelection{
    appointmentType?: AppointmentTypeGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAutoTaskGenerator */
export interface updateAutoTaskGeneratorInput {category?: (Scalars['String'] | null),days_due_from_created_at?: (Scalars['Int'] | null),id?: (Scalars['ID'] | null),is_enabled?: (Scalars['Boolean'] | null),number_description?: (Scalars['String'] | null),number_to_check?: (Scalars['String'] | null),task_description?: (Scalars['String'] | null),user_id_for_task?: (Scalars['String'] | null)}


/** Autogenerated return type of updateAutoTaskGenerator. */
export interface updateAutoTaskGeneratorPayloadGenqlSelection{
    auto_task_generator?: AutoTaskGeneratorGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateAutomatedInsuranceBillingSetting */
export interface updateAutomatedInsuranceBillingSettingInput {auto_create_cms1500s?: (Scalars['Boolean'] | null),auto_submit_cms1500s?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),use_cpt_codes_units_and_fees_with_appointment_types?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateAutomatedInsuranceBillingSetting. */
export interface updateAutomatedInsuranceBillingSettingPayloadGenqlSelection{
    automated_insurance_billing_setting?: AutomatedInsuranceBillingSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateBillingItem */
export interface updateBillingItemInput {amount_paid?: (Scalars['String'] | null),chosen_refund_amount?: (Scalars['String'] | null),created_at?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_canceled?: (Scalars['Boolean'] | null),is_paused?: (Scalars['Boolean'] | null),new_payment_date?: (Scalars['String'] | null),note?: (Scalars['String'] | null),payment_medium?: (Scalars['String'] | null),recipient_id?: (Scalars['ID'] | null),resend_payment?: (Scalars['Boolean'] | null),resend_receipt?: (Scalars['Boolean'] | null),sender_id?: (Scalars['ID'] | null),stripe_idempotency_key?: (Scalars['String'] | null)}


/** Autogenerated return type of updateBillingItem. */
export interface updateBillingItemPayloadGenqlSelection{
    billingItem?: BillingItemGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateBrand */
export interface updateBrandInput {about_description?: (Scalars['String'] | null),bg_color?: (Scalars['String'] | null),brand_email?: (Scalars['String'] | null),brand_name?: (Scalars['String'] | null),brand_phone?: (Scalars['String'] | null),contact_description?: (Scalars['String'] | null),custom_sign_in_path?: (Scalars['String'] | null),display_embed_title?: (Scalars['Boolean'] | null),display_name?: (Scalars['String'] | null),display_package_image?: (Scalars['Boolean'] | null),email_background_color?: (Scalars['String'] | null),embed_primary_color?: (Scalars['String'] | null),facebook?: (Scalars['String'] | null),font_color?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),instagram?: (Scalars['String'] | null),logo?: (Scalars['Upload'] | null),selected_color?: (Scalars['String'] | null),slogan?: (Scalars['String'] | null),tab_accent_color?: (Scalars['String'] | null),titles?: (Scalars['String'] | null),twitter?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}


/** Autogenerated return type of updateBrand. */
export interface updateBrandPayloadGenqlSelection{
    brand?: BrandGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateByTemplate */
export interface updateByTemplateInput {care_plan_id?: (Scalars['ID'] | null),care_plan_template_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateByTemplate. */
export interface updateByTemplatePayloadGenqlSelection{
    care_plan?: CarePlanConnectionGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCalendarViewSetting */
export interface updateCalendarViewSettingInput {appointment_status_filter?: (Scalars['String'] | null),appointment_type_filter?: (Scalars['ID'] | null),availability_contact_type_filter?: (Scalars['String'] | null),availability_location_filter?: (Scalars['ID'] | null),availability_provider_filter?: (Scalars['ID'] | null),availablilty_appt_type_filter?: (Scalars['ID'] | null),calendar_color_scheme_filter?: (Scalars['ID'] | null),calendar_view_filter?: (Scalars['String'] | null),client_confirmation_status?: (Scalars['String'] | null),document_area_sorting?: (Scalars['String'] | null),expand_color_schemes?: (Scalars['Boolean'] | null),expand_filter_appointments?: (Scalars['Boolean'] | null),expand_filter_availabilities?: (Scalars['Boolean'] | null),expand_filter_by_providers?: (Scalars['Boolean'] | null),expand_filter_providers?: (Scalars['Boolean'] | null),expand_show_availabilities?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),location_filter?: (Scalars['ID'] | null),one_time_availabilities?: (Scalars['Boolean'] | null),org_calendar_view_filter?: (Scalars['String'] | null),provider_confirmation_status?: (Scalars['String'] | null),selected_availability_provider_filter?: (Scalars['ID'] | null),selected_availability_providers_filter?: (Scalars['String'] | null),selected_provider_filter?: (Scalars['ID'] | null),selected_providers_filter?: (Scalars['String'] | null),show_appointments?: (Scalars['Boolean'] | null),show_availabilities?: (Scalars['Boolean'] | null),show_synced_appointments?: (Scalars['Boolean'] | null),timezone?: (Scalars['String'] | null),weekly_availabilities?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateCalendarViewSetting. */
export interface updateCalendarViewSettingPayloadGenqlSelection{
    calendar_view_setting?: CalendarViewSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCampaign */
export interface updateCampaignInput {
/** Text displayed in button below email body */
button_text?: (Scalars['String'] | null),
/** URL in email button below email body */
button_url?: (Scalars['String'] | null),
/** Text displayed in email body */
email_body?: (Scalars['String'] | null),
/** Text displayed before client name (example: 'Hello <client_name>', 'Greetings <client_name>', ....) */
email_greeting?: (Scalars['String'] | null),email_subject?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),
/** Image shown above email body */
image?: (Scalars['Upload'] | null),include_archived_clients?: (Scalars['Boolean'] | null),is_draft?: (Scalars['Boolean'] | null),is_email?: (Scalars['Boolean'] | null),is_sms?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),
/** comma-separated example: "user-12, group-23, tag-34" */
recipient_ids?: (Scalars['String'] | null),
/** If true, campaign emails and sms will be sent after mutation */
send_campaign?: (Scalars['Boolean'] | null),
/** SMS text content */
sms_body?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateCampaign. */
export interface updateCampaignPayloadGenqlSelection{
    campaign?: CampaignGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCarePlan */
export interface updateCarePlanInput {description?: (Scalars['String'] | null),doc_id?: (Scalars['ID'] | null),from_template?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),is_creating?: (Scalars['Boolean'] | null),is_hidden?: (Scalars['Boolean'] | null),is_managing_templates?: (Scalars['Boolean'] | null),is_template?: (Scalars['Boolean'] | null),is_updating?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),new_patient_id?: (Scalars['ID'] | null),user_group_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateCarePlan. */
export interface updateCarePlanPayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateChangeHealthAccount */
export interface updateChangeHealthAccountInput {
/** Update the stored password for the ChangeHealthAccount  in Healthie. Note this does not affect the password of the account with Change */
password?: (Scalars['String'] | null)}


/** Autogenerated return type of updateChangeHealthAccount. */
export interface updateChangeHealthAccountPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateChargeBack */
export interface updateChargeBackInput {charge_back_evidence?: (ChargeBackEvidenceInput | null),
/** When true, the evidence will be submitted immediately. Evidence can only be submitted once */
final_submission?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateChargeBack. */
export interface updateChargeBackPayloadGenqlSelection{
    charge_back?: ChargeBackGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateChatSetting */
export interface updateChatSettingInput {auto_welcome_text?: (Scalars['String'] | null),content?: (Scalars['String'] | null),end_date?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_active?: (Scalars['Boolean'] | null),is_recurring_active?: (Scalars['Boolean'] | null),no_end_date?: (Scalars['Boolean'] | null),receive_notifications?: (Scalars['Boolean'] | null),receive_notifications_recurring?: (Scalars['Boolean'] | null),recurring_content?: (Scalars['String'] | null),recurring_days_data?: (RecurringDaysInputObjectType | null),recurring_turned_on?: (Scalars['Boolean'] | null),scheduled_turned_on?: (Scalars['Boolean'] | null),send_auto_welcome?: (Scalars['Boolean'] | null),start_date?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateChatSetting. */
export interface updateChatSettingPayloadGenqlSelection{
    chatSetting?: ChatSettingGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateClient */
export interface updateClientInput {active?: (Scalars['Boolean'] | null),activity_level?: (Scalars['String'] | null),additional_phone_number?: (Scalars['String'] | null),additional_record_identifier?: (Scalars['String'] | null),advance_appointment_prices?: ((AdvanceAppointmentPriceInput | null)[] | null),appointment_type_credits_attributes?: ((AppointmentTypeCreditInput | null)[] | null),auto_charge_enabled?: (Scalars['Boolean'] | null),client_source?: (ClientSourceInput | null),current_email?: (Scalars['String'] | null),diagnoses?: ((DiagnosesInput | null)[] | null),dietitian_id?: (Scalars['String'] | null),dob?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),for_changing_groups?: (Scalars['Boolean'] | null),gender?: (Scalars['String'] | null),gender_identity?: (Scalars['String'] | null),gender_identity_code?: (Scalars['String'] | null),height?: (Scalars['String'] | null),
/** The default Dosespot Clinic ID to use for a patient. Commonly nil, in which case the provider's default is used */
default_dosespot_clinic_id?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_intake_item?: (Scalars['Boolean'] | null),last_name?: (Scalars['String'] | null),legal_name?: (Scalars['String'] | null),location?: (ClientLocationInput | null),locations?: ((ClientLocationInput | null)[] | null),
/** a serialized JSON string of metadata, maximum length of 128,000 */
metadata?: (Scalars['String'] | null),other_provider_ids?: ((Scalars['String'] | null)[] | null),password?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),policies?: ((ClientPolicyInput | null)[] | null),preferred_language_code?: (Scalars['String'] | null),primary_ethnicity_code?: (Scalars['String'] | null),primary_race_code?: (Scalars['String'] | null),pronouns?: (Scalars['String'] | null),quick_notes?: (Scalars['String'] | null),record_identifier?: (Scalars['String'] | null),referrals?: ((ReferralInput | null)[] | null),remove_card_on_file?: (Scalars['Boolean'] | null),requested_form_completion_id?: (Scalars['String'] | null),resend_welcome?: (Scalars['Boolean'] | null),secondary_ethnicity_code?: (Scalars['String'] | null),secondary_race_code?: (Scalars['String'] | null),send_form_request_reminder?: (Scalars['Boolean'] | null),sex?: (Scalars['String'] | null),sexual_orientation_code?: (Scalars['String'] | null),sexual_orientation_other?: (Scalars['String'] | null),skipped_email?: (Scalars['Boolean'] | null),timezone?: (Scalars['String'] | null),
/** Token for credit card, created by Stripe.JS */
token?: (Scalars['String'] | null),user_group_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateClient. */
export interface updateClientPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCms1500 */
export interface updateCms1500Input {accept_assignment?: (Scalars['Boolean'] | null),additional_text?: (Scalars['String'] | null),adjustment?: (Scalars['String'] | null),amount_paid?: (Scalars['String'] | null),amount_reimbursed?: (Scalars['String'] | null),client_responsibility_removed?: (Scalars['Boolean'] | null),client_sig_on_file?: (Scalars['Boolean'] | null),cms1500_policies?: ((Cms1500PolicyInput | null)[] | null),copay?: (Scalars['String'] | null),copay_still_owed?: (Scalars['String'] | null),cpt_codes_cms1500s?: ((CptCodesCms1500Input | null)[] | null),dietitian?: (DietitianInput | null),dietitian_id?: (Scalars['String'] | null),form_answer_group_id?: (Scalars['ID'] | null),icd_codes_cms1500s?: ((IcdCodesCms1500Input | null)[] | null),id?: (Scalars['ID'] | null),include_referrer_information?: (Scalars['Boolean'] | null),insured_sig_on_file?: (Scalars['Boolean'] | null),nineteen_reserved?: (Scalars['String'] | null),organization_info?: (OrganizationInfoInput | null),organization_info_id?: (Scalars['String'] | null),orig_ref_number?: (Scalars['String'] | null),patient?: (PatientInput | null),patient_account_num?: (Scalars['String'] | null),referral_info?: (ReferralInfoInput | null),reimbursed_at?: (Scalars['String'] | null),rendering_provider_other_id?: (Scalars['String'] | null),rendering_provider_other_id_number?: (OtherIdNumberInput | null),resubmission_code?: (Scalars['String'] | null),service_location_id?: (Scalars['String'] | null),status?: (Scalars['String'] | null),tend_reserved?: (Scalars['String'] | null),use_indiv_npi?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateCms1500. */
export interface updateCms1500PayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cms1500?: Cms1500GenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCognitiveStatus */
export interface updateCognitiveStatusInput {cognitive_status?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),start_date?: (Scalars['String'] | null)}


/** Autogenerated return type of updateCognitiveStatus. */
export interface updateCognitiveStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cognitive_status?: CognitiveStatusGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateConversation */
export interface updateConversationInput {
/** The ID of a user closing the conversation */
closed_by_id?: (Scalars['ID'] | null),
/** If TRUE, next time a PRovider closes a conversation will not see the warning pop-up about closing the conversation */
hide_close_confirmation?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),
/** The value of the select all toggle. This overrides simple_added_users and allows you to easily add all of a category to the conversation. Requires simple_added_users to be sent in as well */
select_all_status?: (Scalars['String'] | null),simple_added_users?: (Scalars['String'] | null)}


/** Autogenerated input type of updateConversationMembership */
export interface updateConversationMembershipInput {archived?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),viewed?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateConversationMembership. */
export interface updateConversationMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    conversation_membership?: ConversationMembershipGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of updateConversation. */
export interface updateConversationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    conversation?: ConversationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCourseGroup */
export interface updateCourseGroupInput {id?: (Scalars['ID'] | null),start_at?: (Scalars['String'] | null)}


/** Autogenerated return type of updateCourseGroup. */
export interface updateCourseGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseGroup?: CourseGroupGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCourse */
export interface updateCourseInput {course_members?: ((CourseMembersInput | null)[] | null),course_type?: (Scalars['String'] | null),description?: (Scalars['String'] | null),external_preview_image_url?: (Scalars['String'] | null),formatted_benefits?: (Scalars['String'] | null),id?: (Scalars['String'] | null),late_enroll?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),preview_image?: (Scalars['Upload'] | null),preview_video_content?: (Scalars['String'] | null),start_at?: (Scalars['String'] | null),start_date?: (Scalars['String'] | null),start_on_group_assignment?: (Scalars['Boolean'] | null)}


/** Autogenerated input type of updateCourseItem */
export interface updateCourseItemInput {completion_required_for_next_module?: (Scalars['Boolean'] | null),course_id?: (Scalars['String'] | null),id?: (Scalars['String'] | null),item_id?: (Scalars['String'] | null),item_type?: (Scalars['String'] | null),name?: (Scalars['String'] | null),position?: (Scalars['Int'] | null),scheduled_release?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),video_url?: (Scalars['String'] | null)}


/** Autogenerated return type of updateCourseItem. */
export interface updateCourseItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseItem?: CourseItemGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCourseMembership */
export interface updateCourseMembershipInput {id?: (Scalars['ID'] | null),
/** Defaults to false. When passed in as true, other updates (like updating start_at) are ignored. */
send_nudge?: (Scalars['Boolean'] | null),start_at?: (Scalars['String'] | null)}


/** Autogenerated return type of updateCourseMembership. */
export interface updateCourseMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    courseMembership?: CourseMembershipGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of updateCourse. */
export interface updateCoursePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    course?: CourseGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCustomEmail */
export interface updateCustomEmailInput {email_type?: (Scalars['String'] | null),greeting?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),message_body?: (Scalars['String'] | null),reactivation_wait_days?: (Scalars['String'] | null),subject?: (Scalars['String'] | null)}


/** Autogenerated return type of updateCustomEmail. */
export interface updateCustomEmailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customEmail?: CustomEmailGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCustomFood */
export interface updateCustomFoodInput {id?: (Scalars['ID'] | null),user_id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),nutrients?: (NutrientsInput | null),serving_size?: (ServingSizeInput | null)}


/** Autogenerated return type of updateCustomFood. */
export interface updateCustomFoodPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customFood?: FoodGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCustomModuleForm */
export interface updateCustomModuleFormInput {external_id?: (Scalars['String'] | null),external_id_type?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_archived?: (Scalars['Boolean'] | null),is_video?: (Scalars['Boolean'] | null),
/** Maximum character limit of 10,000. */
metadata?: (Scalars['String'] | null),name?: (Scalars['String'] | null),on_completion_ifs_tag_id?: (Scalars['String'] | null),prefill?: (Scalars['Boolean'] | null),use_for_charting?: (Scalars['Boolean'] | null),use_for_program?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateCustomModuleForm. */
export interface updateCustomModuleFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModuleForm?: CustomModuleFormGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateCustomModule */
export interface updateCustomModuleInput {custom_module_condition?: (CustomModuleConditionInput | null),external_id?: (Scalars['String'] | null),external_id_type?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),index?: (Scalars['Int'] | null),is_custom?: (Scalars['Boolean'] | null),label?: (Scalars['String'] | null),
/** A serialized JSON string of metadata. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),mod_type?: (Scalars['String'] | null),options?: (Scalars['String'] | null),options_array?: ((Scalars['String'] | null)[] | null),parent_custom_module_id?: (Scalars['Int'] | null),required?: (Scalars['Boolean'] | null),sublabel?: (Scalars['String'] | null)}


/** Autogenerated return type of updateCustomModule. */
export interface updateCustomModulePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    customModule?: CustomModuleGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateDocument */
export interface updateDocumentInput {care_plan_id?: (Scalars['ID'] | null),description?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),email_on_welcome?: (Scalars['Boolean'] | null),folder_id?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),include_in_charting?: (Scalars['Boolean'] | null),internal_notes?: (Scalars['String'] | null),
/** Metadata for an document type. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),parse_ccda?: (Scalars['Boolean'] | null),rel_user_id?: (Scalars['ID'] | null),
/** A comma-separated list of doc_share_ids */
share_users?: (Scalars['String'] | null),share_with_rel?: (Scalars['Boolean'] | null),shared_on_welcome?: (Scalars['Boolean'] | null),shared_with_dietitians?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateDocument. */
export interface updateDocumentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    document?: DocumentGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateEntry */
export interface updateEntryInput {category?: (Scalars['String'] | null),created_at?: (Scalars['String'] | null),description?: (Scalars['String'] | null),ed_posthunger?: (Scalars['String'] | null),ed_prehunger?: (Scalars['String'] | null),emotions?: (Scalars['String'] | null),food_items?: (Scalars['String'] | null),hide_from_main_feed?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),image?: (Scalars['Upload'] | null),image_string?: (Scalars['String'] | null),meal_ids?: (Scalars['String'] | null),meal_name?: (Scalars['String'] | null),metric_stat?: (Scalars['String'] | null),other_symptom?: (Scalars['String'] | null),percieved_hungriness?: (Scalars['String'] | null),reflection?: (Scalars['String'] | null),subentries?: ((SubentryInput | null)[] | null),symptoms?: (Scalars['String'] | null),
/** Options are apple_health, google_fit, or fitbit */
third_party_source?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null),viewed?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateEntry. */
export interface updateEntryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    entry?: EntryGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateExternalCalendar */
export interface updateExternalCalendarInput {add_to_calendar?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),pull_from_calendar?: (Scalars['Boolean'] | null),pull_in_event_details?: (Scalars['Boolean'] | null),pulled_in_calendars?: ((Scalars['String'] | null)[] | null)}


/** Autogenerated return type of updateExternalCalendar. */
export interface updateExternalCalendarPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    external_calendar?: ExternalCalendarGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFamilyHistory */
export interface updateFamilyHistoryInput {relationships?: ((Scalars['String'] | null)[] | null),concept_id?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateFamilyHistory. */
export interface updateFamilyHistoryPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    duplicate_family_history_condition?: FamilyHistoryConditionGenqlSelection
    family_history_condition?: FamilyHistoryConditionGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFaxAcctInfo */
export interface updateFaxAcctInfoInput {aes_key?: (Scalars['String'] | null),api_key?: (Scalars['String'] | null),fax_number?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),username?: (Scalars['String'] | null)}


/** Autogenerated return type of updateFaxAcctInfo. */
export interface updateFaxAcctInfoPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFeatureToggle */
export interface updateFeatureToggleInput {allow_apple_health_sync?: (Scalars['Boolean'] | null),allow_clearstep_sync?: (Scalars['Boolean'] | null),allow_community_chat?: (Scalars['Boolean'] | null),allow_direct_chat?: (Scalars['Boolean'] | null),allow_fitbit_sync?: (Scalars['Boolean'] | null),allow_google_fit_sync?: (Scalars['Boolean'] | null),allow_shapa_sync?: (Scalars['Boolean'] | null),allow_withings_sync?: (Scalars['Boolean'] | null),apply_eating_disorder_default?: (Scalars['Boolean'] | null),can_schedule_appointments?: (Scalars['Boolean'] | null),can_track_poop?: (Scalars['Boolean'] | null),can_track_symptoms?: (Scalars['Boolean'] | null),can_track_water_intake?: (Scalars['Boolean'] | null),can_view_care_plan?: (Scalars['Boolean'] | null),can_view_documents?: (Scalars['Boolean'] | null),can_view_forms?: (Scalars['Boolean'] | null),can_view_goals?: (Scalars['Boolean'] | null),can_view_journal_entries?: (Scalars['Boolean'] | null),can_view_packages?: (Scalars['Boolean'] | null),can_view_payments?: (Scalars['Boolean'] | null),can_view_programs?: (Scalars['Boolean'] | null),custom_metric_overrides?: ((CustomMetricOverridesInput | null)[] | null),custom_metrics?: ((CustomMetricInput | null)[] | null),date_range_preference?: (Scalars['String'] | null),default_water_intake?: (Scalars['String'] | null),do_not_auto_submit_cms1500?: (Scalars['Boolean'] | null),email_notification_frequency?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),last_journal_from_date?: (Scalars['String'] | null),last_journal_to_date?: (Scalars['String'] | null),push_notification_frequency?: (Scalars['String'] | null),send_unpaid_invoice_reminder?: (Scalars['Boolean'] | null),seperate_provider_metric_from_client?: (Scalars['Boolean'] | null),show_a1c_metric?: (Scalars['Boolean'] | null),show_bf_percent_metric?: (Scalars['Boolean'] | null),show_blood_pressure_metric?: (Scalars['Boolean'] | null),show_blood_sugar_metric?: (Scalars['Boolean'] | null),show_bmi_graph?: (Scalars['Boolean'] | null),show_bmi_growth_chart?: (Scalars['Boolean'] | null),show_bmr_metric?: (Scalars['Boolean'] | null),show_body_temperature_metric?: (Scalars['Boolean'] | null),show_client_a1c_metric?: (Scalars['Boolean'] | null),show_client_bf_percent_metric?: (Scalars['Boolean'] | null),show_client_blood_pressure_metric?: (Scalars['Boolean'] | null),show_client_blood_sugar_metric?: (Scalars['Boolean'] | null),show_client_bmi_graph?: (Scalars['Boolean'] | null),show_client_bmi_growth_chart?: (Scalars['Boolean'] | null),show_client_bmr_metric?: (Scalars['Boolean'] | null),show_client_body_temperature_metric?: (Scalars['Boolean'] | null),show_client_harris_benedict?: (Scalars['Boolean'] | null),show_client_height_growth_chart?: (Scalars['Boolean'] | null),show_client_ox_sat_metric?: (Scalars['Boolean'] | null),show_client_waist_circumference_metric?: (Scalars['Boolean'] | null),show_client_weight_growth_chart?: (Scalars['Boolean'] | null),show_client_weight_metric?: (Scalars['Boolean'] | null),show_ed_posthunger?: (Scalars['Boolean'] | null),show_ed_prehunger?: (Scalars['Boolean'] | null),show_food?: (Scalars['Boolean'] | null),show_food_category?: (Scalars['Boolean'] | null),show_food_emotion?: (Scalars['Boolean'] | null),show_food_reflection?: (Scalars['Boolean'] | null),show_harris_benedict?: (Scalars['Boolean'] | null),show_healthiness?: (Scalars['Boolean'] | null),show_height_graph?: (Scalars['Boolean'] | null),show_height_growth_chart?: (Scalars['Boolean'] | null),show_metric?: (Scalars['Boolean'] | null),show_mirror?: (Scalars['Boolean'] | null),show_normal_hunger?: (Scalars['Boolean'] | null),show_note?: (Scalars['Boolean'] | null),show_note_emotion?: (Scalars['Boolean'] | null),show_nutrients_tracking?: (Scalars['Boolean'] | null),show_ox_sat_metric?: (Scalars['Boolean'] | null),show_waist_circumference_metric?: (Scalars['Boolean'] | null),show_weight_growth_chart?: (Scalars['Boolean'] | null),show_weight_metric?: (Scalars['Boolean'] | null),show_workout?: (Scalars['Boolean'] | null),use_metric_system?: (Scalars['Boolean'] | null),user_id?: (Scalars['ID'] | null),view_not_track?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateFeatureToggle. */
export interface updateFeatureTogglePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    feature_toggle?: FeatureToggleGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFitbit */
export interface updateFitbitInput {access_token?: (Scalars['String'] | null),expires_at?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),last_sync_date?: (Scalars['String'] | null),refresh_token?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateFitbit. */
export interface updateFitbitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    fitbit?: FitbitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFolder */
export interface updateFolderInput {email_on_welcome?: (Scalars['Boolean'] | null),folder_id?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),share_users?: (Scalars['String'] | null),share_with_rel?: (Scalars['Boolean'] | null),shared_on_welcome?: (Scalars['Boolean'] | null),shared_with_dietitians?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateFolder. */
export interface updateFolderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    folder?: FolderGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFormAnswerGroup */
export interface updateFormAnswerGroupInput {course_item_id?: (Scalars['ID'] | null),date?: (Scalars['String'] | null),dismissed_lock_charting_note_warning?: (Scalars['Boolean'] | null),external_id?: (Scalars['String'] | null),finished?: (Scalars['Boolean'] | null),form_answers?: ((FormAnswerInput | null)[] | null),formatted_date?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),individual_client_notes?: ((IndividualClientNoteInput | null)[] | null),marked_complete?: (Scalars['Boolean'] | null),marked_locked?: (Scalars['Boolean'] | null),
/** Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),name?: (Scalars['String'] | null),
/** Format ex.: "11 30" */
time?: (Scalars['String'] | null),
/** The associated appointment (if any) */
appointment_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateFormAnswerGroup. */
export interface updateFormAnswerGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    form_answer_group?: FormAnswerGroupGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateFunctionalStatus */
export interface updateFunctionalStatusInput {functional_condition?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),start_date?: (Scalars['String'] | null)}


/** Autogenerated return type of updateFunctionalStatus. */
export interface updateFunctionalStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    functional_status?: FunctionalStatusGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateGoal */
export interface updateGoalInput {created_user_id?: (Scalars['String'] | null),description?: (Scalars['String'] | null),
/** The date the goal should end - format should be: yyyy-mm-dd */
due_date?: (Scalars['String'] | null),
/** If true, goal was submitted via the update form */
from_update_form?: (Scalars['Boolean'] | null),id?: (Scalars['String'] | null),name?: (Scalars['String'] | null),
/** If true, update goal for program */
program_goal?: (Scalars['Boolean'] | null),reminder?: (ReminderInput | null),repeat?: (Scalars['String'] | null),
/** The id of goal template used to create this goal */
source_template_id?: (Scalars['String'] | null),
/** The date the goal should start - format should be: yyyy-mm-dd */
start_on?: (Scalars['String'] | null),subgoals?: ((SubgoalInput | null)[] | null),
/** Title hyperlink. Opens when the name is clicked on. */
title_link?: (Scalars['String'] | null),
/** If true, use this goal as a template(favorite) */
use_as_template?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateGoal. */
export interface updateGoalPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    goal?: GoalGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateGoogleFit */
export interface updateGoogleFitInput {access_token?: (Scalars['String'] | null),expiry_date?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_enabled?: (Scalars['Boolean'] | null),last_sync_date?: (Scalars['String'] | null),refresh_token?: (Scalars['String'] | null)}


/** Autogenerated return type of updateGoogleFit. */
export interface updateGoogleFitPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    google_fit?: GoogleFitGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateGroupCarePlan */
export interface updateGroupCarePlanInput {id?: (Scalars['ID'] | null),is_active?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateGroupCarePlan. */
export interface updateGroupCarePlanPayloadGenqlSelection{
    carePlan?: CarePlanGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateHealthConcern */
export interface updateHealthConcernInput {code?: (Scalars['String'] | null),description?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),effective_time?: (Scalars['String'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateHealthConcern. */
export interface updateHealthConcernPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    health_concern?: HealthConcernGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateHuman */
export interface updateHumanInput {current_user_id?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateHuman. */
export interface updateHumanPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    human?: HumanGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateImmunization */
export interface updateImmunizationInput {additional_notes?: (Scalars['String'] | null),cvx_code?: (Scalars['Int'] | null),id?: (Scalars['ID'] | null),received_at?: (Scalars['String'] | null),status?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),vaccine_name?: (Scalars['String'] | null)}


/** Autogenerated return type of updateImmunization. */
export interface updateImmunizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    immunization?: ImmunizationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateImplantableDeviceUser */
export interface updateImplantableDeviceUserInput {id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null),udi?: (Scalars['String'] | null),active?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null)}


/** Autogenerated return type of updateImplantableDeviceUser. */
export interface updateImplantableDeviceUserPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    implantable_device_user?: ImplantableDeviceUserGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateInsuranceAuthorization */
export interface updateInsuranceAuthorizationInput {authorization_number?: (Scalars['String'] | null),end_on?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),policy_id?: (Scalars['String'] | null),start_on?: (Scalars['String'] | null),unit_type?: (Scalars['String'] | null),units_authorized?: (Scalars['String'] | null),units_used?: (Scalars['String'] | null),visits_authorized?: (Scalars['String'] | null),visits_used?: (Scalars['String'] | null)}


/** Autogenerated return type of updateInsuranceAuthorization. */
export interface updateInsuranceAuthorizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    insuranceAuthorization?: InsuranceAuthorizationTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateInsurancePlan */
export interface updateInsurancePlanInput {add_as_accepted_insurance_plan?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),payer_id?: (Scalars['String'] | null),payer_name?: (Scalars['String'] | null)}


/** Autogenerated return type of updateInsurancePlan. */
export interface updateInsurancePlanPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    insurance_plan?: InsurancePlanGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateLabOrder */
export interface updateLabOrderInput {appt_confirmation_code?: (Scalars['String'] | null),force_appointment_reload?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),patient_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateLabOrder. */
export interface updateLabOrderPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    currentUserNotificationsCount?: UserNotificationsCountGenqlSelection
    lab_order?: LabOrderGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateLocation */
export interface updateLocationInput {city?: (Scalars['String'] | null),country?: (Scalars['String'] | null),id?: (Scalars['String'] | null),line1?: (Scalars['String'] | null),line2?: (Scalars['String'] | null),name?: (Scalars['String'] | null),npi?: (Scalars['String'] | null),other_id?: (Scalars['String'] | null),other_id_qual?: (Scalars['String'] | null),place_of_service_id?: (Scalars['String'] | null),state?: (Scalars['String'] | null),zip?: (Scalars['String'] | null)}


/** Autogenerated return type of updateLocation. */
export interface updateLocationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    location?: LocationGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateMeal */
export interface updateMealInput {id?: (Scalars['ID'] | null),user_id?: (Scalars['String'] | null),food_items?: (Scalars['String'] | null),name?: (Scalars['String'] | null)}


/** Autogenerated return type of updateMeal. */
export interface updateMealPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    meal?: MealGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateMedication */
export interface updateMedicationInput {active?: (Scalars['Boolean'] | null),code?: (Scalars['String'] | null),comment?: (Scalars['String'] | null),custom_name?: (Scalars['String'] | null),directions?: (Scalars['String'] | null),dosage?: (Scalars['String'] | null),end_date?: (Scalars['String'] | null),frequency?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),route?: (Scalars['String'] | null),start_date?: (Scalars['String'] | null)}


/** Autogenerated return type of updateMedication. */
export interface updateMedicationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    medication?: MedicationTypeGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateNote */
export interface updateNoteInput {attached_audio?: (Scalars['Upload'] | null),attached_document?: (Scalars['Upload'] | null),attached_image?: (Scalars['Upload'] | null),attached_image_string?: (Scalars['String'] | null),content?: (Scalars['String'] | null),conversation_id?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),scheduled_at?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateNote. */
export interface updateNotePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    note?: NoteGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateNoteScheduler */
export interface updateNoteSchedulerInput {id?: (Scalars['ID'] | null),participant_ids?: (Scalars['String'] | null),
/** The value of the select all toggle. This overrides participant_ids and allows you to easily add all of a category to the conversation. Requires participant_ids to be sent in as well */
select_all_status?: (Scalars['String'] | null)}


/** Autogenerated return type of updateNoteScheduler. */
export interface updateNoteSchedulerPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    noteScheduler?: NoteSchedulerGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateNotificationContact */
export interface updateNotificationContactInput {client_portal_access?: (Scalars['Boolean'] | null),client_portal_setting?: (ClientPortalSettingInput | null),
/** Valid values: adult, minor */
contact_type?: (Scalars['String'] | null),copy_notifications?: (Scalars['Boolean'] | null),email?: (Scalars['String'] | null),emergency?: (Scalars['Boolean'] | null),first_name?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),last_name?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),
/** Valid values: caregiver, child, dependent, family_member, legal_guardian, is_parent, spouse, other */
relationship?: (Scalars['String'] | null)}


/** Autogenerated return type of updateNotificationContact. */
export interface updateNotificationContactPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notificationContact?: NotificationContactGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateNotification */
export interface updateNotificationInput {id?: (Scalars['ID'] | null),read?: (Scalars['Boolean'] | null),seen?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateNotification. */
export interface updateNotificationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    currentUser?: UserGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notification?: NotificationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateNotificationSetting */
export interface updateNotificationSettingInput {id?: (Scalars['ID'] | null),
/** An option of receiving pdates and special offers [email/sms] */
marketing_communcation_preference?: (Scalars['String'] | null),
/** Send an email when a course module is completed */
notification_on_module_completion?: (Scalars['Boolean'] | null),
/** Receive updates and special offers */
receive_updates_and_offers?: (Scalars['Boolean'] | null),send_comment_emails?: (Scalars['Boolean'] | null),
/** Get a push notification when there is a new comment */
send_comment_push?: (Scalars['Boolean'] | null),
/** Send an email when a client completes a program */
send_course_complete_email?: (Scalars['Boolean'] | null),send_email_before_appointment?: (Scalars['Boolean'] | null),send_email_on_appointment_book?: (Scalars['Boolean'] | null),send_email_on_appointment_cancel?: (Scalars['Boolean'] | null),
/** Send an email to provider when client has been assigned */
send_email_on_client_has_been_assigned_to_you?: (Scalars['Boolean'] | null),send_email_on_fax_delivery_failure?: (Scalars['Boolean'] | null),send_email_on_fax_received?: (Scalars['Boolean'] | null),send_email_on_intake_flow_complete?: (Scalars['Boolean'] | null),send_email_on_intake_flow_item_complete?: (Scalars['Boolean'] | null),send_email_on_intake_flow_start?: (Scalars['Boolean'] | null),send_email_on_new_document?: (Scalars['Boolean'] | null),send_email_on_new_folder?: (Scalars['Boolean'] | null),
/** Send an email when a client purchases a package */
send_email_on_package_purchase?: (Scalars['Boolean'] | null),
/** Get an email when a scheduled payment fails */
send_email_on_scheduled_payment_failed?: (Scalars['Boolean'] | null),
/** Send an email to primary account holder when subscription payment is made */
send_email_receipt_for_subscription_payment?: (Scalars['Boolean'] | null),
/** Get an email when provider adds an emoji to a journal entry */
send_emoji_email?: (Scalars['Boolean'] | null),
/** Get a push notification when provider adds an emoji to a journal entry */
send_emoji_push?: (Scalars['Boolean'] | null),send_entry_emails?: (Scalars['Boolean'] | null),
/** Send an email to client when reminder to complete goal checked */
send_goal_reminder_email?: (Scalars['Boolean'] | null),
/** Send a push notification to client when reminder to complete goal checked */
send_goal_reminder_push?: (Scalars['Boolean'] | null),
/** Get an email notification when there is a new message in a group chat */
send_group_message_emails?: (Scalars['Boolean'] | null),
/** Get a push notification when there is a new message in a group chat */
send_group_message_push?: (Scalars['Boolean'] | null),
/** When true, it will send an expiration notification to the provider when their client insurance is about to expire */
send_insurance_expiry_notifications?: (Scalars['Boolean'] | null),send_message_emails?: (Scalars['Boolean'] | null),
/** Get a push notification when there is a new message */
send_message_push?: (Scalars['Boolean'] | null),send_new_clients_emails?: (Scalars['Boolean'] | null),
/** When true and client updated insurance via client form, the assigned provider will be notified */
send_new_insurance_added_notifications?: (Scalars['Boolean'] | null),
/** Send an email to client when new program module is available */
send_new_module_email?: (Scalars['Boolean'] | null),
/** Send a push notification to client when new program module is available */
send_new_module_push?: (Scalars['Boolean'] | null),
/** Get a push notification 5 minutes before the appointment */
send_push_before_appointment?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateNotificationSetting. */
export interface updateNotificationSettingPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    notificationSetting?: NotificationSettingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOffering */
export interface updateOfferingInput {archived?: (Scalars['Boolean'] | null),billing_frequency?: (Scalars['String'] | null),can_be_gifted?: (Scalars['Boolean'] | null),charge_immediately?: (Scalars['Boolean'] | null),course_id?: (Scalars['ID'] | null),course_ids?: (Scalars['String'] | null),default_selection_image_url?: (Scalars['String'] | null),description?: (Scalars['String'] | null),embed_question_form_id?: (Scalars['String'] | null),first_time_payment?: (Scalars['String'] | null),has_first_payment?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),lab_option_ids?: (Scalars['String'] | null),living_plate_meal_plan_id?: (Scalars['String'] | null),max_purchases?: (Scalars['String'] | null),name?: (Scalars['String'] | null),offering_image?: (OfferingImageUpload | null),offering_includes?: ((OfferingIncludesFields | null)[] | null),offering_products?: ((OfferingProductInput | null)[] | null),override_group_on_purchase?: (Scalars['Boolean'] | null),price?: (Scalars['String'] | null),repeat_times?: (Scalars['String'] | null),require_booking_purchase?: (Scalars['Boolean'] | null),row_order?: (Scalars['Int'] | null),selected_image_id?: (Scalars['ID'] | null),show_free_text?: (Scalars['Boolean'] | null),show_offering?: (Scalars['Boolean'] | null),user_group_id?: (Scalars['ID'] | null),user_group_ids?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null),video_url?: (Scalars['String'] | null),visibility_status?: (Scalars['String'] | null)}


/** Autogenerated return type of updateOffering. */
export interface updateOfferingPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    offering?: OfferingGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOfficeallySftpAccount */
export interface updateOfficeallySftpAccountInput {ftp_url?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_enabled?: (Scalars['Boolean'] | null),password?: (Scalars['String'] | null),username?: (Scalars['String'] | null)}


/** Autogenerated return type of updateOfficeallySftpAccount. */
export interface updateOfficeallySftpAccountPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    officeally_sftp_account?: OfficeallySftpAccountGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOnboardingFlow */
export interface updateOnboardingFlowInput {groups_to_use_onboarding_flow?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null)}


/** Autogenerated return type of updateOnboardingFlow. */
export interface updateOnboardingFlowPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    onboardingFlow?: OnboardingFlowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOnboardingItem */
export interface updateOnboardingItemInput {billing_disclaimer?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_skippable?: (Scalars['Boolean'] | null),item_id?: (Scalars['String'] | null),item_type?: (Scalars['String'] | null),onboarding_flow_id?: (Scalars['String'] | null),photo_id_disclaimer?: (Scalars['String'] | null),policy_disclaimer?: (Scalars['String'] | null),row_order?: (Scalars['Int'] | null),welcome_text?: (Scalars['String'] | null)}


/** Autogenerated return type of updateOnboardingItem. */
export interface updateOnboardingItemPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    onboardingItem?: OnboardingItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOrgOwner */
export interface updateOrgOwnerInput {
/** The ID of the Org Member to Become Owner */
org_member_id: Scalars['ID']}


/** Autogenerated return type of updateOrgOwner. */
export interface updateOrgOwnerPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    /** The success string */
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOrganizationCptCode */
export interface updateOrganizationCptCodeInput {cpt_code_id?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null),organization_id?: (Scalars['ID'] | null),price_per_unit?: (Scalars['String'] | null)}


/** Autogenerated return type of updateOrganizationCptCode. */
export interface updateOrganizationCptCodePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organization_cpt_code?: OrganizationCptCodeTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOrganization */
export interface updateOrganizationInput {id?: (Scalars['ID'] | null),organization_info?: (PrimaryOrganizationInfoInput | null)}


/** Autogenerated input type of updateOrganizationMember */
export interface updateOrganizationMemberInput {additional_record_identifier?: (Scalars['String'] | null),avatar?: (Scalars['Upload'] | null),
/** image in Base64 format */
avatar_string?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),last_name?: (Scalars['String'] | null),
/** A serialized JSON string of metadata. Maximum character limit of 10,000. */
metadata?: (Scalars['String'] | null),npi?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),provider_appointment_locations?: ((ProviderAppointmentLocationsInput | null)[] | null),qualifications?: (Scalars['String'] | null),record_identifier?: (Scalars['String'] | null),scheduling_priority?: (Scalars['String'] | null),state_licenses?: ((StateLicensesInput | null)[] | null),timezone?: (Scalars['String'] | null)}


/** Autogenerated return type of updateOrganizationMember. */
export interface updateOrganizationMemberPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateOrganizationMembership */
export interface updateOrganizationMembershipInput {action_for_appointments?: (Scalars['String'] | null),active?: (Scalars['Boolean'] | null),allow_group_level_actions?: (Scalars['Boolean'] | null),allow_self_scheduling_in_care_team?: (Scalars['Boolean'] | null),auto_create_convo_for_care_team?: (Scalars['Boolean'] | null),can_access_calendar_quick_share?: (Scalars['Boolean'] | null),can_access_to_members_chat?: (Scalars['Boolean'] | null),can_add_clients?: (Scalars['Boolean'] | null),can_add_members?: (Scalars['Boolean'] | null),can_add_members_to_chat?: (Scalars['Boolean'] | null),can_assign_tasks_to_all_org_members?: (Scalars['Boolean'] | null),can_be_care_team_member?: (Scalars['Boolean'] | null),can_charge_clients?: (Scalars['Boolean'] | null),can_delete_charting_notes?: (Scalars['Boolean'] | null),can_delete_faxes?: (Scalars['Boolean'] | null),can_edit_appointment_types?: (Scalars['Boolean'] | null),can_edit_calendar?: (Scalars['Boolean'] | null),can_edit_credit?: (Scalars['Boolean'] | null),can_edit_docs?: (Scalars['Boolean'] | null),can_edit_education?: (Scalars['Boolean'] | null),can_edit_forms?: (Scalars['Boolean'] | null),can_edit_members?: (Scalars['Boolean'] | null),can_edit_packages?: (Scalars['Boolean'] | null),can_edit_products?: (Scalars['Boolean'] | null),can_edit_settings?: (Scalars['Boolean'] | null),can_enroll_clients_to_programs?: (Scalars['Boolean'] | null),can_lock_form_answer_groups?: (Scalars['Boolean'] | null),can_lock_others_charting_notes?: (Scalars['Boolean'] | null),can_lock_own_charting_notes?: (Scalars['Boolean'] | null),can_mark_assigned_tasks_to_other_org_members_as_completed?: (Scalars['Boolean'] | null),can_merge_clients?: (Scalars['Boolean'] | null),can_order_labs?: (Scalars['Boolean'] | null),can_remove_client?: (Scalars['Boolean'] | null),can_rename_and_delete_tags?: (Scalars['Boolean'] | null),can_see_billing?: (Scalars['Boolean'] | null),can_see_calendar?: (Scalars['Boolean'] | null),can_see_clients?: (Scalars['Boolean'] | null),can_see_docs?: (Scalars['Boolean'] | null),can_see_faxes?: (Scalars['Boolean'] | null),can_see_fullscript_tab?: (Scalars['Boolean'] | null),can_see_sent_faxes?: (Scalars['Boolean'] | null),can_see_option_to_use_erx_dosespot?: (Scalars['Boolean'] | null),can_see_transfers?: (Scalars['Boolean'] | null),can_set_client_password?: (Scalars['Boolean'] | null),can_share_documents_and_folders_with_org_members?: (Scalars['Boolean'] | null),can_sign_others_charting_notes?: (Scalars['Boolean'] | null),can_sign_own_charting_notes?: (Scalars['Boolean'] | null),can_submit_cms_1500s_to_change_health?: (Scalars['Boolean'] | null),can_submit_cms_1500s_to_office_ally?: (Scalars['Boolean'] | null),can_view_all_org_members_tasks?: (Scalars['Boolean'] | null),can_view_cms1500s?: (Scalars['Boolean'] | null),can_view_goal_templates?: (Scalars['Boolean'] | null),can_view_labs?: (Scalars['Boolean'] | null),can_view_org_dashboard?: (Scalars['Boolean'] | null),can_view_reports?: (Scalars['Boolean'] | null),can_view_super_bills?: (Scalars['Boolean'] | null),can_write_org_addendums?: (Scalars['Boolean'] | null),email?: (Scalars['String'] | null),erx_dosespot_role?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),fullscript_practitioner_id?: (Scalars['String'] | null),gets_failed_fax_notif?: (Scalars['Boolean'] | null),gets_fax_notif?: (Scalars['Boolean'] | null),has_own_branding?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),is_admin?: (Scalars['Boolean'] | null),is_developer?: (Scalars['Boolean'] | null),is_provider?: (Scalars['Boolean'] | null),last_name?: (Scalars['String'] | null),notify_any_client_activity?: (Scalars['Boolean'] | null),notify_on_book?: (Scalars['Boolean'] | null),notify_on_cancel?: (Scalars['Boolean'] | null),notify_on_payment_failure?: (Scalars['Boolean'] | null),
/** Options are ["Standard", "Support"] */
org_role?: (Scalars['String'] | null),
/** Selected permission template */
permission_template_id?: (Scalars['ID'] | null),phone_number?: (Scalars['String'] | null),position?: (Scalars['Int'] | null),professions?: ((ProfessionsInput | null)[] | null),provider_to_receive_clients?: (Scalars['ID'] | null),
/** Updates the qualifications of the org member (optional) */
qualifications?: (Scalars['String'] | null),request_eligibility_checks?: (Scalars['Boolean'] | null),scheduling_priority?: (Scalars['String'] | null),sees_all_billing?: (Scalars['Boolean'] | null),sees_all_clients?: (Scalars['Boolean'] | null),selected_licensed_in_filter?: ((Scalars['String'] | null)[] | null),selected_locations_filter?: ((Scalars['String'] | null)[] | null),selected_statuses_filter?: ((Scalars['String'] | null)[] | null),selected_tags_filter?: ((Scalars['String'] | null)[] | null),send_email_on_intake_flow_complete?: (Scalars['Boolean'] | null),send_email_on_intake_flow_start?: (Scalars['Boolean'] | null),share_appointment_types?: (Scalars['Boolean'] | null),share_custom_metrics?: (Scalars['Boolean'] | null),share_fullscript?: (Scalars['Boolean'] | null),share_goal_templates?: (Scalars['Boolean'] | null),share_packages?: (Scalars['Boolean'] | null),share_smart_phrases?: (Scalars['Boolean'] | null),share_user_groups?: (Scalars['Boolean'] | null),show_availability_first?: (Scalars['Boolean'] | null),show_org_tab?: (Scalars['Boolean'] | null),specialties?: ((SpecialtiesInput | null)[] | null),start_conversation_with?: (Scalars['Boolean'] | null),
/** Updates the timezone of the org member (optional) */
timezone?: (Scalars['String'] | null),
/** Lets you add extra metadata about the organization membership. Not used in Healthie UI */
title?: (Scalars['String'] | null),
/** Indicate that the user applied a permission template on this update */
permission_template_applied?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateOrganizationMembership. */
export interface updateOrganizationMembershipPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organizationMembership?: OrganizationMembershipGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated return type of updateOrganization. */
export interface updateOrganizationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    organization?: OrganizationGenqlSelection
    updated_organization_info?: OrganizationInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updatePermissionTemplate */
export interface updatePermissionTemplateInput {allow_self_scheduling_in_care_team?: (Scalars['Boolean'] | null),auto_create_convo_for_care_team?: (Scalars['Boolean'] | null),can_access_calendar_quick_share?: (Scalars['Boolean'] | null),can_access_to_members_chat?: (Scalars['Boolean'] | null),can_add_clients?: (Scalars['Boolean'] | null),can_add_members?: (Scalars['Boolean'] | null),can_add_members_to_chat?: (Scalars['Boolean'] | null),can_assign_tasks_to_all_org_members?: (Scalars['Boolean'] | null),can_be_care_team_member?: (Scalars['Boolean'] | null),can_charge_clients?: (Scalars['Boolean'] | null),can_delete_charting_notes?: (Scalars['Boolean'] | null),can_delete_faxes?: (Scalars['Boolean'] | null),can_edit_appointment_types?: (Scalars['Boolean'] | null),can_edit_calendar?: (Scalars['Boolean'] | null),can_edit_credit?: (Scalars['Boolean'] | null),can_edit_docs?: (Scalars['Boolean'] | null),can_edit_education?: (Scalars['Boolean'] | null),can_edit_forms?: (Scalars['Boolean'] | null),can_edit_members?: (Scalars['Boolean'] | null),can_edit_packages?: (Scalars['Boolean'] | null),can_edit_products?: (Scalars['Boolean'] | null),can_edit_settings?: (Scalars['Boolean'] | null),can_enroll_clients_to_programs?: (Scalars['Boolean'] | null),can_lock_others_charting_notes?: (Scalars['Boolean'] | null),can_lock_own_charting_notes?: (Scalars['Boolean'] | null),can_mark_assigned_tasks_to_other_org_members_as_completed?: (Scalars['Boolean'] | null),can_merge_clients?: (Scalars['Boolean'] | null),can_order_labs?: (Scalars['Boolean'] | null),can_view_labs?: (Scalars['Boolean'] | null),can_remove_client?: (Scalars['Boolean'] | null),can_rename_and_delete_tags?: (Scalars['Boolean'] | null),can_see_billing?: (Scalars['Boolean'] | null),can_see_calendar?: (Scalars['Boolean'] | null),can_see_clients?: (Scalars['Boolean'] | null),can_see_docs?: (Scalars['Boolean'] | null),can_see_faxes?: (Scalars['Boolean'] | null),can_see_fullscript_tab?: (Scalars['Boolean'] | null),can_see_sent_faxes?: (Scalars['Boolean'] | null),can_see_transfers?: (Scalars['Boolean'] | null),can_set_client_password?: (Scalars['Boolean'] | null),can_share_documents_and_folders_with_org_members?: (Scalars['Boolean'] | null),can_sign_others_charting_notes?: (Scalars['Boolean'] | null),can_sign_own_charting_notes?: (Scalars['Boolean'] | null),can_submit_cms_1500s_to_change_health?: (Scalars['Boolean'] | null),can_submit_cms_1500s_to_office_ally?: (Scalars['Boolean'] | null),can_view_all_org_members_tasks?: (Scalars['Boolean'] | null),can_view_cms1500s?: (Scalars['Boolean'] | null),can_view_goal_templates?: (Scalars['Boolean'] | null),can_view_org_dashboard?: (Scalars['Boolean'] | null),can_view_reports?: (Scalars['Boolean'] | null),can_view_super_bills?: (Scalars['Boolean'] | null),can_write_org_addendums?: (Scalars['Boolean'] | null),gets_failed_fax_notif?: (Scalars['Boolean'] | null),gets_fax_notif?: (Scalars['Boolean'] | null),has_own_branding?: (Scalars['Boolean'] | null),id?: (Scalars['ID'] | null),is_admin?: (Scalars['Boolean'] | null),is_provider?: (Scalars['Boolean'] | null),is_developer?: (Scalars['Boolean'] | null),name?: (Scalars['String'] | null),notify_any_client_activity?: (Scalars['Boolean'] | null),notify_on_book?: (Scalars['Boolean'] | null),notify_on_cancel?: (Scalars['Boolean'] | null),notify_on_payment_failure?: (Scalars['Boolean'] | null),org_role?: (Scalars['String'] | null),organization_id?: (Scalars['ID'] | null),request_eligibility_checks?: (Scalars['Boolean'] | null),sees_all_billing?: (Scalars['Boolean'] | null),sees_all_clients?: (Scalars['Boolean'] | null),send_email_on_intake_flow_complete?: (Scalars['Boolean'] | null),send_email_on_intake_flow_start?: (Scalars['Boolean'] | null),share_appointment_types?: (Scalars['Boolean'] | null),share_custom_metrics?: (Scalars['Boolean'] | null),share_fullscript?: (Scalars['Boolean'] | null),share_goal_templates?: (Scalars['Boolean'] | null),share_packages?: (Scalars['Boolean'] | null),share_smart_phrases?: (Scalars['Boolean'] | null),show_availability_first?: (Scalars['Boolean'] | null),show_org_tab?: (Scalars['Boolean'] | null),start_conversation_with?: (Scalars['Boolean'] | null),allow_group_level_actions?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updatePermissionTemplate. */
export interface updatePermissionTemplatePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    permissionTemplate?: PermissionTemplateTypeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updatePolicyMutation */
export interface updatePolicyMutationInput {benefits?: ((BenefitInput | null)[] | null),call_reference?: (CallReferenceInput | null),cpt_codes_policies?: ((CptCodesPolicyInput | null)[] | null),effective_end?: (Scalars['String'] | null),effective_start?: (Scalars['String'] | null),holder_dob?: (Scalars['String'] | null),holder_first?: (Scalars['String'] | null),holder_gender?: (Scalars['String'] | null),holder_last?: (Scalars['String'] | null),holder_mi?: (Scalars['String'] | null),holder_phone?: (Scalars['String'] | null),icd_codes_policies?: ((IcdCodesPolicyInput | null)[] | null),id?: (Scalars['ID'] | null),insurance_authorization?: (InsuranceAuthorizationInput | null),insurance_authorization_required?: (Scalars['Boolean'] | null),insurance_card_back_id?: (Scalars['String'] | null),insurance_card_front_id?: (Scalars['String'] | null),notes?: (Scalars['String'] | null),policy_phone_number?: (Scalars['String'] | null),priority_type?: (Scalars['String'] | null),referral_required?: (Scalars['Boolean'] | null),referring_physician_id?: (Scalars['String'] | null),same_address_as_client?: (Scalars['Boolean'] | null),type_string?: (Scalars['String'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updatePolicyMutation. */
export interface updatePolicyMutationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    policy?: PolicyGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateProcedure */
export interface updateProcedureInput {code?: (Scalars['String'] | null),code_system_name?: (Scalars['String'] | null),cpt_code_id?: (Scalars['ID'] | null),display_name?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),procedure_end_datetime?: (Scalars['String'] | null),procedure_start_datetime?: (Scalars['String'] | null),status?: (Scalars['String'] | null),target_site?: (Scalars['String'] | null)}


/** Autogenerated return type of updateProcedure. */
export interface updateProcedurePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    procedure?: ProcedureGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateProduct */
export interface updateProductInput {id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),price?: (Scalars['String'] | null),remaining_quantity?: (Scalars['String'] | null),tax_description?: (Scalars['String'] | null),tax_rate?: (Scalars['String'] | null),unlimited_quantity?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateProduct. */
export interface updateProductPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    product?: ProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateProviderCptCodes */
export interface updateProviderCptCodesInput {provider_cpt_codes?: ((ProviderCptCodeInput | null)[] | null),provider_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateProviderCptCodes. */
export interface updateProviderCptCodesPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateReceivedFax */
export interface updateReceivedFaxInput {archived?: (Scalars['Boolean'] | null),comments?: (Scalars['String'] | null),id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateReceivedFax. */
export interface updateReceivedFaxPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    receivedFax?: ReceivedFaxGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateRecommendation */
export interface updateRecommendationInput {id?: (Scalars['ID'] | null),recommendation_body?: (Scalars['String'] | null),recommendation_type?: (Scalars['String'] | null)}


/** Autogenerated return type of updateRecommendation. */
export interface updateRecommendationPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    recommendation?: RecommendationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateRecurringForm */
export interface updateRecurringFormInput {ends_on?: (Scalars['String'] | null),frequency?: (Scalars['String'] | null),hour?: (Scalars['String'] | null),id?: (Scalars['String'] | null),is_active?: (Scalars['Boolean'] | null),is_recurring?: (Scalars['Boolean'] | null),minute?: (Scalars['String'] | null),monthday?: (Scalars['String'] | null),period?: (Scalars['String'] | null),recipient_ids?: (Scalars['String'] | null),recurrence_ends?: (Scalars['Boolean'] | null),weekday?: (Scalars['String'] | null)}


/** Autogenerated return type of updateRecurringForm. */
export interface updateRecurringFormPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    recurringForm?: RecurringFormGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateReferral */
export interface updateReferralInput {id?: (Scalars['ID'] | null),
/** A serialized JSON string of metadata. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),referral_reason?: (Scalars['String'] | null),referring_physician_id?: (Scalars['ID'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateReferral. */
export interface updateReferralPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    referral?: ReferralGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateReferringPhysician */
export interface updateReferringPhysicianInput {accepts_insurance?: (Scalars['Boolean'] | null),business_name?: (Scalars['String'] | null),email?: (Scalars['String'] | null),fax_number?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),last_name?: (Scalars['String'] | null),location?: (PhysicianLocationInput | null),
/** A serialized JSON string of metadata. Maximum character limit of 128,000. */
metadata?: (Scalars['String'] | null),notes?: (Scalars['String'] | null),npi?: (Scalars['String'] | null),other_id?: (Scalars['String'] | null),other_id_qualifier?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),referrals?: ((PhysicianReferralInput | null)[] | null),speciality?: (Scalars['String'] | null),website?: (Scalars['String'] | null)}


/** Autogenerated return type of updateReferringPhysician. */
export interface updateReferringPhysicianPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    referring_physician?: ReferringPhysicianGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateRequestedPayment */
export interface updateRequestedPaymentInput {appointment_id?: (Scalars['ID'] | null),cms1500_id?: (Scalars['ID'] | null),id: Scalars['ID'],invoice_type?: (Scalars['String'] | null),is_preview?: (Scalars['Boolean'] | null),notes?: (Scalars['String'] | null),offering_id?: (Scalars['ID'] | null),price?: (Scalars['String'] | null),recipient_id?: (Scalars['ID'] | null),requested_payer?: (RequestedPayerInput | null),requested_payment_template?: (RequestedPaymentTemplateInput | null),resend_receipt?: (Scalars['Boolean'] | null),send_request_email?: (Scalars['Boolean'] | null),sender_id?: (Scalars['ID'] | null),service_date?: (Scalars['String'] | null),services_provided?: (Scalars['String'] | null),status?: (Scalars['String'] | null),use_as_template?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateRequestedPayment. */
export interface updateRequestedPaymentPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    requested_payment?: RequestedPaymentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateSavedFilter */
export interface updateSavedFilterInput {
/** ID of the saved filter to update */
id: Scalars['ID'],
/** New name for the saved filter */
name: Scalars['String']}


/** Autogenerated return type of updateSavedFilter. */
export interface updateSavedFilterPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    savedFilter?: SavedFilterGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateSmartPhrase */
export interface updateSmartPhraseInput {id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),phrase?: (Scalars['String'] | null)}


/** Autogenerated return type of updateSmartPhrase. */
export interface updateSmartPhrasePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    smartPhrase?: SmartPhraseGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateSmokingStatus */
export interface updateSmokingStatusInput {id?: (Scalars['ID'] | null),smoking_status_code?: (Scalars['String'] | null),status_end_datetime?: (Scalars['String'] | null),status_start_datetime?: (Scalars['String'] | null)}


/** Autogenerated return type of updateSmokingStatus. */
export interface updateSmokingStatusPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    smokingStatus?: SmokingStatusGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateState */
export interface updateStateInput {active?: (Scalars['Boolean'] | null),id: Scalars['ID']}


/** Autogenerated return type of updateState. */
export interface updateStatePayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    course?: CourseGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateStripeCustomerDetail */
export interface updateStripeCustomerDetailInput {card_type_label?: (Scalars['String'] | null),first_microdeposit?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_default?: (Scalars['Boolean'] | null),second_microdeposit?: (Scalars['String'] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateStripeCustomerDetail. */
export interface updateStripeCustomerDetailPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    stripe_customer_detail?: StripeCustomerDetailGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateStripeVerificationDetails */
export interface updateStripeVerificationDetailsInput {account_holder_name?: (Scalars['String'] | null),account_number?: (Scalars['String'] | null),additional_verification_document?: (Scalars['Upload'] | null),appointment_type_credits_attributes?: ((AppointmentTypeCreditInput | null)[] | null),
/** Additional documentation for bank accounts, e.g. voided checks, bank statements, etc */
bank_verification_document?: (Scalars['Upload'] | null),
/** Description of the product sold or service provided by the business */
business_description?: (Scalars['String'] | null),
/** The customer-facing business name */
business_name?: (Scalars['String'] | null),business_tax_id?: (Scalars['String'] | null),
/** The business's publicly available website */
business_url?: (Scalars['String'] | null),company_verification_document?: (Scalars['Upload'] | null),currency?: (Scalars['String'] | null),dob?: (Scalars['String'] | null),email?: (Scalars['String'] | null),entity_type?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),last_name?: (Scalars['String'] | null),location?: (ClientLocationInput | null),new_country?: (Scalars['String'] | null),personal_address?: (ClientLocationInput | null),personal_phone?: (Scalars['String'] | null),phone?: (Scalars['String'] | null),routing_number?: (Scalars['String'] | null),skip_adding_bank_info?: (Scalars['Boolean'] | null),ssn?: (Scalars['String'] | null),ssn_last_4?: (Scalars['String'] | null),verification_document?: (Scalars['Upload'] | null)}


/** Autogenerated return type of updateStripeVerificationDetails. */
export interface updateStripeVerificationDetailsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateSubscription */
export interface updateSubscriptionInput {activate_short_trial?: (Scalars['Boolean'] | null),details?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),
/** The name of the new Stripe Plan to switch to. Currently, this just supports moving trialing members to starter. */
new_plan_name?: (Scalars['String'] | null),reactivate_plan?: (Scalars['String'] | null),reason?: (Scalars['String'] | null),
/** Value can either be monthly or annual. Allows users on Practice Plus or Small Pracitce to switch billing cycles. */
switch_plan?: (Scalars['String'] | null),token?: (Scalars['String'] | null),wants_to_cancel?: (Scalars['Boolean'] | null)}


/** Autogenerated return type of updateSubscription. */
export interface updateSubscriptionPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    currentUser?: UserGenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    subscription?: SubscriptionInstanceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateSuperBill */
export interface updateSuperBillInput {address?: (Scalars['String'] | null),amount_paid?: (Scalars['String'] | null),cpt_codes_super_bills?: ((CptCodesSuperBillInput | null)[] | null),dietitian_id?: (Scalars['ID'] | null),icd_codes_super_bills?: ((IcdCodesSuperBillInput | null)[] | null),id?: (Scalars['ID'] | null),license_num?: (Scalars['String'] | null),location?: (LocationInputs | null),location_id?: (Scalars['ID'] | null),npi?: (Scalars['String'] | null),patient_dob?: (Scalars['String'] | null),patient_id?: (Scalars['ID'] | null),patient_location?: (PatientLocationInputs | null),patient_name?: (Scalars['String'] | null),patient_phone?: (Scalars['String'] | null),place_of_service_id?: (Scalars['ID'] | null),prov_city?: (Scalars['String'] | null),prov_email?: (Scalars['String'] | null),prov_line1?: (Scalars['String'] | null),prov_line2?: (Scalars['String'] | null),prov_phone?: (Scalars['String'] | null),prov_state?: (Scalars['String'] | null),prov_zip?: (Scalars['String'] | null),provider_name?: (Scalars['String'] | null),receipt_line_items?: ((ReceiptLineItemInput | null)[] | null),referrer_name?: (Scalars['String'] | null),referrer_npi?: (Scalars['String'] | null),service_date?: (Scalars['String'] | null),should_email_to_client?: (Scalars['Boolean'] | null),status?: (Scalars['String'] | null),tax_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateSuperBill. */
export interface updateSuperBillPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    superBill?: SuperBillGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateTag */
export interface updateTagInput {id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null)}


/** Autogenerated return type of updateTag. */
export interface updateTagPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    tag?: TagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateTask */
export interface updateTaskInput {client_id?: (Scalars['String'] | null),complete?: (Scalars['Boolean'] | null),completed_by_id?: (Scalars['ID'] | null),content?: (Scalars['String'] | null),created_by_id?: (Scalars['String'] | null),due_date?: (Scalars['String'] | null),hidden?: (Scalars['Boolean'] | null),id?: (Scalars['String'] | null),position?: (Scalars['Int'] | null),priority?: (Scalars['Int'] | null),reminder?: (TaskReminderInput | null),seen?: (Scalars['Boolean'] | null),user_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateTask. */
export interface updateTaskPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    task?: TaskGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateUniqueDeviceIdentifier */
export interface updateUniqueDeviceIdentifierInput {assigning_authority?: (Scalars['String'] | null),device_code?: (Scalars['String'] | null),display_name?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),scoping_entity?: (Scalars['String'] | null),udi_code?: (Scalars['String'] | null)}


/** Autogenerated return type of updateUniqueDeviceIdentifier. */
export interface updateUniqueDeviceIdentifierPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    unique_device_identifier?: UniqueDeviceIdentifierGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateUserAppointmentPricing */
export interface updateUserAppointmentPricingInput {advance_appointment_prices?: ((AdvanceAppointmentPricesInput | null)[] | null),user_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateUserAppointmentPricing. */
export interface updateUserAppointmentPricingPayloadGenqlSelection{
    advance_appointment_prices?: AdvanceAppointmentPriceGenqlSelection
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateUserGroup */
export interface updateUserGroupInput {id?: (Scalars['ID'] | null),name?: (Scalars['String'] | null),onboarding_flow_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of updateUserGroup. */
export interface updateUserGroupPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user_group?: UserGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateUser */
export interface updateUserInput {active_care_plan_id?: (Scalars['ID'] | null),assign_tasks_seen?: (Scalars['Boolean'] | null),avatar?: (Scalars['Upload'] | null),
/** image in Base64 format */
avatar_string?: (Scalars['String'] | null),blast_seen?: (Scalars['Boolean'] | null),card_type_label?: (Scalars['String'] | null),consented_to_labs?: (Scalars['Boolean'] | null),current_email?: (Scalars['String'] | null),current_password?: (Scalars['String'] | null),default_onboarding_flow_id?: (Scalars['ID'] | null),dimissed_calendar_prompt?: (Scalars['Boolean'] | null),dismissed_charting_note_addendum_warning?: (Scalars['Boolean'] | null),dismissed_insurance_eligibility_warning?: (Scalars['Boolean'] | null),dismissed_fullscript?: (Scalars['Boolean'] | null),dismissed_products_tab?: (Scalars['Boolean'] | null),dob?: (Scalars['String'] | null),email?: (Scalars['String'] | null),first_name?: (Scalars['String'] | null),gender?: (Scalars['String'] | null),gender_identity?: (Scalars['String'] | null),gender_identity_code?: (Scalars['String'] | null),human_id?: (Scalars['ID'] | null),id?: (Scalars['ID'] | null),last_name?: (Scalars['String'] | null),legal_name?: (Scalars['String'] | null),locations?: ((ClientLocationInput | null)[] | null),
/** This field does not do anything, and should not be used */
name?: (Scalars['String'] | null),password?: (Scalars['String'] | null),password_confirmation?: (Scalars['String'] | null),phone_number?: (Scalars['String'] | null),policies?: ((UserPolicyInput | null)[] | null),preferred_language_code?: (Scalars['String'] | null),pretend_to_be?: (Scalars['String'] | null),primary_ethnicity_code?: (Scalars['String'] | null),primary_race_code?: (Scalars['String'] | null),product_update_articles?: (Scalars['Int'] | null),pronouns?: (Scalars['String'] | null),qualifications?: (Scalars['String'] | null),resend_welcome_to_dietitian?: (Scalars['Boolean'] | null),secondary_ethnicity_code?: (Scalars['Int'] | null),secondary_race_code?: (Scalars['String'] | null),seen_onboarding_complete_page?: (Scalars['Boolean'] | null),seen_welcome?: (Scalars['Boolean'] | null),send_get_mobile_app_email?: (Scalars['Boolean'] | null),sex?: (Scalars['String'] | null),sexual_orientation_code?: (Scalars['String'] | null),sexual_orientation_other?: (Scalars['String'] | null),skipped_email?: (Scalars['Boolean'] | null),submit_labs_immediately?: (Scalars['Boolean'] | null),timezone?: (Scalars['String'] | null),
/** Token for credit card, created by Stripe.JS */
token?: (Scalars['String'] | null),uniq_push_id?: (Scalars['String'] | null)}


/** Autogenerated return type of updateUser. */
export interface updateUserPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of updateWebhook */
export interface updateWebhookInput {event_type?: (Scalars['String'] | null),id?: (Scalars['ID'] | null),is_enabled?: (Scalars['Boolean'] | null),
/** A valid URL per the WHATWG specification */
url?: (Scalars['String'] | null),
/** Webhook events to update or delete */
webhook_events?: ((WebhookEventInput | null)[] | null)}


/** Autogenerated return type of updateWebhook. */
export interface updateWebhookPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    webhook?: WebhookGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of uploadBatchToCandidHealth */
export interface uploadBatchToCandidHealthInput {cms1500_ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of uploadBatchToCandidHealth. */
export interface uploadBatchToCandidHealthPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cms1500s?: Cms1500GenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of uploadBatchToChangeHealth */
export interface uploadBatchToChangeHealthInput {cms1500_ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of uploadBatchToChangeHealth. */
export interface uploadBatchToChangeHealthPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cms1500s?: Cms1500GenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of uploadBatchToOfficeally */
export interface uploadBatchToOfficeallyInput {cms1500_ids?: ((Scalars['ID'] | null)[] | null)}


/** Autogenerated return type of uploadBatchToOfficeally. */
export interface uploadBatchToOfficeallyPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    cms1500s?: Cms1500GenqlSelection
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_string?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of uploadToIntegrations */
export interface uploadToIntegrationsInput {cms1500_id?: (Scalars['ID'] | null)}


/** Autogenerated return type of uploadToIntegrations. */
export interface uploadToIntegrationsPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    success_message?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Autogenerated input type of validateVerificationToken */
export interface validateVerificationTokenInput {verification_code?: (Scalars['String'] | null)}


/** Autogenerated return type of validateVerificationToken. */
export interface validateVerificationTokenPayloadGenqlSelection{
    /**
     * @deprecated DO NOT USE
     * DO NOT USE
     */
    clientMutationId?: boolean | number
    /** The list of errors occurred during the mutation */
    messages?: FieldErrorGenqlSelection
    user?: UserGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


    const AcceptedInsurancePlan_possibleTypes: string[] = ['AcceptedInsurancePlan']
    export const isAcceptedInsurancePlan = (obj?: { __typename?: any } | null): obj is AcceptedInsurancePlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAcceptedInsurancePlan"')
      return AcceptedInsurancePlan_possibleTypes.includes(obj.__typename)
    }
    


    const AddClaimSubmitterPayload_possibleTypes: string[] = ['AddClaimSubmitterPayload']
    export const isAddClaimSubmitterPayload = (obj?: { __typename?: any } | null): obj is AddClaimSubmitterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAddClaimSubmitterPayload"')
      return AddClaimSubmitterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AddCptCodePayload_possibleTypes: string[] = ['AddCptCodePayload']
    export const isAddCptCodePayload = (obj?: { __typename?: any } | null): obj is AddCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAddCptCodePayload"')
      return AddCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AddIcdCodePayload_possibleTypes: string[] = ['AddIcdCodePayload']
    export const isAddIcdCodePayload = (obj?: { __typename?: any } | null): obj is AddIcdCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAddIcdCodePayload"')
      return AddIcdCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const AddReplyToEmailAddressesPayload_possibleTypes: string[] = ['AddReplyToEmailAddressesPayload']
    export const isAddReplyToEmailAddressesPayload = (obj?: { __typename?: any } | null): obj is AddReplyToEmailAddressesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAddReplyToEmailAddressesPayload"')
      return AddReplyToEmailAddressesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const AdvanceAppointmentPrice_possibleTypes: string[] = ['AdvanceAppointmentPrice']
    export const isAdvanceAppointmentPrice = (obj?: { __typename?: any } | null): obj is AdvanceAppointmentPrice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAdvanceAppointmentPrice"')
      return AdvanceAppointmentPrice_possibleTypes.includes(obj.__typename)
    }
    


    const Affiliate_possibleTypes: string[] = ['Affiliate']
    export const isAffiliate = (obj?: { __typename?: any } | null): obj is Affiliate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAffiliate"')
      return Affiliate_possibleTypes.includes(obj.__typename)
    }
    


    const AllergySensitivity_possibleTypes: string[] = ['AllergySensitivity']
    export const isAllergySensitivity = (obj?: { __typename?: any } | null): obj is AllergySensitivity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAllergySensitivity"')
      return AllergySensitivity_possibleTypes.includes(obj.__typename)
    }
    


    const Announcement_possibleTypes: string[] = ['Announcement']
    export const isAnnouncement = (obj?: { __typename?: any } | null): obj is Announcement => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnnouncement"')
      return Announcement_possibleTypes.includes(obj.__typename)
    }
    


    const ApiKey_possibleTypes: string[] = ['ApiKey']
    export const isApiKey = (obj?: { __typename?: any } | null): obj is ApiKey => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApiKey"')
      return ApiKey_possibleTypes.includes(obj.__typename)
    }
    


    const AppleHealth_possibleTypes: string[] = ['AppleHealth']
    export const isAppleHealth = (obj?: { __typename?: any } | null): obj is AppleHealth => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppleHealth"')
      return AppleHealth_possibleTypes.includes(obj.__typename)
    }
    


    const AppliedTag_possibleTypes: string[] = ['AppliedTag']
    export const isAppliedTag = (obj?: { __typename?: any } | null): obj is AppliedTag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppliedTag"')
      return AppliedTag_possibleTypes.includes(obj.__typename)
    }
    


    const Appointment_possibleTypes: string[] = ['Appointment']
    export const isAppointment = (obj?: { __typename?: any } | null): obj is Appointment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointment"')
      return Appointment_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentBookingWarning_possibleTypes: string[] = ['AppointmentBookingWarning']
    export const isAppointmentBookingWarning = (obj?: { __typename?: any } | null): obj is AppointmentBookingWarning => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentBookingWarning"')
      return AppointmentBookingWarning_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentCreditChange_possibleTypes: string[] = ['AppointmentCreditChange']
    export const isAppointmentCreditChange = (obj?: { __typename?: any } | null): obj is AppointmentCreditChange => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentCreditChange"')
      return AppointmentCreditChange_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentDataType_possibleTypes: string[] = ['AppointmentDataType']
    export const isAppointmentDataType = (obj?: { __typename?: any } | null): obj is AppointmentDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentDataType"')
      return AppointmentDataType_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentFrequencyDataType_possibleTypes: string[] = ['AppointmentFrequencyDataType']
    export const isAppointmentFrequencyDataType = (obj?: { __typename?: any } | null): obj is AppointmentFrequencyDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentFrequencyDataType"')
      return AppointmentFrequencyDataType_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentInclusionType_possibleTypes: string[] = ['AppointmentInclusionType']
    export const isAppointmentInclusionType = (obj?: { __typename?: any } | null): obj is AppointmentInclusionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentInclusionType"')
      return AppointmentInclusionType_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentLocation_possibleTypes: string[] = ['AppointmentLocation']
    export const isAppointmentLocation = (obj?: { __typename?: any } | null): obj is AppointmentLocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentLocation"')
      return AppointmentLocation_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentPerDayData_possibleTypes: string[] = ['AppointmentPerDayData']
    export const isAppointmentPerDayData = (obj?: { __typename?: any } | null): obj is AppointmentPerDayData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentPerDayData"')
      return AppointmentPerDayData_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentPerTypePerDayData_possibleTypes: string[] = ['AppointmentPerTypePerDayData']
    export const isAppointmentPerTypePerDayData = (obj?: { __typename?: any } | null): obj is AppointmentPerTypePerDayData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentPerTypePerDayData"')
      return AppointmentPerTypePerDayData_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentPerTypePerUserData_possibleTypes: string[] = ['AppointmentPerTypePerUserData']
    export const isAppointmentPerTypePerUserData = (obj?: { __typename?: any } | null): obj is AppointmentPerTypePerUserData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentPerTypePerUserData"')
      return AppointmentPerTypePerUserData_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentPerUserData_possibleTypes: string[] = ['AppointmentPerUserData']
    export const isAppointmentPerUserData = (obj?: { __typename?: any } | null): obj is AppointmentPerUserData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentPerUserData"')
      return AppointmentPerUserData_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentPricingInfoType_possibleTypes: string[] = ['AppointmentPricingInfoType']
    export const isAppointmentPricingInfoType = (obj?: { __typename?: any } | null): obj is AppointmentPricingInfoType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentPricingInfoType"')
      return AppointmentPricingInfoType_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentSetting_possibleTypes: string[] = ['AppointmentSetting']
    export const isAppointmentSetting = (obj?: { __typename?: any } | null): obj is AppointmentSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentSetting"')
      return AppointmentSetting_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentSummaryData_possibleTypes: string[] = ['AppointmentSummaryData']
    export const isAppointmentSummaryData = (obj?: { __typename?: any } | null): obj is AppointmentSummaryData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentSummaryData"')
      return AppointmentSummaryData_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentType_possibleTypes: string[] = ['AppointmentType']
    export const isAppointmentType = (obj?: { __typename?: any } | null): obj is AppointmentType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentType"')
      return AppointmentType_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentTypeAppointmentCountData_possibleTypes: string[] = ['AppointmentTypeAppointmentCountData']
    export const isAppointmentTypeAppointmentCountData = (obj?: { __typename?: any } | null): obj is AppointmentTypeAppointmentCountData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentTypeAppointmentCountData"')
      return AppointmentTypeAppointmentCountData_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentTypeCptCodeType_possibleTypes: string[] = ['AppointmentTypeCptCodeType']
    export const isAppointmentTypeCptCodeType = (obj?: { __typename?: any } | null): obj is AppointmentTypeCptCodeType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentTypeCptCodeType"')
      return AppointmentTypeCptCodeType_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentTypeCredit_possibleTypes: string[] = ['AppointmentTypeCredit']
    export const isAppointmentTypeCredit = (obj?: { __typename?: any } | null): obj is AppointmentTypeCredit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentTypeCredit"')
      return AppointmentTypeCredit_possibleTypes.includes(obj.__typename)
    }
    


    const AppointmentTypeFormConnection_possibleTypes: string[] = ['AppointmentTypeFormConnection']
    export const isAppointmentTypeFormConnection = (obj?: { __typename?: any } | null): obj is AppointmentTypeFormConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppointmentTypeFormConnection"')
      return AppointmentTypeFormConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AutoTaskGenerator_possibleTypes: string[] = ['AutoTaskGenerator']
    export const isAutoTaskGenerator = (obj?: { __typename?: any } | null): obj is AutoTaskGenerator => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutoTaskGenerator"')
      return AutoTaskGenerator_possibleTypes.includes(obj.__typename)
    }
    


    const AutomatedInsuranceBillingSetting_possibleTypes: string[] = ['AutomatedInsuranceBillingSetting']
    export const isAutomatedInsuranceBillingSetting = (obj?: { __typename?: any } | null): obj is AutomatedInsuranceBillingSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutomatedInsuranceBillingSetting"')
      return AutomatedInsuranceBillingSetting_possibleTypes.includes(obj.__typename)
    }
    


    const AutoscoredSectionType_possibleTypes: string[] = ['AutoscoredSectionType']
    export const isAutoscoredSectionType = (obj?: { __typename?: any } | null): obj is AutoscoredSectionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutoscoredSectionType"')
      return AutoscoredSectionType_possibleTypes.includes(obj.__typename)
    }
    


    const Availability_possibleTypes: string[] = ['Availability']
    export const isAvailability = (obj?: { __typename?: any } | null): obj is Availability => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAvailability"')
      return Availability_possibleTypes.includes(obj.__typename)
    }
    


    const Benefit_possibleTypes: string[] = ['Benefit']
    export const isBenefit = (obj?: { __typename?: any } | null): obj is Benefit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBenefit"')
      return Benefit_possibleTypes.includes(obj.__typename)
    }
    


    const BillingItem_possibleTypes: string[] = ['BillingItem']
    export const isBillingItem = (obj?: { __typename?: any } | null): obj is BillingItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingItem"')
      return BillingItem_possibleTypes.includes(obj.__typename)
    }
    


    const BodyReport_possibleTypes: string[] = ['BodyReport']
    export const isBodyReport = (obj?: { __typename?: any } | null): obj is BodyReport => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBodyReport"')
      return BodyReport_possibleTypes.includes(obj.__typename)
    }
    


    const Brand_possibleTypes: string[] = ['Brand']
    export const isBrand = (obj?: { __typename?: any } | null): obj is Brand => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBrand"')
      return Brand_possibleTypes.includes(obj.__typename)
    }
    


    const BrandInfo_possibleTypes: string[] = ['BrandInfo']
    export const isBrandInfo = (obj?: { __typename?: any } | null): obj is BrandInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBrandInfo"')
      return BrandInfo_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarColorScheme_possibleTypes: string[] = ['CalendarColorScheme']
    export const isCalendarColorScheme = (obj?: { __typename?: any } | null): obj is CalendarColorScheme => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarColorScheme"')
      return CalendarColorScheme_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarViewSetting_possibleTypes: string[] = ['CalendarViewSetting']
    export const isCalendarViewSetting = (obj?: { __typename?: any } | null): obj is CalendarViewSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarViewSetting"')
      return CalendarViewSetting_possibleTypes.includes(obj.__typename)
    }
    


    const CallReference_possibleTypes: string[] = ['CallReference']
    export const isCallReference = (obj?: { __typename?: any } | null): obj is CallReference => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCallReference"')
      return CallReference_possibleTypes.includes(obj.__typename)
    }
    


    const Campaign_possibleTypes: string[] = ['Campaign']
    export const isCampaign = (obj?: { __typename?: any } | null): obj is Campaign => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCampaign"')
      return Campaign_possibleTypes.includes(obj.__typename)
    }
    


    const CandidHealthConnection_possibleTypes: string[] = ['CandidHealthConnection']
    export const isCandidHealthConnection = (obj?: { __typename?: any } | null): obj is CandidHealthConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCandidHealthConnection"')
      return CandidHealthConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CarePlan_possibleTypes: string[] = ['CarePlan']
    export const isCarePlan = (obj?: { __typename?: any } | null): obj is CarePlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCarePlan"')
      return CarePlan_possibleTypes.includes(obj.__typename)
    }
    


    const CarePlanConnection_possibleTypes: string[] = ['CarePlanConnection']
    export const isCarePlanConnection = (obj?: { __typename?: any } | null): obj is CarePlanConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCarePlanConnection"')
      return CarePlanConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CdaActivityEvent_possibleTypes: string[] = ['CdaActivityEvent']
    export const isCdaActivityEvent = (obj?: { __typename?: any } | null): obj is CdaActivityEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCdaActivityEvent"')
      return CdaActivityEvent_possibleTypes.includes(obj.__typename)
    }
    


    const ChangeClaimSubmitter_possibleTypes: string[] = ['ChangeClaimSubmitter']
    export const isChangeClaimSubmitter = (obj?: { __typename?: any } | null): obj is ChangeClaimSubmitter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChangeClaimSubmitter"')
      return ChangeClaimSubmitter_possibleTypes.includes(obj.__typename)
    }
    


    const ChangeDevicesAvailabilityPayload_possibleTypes: string[] = ['ChangeDevicesAvailabilityPayload']
    export const isChangeDevicesAvailabilityPayload = (obj?: { __typename?: any } | null): obj is ChangeDevicesAvailabilityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChangeDevicesAvailabilityPayload"')
      return ChangeDevicesAvailabilityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ChargeBack_possibleTypes: string[] = ['ChargeBack']
    export const isChargeBack = (obj?: { __typename?: any } | null): obj is ChargeBack => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChargeBack"')
      return ChargeBack_possibleTypes.includes(obj.__typename)
    }
    


    const ChargeBackEvidence_possibleTypes: string[] = ['ChargeBackEvidence']
    export const isChargeBackEvidence = (obj?: { __typename?: any } | null): obj is ChargeBackEvidence => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChargeBackEvidence"')
      return ChargeBackEvidence_possibleTypes.includes(obj.__typename)
    }
    


    const ChartingItemType_possibleTypes: string[] = ['ChartingItemType']
    export const isChartingItemType = (obj?: { __typename?: any } | null): obj is ChartingItemType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChartingItemType"')
      return ChartingItemType_possibleTypes.includes(obj.__typename)
    }
    


    const ChartingNoteAddendumType_possibleTypes: string[] = ['ChartingNoteAddendumType']
    export const isChartingNoteAddendumType = (obj?: { __typename?: any } | null): obj is ChartingNoteAddendumType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChartingNoteAddendumType"')
      return ChartingNoteAddendumType_possibleTypes.includes(obj.__typename)
    }
    


    const ChatSetting_possibleTypes: string[] = ['ChatSetting']
    export const isChatSetting = (obj?: { __typename?: any } | null): obj is ChatSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChatSetting"')
      return ChatSetting_possibleTypes.includes(obj.__typename)
    }
    


    const ClaimEligibilityCheck_possibleTypes: string[] = ['ClaimEligibilityCheck']
    export const isClaimEligibilityCheck = (obj?: { __typename?: any } | null): obj is ClaimEligibilityCheck => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isClaimEligibilityCheck"')
      return ClaimEligibilityCheck_possibleTypes.includes(obj.__typename)
    }
    


    const ClaimEligibilityCheckErrors_possibleTypes: string[] = ['ClaimEligibilityCheckErrors']
    export const isClaimEligibilityCheckErrors = (obj?: { __typename?: any } | null): obj is ClaimEligibilityCheckErrors => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isClaimEligibilityCheckErrors"')
      return ClaimEligibilityCheckErrors_possibleTypes.includes(obj.__typename)
    }
    


    const ClientPortalSetting_possibleTypes: string[] = ['ClientPortalSetting']
    export const isClientPortalSetting = (obj?: { __typename?: any } | null): obj is ClientPortalSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isClientPortalSetting"')
      return ClientPortalSetting_possibleTypes.includes(obj.__typename)
    }
    


    const ClientSource_possibleTypes: string[] = ['ClientSource']
    export const isClientSource = (obj?: { __typename?: any } | null): obj is ClientSource => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isClientSource"')
      return ClientSource_possibleTypes.includes(obj.__typename)
    }
    


    const Cms1500_possibleTypes: string[] = ['Cms1500']
    export const isCms1500 = (obj?: { __typename?: any } | null): obj is Cms1500 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCms1500"')
      return Cms1500_possibleTypes.includes(obj.__typename)
    }
    


    const Cms1500Policy_possibleTypes: string[] = ['Cms1500Policy']
    export const isCms1500Policy = (obj?: { __typename?: any } | null): obj is Cms1500Policy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCms1500Policy"')
      return Cms1500Policy_possibleTypes.includes(obj.__typename)
    }
    


    const CognitiveStatus_possibleTypes: string[] = ['CognitiveStatus']
    export const isCognitiveStatus = (obj?: { __typename?: any } | null): obj is CognitiveStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCognitiveStatus"')
      return CognitiveStatus_possibleTypes.includes(obj.__typename)
    }
    


    const ColorCode_possibleTypes: string[] = ['ColorCode']
    export const isColorCode = (obj?: { __typename?: any } | null): obj is ColorCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isColorCode"')
      return ColorCode_possibleTypes.includes(obj.__typename)
    }
    


    const ColorCodeOption_possibleTypes: string[] = ['ColorCodeOption']
    export const isColorCodeOption = (obj?: { __typename?: any } | null): obj is ColorCodeOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isColorCodeOption"')
      return ColorCodeOption_possibleTypes.includes(obj.__typename)
    }
    


    const Comment_possibleTypes: string[] = ['Comment']
    export const isComment = (obj?: { __typename?: any } | null): obj is Comment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isComment"')
      return Comment_possibleTypes.includes(obj.__typename)
    }
    


    const CompleteCcdaReconciliationPayload_possibleTypes: string[] = ['CompleteCcdaReconciliationPayload']
    export const isCompleteCcdaReconciliationPayload = (obj?: { __typename?: any } | null): obj is CompleteCcdaReconciliationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompleteCcdaReconciliationPayload"')
      return CompleteCcdaReconciliationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CompletedCourseItem_possibleTypes: string[] = ['CompletedCourseItem']
    export const isCompletedCourseItem = (obj?: { __typename?: any } | null): obj is CompletedCourseItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompletedCourseItem"')
      return CompletedCourseItem_possibleTypes.includes(obj.__typename)
    }
    


    const CompletedOnboardingItem_possibleTypes: string[] = ['CompletedOnboardingItem']
    export const isCompletedOnboardingItem = (obj?: { __typename?: any } | null): obj is CompletedOnboardingItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompletedOnboardingItem"')
      return CompletedOnboardingItem_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectApptToChartingPayload_possibleTypes: string[] = ['ConnectApptToChartingPayload']
    export const isConnectApptToChartingPayload = (obj?: { __typename?: any } | null): obj is ConnectApptToChartingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectApptToChartingPayload"')
      return ConnectApptToChartingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ContactType_possibleTypes: string[] = ['ContactType']
    export const isContactType = (obj?: { __typename?: any } | null): obj is ContactType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isContactType"')
      return ContactType_possibleTypes.includes(obj.__typename)
    }
    


    const Conversation_possibleTypes: string[] = ['Conversation']
    export const isConversation = (obj?: { __typename?: any } | null): obj is Conversation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConversation"')
      return Conversation_possibleTypes.includes(obj.__typename)
    }
    


    const ConversationMembership_possibleTypes: string[] = ['ConversationMembership']
    export const isConversationMembership = (obj?: { __typename?: any } | null): obj is ConversationMembership => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConversationMembership"')
      return ConversationMembership_possibleTypes.includes(obj.__typename)
    }
    


    const ConvertFromJsonToFormPayload_possibleTypes: string[] = ['ConvertFromJsonToFormPayload']
    export const isConvertFromJsonToFormPayload = (obj?: { __typename?: any } | null): obj is ConvertFromJsonToFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConvertFromJsonToFormPayload"')
      return ConvertFromJsonToFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ConvertToMetricPayload_possibleTypes: string[] = ['ConvertToMetricPayload']
    export const isConvertToMetricPayload = (obj?: { __typename?: any } | null): obj is ConvertToMetricPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConvertToMetricPayload"')
      return ConvertToMetricPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CopyFormsPayload_possibleTypes: string[] = ['CopyFormsPayload']
    export const isCopyFormsPayload = (obj?: { __typename?: any } | null): obj is CopyFormsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCopyFormsPayload"')
      return CopyFormsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const Course_possibleTypes: string[] = ['Course']
    export const isCourse = (obj?: { __typename?: any } | null): obj is Course => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourse"')
      return Course_possibleTypes.includes(obj.__typename)
    }
    


    const CourseBenefit_possibleTypes: string[] = ['CourseBenefit']
    export const isCourseBenefit = (obj?: { __typename?: any } | null): obj is CourseBenefit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseBenefit"')
      return CourseBenefit_possibleTypes.includes(obj.__typename)
    }
    


    const CourseCompletionInfoGroupsType_possibleTypes: string[] = ['CourseCompletionInfoGroupsType']
    export const isCourseCompletionInfoGroupsType = (obj?: { __typename?: any } | null): obj is CourseCompletionInfoGroupsType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseCompletionInfoGroupsType"')
      return CourseCompletionInfoGroupsType_possibleTypes.includes(obj.__typename)
    }
    


    const CourseCompletionInfoIndividualsType_possibleTypes: string[] = ['CourseCompletionInfoIndividualsType']
    export const isCourseCompletionInfoIndividualsType = (obj?: { __typename?: any } | null): obj is CourseCompletionInfoIndividualsType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseCompletionInfoIndividualsType"')
      return CourseCompletionInfoIndividualsType_possibleTypes.includes(obj.__typename)
    }
    


    const CourseCompletionInfoType_possibleTypes: string[] = ['CourseCompletionInfoType']
    export const isCourseCompletionInfoType = (obj?: { __typename?: any } | null): obj is CourseCompletionInfoType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseCompletionInfoType"')
      return CourseCompletionInfoType_possibleTypes.includes(obj.__typename)
    }
    


    const CourseGroup_possibleTypes: string[] = ['CourseGroup']
    export const isCourseGroup = (obj?: { __typename?: any } | null): obj is CourseGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseGroup"')
      return CourseGroup_possibleTypes.includes(obj.__typename)
    }
    


    const CourseItem_possibleTypes: string[] = ['CourseItem']
    export const isCourseItem = (obj?: { __typename?: any } | null): obj is CourseItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseItem"')
      return CourseItem_possibleTypes.includes(obj.__typename)
    }
    


    const CourseMembership_possibleTypes: string[] = ['CourseMembership']
    export const isCourseMembership = (obj?: { __typename?: any } | null): obj is CourseMembership => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCourseMembership"')
      return CourseMembership_possibleTypes.includes(obj.__typename)
    }
    


    const CptCode_possibleTypes: string[] = ['CptCode']
    export const isCptCode = (obj?: { __typename?: any } | null): obj is CptCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCptCode"')
      return CptCode_possibleTypes.includes(obj.__typename)
    }
    


    const CptCodesCms1500_possibleTypes: string[] = ['CptCodesCms1500']
    export const isCptCodesCms1500 = (obj?: { __typename?: any } | null): obj is CptCodesCms1500 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCptCodesCms1500"')
      return CptCodesCms1500_possibleTypes.includes(obj.__typename)
    }
    


    const CptCodesPolicy_possibleTypes: string[] = ['CptCodesPolicy']
    export const isCptCodesPolicy = (obj?: { __typename?: any } | null): obj is CptCodesPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCptCodesPolicy"')
      return CptCodesPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const CptCodesSuperBill_possibleTypes: string[] = ['CptCodesSuperBill']
    export const isCptCodesSuperBill = (obj?: { __typename?: any } | null): obj is CptCodesSuperBill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCptCodesSuperBill"')
      return CptCodesSuperBill_possibleTypes.includes(obj.__typename)
    }
    


    const CreateChangeAccountPayload_possibleTypes: string[] = ['CreateChangeAccountPayload']
    export const isCreateChangeAccountPayload = (obj?: { __typename?: any } | null): obj is CreateChangeAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateChangeAccountPayload"')
      return CreateChangeAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateChangeHealthPatientPayload_possibleTypes: string[] = ['CreateChangeHealthPatientPayload']
    export const isCreateChangeHealthPatientPayload = (obj?: { __typename?: any } | null): obj is CreateChangeHealthPatientPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateChangeHealthPatientPayload"')
      return CreateChangeHealthPatientPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateClaimSubmitterPayload_possibleTypes: string[] = ['CreateClaimSubmitterPayload']
    export const isCreateClaimSubmitterPayload = (obj?: { __typename?: any } | null): obj is CreateClaimSubmitterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateClaimSubmitterPayload"')
      return CreateClaimSubmitterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CreateClientViaFormPayload_possibleTypes: string[] = ['CreateClientViaFormPayload']
    export const isCreateClientViaFormPayload = (obj?: { __typename?: any } | null): obj is CreateClientViaFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCreateClientViaFormPayload"')
      return CreateClientViaFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const CustomEmail_possibleTypes: string[] = ['CustomEmail']
    export const isCustomEmail = (obj?: { __typename?: any } | null): obj is CustomEmail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomEmail"')
      return CustomEmail_possibleTypes.includes(obj.__typename)
    }
    


    const CustomEmailRelatedObject_possibleTypes: string[] = ['AppointmentType','Course','Offering']
    export const isCustomEmailRelatedObject = (obj?: { __typename?: any } | null): obj is CustomEmailRelatedObject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomEmailRelatedObject"')
      return CustomEmailRelatedObject_possibleTypes.includes(obj.__typename)
    }
    


    const CustomMetric_possibleTypes: string[] = ['CustomMetric']
    export const isCustomMetric = (obj?: { __typename?: any } | null): obj is CustomMetric => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomMetric"')
      return CustomMetric_possibleTypes.includes(obj.__typename)
    }
    


    const CustomMetricOverride_possibleTypes: string[] = ['CustomMetricOverride']
    export const isCustomMetricOverride = (obj?: { __typename?: any } | null): obj is CustomMetricOverride => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomMetricOverride"')
      return CustomMetricOverride_possibleTypes.includes(obj.__typename)
    }
    


    const CustomModule_possibleTypes: string[] = ['CustomModule']
    export const isCustomModule = (obj?: { __typename?: any } | null): obj is CustomModule => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomModule"')
      return CustomModule_possibleTypes.includes(obj.__typename)
    }
    


    const CustomModuleConditionType_possibleTypes: string[] = ['CustomModuleConditionType']
    export const isCustomModuleConditionType = (obj?: { __typename?: any } | null): obj is CustomModuleConditionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomModuleConditionType"')
      return CustomModuleConditionType_possibleTypes.includes(obj.__typename)
    }
    


    const CustomModuleForm_possibleTypes: string[] = ['CustomModuleForm']
    export const isCustomModuleForm = (obj?: { __typename?: any } | null): obj is CustomModuleForm => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomModuleForm"')
      return CustomModuleForm_possibleTypes.includes(obj.__typename)
    }
    


    const CustomSidebarOverride_possibleTypes: string[] = ['CustomSidebarOverride']
    export const isCustomSidebarOverride = (obj?: { __typename?: any } | null): obj is CustomSidebarOverride => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCustomSidebarOverride"')
      return CustomSidebarOverride_possibleTypes.includes(obj.__typename)
    }
    


    const DayRangeType_possibleTypes: string[] = ['DayRangeType']
    export const isDayRangeType = (obj?: { __typename?: any } | null): obj is DayRangeType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDayRangeType"')
      return DayRangeType_possibleTypes.includes(obj.__typename)
    }
    


    const DexcomConnection_possibleTypes: string[] = ['DexcomConnection']
    export const isDexcomConnection = (obj?: { __typename?: any } | null): obj is DexcomConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDexcomConnection"')
      return DexcomConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Diagnosis_possibleTypes: string[] = ['Diagnosis']
    export const isDiagnosis = (obj?: { __typename?: any } | null): obj is Diagnosis => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiagnosis"')
      return Diagnosis_possibleTypes.includes(obj.__typename)
    }
    


    const DirectMessageAttachment_possibleTypes: string[] = ['DirectMessageAttachment']
    export const isDirectMessageAttachment = (obj?: { __typename?: any } | null): obj is DirectMessageAttachment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDirectMessageAttachment"')
      return DirectMessageAttachment_possibleTypes.includes(obj.__typename)
    }
    


    const Discount_possibleTypes: string[] = ['Discount']
    export const isDiscount = (obj?: { __typename?: any } | null): obj is Discount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDiscount"')
      return Discount_possibleTypes.includes(obj.__typename)
    }
    


    const Document_possibleTypes: string[] = ['Document']
    export const isDocument = (obj?: { __typename?: any } | null): obj is Document => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocument"')
      return Document_possibleTypes.includes(obj.__typename)
    }
    


    const DocumentViewing_possibleTypes: string[] = ['DocumentViewing']
    export const isDocumentViewing = (obj?: { __typename?: any } | null): obj is DocumentViewing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDocumentViewing"')
      return DocumentViewing_possibleTypes.includes(obj.__typename)
    }
    


    const DosageType_possibleTypes: string[] = ['DosageType']
    export const isDosageType = (obj?: { __typename?: any } | null): obj is DosageType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDosageType"')
      return DosageType_possibleTypes.includes(obj.__typename)
    }
    


    const DoseSpot_possibleTypes: string[] = ['DoseSpot']
    export const isDoseSpot = (obj?: { __typename?: any } | null): obj is DoseSpot => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDoseSpot"')
      return DoseSpot_possibleTypes.includes(obj.__typename)
    }
    


    const Draft_possibleTypes: string[] = ['Draft']
    export const isDraft = (obj?: { __typename?: any } | null): obj is Draft => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDraft"')
      return Draft_possibleTypes.includes(obj.__typename)
    }
    


    const DrugAllergenType_possibleTypes: string[] = ['DrugAllergenType']
    export const isDrugAllergenType = (obj?: { __typename?: any } | null): obj is DrugAllergenType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDrugAllergenType"')
      return DrugAllergenType_possibleTypes.includes(obj.__typename)
    }
    


    const EmbedFormPayload_possibleTypes: string[] = ['EmbedFormPayload']
    export const isEmbedFormPayload = (obj?: { __typename?: any } | null): obj is EmbedFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmbedFormPayload"')
      return EmbedFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const EmbedWidgetStepType_possibleTypes: string[] = ['EmbedWidgetStepType']
    export const isEmbedWidgetStepType = (obj?: { __typename?: any } | null): obj is EmbedWidgetStepType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmbedWidgetStepType"')
      return EmbedWidgetStepType_possibleTypes.includes(obj.__typename)
    }
    


    const EnableMfaPayload_possibleTypes: string[] = ['EnableMfaPayload']
    export const isEnableMfaPayload = (obj?: { __typename?: any } | null): obj is EnableMfaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEnableMfaPayload"')
      return EnableMfaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const EnableMixpanelPayload_possibleTypes: string[] = ['EnableMixpanelPayload']
    export const isEnableMixpanelPayload = (obj?: { __typename?: any } | null): obj is EnableMixpanelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEnableMixpanelPayload"')
      return EnableMixpanelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const EnableZoomFeaturesPayload_possibleTypes: string[] = ['EnableZoomFeaturesPayload']
    export const isEnableZoomFeaturesPayload = (obj?: { __typename?: any } | null): obj is EnableZoomFeaturesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEnableZoomFeaturesPayload"')
      return EnableZoomFeaturesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const Entry_possibleTypes: string[] = ['Entry']
    export const isEntry = (obj?: { __typename?: any } | null): obj is Entry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEntry"')
      return Entry_possibleTypes.includes(obj.__typename)
    }
    


    const ExtendPaywallPayload_possibleTypes: string[] = ['ExtendPaywallPayload']
    export const isExtendPaywallPayload = (obj?: { __typename?: any } | null): obj is ExtendPaywallPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExtendPaywallPayload"')
      return ExtendPaywallPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ExternalCalendar_possibleTypes: string[] = ['ExternalCalendar']
    export const isExternalCalendar = (obj?: { __typename?: any } | null): obj is ExternalCalendar => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isExternalCalendar"')
      return ExternalCalendar_possibleTypes.includes(obj.__typename)
    }
    


    const FamilyHistoryCondition_possibleTypes: string[] = ['FamilyHistoryCondition']
    export const isFamilyHistoryCondition = (obj?: { __typename?: any } | null): obj is FamilyHistoryCondition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFamilyHistoryCondition"')
      return FamilyHistoryCondition_possibleTypes.includes(obj.__typename)
    }
    


    const FaxLineRequest_possibleTypes: string[] = ['FaxLineRequest']
    export const isFaxLineRequest = (obj?: { __typename?: any } | null): obj is FaxLineRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFaxLineRequest"')
      return FaxLineRequest_possibleTypes.includes(obj.__typename)
    }
    


    const FeatureToggle_possibleTypes: string[] = ['FeatureToggle']
    export const isFeatureToggle = (obj?: { __typename?: any } | null): obj is FeatureToggle => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFeatureToggle"')
      return FeatureToggle_possibleTypes.includes(obj.__typename)
    }
    


    const FieldError_possibleTypes: string[] = ['FieldError']
    export const isFieldError = (obj?: { __typename?: any } | null): obj is FieldError => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFieldError"')
      return FieldError_possibleTypes.includes(obj.__typename)
    }
    


    const Fitbit_possibleTypes: string[] = ['Fitbit']
    export const isFitbit = (obj?: { __typename?: any } | null): obj is Fitbit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFitbit"')
      return Fitbit_possibleTypes.includes(obj.__typename)
    }
    


    const Folder_possibleTypes: string[] = ['Folder']
    export const isFolder = (obj?: { __typename?: any } | null): obj is Folder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFolder"')
      return Folder_possibleTypes.includes(obj.__typename)
    }
    


    const Food_possibleTypes: string[] = ['Food']
    export const isFood = (obj?: { __typename?: any } | null): obj is Food => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFood"')
      return Food_possibleTypes.includes(obj.__typename)
    }
    


    const FoodItem_possibleTypes: string[] = ['FoodItem']
    export const isFoodItem = (obj?: { __typename?: any } | null): obj is FoodItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFoodItem"')
      return FoodItem_possibleTypes.includes(obj.__typename)
    }
    


    const FoodNutrient_possibleTypes: string[] = ['FoodNutrient']
    export const isFoodNutrient = (obj?: { __typename?: any } | null): obj is FoodNutrient => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFoodNutrient"')
      return FoodNutrient_possibleTypes.includes(obj.__typename)
    }
    


    const FormAnswer_possibleTypes: string[] = ['FormAnswer']
    export const isFormAnswer = (obj?: { __typename?: any } | null): obj is FormAnswer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFormAnswer"')
      return FormAnswer_possibleTypes.includes(obj.__typename)
    }
    


    const FormAnswerGroup_possibleTypes: string[] = ['FormAnswerGroup']
    export const isFormAnswerGroup = (obj?: { __typename?: any } | null): obj is FormAnswerGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFormAnswerGroup"')
      return FormAnswerGroup_possibleTypes.includes(obj.__typename)
    }
    


    const FormAnswerGroupSigning_possibleTypes: string[] = ['FormAnswerGroupSigning']
    export const isFormAnswerGroupSigning = (obj?: { __typename?: any } | null): obj is FormAnswerGroupSigning => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFormAnswerGroupSigning"')
      return FormAnswerGroupSigning_possibleTypes.includes(obj.__typename)
    }
    


    const FormAnswerGroupUserConnection_possibleTypes: string[] = ['FormAnswerGroupUserConnection']
    export const isFormAnswerGroupUserConnection = (obj?: { __typename?: any } | null): obj is FormAnswerGroupUserConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFormAnswerGroupUserConnection"')
      return FormAnswerGroupUserConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FormHistory_possibleTypes: string[] = ['FormHistory']
    export const isFormHistory = (obj?: { __typename?: any } | null): obj is FormHistory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFormHistory"')
      return FormHistory_possibleTypes.includes(obj.__typename)
    }
    


    const FormTypesToRequest_possibleTypes: string[] = ['FormTypesToRequest']
    export const isFormTypesToRequest = (obj?: { __typename?: any } | null): obj is FormTypesToRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFormTypesToRequest"')
      return FormTypesToRequest_possibleTypes.includes(obj.__typename)
    }
    


    const FullscriptPractitionerType_possibleTypes: string[] = ['FullscriptPractitionerType']
    export const isFullscriptPractitionerType = (obj?: { __typename?: any } | null): obj is FullscriptPractitionerType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullscriptPractitionerType"')
      return FullscriptPractitionerType_possibleTypes.includes(obj.__typename)
    }
    


    const FullscriptPractitionerTypeType_possibleTypes: string[] = ['FullscriptPractitionerTypeType']
    export const isFullscriptPractitionerTypeType = (obj?: { __typename?: any } | null): obj is FullscriptPractitionerTypeType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullscriptPractitionerTypeType"')
      return FullscriptPractitionerTypeType_possibleTypes.includes(obj.__typename)
    }
    


    const FullscriptProductType_possibleTypes: string[] = ['FullscriptProductType']
    export const isFullscriptProductType = (obj?: { __typename?: any } | null): obj is FullscriptProductType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullscriptProductType"')
      return FullscriptProductType_possibleTypes.includes(obj.__typename)
    }
    


    const FullscriptTreatmentPlanType_possibleTypes: string[] = ['FullscriptTreatmentPlanType']
    export const isFullscriptTreatmentPlanType = (obj?: { __typename?: any } | null): obj is FullscriptTreatmentPlanType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullscriptTreatmentPlanType"')
      return FullscriptTreatmentPlanType_possibleTypes.includes(obj.__typename)
    }
    


    const FunctionalStatus_possibleTypes: string[] = ['FunctionalStatus']
    export const isFunctionalStatus = (obj?: { __typename?: any } | null): obj is FunctionalStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFunctionalStatus"')
      return FunctionalStatus_possibleTypes.includes(obj.__typename)
    }
    


    const GeneratedSummary_possibleTypes: string[] = ['GeneratedSummary']
    export const isGeneratedSummary = (obj?: { __typename?: any } | null): obj is GeneratedSummary => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGeneratedSummary"')
      return GeneratedSummary_possibleTypes.includes(obj.__typename)
    }
    


    const Goal_possibleTypes: string[] = ['Goal']
    export const isGoal = (obj?: { __typename?: any } | null): obj is Goal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoal"')
      return Goal_possibleTypes.includes(obj.__typename)
    }
    


    const GoalDataType_possibleTypes: string[] = ['GoalDataType']
    export const isGoalDataType = (obj?: { __typename?: any } | null): obj is GoalDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoalDataType"')
      return GoalDataType_possibleTypes.includes(obj.__typename)
    }
    


    const GoalHistory_possibleTypes: string[] = ['GoalHistory']
    export const isGoalHistory = (obj?: { __typename?: any } | null): obj is GoalHistory => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoalHistory"')
      return GoalHistory_possibleTypes.includes(obj.__typename)
    }
    


    const GoalInstance_possibleTypes: string[] = ['GoalInstance']
    export const isGoalInstance = (obj?: { __typename?: any } | null): obj is GoalInstance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoalInstance"')
      return GoalInstance_possibleTypes.includes(obj.__typename)
    }
    


    const GoalOverallCompletionRateInfo_possibleTypes: string[] = ['GoalOverallCompletionRateInfo']
    export const isGoalOverallCompletionRateInfo = (obj?: { __typename?: any } | null): obj is GoalOverallCompletionRateInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoalOverallCompletionRateInfo"')
      return GoalOverallCompletionRateInfo_possibleTypes.includes(obj.__typename)
    }
    


    const GoalStreakInfo_possibleTypes: string[] = ['GoalStreakInfo']
    export const isGoalStreakInfo = (obj?: { __typename?: any } | null): obj is GoalStreakInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoalStreakInfo"')
      return GoalStreakInfo_possibleTypes.includes(obj.__typename)
    }
    


    const GoalTemplate_possibleTypes: string[] = ['GoalTemplate']
    export const isGoalTemplate = (obj?: { __typename?: any } | null): obj is GoalTemplate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoalTemplate"')
      return GoalTemplate_possibleTypes.includes(obj.__typename)
    }
    


    const GoogleFit_possibleTypes: string[] = ['GoogleFit']
    export const isGoogleFit = (obj?: { __typename?: any } | null): obj is GoogleFit => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGoogleFit"')
      return GoogleFit_possibleTypes.includes(obj.__typename)
    }
    


    const GroupCarePlanUserConnection_possibleTypes: string[] = ['GroupCarePlanUserConnection']
    export const isGroupCarePlanUserConnection = (obj?: { __typename?: any } | null): obj is GroupCarePlanUserConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGroupCarePlanUserConnection"')
      return GroupCarePlanUserConnection_possibleTypes.includes(obj.__typename)
    }
    


    const HealthAssessment_possibleTypes: string[] = ['HealthAssessment']
    export const isHealthAssessment = (obj?: { __typename?: any } | null): obj is HealthAssessment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHealthAssessment"')
      return HealthAssessment_possibleTypes.includes(obj.__typename)
    }
    


    const HealthAssessmentRecommendation_possibleTypes: string[] = ['HealthAssessmentRecommendation']
    export const isHealthAssessmentRecommendation = (obj?: { __typename?: any } | null): obj is HealthAssessmentRecommendation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHealthAssessmentRecommendation"')
      return HealthAssessmentRecommendation_possibleTypes.includes(obj.__typename)
    }
    


    const HealthAssessmentServiceSignupPayload_possibleTypes: string[] = ['HealthAssessmentServiceSignupPayload']
    export const isHealthAssessmentServiceSignupPayload = (obj?: { __typename?: any } | null): obj is HealthAssessmentServiceSignupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHealthAssessmentServiceSignupPayload"')
      return HealthAssessmentServiceSignupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const HealthConcern_possibleTypes: string[] = ['HealthConcern']
    export const isHealthConcern = (obj?: { __typename?: any } | null): obj is HealthConcern => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHealthConcern"')
      return HealthConcern_possibleTypes.includes(obj.__typename)
    }
    


    const HealthReport_possibleTypes: string[] = ['HealthReport']
    export const isHealthReport = (obj?: { __typename?: any } | null): obj is HealthReport => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHealthReport"')
      return HealthReport_possibleTypes.includes(obj.__typename)
    }
    


    const Human_possibleTypes: string[] = ['Human']
    export const isHuman = (obj?: { __typename?: any } | null): obj is Human => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isHuman"')
      return Human_possibleTypes.includes(obj.__typename)
    }
    


    const IcdCode_possibleTypes: string[] = ['IcdCode']
    export const isIcdCode = (obj?: { __typename?: any } | null): obj is IcdCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIcdCode"')
      return IcdCode_possibleTypes.includes(obj.__typename)
    }
    


    const IcdCodesCms1500_possibleTypes: string[] = ['IcdCodesCms1500']
    export const isIcdCodesCms1500 = (obj?: { __typename?: any } | null): obj is IcdCodesCms1500 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIcdCodesCms1500"')
      return IcdCodesCms1500_possibleTypes.includes(obj.__typename)
    }
    


    const IcdCodesIndividualClientNote_possibleTypes: string[] = ['IcdCodesIndividualClientNote']
    export const isIcdCodesIndividualClientNote = (obj?: { __typename?: any } | null): obj is IcdCodesIndividualClientNote => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIcdCodesIndividualClientNote"')
      return IcdCodesIndividualClientNote_possibleTypes.includes(obj.__typename)
    }
    


    const IcdCodesPolicy_possibleTypes: string[] = ['IcdCodesPolicy']
    export const isIcdCodesPolicy = (obj?: { __typename?: any } | null): obj is IcdCodesPolicy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIcdCodesPolicy"')
      return IcdCodesPolicy_possibleTypes.includes(obj.__typename)
    }
    


    const IcdCodesSuperBill_possibleTypes: string[] = ['IcdCodesSuperBill']
    export const isIcdCodesSuperBill = (obj?: { __typename?: any } | null): obj is IcdCodesSuperBill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIcdCodesSuperBill"')
      return IcdCodesSuperBill_possibleTypes.includes(obj.__typename)
    }
    


    const Immunization_possibleTypes: string[] = ['Immunization']
    export const isImmunization = (obj?: { __typename?: any } | null): obj is Immunization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImmunization"')
      return Immunization_possibleTypes.includes(obj.__typename)
    }
    


    const ImplantableDevice_possibleTypes: string[] = ['ImplantableDevice']
    export const isImplantableDevice = (obj?: { __typename?: any } | null): obj is ImplantableDevice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImplantableDevice"')
      return ImplantableDevice_possibleTypes.includes(obj.__typename)
    }
    


    const ImplantableDeviceUser_possibleTypes: string[] = ['ImplantableDeviceUser']
    export const isImplantableDeviceUser = (obj?: { __typename?: any } | null): obj is ImplantableDeviceUser => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImplantableDeviceUser"')
      return ImplantableDeviceUser_possibleTypes.includes(obj.__typename)
    }
    


    const ImportDataRequest_possibleTypes: string[] = ['ImportDataRequest']
    export const isImportDataRequest = (obj?: { __typename?: any } | null): obj is ImportDataRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImportDataRequest"')
      return ImportDataRequest_possibleTypes.includes(obj.__typename)
    }
    


    const IndividualClientType_possibleTypes: string[] = ['IndividualClientType']
    export const isIndividualClientType = (obj?: { __typename?: any } | null): obj is IndividualClientType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndividualClientType"')
      return IndividualClientType_possibleTypes.includes(obj.__typename)
    }
    


    const InsuranceAuthorizationChartType_possibleTypes: string[] = ['InsuranceAuthorizationChartType']
    export const isInsuranceAuthorizationChartType = (obj?: { __typename?: any } | null): obj is InsuranceAuthorizationChartType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInsuranceAuthorizationChartType"')
      return InsuranceAuthorizationChartType_possibleTypes.includes(obj.__typename)
    }
    


    const InsuranceAuthorizationType_possibleTypes: string[] = ['InsuranceAuthorizationType']
    export const isInsuranceAuthorizationType = (obj?: { __typename?: any } | null): obj is InsuranceAuthorizationType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInsuranceAuthorizationType"')
      return InsuranceAuthorizationType_possibleTypes.includes(obj.__typename)
    }
    


    const InsurancePlan_possibleTypes: string[] = ['InsurancePlan']
    export const isInsurancePlan = (obj?: { __typename?: any } | null): obj is InsurancePlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInsurancePlan"')
      return InsurancePlan_possibleTypes.includes(obj.__typename)
    }
    


    const IntakeFlowItem_possibleTypes: string[] = ['IntakeFlowItem']
    export const isIntakeFlowItem = (obj?: { __typename?: any } | null): obj is IntakeFlowItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntakeFlowItem"')
      return IntakeFlowItem_possibleTypes.includes(obj.__typename)
    }
    


    const IntakeFlowItemRequestInfo_possibleTypes: string[] = ['IntakeFlowItemRequestInfo']
    export const isIntakeFlowItemRequestInfo = (obj?: { __typename?: any } | null): obj is IntakeFlowItemRequestInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntakeFlowItemRequestInfo"')
      return IntakeFlowItemRequestInfo_possibleTypes.includes(obj.__typename)
    }
    


    const IntakeFlowType_possibleTypes: string[] = ['IntakeFlowType']
    export const isIntakeFlowType = (obj?: { __typename?: any } | null): obj is IntakeFlowType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntakeFlowType"')
      return IntakeFlowType_possibleTypes.includes(obj.__typename)
    }
    


    const IntegrationCategoryType_possibleTypes: string[] = ['IntegrationCategoryType']
    export const isIntegrationCategoryType = (obj?: { __typename?: any } | null): obj is IntegrationCategoryType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntegrationCategoryType"')
      return IntegrationCategoryType_possibleTypes.includes(obj.__typename)
    }
    


    const IntegrationOptionType_possibleTypes: string[] = ['IntegrationOptionType']
    export const isIntegrationOptionType = (obj?: { __typename?: any } | null): obj is IntegrationOptionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIntegrationOptionType"')
      return IntegrationOptionType_possibleTypes.includes(obj.__typename)
    }
    


    const LabFiltersDataType_possibleTypes: string[] = ['LabFiltersDataType']
    export const isLabFiltersDataType = (obj?: { __typename?: any } | null): obj is LabFiltersDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLabFiltersDataType"')
      return LabFiltersDataType_possibleTypes.includes(obj.__typename)
    }
    


    const LabObservationRequest_possibleTypes: string[] = ['LabObservationRequest']
    export const isLabObservationRequest = (obj?: { __typename?: any } | null): obj is LabObservationRequest => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLabObservationRequest"')
      return LabObservationRequest_possibleTypes.includes(obj.__typename)
    }
    


    const LabObservationResult_possibleTypes: string[] = ['LabObservationResult']
    export const isLabObservationResult = (obj?: { __typename?: any } | null): obj is LabObservationResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLabObservationResult"')
      return LabObservationResult_possibleTypes.includes(obj.__typename)
    }
    


    const LabOption_possibleTypes: string[] = ['LabOption']
    export const isLabOption = (obj?: { __typename?: any } | null): obj is LabOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLabOption"')
      return LabOption_possibleTypes.includes(obj.__typename)
    }
    


    const LabOrder_possibleTypes: string[] = ['LabOrder']
    export const isLabOrder = (obj?: { __typename?: any } | null): obj is LabOrder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLabOrder"')
      return LabOrder_possibleTypes.includes(obj.__typename)
    }
    


    const LabResult_possibleTypes: string[] = ['LabResult']
    export const isLabResult = (obj?: { __typename?: any } | null): obj is LabResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLabResult"')
      return LabResult_possibleTypes.includes(obj.__typename)
    }
    


    const Location_possibleTypes: string[] = ['Location']
    export const isLocation = (obj?: { __typename?: any } | null): obj is Location => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocation"')
      return Location_possibleTypes.includes(obj.__typename)
    }
    


    const LocationResourceType_possibleTypes: string[] = ['LocationResourceType']
    export const isLocationResourceType = (obj?: { __typename?: any } | null): obj is LocationResourceType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationResourceType"')
      return LocationResourceType_possibleTypes.includes(obj.__typename)
    }
    


    const MaskAccountPayload_possibleTypes: string[] = ['MaskAccountPayload']
    export const isMaskAccountPayload = (obj?: { __typename?: any } | null): obj is MaskAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMaskAccountPayload"')
      return MaskAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const Meal_possibleTypes: string[] = ['Meal']
    export const isMeal = (obj?: { __typename?: any } | null): obj is Meal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMeal"')
      return Meal_possibleTypes.includes(obj.__typename)
    }
    


    const MealPlan_possibleTypes: string[] = ['MealPlan']
    export const isMealPlan = (obj?: { __typename?: any } | null): obj is MealPlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMealPlan"')
      return MealPlan_possibleTypes.includes(obj.__typename)
    }
    


    const MedicationOptionType_possibleTypes: string[] = ['MedicationOptionType']
    export const isMedicationOptionType = (obj?: { __typename?: any } | null): obj is MedicationOptionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMedicationOptionType"')
      return MedicationOptionType_possibleTypes.includes(obj.__typename)
    }
    


    const MedicationType_possibleTypes: string[] = ['MedicationType']
    export const isMedicationType = (obj?: { __typename?: any } | null): obj is MedicationType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMedicationType"')
      return MedicationType_possibleTypes.includes(obj.__typename)
    }
    


    const MetricDataPointType_possibleTypes: string[] = ['MetricDataPointType']
    export const isMetricDataPointType = (obj?: { __typename?: any } | null): obj is MetricDataPointType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetricDataPointType"')
      return MetricDataPointType_possibleTypes.includes(obj.__typename)
    }
    


    const MetricGraphDataType_possibleTypes: string[] = ['MetricGraphDataType']
    export const isMetricGraphDataType = (obj?: { __typename?: any } | null): obj is MetricGraphDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMetricGraphDataType"')
      return MetricGraphDataType_possibleTypes.includes(obj.__typename)
    }
    


    const MonthlyBillingItemsDataType_possibleTypes: string[] = ['MonthlyBillingItemsDataType']
    export const isMonthlyBillingItemsDataType = (obj?: { __typename?: any } | null): obj is MonthlyBillingItemsDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMonthlyBillingItemsDataType"')
      return MonthlyBillingItemsDataType_possibleTypes.includes(obj.__typename)
    }
    


    const MultiLineMetricGraphDataType_possibleTypes: string[] = ['MultiLineMetricGraphDataType']
    export const isMultiLineMetricGraphDataType = (obj?: { __typename?: any } | null): obj is MultiLineMetricGraphDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMultiLineMetricGraphDataType"')
      return MultiLineMetricGraphDataType_possibleTypes.includes(obj.__typename)
    }
    


    const Mutation_possibleTypes: string[] = ['Mutation']
    export const isMutation = (obj?: { __typename?: any } | null): obj is Mutation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMutation"')
      return Mutation_possibleTypes.includes(obj.__typename)
    }
    


    const Note_possibleTypes: string[] = ['Note']
    export const isNote = (obj?: { __typename?: any } | null): obj is Note => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNote"')
      return Note_possibleTypes.includes(obj.__typename)
    }
    


    const NoteScheduler_possibleTypes: string[] = ['NoteScheduler']
    export const isNoteScheduler = (obj?: { __typename?: any } | null): obj is NoteScheduler => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteScheduler"')
      return NoteScheduler_possibleTypes.includes(obj.__typename)
    }
    


    const Notification_possibleTypes: string[] = ['Notification']
    export const isNotification = (obj?: { __typename?: any } | null): obj is Notification => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNotification"')
      return Notification_possibleTypes.includes(obj.__typename)
    }
    


    const NotificationContact_possibleTypes: string[] = ['NotificationContact']
    export const isNotificationContact = (obj?: { __typename?: any } | null): obj is NotificationContact => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNotificationContact"')
      return NotificationContact_possibleTypes.includes(obj.__typename)
    }
    


    const NotificationSetting_possibleTypes: string[] = ['NotificationSetting']
    export const isNotificationSetting = (obj?: { __typename?: any } | null): obj is NotificationSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNotificationSetting"')
      return NotificationSetting_possibleTypes.includes(obj.__typename)
    }
    


    const Offering_possibleTypes: string[] = ['Offering']
    export const isOffering = (obj?: { __typename?: any } | null): obj is Offering => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOffering"')
      return Offering_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingCoupon_possibleTypes: string[] = ['OfferingCoupon']
    export const isOfferingCoupon = (obj?: { __typename?: any } | null): obj is OfferingCoupon => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingCoupon"')
      return OfferingCoupon_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingCourse_possibleTypes: string[] = ['OfferingCourse']
    export const isOfferingCourse = (obj?: { __typename?: any } | null): obj is OfferingCourse => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingCourse"')
      return OfferingCourse_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingGroupVisibility_possibleTypes: string[] = ['OfferingGroupVisibility']
    export const isOfferingGroupVisibility = (obj?: { __typename?: any } | null): obj is OfferingGroupVisibility => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingGroupVisibility"')
      return OfferingGroupVisibility_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingImage_possibleTypes: string[] = ['OfferingImage']
    export const isOfferingImage = (obj?: { __typename?: any } | null): obj is OfferingImage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingImage"')
      return OfferingImage_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingInclude_possibleTypes: string[] = ['OfferingInclude']
    export const isOfferingInclude = (obj?: { __typename?: any } | null): obj is OfferingInclude => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingInclude"')
      return OfferingInclude_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingLabOption_possibleTypes: string[] = ['OfferingLabOption']
    export const isOfferingLabOption = (obj?: { __typename?: any } | null): obj is OfferingLabOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingLabOption"')
      return OfferingLabOption_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingProduct_possibleTypes: string[] = ['OfferingProduct']
    export const isOfferingProduct = (obj?: { __typename?: any } | null): obj is OfferingProduct => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingProduct"')
      return OfferingProduct_possibleTypes.includes(obj.__typename)
    }
    


    const OfferingsDataType_possibleTypes: string[] = ['OfferingsDataType']
    export const isOfferingsDataType = (obj?: { __typename?: any } | null): obj is OfferingsDataType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfferingsDataType"')
      return OfferingsDataType_possibleTypes.includes(obj.__typename)
    }
    


    const OfficeallySftpAccount_possibleTypes: string[] = ['OfficeallySftpAccount']
    export const isOfficeallySftpAccount = (obj?: { __typename?: any } | null): obj is OfficeallySftpAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOfficeallySftpAccount"')
      return OfficeallySftpAccount_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingFlow_possibleTypes: string[] = ['OnboardingFlow']
    export const isOnboardingFlow = (obj?: { __typename?: any } | null): obj is OnboardingFlow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingFlow"')
      return OnboardingFlow_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingItem_possibleTypes: string[] = ['OnboardingItem']
    export const isOnboardingItem = (obj?: { __typename?: any } | null): obj is OnboardingItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingItem"')
      return OnboardingItem_possibleTypes.includes(obj.__typename)
    }
    


    const Organization_possibleTypes: string[] = ['Organization']
    export const isOrganization = (obj?: { __typename?: any } | null): obj is Organization => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrganization"')
      return Organization_possibleTypes.includes(obj.__typename)
    }
    


    const OrganizationCptCodeType_possibleTypes: string[] = ['OrganizationCptCodeType']
    export const isOrganizationCptCodeType = (obj?: { __typename?: any } | null): obj is OrganizationCptCodeType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationCptCodeType"')
      return OrganizationCptCodeType_possibleTypes.includes(obj.__typename)
    }
    


    const OrganizationInfo_possibleTypes: string[] = ['OrganizationInfo']
    export const isOrganizationInfo = (obj?: { __typename?: any } | null): obj is OrganizationInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationInfo"')
      return OrganizationInfo_possibleTypes.includes(obj.__typename)
    }
    


    const OrganizationMembership_possibleTypes: string[] = ['OrganizationMembership']
    export const isOrganizationMembership = (obj?: { __typename?: any } | null): obj is OrganizationMembership => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOrganizationMembership"')
      return OrganizationMembership_possibleTypes.includes(obj.__typename)
    }
    


    const OtherIdNumber_possibleTypes: string[] = ['OtherIdNumber']
    export const isOtherIdNumber = (obj?: { __typename?: any } | null): obj is OtherIdNumber => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOtherIdNumber"')
      return OtherIdNumber_possibleTypes.includes(obj.__typename)
    }
    


    const PairAccountsPayload_possibleTypes: string[] = ['PairAccountsPayload']
    export const isPairAccountsPayload = (obj?: { __typename?: any } | null): obj is PairAccountsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPairAccountsPayload"')
      return PairAccountsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const PermissionTemplateType_possibleTypes: string[] = ['PermissionTemplateType']
    export const isPermissionTemplateType = (obj?: { __typename?: any } | null): obj is PermissionTemplateType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPermissionTemplateType"')
      return PermissionTemplateType_possibleTypes.includes(obj.__typename)
    }
    


    const Pharmacy_possibleTypes: string[] = ['Pharmacy']
    export const isPharmacy = (obj?: { __typename?: any } | null): obj is Pharmacy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPharmacy"')
      return Pharmacy_possibleTypes.includes(obj.__typename)
    }
    


    const PlaceOfService_possibleTypes: string[] = ['PlaceOfService']
    export const isPlaceOfService = (obj?: { __typename?: any } | null): obj is PlaceOfService => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlaceOfService"')
      return PlaceOfService_possibleTypes.includes(obj.__typename)
    }
    


    const Plan_possibleTypes: string[] = ['Plan']
    export const isPlan = (obj?: { __typename?: any } | null): obj is Plan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlan"')
      return Plan_possibleTypes.includes(obj.__typename)
    }
    


    const Policy_possibleTypes: string[] = ['Policy']
    export const isPolicy = (obj?: { __typename?: any } | null): obj is Policy => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPolicy"')
      return Policy_possibleTypes.includes(obj.__typename)
    }
    


    const PotentialAppointmentSlot_possibleTypes: string[] = ['PotentialAppointmentSlot']
    export const isPotentialAppointmentSlot = (obj?: { __typename?: any } | null): obj is PotentialAppointmentSlot => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPotentialAppointmentSlot"')
      return PotentialAppointmentSlot_possibleTypes.includes(obj.__typename)
    }
    


    const PreferredMedicalCode_possibleTypes: string[] = ['PreferredMedicalCode']
    export const isPreferredMedicalCode = (obj?: { __typename?: any } | null): obj is PreferredMedicalCode => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPreferredMedicalCode"')
      return PreferredMedicalCode_possibleTypes.includes(obj.__typename)
    }
    


    const Prescription_possibleTypes: string[] = ['Prescription']
    export const isPrescription = (obj?: { __typename?: any } | null): obj is Prescription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPrescription"')
      return Prescription_possibleTypes.includes(obj.__typename)
    }
    


    const PriceAndCptPriceType_possibleTypes: string[] = ['PriceAndCptPriceType']
    export const isPriceAndCptPriceType = (obj?: { __typename?: any } | null): obj is PriceAndCptPriceType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPriceAndCptPriceType"')
      return PriceAndCptPriceType_possibleTypes.includes(obj.__typename)
    }
    


    const Problem_possibleTypes: string[] = ['Problem']
    export const isProblem = (obj?: { __typename?: any } | null): obj is Problem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProblem"')
      return Problem_possibleTypes.includes(obj.__typename)
    }
    


    const Procedure_possibleTypes: string[] = ['Procedure']
    export const isProcedure = (obj?: { __typename?: any } | null): obj is Procedure => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProcedure"')
      return Procedure_possibleTypes.includes(obj.__typename)
    }
    


    const Product_possibleTypes: string[] = ['Product']
    export const isProduct = (obj?: { __typename?: any } | null): obj is Product => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProduct"')
      return Product_possibleTypes.includes(obj.__typename)
    }
    


    const Profession_possibleTypes: string[] = ['Profession']
    export const isProfession = (obj?: { __typename?: any } | null): obj is Profession => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProfession"')
      return Profession_possibleTypes.includes(obj.__typename)
    }
    


    const ProviderAppointmentLocation_possibleTypes: string[] = ['ProviderAppointmentLocation']
    export const isProviderAppointmentLocation = (obj?: { __typename?: any } | null): obj is ProviderAppointmentLocation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProviderAppointmentLocation"')
      return ProviderAppointmentLocation_possibleTypes.includes(obj.__typename)
    }
    


    const ProviderApptTypeConnection_possibleTypes: string[] = ['ProviderApptTypeConnection']
    export const isProviderApptTypeConnection = (obj?: { __typename?: any } | null): obj is ProviderApptTypeConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProviderApptTypeConnection"')
      return ProviderApptTypeConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ProviderCptCodeType_possibleTypes: string[] = ['ProviderCptCodeType']
    export const isProviderCptCodeType = (obj?: { __typename?: any } | null): obj is ProviderCptCodeType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isProviderCptCodeType"')
      return ProviderCptCodeType_possibleTypes.includes(obj.__typename)
    }
    


    const Query_possibleTypes: string[] = ['Query']
    export const isQuery = (obj?: { __typename?: any } | null): obj is Query => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuery"')
      return Query_possibleTypes.includes(obj.__typename)
    }
    


    const ReceiptLineItem_possibleTypes: string[] = ['ReceiptLineItem']
    export const isReceiptLineItem = (obj?: { __typename?: any } | null): obj is ReceiptLineItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReceiptLineItem"')
      return ReceiptLineItem_possibleTypes.includes(obj.__typename)
    }
    


    const ReceivedDirectMessage_possibleTypes: string[] = ['ReceivedDirectMessage']
    export const isReceivedDirectMessage = (obj?: { __typename?: any } | null): obj is ReceivedDirectMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReceivedDirectMessage"')
      return ReceivedDirectMessage_possibleTypes.includes(obj.__typename)
    }
    


    const ReceivedFax_possibleTypes: string[] = ['ReceivedFax']
    export const isReceivedFax = (obj?: { __typename?: any } | null): obj is ReceivedFax => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReceivedFax"')
      return ReceivedFax_possibleTypes.includes(obj.__typename)
    }
    


    const Recommendation_possibleTypes: string[] = ['Recommendation']
    export const isRecommendation = (obj?: { __typename?: any } | null): obj is Recommendation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecommendation"')
      return Recommendation_possibleTypes.includes(obj.__typename)
    }
    


    const RecurringAppointment_possibleTypes: string[] = ['RecurringAppointment']
    export const isRecurringAppointment = (obj?: { __typename?: any } | null): obj is RecurringAppointment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecurringAppointment"')
      return RecurringAppointment_possibleTypes.includes(obj.__typename)
    }
    


    const RecurringDaysData_possibleTypes: string[] = ['RecurringDaysData']
    export const isRecurringDaysData = (obj?: { __typename?: any } | null): obj is RecurringDaysData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecurringDaysData"')
      return RecurringDaysData_possibleTypes.includes(obj.__typename)
    }
    


    const RecurringForm_possibleTypes: string[] = ['RecurringForm']
    export const isRecurringForm = (obj?: { __typename?: any } | null): obj is RecurringForm => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecurringForm"')
      return RecurringForm_possibleTypes.includes(obj.__typename)
    }
    


    const RecurringPayment_possibleTypes: string[] = ['RecurringPayment']
    export const isRecurringPayment = (obj?: { __typename?: any } | null): obj is RecurringPayment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRecurringPayment"')
      return RecurringPayment_possibleTypes.includes(obj.__typename)
    }
    


    const Referral_possibleTypes: string[] = ['Referral']
    export const isReferral = (obj?: { __typename?: any } | null): obj is Referral => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReferral"')
      return Referral_possibleTypes.includes(obj.__typename)
    }
    


    const ReferralInfo_possibleTypes: string[] = ['ReferralInfo']
    export const isReferralInfo = (obj?: { __typename?: any } | null): obj is ReferralInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReferralInfo"')
      return ReferralInfo_possibleTypes.includes(obj.__typename)
    }
    


    const ReferringPhysician_possibleTypes: string[] = ['ReferringPhysician']
    export const isReferringPhysician = (obj?: { __typename?: any } | null): obj is ReferringPhysician => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReferringPhysician"')
      return ReferringPhysician_possibleTypes.includes(obj.__typename)
    }
    


    const RefetchChangeHealthLabOrderPayload_possibleTypes: string[] = ['RefetchChangeHealthLabOrderPayload']
    export const isRefetchChangeHealthLabOrderPayload = (obj?: { __typename?: any } | null): obj is RefetchChangeHealthLabOrderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefetchChangeHealthLabOrderPayload"')
      return RefetchChangeHealthLabOrderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RefreshHostLinksPayload_possibleTypes: string[] = ['RefreshHostLinksPayload']
    export const isRefreshHostLinksPayload = (obj?: { __typename?: any } | null): obj is RefreshHostLinksPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefreshHostLinksPayload"')
      return RefreshHostLinksPayload_possibleTypes.includes(obj.__typename)
    }
    


    const RefundItem_possibleTypes: string[] = ['RefundItem']
    export const isRefundItem = (obj?: { __typename?: any } | null): obj is RefundItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRefundItem"')
      return RefundItem_possibleTypes.includes(obj.__typename)
    }
    


    const RelatedObject_possibleTypes: string[] = ['RelatedObject']
    export const isRelatedObject = (obj?: { __typename?: any } | null): obj is RelatedObject => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRelatedObject"')
      return RelatedObject_possibleTypes.includes(obj.__typename)
    }
    


    const Reminder_possibleTypes: string[] = ['Reminder']
    export const isReminder = (obj?: { __typename?: any } | null): obj is Reminder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReminder"')
      return Reminder_possibleTypes.includes(obj.__typename)
    }
    


    const RemoveCardOnFilePayload_possibleTypes: string[] = ['RemoveCardOnFilePayload']
    export const isRemoveCardOnFilePayload = (obj?: { __typename?: any } | null): obj is RemoveCardOnFilePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRemoveCardOnFilePayload"')
      return RemoveCardOnFilePayload_possibleTypes.includes(obj.__typename)
    }
    


    const ReportsDateFilterSelection_possibleTypes: string[] = ['ReportsDateFilterSelection']
    export const isReportsDateFilterSelection = (obj?: { __typename?: any } | null): obj is ReportsDateFilterSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isReportsDateFilterSelection"')
      return ReportsDateFilterSelection_possibleTypes.includes(obj.__typename)
    }
    


    const RequestedFormCompletion_possibleTypes: string[] = ['RequestedFormCompletion']
    export const isRequestedFormCompletion = (obj?: { __typename?: any } | null): obj is RequestedFormCompletion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestedFormCompletion"')
      return RequestedFormCompletion_possibleTypes.includes(obj.__typename)
    }
    


    const RequestedFormStatusType_possibleTypes: string[] = ['RequestedFormStatusType']
    export const isRequestedFormStatusType = (obj?: { __typename?: any } | null): obj is RequestedFormStatusType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestedFormStatusType"')
      return RequestedFormStatusType_possibleTypes.includes(obj.__typename)
    }
    


    const RequestedPayer_possibleTypes: string[] = ['RequestedPayer']
    export const isRequestedPayer = (obj?: { __typename?: any } | null): obj is RequestedPayer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestedPayer"')
      return RequestedPayer_possibleTypes.includes(obj.__typename)
    }
    


    const RequestedPayment_possibleTypes: string[] = ['RequestedPayment']
    export const isRequestedPayment = (obj?: { __typename?: any } | null): obj is RequestedPayment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestedPayment"')
      return RequestedPayment_possibleTypes.includes(obj.__typename)
    }
    


    const RequestedPaymentTemplate_possibleTypes: string[] = ['RequestedPaymentTemplate']
    export const isRequestedPaymentTemplate = (obj?: { __typename?: any } | null): obj is RequestedPaymentTemplate => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRequestedPaymentTemplate"')
      return RequestedPaymentTemplate_possibleTypes.includes(obj.__typename)
    }
    


    const Room_possibleTypes: string[] = ['Room']
    export const isRoom = (obj?: { __typename?: any } | null): obj is Room => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRoom"')
      return Room_possibleTypes.includes(obj.__typename)
    }
    


    const SDKConfig_possibleTypes: string[] = ['SDKConfig']
    export const isSDKConfig = (obj?: { __typename?: any } | null): obj is SDKConfig => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSDKConfig"')
      return SDKConfig_possibleTypes.includes(obj.__typename)
    }
    


    const SavedFilter_possibleTypes: string[] = ['SavedFilter']
    export const isSavedFilter = (obj?: { __typename?: any } | null): obj is SavedFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSavedFilter"')
      return SavedFilter_possibleTypes.includes(obj.__typename)
    }
    


    const ScheduledUserPackageSelection_possibleTypes: string[] = ['ScheduledUserPackageSelection']
    export const isScheduledUserPackageSelection = (obj?: { __typename?: any } | null): obj is ScheduledUserPackageSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isScheduledUserPackageSelection"')
      return ScheduledUserPackageSelection_possibleTypes.includes(obj.__typename)
    }
    


    const SendSpeakToTrainerNotificationPayload_possibleTypes: string[] = ['SendSpeakToTrainerNotificationPayload']
    export const isSendSpeakToTrainerNotificationPayload = (obj?: { __typename?: any } | null): obj is SendSpeakToTrainerNotificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendSpeakToTrainerNotificationPayload"')
      return SendSpeakToTrainerNotificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SendWelcomeEmailPayload_possibleTypes: string[] = ['SendWelcomeEmailPayload']
    export const isSendWelcomeEmailPayload = (obj?: { __typename?: any } | null): obj is SendWelcomeEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendWelcomeEmailPayload"')
      return SendWelcomeEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const SentDirectMessage_possibleTypes: string[] = ['SentDirectMessage']
    export const isSentDirectMessage = (obj?: { __typename?: any } | null): obj is SentDirectMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSentDirectMessage"')
      return SentDirectMessage_possibleTypes.includes(obj.__typename)
    }
    


    const SentFax_possibleTypes: string[] = ['SentFax']
    export const isSentFax = (obj?: { __typename?: any } | null): obj is SentFax => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSentFax"')
      return SentFax_possibleTypes.includes(obj.__typename)
    }
    


    const SentNotificationRecord_possibleTypes: string[] = ['SentNotificationRecord']
    export const isSentNotificationRecord = (obj?: { __typename?: any } | null): obj is SentNotificationRecord => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSentNotificationRecord"')
      return SentNotificationRecord_possibleTypes.includes(obj.__typename)
    }
    


    const SentWebhook_possibleTypes: string[] = ['SentWebhook']
    export const isSentWebhook = (obj?: { __typename?: any } | null): obj is SentWebhook => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSentWebhook"')
      return SentWebhook_possibleTypes.includes(obj.__typename)
    }
    


    const ServingSize_possibleTypes: string[] = ['ServingSize']
    export const isServingSize = (obj?: { __typename?: any } | null): obj is ServingSize => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServingSize"')
      return ServingSize_possibleTypes.includes(obj.__typename)
    }
    


    const ShapaConnection_possibleTypes: string[] = ['ShapaConnection']
    export const isShapaConnection = (obj?: { __typename?: any } | null): obj is ShapaConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isShapaConnection"')
      return ShapaConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SmartPhrase_possibleTypes: string[] = ['SmartPhrase']
    export const isSmartPhrase = (obj?: { __typename?: any } | null): obj is SmartPhrase => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmartPhrase"')
      return SmartPhrase_possibleTypes.includes(obj.__typename)
    }
    


    const SmokingStatus_possibleTypes: string[] = ['SmokingStatus']
    export const isSmokingStatus = (obj?: { __typename?: any } | null): obj is SmokingStatus => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSmokingStatus"')
      return SmokingStatus_possibleTypes.includes(obj.__typename)
    }
    


    const SnomedTerm_possibleTypes: string[] = ['SnomedTerm']
    export const isSnomedTerm = (obj?: { __typename?: any } | null): obj is SnomedTerm => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSnomedTerm"')
      return SnomedTerm_possibleTypes.includes(obj.__typename)
    }
    


    const Specialty_possibleTypes: string[] = ['Specialty']
    export const isSpecialty = (obj?: { __typename?: any } | null): obj is Specialty => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSpecialty"')
      return Specialty_possibleTypes.includes(obj.__typename)
    }
    


    const SsoConnection_possibleTypes: string[] = ['SsoConnection']
    export const isSsoConnection = (obj?: { __typename?: any } | null): obj is SsoConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSsoConnection"')
      return SsoConnection_possibleTypes.includes(obj.__typename)
    }
    


    const StateLicense_possibleTypes: string[] = ['StateLicense']
    export const isStateLicense = (obj?: { __typename?: any } | null): obj is StateLicense => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStateLicense"')
      return StateLicense_possibleTypes.includes(obj.__typename)
    }
    


    const StripeBankAccountType_possibleTypes: string[] = ['StripeBankAccountType']
    export const isStripeBankAccountType = (obj?: { __typename?: any } | null): obj is StripeBankAccountType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripeBankAccountType"')
      return StripeBankAccountType_possibleTypes.includes(obj.__typename)
    }
    


    const StripeCompanyAddressType_possibleTypes: string[] = ['StripeCompanyAddressType']
    export const isStripeCompanyAddressType = (obj?: { __typename?: any } | null): obj is StripeCompanyAddressType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripeCompanyAddressType"')
      return StripeCompanyAddressType_possibleTypes.includes(obj.__typename)
    }
    


    const StripeCompanyType_possibleTypes: string[] = ['StripeCompanyType']
    export const isStripeCompanyType = (obj?: { __typename?: any } | null): obj is StripeCompanyType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripeCompanyType"')
      return StripeCompanyType_possibleTypes.includes(obj.__typename)
    }
    


    const StripeCountry_possibleTypes: string[] = ['StripeCountry']
    export const isStripeCountry = (obj?: { __typename?: any } | null): obj is StripeCountry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripeCountry"')
      return StripeCountry_possibleTypes.includes(obj.__typename)
    }
    


    const StripeCustomerDetail_possibleTypes: string[] = ['StripeCustomerDetail']
    export const isStripeCustomerDetail = (obj?: { __typename?: any } | null): obj is StripeCustomerDetail => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripeCustomerDetail"')
      return StripeCustomerDetail_possibleTypes.includes(obj.__typename)
    }
    


    const StripeInvoice_possibleTypes: string[] = ['StripeInvoice']
    export const isStripeInvoice = (obj?: { __typename?: any } | null): obj is StripeInvoice => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripeInvoice"')
      return StripeInvoice_possibleTypes.includes(obj.__typename)
    }
    


    const StripePlan_possibleTypes: string[] = ['StripePlan']
    export const isStripePlan = (obj?: { __typename?: any } | null): obj is StripePlan => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStripePlan"')
      return StripePlan_possibleTypes.includes(obj.__typename)
    }
    


    const Subscription_possibleTypes: string[] = ['Subscription']
    export const isSubscription = (obj?: { __typename?: any } | null): obj is Subscription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscription"')
      return Subscription_possibleTypes.includes(obj.__typename)
    }
    


    const SubscriptionInstance_possibleTypes: string[] = ['SubscriptionInstance']
    export const isSubscriptionInstance = (obj?: { __typename?: any } | null): obj is SubscriptionInstance => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscriptionInstance"')
      return SubscriptionInstance_possibleTypes.includes(obj.__typename)
    }
    


    const Success_possibleTypes: string[] = ['Success']
    export const isSuccess = (obj?: { __typename?: any } | null): obj is Success => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSuccess"')
      return Success_possibleTypes.includes(obj.__typename)
    }
    


    const SuperBill_possibleTypes: string[] = ['SuperBill']
    export const isSuperBill = (obj?: { __typename?: any } | null): obj is SuperBill => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSuperBill"')
      return SuperBill_possibleTypes.includes(obj.__typename)
    }
    


    const SymptomOption_possibleTypes: string[] = ['SymptomOption']
    export const isSymptomOption = (obj?: { __typename?: any } | null): obj is SymptomOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSymptomOption"')
      return SymptomOption_possibleTypes.includes(obj.__typename)
    }
    


    const Tag_possibleTypes: string[] = ['Tag']
    export const isTag = (obj?: { __typename?: any } | null): obj is Tag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTag"')
      return Tag_possibleTypes.includes(obj.__typename)
    }
    


    const Task_possibleTypes: string[] = ['Task']
    export const isTask = (obj?: { __typename?: any } | null): obj is Task => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTask"')
      return Task_possibleTypes.includes(obj.__typename)
    }
    


    const Toggle2FaPayload_possibleTypes: string[] = ['Toggle2FaPayload']
    export const isToggle2FaPayload = (obj?: { __typename?: any } | null): obj is Toggle2FaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isToggle2FaPayload"')
      return Toggle2FaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ToggleAdvancedSettingsPayload_possibleTypes: string[] = ['ToggleAdvancedSettingsPayload']
    export const isToggleAdvancedSettingsPayload = (obj?: { __typename?: any } | null): obj is ToggleAdvancedSettingsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isToggleAdvancedSettingsPayload"')
      return ToggleAdvancedSettingsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ToggleAvailabilityPayload_possibleTypes: string[] = ['ToggleAvailabilityPayload']
    export const isToggleAvailabilityPayload = (obj?: { __typename?: any } | null): obj is ToggleAvailabilityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isToggleAvailabilityPayload"')
      return ToggleAvailabilityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ToggleBaaPayload_possibleTypes: string[] = ['ToggleBaaPayload']
    export const isToggleBaaPayload = (obj?: { __typename?: any } | null): obj is ToggleBaaPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isToggleBaaPayload"')
      return ToggleBaaPayload_possibleTypes.includes(obj.__typename)
    }
    


    const TogglePaywallPayload_possibleTypes: string[] = ['TogglePaywallPayload']
    export const isTogglePaywallPayload = (obj?: { __typename?: any } | null): obj is TogglePaywallPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTogglePaywallPayload"')
      return TogglePaywallPayload_possibleTypes.includes(obj.__typename)
    }
    


    const ToggleReasonForApptPayload_possibleTypes: string[] = ['ToggleReasonForApptPayload']
    export const isToggleReasonForApptPayload = (obj?: { __typename?: any } | null): obj is ToggleReasonForApptPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isToggleReasonForApptPayload"')
      return ToggleReasonForApptPayload_possibleTypes.includes(obj.__typename)
    }
    


    const TransactionType_possibleTypes: string[] = ['TransactionType']
    export const isTransactionType = (obj?: { __typename?: any } | null): obj is TransactionType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransactionType"')
      return TransactionType_possibleTypes.includes(obj.__typename)
    }
    


    const TransferType_possibleTypes: string[] = ['TransferType']
    export const isTransferType = (obj?: { __typename?: any } | null): obj is TransferType => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransferType"')
      return TransferType_possibleTypes.includes(obj.__typename)
    }
    


    const UniqueDeviceIdentifier_possibleTypes: string[] = ['UniqueDeviceIdentifier']
    export const isUniqueDeviceIdentifier = (obj?: { __typename?: any } | null): obj is UniqueDeviceIdentifier => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUniqueDeviceIdentifier"')
      return UniqueDeviceIdentifier_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateCalorieLevelPayload_possibleTypes: string[] = ['UpdateCalorieLevelPayload']
    export const isUpdateCalorieLevelPayload = (obj?: { __typename?: any } | null): obj is UpdateCalorieLevelPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCalorieLevelPayload"')
      return UpdateCalorieLevelPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateClaimSubmitterPayload_possibleTypes: string[] = ['UpdateClaimSubmitterPayload']
    export const isUpdateClaimSubmitterPayload = (obj?: { __typename?: any } | null): obj is UpdateClaimSubmitterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateClaimSubmitterPayload"')
      return UpdateClaimSubmitterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateCurrencyPayload_possibleTypes: string[] = ['UpdateCurrencyPayload']
    export const isUpdateCurrencyPayload = (obj?: { __typename?: any } | null): obj is UpdateCurrencyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateCurrencyPayload"')
      return UpdateCurrencyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateHiddenSettingsPayload_possibleTypes: string[] = ['UpdateHiddenSettingsPayload']
    export const isUpdateHiddenSettingsPayload = (obj?: { __typename?: any } | null): obj is UpdateHiddenSettingsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateHiddenSettingsPayload"')
      return UpdateHiddenSettingsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateMacronutrientSplitPayload_possibleTypes: string[] = ['UpdateMacronutrientSplitPayload']
    export const isUpdateMacronutrientSplitPayload = (obj?: { __typename?: any } | null): obj is UpdateMacronutrientSplitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateMacronutrientSplitPayload"')
      return UpdateMacronutrientSplitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdatePayload_possibleTypes: string[] = ['UpdatePayload']
    export const isUpdatePayload = (obj?: { __typename?: any } | null): obj is UpdatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdatePayload"')
      return UpdatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateUiConfigurationPayload_possibleTypes: string[] = ['UpdateUiConfigurationPayload']
    export const isUpdateUiConfigurationPayload = (obj?: { __typename?: any } | null): obj is UpdateUiConfigurationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateUiConfigurationPayload"')
      return UpdateUiConfigurationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const UpdateUserEmailPayload_possibleTypes: string[] = ['UpdateUserEmailPayload']
    export const isUpdateUserEmailPayload = (obj?: { __typename?: any } | null): obj is UpdateUserEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUpdateUserEmailPayload"')
      return UpdateUserEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const User_possibleTypes: string[] = ['User']
    export const isUser = (obj?: { __typename?: any } | null): obj is User => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUser"')
      return User_possibleTypes.includes(obj.__typename)
    }
    


    const UserGroup_possibleTypes: string[] = ['UserGroup']
    export const isUserGroup = (obj?: { __typename?: any } | null): obj is UserGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserGroup"')
      return UserGroup_possibleTypes.includes(obj.__typename)
    }
    


    const UserNotificationsCount_possibleTypes: string[] = ['UserNotificationsCount']
    export const isUserNotificationsCount = (obj?: { __typename?: any } | null): obj is UserNotificationsCount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserNotificationsCount"')
      return UserNotificationsCount_possibleTypes.includes(obj.__typename)
    }
    


    const UserPackageSelection_possibleTypes: string[] = ['UserPackageSelection']
    export const isUserPackageSelection = (obj?: { __typename?: any } | null): obj is UserPackageSelection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserPackageSelection"')
      return UserPackageSelection_possibleTypes.includes(obj.__typename)
    }
    


    const ValidateOfferingCoupon_possibleTypes: string[] = ['ValidateOfferingCoupon']
    export const isValidateOfferingCoupon = (obj?: { __typename?: any } | null): obj is ValidateOfferingCoupon => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isValidateOfferingCoupon"')
      return ValidateOfferingCoupon_possibleTypes.includes(obj.__typename)
    }
    


    const VideoChat_possibleTypes: string[] = ['VideoChat']
    export const isVideoChat = (obj?: { __typename?: any } | null): obj is VideoChat => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoChat"')
      return VideoChat_possibleTypes.includes(obj.__typename)
    }
    


    const VideoChatsSubscriptionPayload_possibleTypes: string[] = ['VideoChatsSubscriptionPayload']
    export const isVideoChatsSubscriptionPayload = (obj?: { __typename?: any } | null): obj is VideoChatsSubscriptionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoChatsSubscriptionPayload"')
      return VideoChatsSubscriptionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const VideoUrlDefault_possibleTypes: string[] = ['VideoUrlDefault']
    export const isVideoUrlDefault = (obj?: { __typename?: any } | null): obj is VideoUrlDefault => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoUrlDefault"')
      return VideoUrlDefault_possibleTypes.includes(obj.__typename)
    }
    


    const VideoUrlOption_possibleTypes: string[] = ['VideoUrlOption']
    export const isVideoUrlOption = (obj?: { __typename?: any } | null): obj is VideoUrlOption => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVideoUrlOption"')
      return VideoUrlOption_possibleTypes.includes(obj.__typename)
    }
    


    const Visitor_possibleTypes: string[] = ['Visitor']
    export const isVisitor = (obj?: { __typename?: any } | null): obj is Visitor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVisitor"')
      return Visitor_possibleTypes.includes(obj.__typename)
    }
    


    const Webhook_possibleTypes: string[] = ['Webhook']
    export const isWebhook = (obj?: { __typename?: any } | null): obj is Webhook => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhook"')
      return Webhook_possibleTypes.includes(obj.__typename)
    }
    


    const WebhookEvent_possibleTypes: string[] = ['WebhookEvent']
    export const isWebhookEvent = (obj?: { __typename?: any } | null): obj is WebhookEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhookEvent"')
      return WebhookEvent_possibleTypes.includes(obj.__typename)
    }
    


    const WhitelabelSetting_possibleTypes: string[] = ['WhitelabelSetting']
    export const isWhitelabelSetting = (obj?: { __typename?: any } | null): obj is WhitelabelSetting => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWhitelabelSetting"')
      return WhitelabelSetting_possibleTypes.includes(obj.__typename)
    }
    


    const WithingsConnection_possibleTypes: string[] = ['WithingsConnection']
    export const isWithingsConnection = (obj?: { __typename?: any } | null): obj is WithingsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWithingsConnection"')
      return WithingsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ZoomAppointment_possibleTypes: string[] = ['ZoomAppointment']
    export const isZoomAppointment = (obj?: { __typename?: any } | null): obj is ZoomAppointment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isZoomAppointment"')
      return ZoomAppointment_possibleTypes.includes(obj.__typename)
    }
    


    const addLivingPlatePayload_possibleTypes: string[] = ['addLivingPlatePayload']
    export const isaddLivingPlatePayload = (obj?: { __typename?: any } | null): obj is addLivingPlatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaddLivingPlatePayload"')
      return addLivingPlatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const addZusMemberPayload_possibleTypes: string[] = ['addZusMemberPayload']
    export const isaddZusMemberPayload = (obj?: { __typename?: any } | null): obj is addZusMemberPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isaddZusMemberPayload"')
      return addZusMemberPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkApplyCarePlanTemplatePayload_possibleTypes: string[] = ['bulkApplyCarePlanTemplatePayload']
    export const isbulkApplyCarePlanTemplatePayload = (obj?: { __typename?: any } | null): obj is bulkApplyCarePlanTemplatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkApplyCarePlanTemplatePayload"')
      return bulkApplyCarePlanTemplatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkApplyPayload_possibleTypes: string[] = ['bulkApplyPayload']
    export const isbulkApplyPayload = (obj?: { __typename?: any } | null): obj is bulkApplyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkApplyPayload"')
      return bulkApplyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkCreateAvailabilityPayload_possibleTypes: string[] = ['bulkCreateAvailabilityPayload']
    export const isbulkCreateAvailabilityPayload = (obj?: { __typename?: any } | null): obj is bulkCreateAvailabilityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkCreateAvailabilityPayload"')
      return bulkCreateAvailabilityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkCreateEntriesPayload_possibleTypes: string[] = ['bulkCreateEntriesPayload']
    export const isbulkCreateEntriesPayload = (obj?: { __typename?: any } | null): obj is bulkCreateEntriesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkCreateEntriesPayload"')
      return bulkCreateEntriesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkDeleteTasksPayload_possibleTypes: string[] = ['bulkDeleteTasksPayload']
    export const isbulkDeleteTasksPayload = (obj?: { __typename?: any } | null): obj is bulkDeleteTasksPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkDeleteTasksPayload"')
      return bulkDeleteTasksPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkUpdateCardIssuesPayload_possibleTypes: string[] = ['bulkUpdateCardIssuesPayload']
    export const isbulkUpdateCardIssuesPayload = (obj?: { __typename?: any } | null): obj is bulkUpdateCardIssuesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkUpdateCardIssuesPayload"')
      return bulkUpdateCardIssuesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkUpdateCarePlanUsersPayload_possibleTypes: string[] = ['bulkUpdateCarePlanUsersPayload']
    export const isbulkUpdateCarePlanUsersPayload = (obj?: { __typename?: any } | null): obj is bulkUpdateCarePlanUsersPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkUpdateCarePlanUsersPayload"')
      return bulkUpdateCarePlanUsersPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkUpdateClientsPayload_possibleTypes: string[] = ['bulkUpdateClientsPayload']
    export const isbulkUpdateClientsPayload = (obj?: { __typename?: any } | null): obj is bulkUpdateClientsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkUpdateClientsPayload"')
      return bulkUpdateClientsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkUpdateNotificationRecordsPayload_possibleTypes: string[] = ['bulkUpdateNotificationRecordsPayload']
    export const isbulkUpdateNotificationRecordsPayload = (obj?: { __typename?: any } | null): obj is bulkUpdateNotificationRecordsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkUpdateNotificationRecordsPayload"')
      return bulkUpdateNotificationRecordsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkUpdateNotificationsPayload_possibleTypes: string[] = ['bulkUpdateNotificationsPayload']
    export const isbulkUpdateNotificationsPayload = (obj?: { __typename?: any } | null): obj is bulkUpdateNotificationsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkUpdateNotificationsPayload"')
      return bulkUpdateNotificationsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const bulkUpdateTasksPayload_possibleTypes: string[] = ['bulkUpdateTasksPayload']
    export const isbulkUpdateTasksPayload = (obj?: { __typename?: any } | null): obj is bulkUpdateTasksPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isbulkUpdateTasksPayload"')
      return bulkUpdateTasksPayload_possibleTypes.includes(obj.__typename)
    }
    


    const clearUnreconciledObjectsPayload_possibleTypes: string[] = ['clearUnreconciledObjectsPayload']
    export const isclearUnreconciledObjectsPayload = (obj?: { __typename?: any } | null): obj is clearUnreconciledObjectsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isclearUnreconciledObjectsPayload"')
      return clearUnreconciledObjectsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const completeCheckoutPayload_possibleTypes: string[] = ['completeCheckoutPayload']
    export const iscompleteCheckoutPayload = (obj?: { __typename?: any } | null): obj is completeCheckoutPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscompleteCheckoutPayload"')
      return completeCheckoutPayload_possibleTypes.includes(obj.__typename)
    }
    


    const completeCourseDocumentPayload_possibleTypes: string[] = ['completeCourseDocumentPayload']
    export const iscompleteCourseDocumentPayload = (obj?: { __typename?: any } | null): obj is completeCourseDocumentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscompleteCourseDocumentPayload"')
      return completeCourseDocumentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const copyCoursePayload_possibleTypes: string[] = ['copyCoursePayload']
    export const iscopyCoursePayload = (obj?: { __typename?: any } | null): obj is copyCoursePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscopyCoursePayload"')
      return copyCoursePayload_possibleTypes.includes(obj.__typename)
    }
    


    const copyCustomModuleFormPayload_possibleTypes: string[] = ['copyCustomModuleFormPayload']
    export const iscopyCustomModuleFormPayload = (obj?: { __typename?: any } | null): obj is copyCustomModuleFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscopyCustomModuleFormPayload"')
      return copyCustomModuleFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const copyCustomModulePayload_possibleTypes: string[] = ['copyCustomModulePayload']
    export const iscopyCustomModulePayload = (obj?: { __typename?: any } | null): obj is copyCustomModulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscopyCustomModulePayload"')
      return copyCustomModulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const copyOfferingPayload_possibleTypes: string[] = ['copyOfferingPayload']
    export const iscopyOfferingPayload = (obj?: { __typename?: any } | null): obj is copyOfferingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscopyOfferingPayload"')
      return copyOfferingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAcceptedInsurancePlanPayload_possibleTypes: string[] = ['createAcceptedInsurancePlanPayload']
    export const iscreateAcceptedInsurancePlanPayload = (obj?: { __typename?: any } | null): obj is createAcceptedInsurancePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAcceptedInsurancePlanPayload"')
      return createAcceptedInsurancePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAddendumPayload_possibleTypes: string[] = ['createAddendumPayload']
    export const iscreateAddendumPayload = (obj?: { __typename?: any } | null): obj is createAddendumPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAddendumPayload"')
      return createAddendumPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAllergySensitivityPayload_possibleTypes: string[] = ['createAllergySensitivityPayload']
    export const iscreateAllergySensitivityPayload = (obj?: { __typename?: any } | null): obj is createAllergySensitivityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAllergySensitivityPayload"')
      return createAllergySensitivityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAnnouncementPayload_possibleTypes: string[] = ['createAnnouncementPayload']
    export const iscreateAnnouncementPayload = (obj?: { __typename?: any } | null): obj is createAnnouncementPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAnnouncementPayload"')
      return createAnnouncementPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createApiKeyPayload_possibleTypes: string[] = ['createApiKeyPayload']
    export const iscreateApiKeyPayload = (obj?: { __typename?: any } | null): obj is createApiKeyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateApiKeyPayload"')
      return createApiKeyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAppleHealthPayload_possibleTypes: string[] = ['createAppleHealthPayload']
    export const iscreateAppleHealthPayload = (obj?: { __typename?: any } | null): obj is createAppleHealthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAppleHealthPayload"')
      return createAppleHealthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAppointmentPayload_possibleTypes: string[] = ['createAppointmentPayload']
    export const iscreateAppointmentPayload = (obj?: { __typename?: any } | null): obj is createAppointmentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAppointmentPayload"')
      return createAppointmentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAppointmentSettingPayload_possibleTypes: string[] = ['createAppointmentSettingPayload']
    export const iscreateAppointmentSettingPayload = (obj?: { __typename?: any } | null): obj is createAppointmentSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAppointmentSettingPayload"')
      return createAppointmentSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAppointmentTypeCptCodePayload_possibleTypes: string[] = ['createAppointmentTypeCptCodePayload']
    export const iscreateAppointmentTypeCptCodePayload = (obj?: { __typename?: any } | null): obj is createAppointmentTypeCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAppointmentTypeCptCodePayload"')
      return createAppointmentTypeCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAppointmentTypePayload_possibleTypes: string[] = ['createAppointmentTypePayload']
    export const iscreateAppointmentTypePayload = (obj?: { __typename?: any } | null): obj is createAppointmentTypePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAppointmentTypePayload"')
      return createAppointmentTypePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAutoTaskGeneratorPayload_possibleTypes: string[] = ['createAutoTaskGeneratorPayload']
    export const iscreateAutoTaskGeneratorPayload = (obj?: { __typename?: any } | null): obj is createAutoTaskGeneratorPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAutoTaskGeneratorPayload"')
      return createAutoTaskGeneratorPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAutomatedInsuranceBillingSettingPayload_possibleTypes: string[] = ['createAutomatedInsuranceBillingSettingPayload']
    export const iscreateAutomatedInsuranceBillingSettingPayload = (obj?: { __typename?: any } | null): obj is createAutomatedInsuranceBillingSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAutomatedInsuranceBillingSettingPayload"')
      return createAutomatedInsuranceBillingSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createAvailabilityPayload_possibleTypes: string[] = ['createAvailabilityPayload']
    export const iscreateAvailabilityPayload = (obj?: { __typename?: any } | null): obj is createAvailabilityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateAvailabilityPayload"')
      return createAvailabilityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createBillingItemPayload_possibleTypes: string[] = ['createBillingItemPayload']
    export const iscreateBillingItemPayload = (obj?: { __typename?: any } | null): obj is createBillingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateBillingItemPayload"')
      return createBillingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createBrandPayload_possibleTypes: string[] = ['createBrandPayload']
    export const iscreateBrandPayload = (obj?: { __typename?: any } | null): obj is createBrandPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateBrandPayload"')
      return createBrandPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCampaignPayload_possibleTypes: string[] = ['createCampaignPayload']
    export const iscreateCampaignPayload = (obj?: { __typename?: any } | null): obj is createCampaignPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCampaignPayload"')
      return createCampaignPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCarePlanPayload_possibleTypes: string[] = ['createCarePlanPayload']
    export const iscreateCarePlanPayload = (obj?: { __typename?: any } | null): obj is createCarePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCarePlanPayload"')
      return createCarePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createChatSettingPayload_possibleTypes: string[] = ['createChatSettingPayload']
    export const iscreateChatSettingPayload = (obj?: { __typename?: any } | null): obj is createChatSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateChatSettingPayload"')
      return createChatSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createClientPayload_possibleTypes: string[] = ['createClientPayload']
    export const iscreateClientPayload = (obj?: { __typename?: any } | null): obj is createClientPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateClientPayload"')
      return createClientPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCms1500Payload_possibleTypes: string[] = ['createCms1500Payload']
    export const iscreateCms1500Payload = (obj?: { __typename?: any } | null): obj is createCms1500Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCms1500Payload"')
      return createCms1500Payload_possibleTypes.includes(obj.__typename)
    }
    


    const createCognitiveStatusPayload_possibleTypes: string[] = ['createCognitiveStatusPayload']
    export const iscreateCognitiveStatusPayload = (obj?: { __typename?: any } | null): obj is createCognitiveStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCognitiveStatusPayload"')
      return createCognitiveStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCommentPayload_possibleTypes: string[] = ['createCommentPayload']
    export const iscreateCommentPayload = (obj?: { __typename?: any } | null): obj is createCommentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCommentPayload"')
      return createCommentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCompletedCourseItemPayload_possibleTypes: string[] = ['createCompletedCourseItemPayload']
    export const iscreateCompletedCourseItemPayload = (obj?: { __typename?: any } | null): obj is createCompletedCourseItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCompletedCourseItemPayload"')
      return createCompletedCourseItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCompletedOnboardingItemPayload_possibleTypes: string[] = ['createCompletedOnboardingItemPayload']
    export const iscreateCompletedOnboardingItemPayload = (obj?: { __typename?: any } | null): obj is createCompletedOnboardingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCompletedOnboardingItemPayload"')
      return createCompletedOnboardingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createContactPayload_possibleTypes: string[] = ['createContactPayload']
    export const iscreateContactPayload = (obj?: { __typename?: any } | null): obj is createContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateContactPayload"')
      return createContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createConversationPayload_possibleTypes: string[] = ['createConversationPayload']
    export const iscreateConversationPayload = (obj?: { __typename?: any } | null): obj is createConversationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateConversationPayload"')
      return createConversationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCourseBenefitPayload_possibleTypes: string[] = ['createCourseBenefitPayload']
    export const iscreateCourseBenefitPayload = (obj?: { __typename?: any } | null): obj is createCourseBenefitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCourseBenefitPayload"')
      return createCourseBenefitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCourseItemPayload_possibleTypes: string[] = ['createCourseItemPayload']
    export const iscreateCourseItemPayload = (obj?: { __typename?: any } | null): obj is createCourseItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCourseItemPayload"')
      return createCourseItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCoursePayload_possibleTypes: string[] = ['createCoursePayload']
    export const iscreateCoursePayload = (obj?: { __typename?: any } | null): obj is createCoursePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCoursePayload"')
      return createCoursePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCustomEmailPayload_possibleTypes: string[] = ['createCustomEmailPayload']
    export const iscreateCustomEmailPayload = (obj?: { __typename?: any } | null): obj is createCustomEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCustomEmailPayload"')
      return createCustomEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCustomFoodPayload_possibleTypes: string[] = ['createCustomFoodPayload']
    export const iscreateCustomFoodPayload = (obj?: { __typename?: any } | null): obj is createCustomFoodPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCustomFoodPayload"')
      return createCustomFoodPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCustomModuleFormPayload_possibleTypes: string[] = ['createCustomModuleFormPayload']
    export const iscreateCustomModuleFormPayload = (obj?: { __typename?: any } | null): obj is createCustomModuleFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCustomModuleFormPayload"')
      return createCustomModuleFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createCustomModulePayload_possibleTypes: string[] = ['createCustomModulePayload']
    export const iscreateCustomModulePayload = (obj?: { __typename?: any } | null): obj is createCustomModulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateCustomModulePayload"')
      return createCustomModulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createDocumentPayload_possibleTypes: string[] = ['createDocumentPayload']
    export const iscreateDocumentPayload = (obj?: { __typename?: any } | null): obj is createDocumentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateDocumentPayload"')
      return createDocumentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createDosespotClinicianPayload_possibleTypes: string[] = ['createDosespotClinicianPayload']
    export const iscreateDosespotClinicianPayload = (obj?: { __typename?: any } | null): obj is createDosespotClinicianPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateDosespotClinicianPayload"')
      return createDosespotClinicianPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createDosespotPayload_possibleTypes: string[] = ['createDosespotPayload']
    export const iscreateDosespotPayload = (obj?: { __typename?: any } | null): obj is createDosespotPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateDosespotPayload"')
      return createDosespotPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createDraftPayload_possibleTypes: string[] = ['createDraftPayload']
    export const iscreateDraftPayload = (obj?: { __typename?: any } | null): obj is createDraftPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateDraftPayload"')
      return createDraftPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createEbookPayload_possibleTypes: string[] = ['createEbookPayload']
    export const iscreateEbookPayload = (obj?: { __typename?: any } | null): obj is createEbookPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateEbookPayload"')
      return createEbookPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createEntryPayload_possibleTypes: string[] = ['createEntryPayload']
    export const iscreateEntryPayload = (obj?: { __typename?: any } | null): obj is createEntryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateEntryPayload"')
      return createEntryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createExternalCalendarPayload_possibleTypes: string[] = ['createExternalCalendarPayload']
    export const iscreateExternalCalendarPayload = (obj?: { __typename?: any } | null): obj is createExternalCalendarPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateExternalCalendarPayload"')
      return createExternalCalendarPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFamilyHistoryPayload_possibleTypes: string[] = ['createFamilyHistoryPayload']
    export const iscreateFamilyHistoryPayload = (obj?: { __typename?: any } | null): obj is createFamilyHistoryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFamilyHistoryPayload"')
      return createFamilyHistoryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFaxAcctInfoPayload_possibleTypes: string[] = ['createFaxAcctInfoPayload']
    export const iscreateFaxAcctInfoPayload = (obj?: { __typename?: any } | null): obj is createFaxAcctInfoPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFaxAcctInfoPayload"')
      return createFaxAcctInfoPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFaxLineRequestPayload_possibleTypes: string[] = ['createFaxLineRequestPayload']
    export const iscreateFaxLineRequestPayload = (obj?: { __typename?: any } | null): obj is createFaxLineRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFaxLineRequestPayload"')
      return createFaxLineRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFeatureTogglePayload_possibleTypes: string[] = ['createFeatureTogglePayload']
    export const iscreateFeatureTogglePayload = (obj?: { __typename?: any } | null): obj is createFeatureTogglePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFeatureTogglePayload"')
      return createFeatureTogglePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFitbitPayload_possibleTypes: string[] = ['createFitbitPayload']
    export const iscreateFitbitPayload = (obj?: { __typename?: any } | null): obj is createFitbitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFitbitPayload"')
      return createFitbitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFolderPayload_possibleTypes: string[] = ['createFolderPayload']
    export const iscreateFolderPayload = (obj?: { __typename?: any } | null): obj is createFolderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFolderPayload"')
      return createFolderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFormAnswerGroupPayload_possibleTypes: string[] = ['createFormAnswerGroupPayload']
    export const iscreateFormAnswerGroupPayload = (obj?: { __typename?: any } | null): obj is createFormAnswerGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFormAnswerGroupPayload"')
      return createFormAnswerGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFormAnswerGroupSigningPayload_possibleTypes: string[] = ['createFormAnswerGroupSigningPayload']
    export const iscreateFormAnswerGroupSigningPayload = (obj?: { __typename?: any } | null): obj is createFormAnswerGroupSigningPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFormAnswerGroupSigningPayload"')
      return createFormAnswerGroupSigningPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFullscriptPractitionerPayload_possibleTypes: string[] = ['createFullscriptPractitionerPayload']
    export const iscreateFullscriptPractitionerPayload = (obj?: { __typename?: any } | null): obj is createFullscriptPractitionerPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFullscriptPractitionerPayload"')
      return createFullscriptPractitionerPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createFunctionalStatusPayload_possibleTypes: string[] = ['createFunctionalStatusPayload']
    export const iscreateFunctionalStatusPayload = (obj?: { __typename?: any } | null): obj is createFunctionalStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateFunctionalStatusPayload"')
      return createFunctionalStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createGoalHistoryPayload_possibleTypes: string[] = ['createGoalHistoryPayload']
    export const iscreateGoalHistoryPayload = (obj?: { __typename?: any } | null): obj is createGoalHistoryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateGoalHistoryPayload"')
      return createGoalHistoryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createGoalPayload_possibleTypes: string[] = ['createGoalPayload']
    export const iscreateGoalPayload = (obj?: { __typename?: any } | null): obj is createGoalPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateGoalPayload"')
      return createGoalPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createGoogleFitPayload_possibleTypes: string[] = ['createGoogleFitPayload']
    export const iscreateGoogleFitPayload = (obj?: { __typename?: any } | null): obj is createGoogleFitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateGoogleFitPayload"')
      return createGoogleFitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createGroupPayload_possibleTypes: string[] = ['createGroupPayload']
    export const iscreateGroupPayload = (obj?: { __typename?: any } | null): obj is createGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateGroupPayload"')
      return createGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createHealthConcernPayload_possibleTypes: string[] = ['createHealthConcernPayload']
    export const iscreateHealthConcernPayload = (obj?: { __typename?: any } | null): obj is createHealthConcernPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateHealthConcernPayload"')
      return createHealthConcernPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createImmunizationPayload_possibleTypes: string[] = ['createImmunizationPayload']
    export const iscreateImmunizationPayload = (obj?: { __typename?: any } | null): obj is createImmunizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateImmunizationPayload"')
      return createImmunizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createImplantableDeviceUserPayload_possibleTypes: string[] = ['createImplantableDeviceUserPayload']
    export const iscreateImplantableDeviceUserPayload = (obj?: { __typename?: any } | null): obj is createImplantableDeviceUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateImplantableDeviceUserPayload"')
      return createImplantableDeviceUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createImportDataRequestPayload_possibleTypes: string[] = ['createImportDataRequestPayload']
    export const iscreateImportDataRequestPayload = (obj?: { __typename?: any } | null): obj is createImportDataRequestPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateImportDataRequestPayload"')
      return createImportDataRequestPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createInsuranceAuthorizationPayload_possibleTypes: string[] = ['createInsuranceAuthorizationPayload']
    export const iscreateInsuranceAuthorizationPayload = (obj?: { __typename?: any } | null): obj is createInsuranceAuthorizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateInsuranceAuthorizationPayload"')
      return createInsuranceAuthorizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createInsurancePlanPayload_possibleTypes: string[] = ['createInsurancePlanPayload']
    export const iscreateInsurancePlanPayload = (obj?: { __typename?: any } | null): obj is createInsurancePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateInsurancePlanPayload"')
      return createInsurancePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createLabOrderPayload_possibleTypes: string[] = ['createLabOrderPayload']
    export const iscreateLabOrderPayload = (obj?: { __typename?: any } | null): obj is createLabOrderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateLabOrderPayload"')
      return createLabOrderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createLocationPayload_possibleTypes: string[] = ['createLocationPayload']
    export const iscreateLocationPayload = (obj?: { __typename?: any } | null): obj is createLocationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateLocationPayload"')
      return createLocationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createMealPayload_possibleTypes: string[] = ['createMealPayload']
    export const iscreateMealPayload = (obj?: { __typename?: any } | null): obj is createMealPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateMealPayload"')
      return createMealPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createMedicationPayload_possibleTypes: string[] = ['createMedicationPayload']
    export const iscreateMedicationPayload = (obj?: { __typename?: any } | null): obj is createMedicationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateMedicationPayload"')
      return createMedicationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createMessageBlastPayload_possibleTypes: string[] = ['createMessageBlastPayload']
    export const iscreateMessageBlastPayload = (obj?: { __typename?: any } | null): obj is createMessageBlastPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateMessageBlastPayload"')
      return createMessageBlastPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createNotePayload_possibleTypes: string[] = ['createNotePayload']
    export const iscreateNotePayload = (obj?: { __typename?: any } | null): obj is createNotePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateNotePayload"')
      return createNotePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createNotificationContactPayload_possibleTypes: string[] = ['createNotificationContactPayload']
    export const iscreateNotificationContactPayload = (obj?: { __typename?: any } | null): obj is createNotificationContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateNotificationContactPayload"')
      return createNotificationContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOfferingCouponPayload_possibleTypes: string[] = ['createOfferingCouponPayload']
    export const iscreateOfferingCouponPayload = (obj?: { __typename?: any } | null): obj is createOfferingCouponPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOfferingCouponPayload"')
      return createOfferingCouponPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOfferingPayload_possibleTypes: string[] = ['createOfferingPayload']
    export const iscreateOfferingPayload = (obj?: { __typename?: any } | null): obj is createOfferingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOfferingPayload"')
      return createOfferingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOfficeallySftpAccountPayload_possibleTypes: string[] = ['createOfficeallySftpAccountPayload']
    export const iscreateOfficeallySftpAccountPayload = (obj?: { __typename?: any } | null): obj is createOfficeallySftpAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOfficeallySftpAccountPayload"')
      return createOfficeallySftpAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOnboardingFlowPayload_possibleTypes: string[] = ['createOnboardingFlowPayload']
    export const iscreateOnboardingFlowPayload = (obj?: { __typename?: any } | null): obj is createOnboardingFlowPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOnboardingFlowPayload"')
      return createOnboardingFlowPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOnboardingItemPayload_possibleTypes: string[] = ['createOnboardingItemPayload']
    export const iscreateOnboardingItemPayload = (obj?: { __typename?: any } | null): obj is createOnboardingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOnboardingItemPayload"')
      return createOnboardingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOrAddToWaterIntakeEntryPayload_possibleTypes: string[] = ['createOrAddToWaterIntakeEntryPayload']
    export const iscreateOrAddToWaterIntakeEntryPayload = (obj?: { __typename?: any } | null): obj is createOrAddToWaterIntakeEntryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOrAddToWaterIntakeEntryPayload"')
      return createOrAddToWaterIntakeEntryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOrganizationCptCodePayload_possibleTypes: string[] = ['createOrganizationCptCodePayload']
    export const iscreateOrganizationCptCodePayload = (obj?: { __typename?: any } | null): obj is createOrganizationCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOrganizationCptCodePayload"')
      return createOrganizationCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOrganizationMembershipPayload_possibleTypes: string[] = ['createOrganizationMembershipPayload']
    export const iscreateOrganizationMembershipPayload = (obj?: { __typename?: any } | null): obj is createOrganizationMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOrganizationMembershipPayload"')
      return createOrganizationMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createOrganizationPayload_possibleTypes: string[] = ['createOrganizationPayload']
    export const iscreateOrganizationPayload = (obj?: { __typename?: any } | null): obj is createOrganizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateOrganizationPayload"')
      return createOrganizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createPartnerPayload_possibleTypes: string[] = ['createPartnerPayload']
    export const iscreatePartnerPayload = (obj?: { __typename?: any } | null): obj is createPartnerPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreatePartnerPayload"')
      return createPartnerPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createPaymentIntentPayload_possibleTypes: string[] = ['createPaymentIntentPayload']
    export const iscreatePaymentIntentPayload = (obj?: { __typename?: any } | null): obj is createPaymentIntentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreatePaymentIntentPayload"')
      return createPaymentIntentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createPermissionTemplatePayload_possibleTypes: string[] = ['createPermissionTemplatePayload']
    export const iscreatePermissionTemplatePayload = (obj?: { __typename?: any } | null): obj is createPermissionTemplatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreatePermissionTemplatePayload"')
      return createPermissionTemplatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createPersonalizationQuestionnairePayload_possibleTypes: string[] = ['createPersonalizationQuestionnairePayload']
    export const iscreatePersonalizationQuestionnairePayload = (obj?: { __typename?: any } | null): obj is createPersonalizationQuestionnairePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreatePersonalizationQuestionnairePayload"')
      return createPersonalizationQuestionnairePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createPreferredMedicalCodePayload_possibleTypes: string[] = ['createPreferredMedicalCodePayload']
    export const iscreatePreferredMedicalCodePayload = (obj?: { __typename?: any } | null): obj is createPreferredMedicalCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreatePreferredMedicalCodePayload"')
      return createPreferredMedicalCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createProcedurePayload_possibleTypes: string[] = ['createProcedurePayload']
    export const iscreateProcedurePayload = (obj?: { __typename?: any } | null): obj is createProcedurePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateProcedurePayload"')
      return createProcedurePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createProductPayload_possibleTypes: string[] = ['createProductPayload']
    export const iscreateProductPayload = (obj?: { __typename?: any } | null): obj is createProductPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateProductPayload"')
      return createProductPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createProviderCptCodesPayload_possibleTypes: string[] = ['createProviderCptCodesPayload']
    export const iscreateProviderCptCodesPayload = (obj?: { __typename?: any } | null): obj is createProviderCptCodesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateProviderCptCodesPayload"')
      return createProviderCptCodesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createRecommendationPayload_possibleTypes: string[] = ['createRecommendationPayload']
    export const iscreateRecommendationPayload = (obj?: { __typename?: any } | null): obj is createRecommendationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateRecommendationPayload"')
      return createRecommendationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createReferralPayload_possibleTypes: string[] = ['createReferralPayload']
    export const iscreateReferralPayload = (obj?: { __typename?: any } | null): obj is createReferralPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateReferralPayload"')
      return createReferralPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createReferringPhysicianPayload_possibleTypes: string[] = ['createReferringPhysicianPayload']
    export const iscreateReferringPhysicianPayload = (obj?: { __typename?: any } | null): obj is createReferringPhysicianPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateReferringPhysicianPayload"')
      return createReferringPhysicianPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createRequestedFormPayload_possibleTypes: string[] = ['createRequestedFormPayload']
    export const iscreateRequestedFormPayload = (obj?: { __typename?: any } | null): obj is createRequestedFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateRequestedFormPayload"')
      return createRequestedFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createRequestedPaymentPayload_possibleTypes: string[] = ['createRequestedPaymentPayload']
    export const iscreateRequestedPaymentPayload = (obj?: { __typename?: any } | null): obj is createRequestedPaymentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateRequestedPaymentPayload"')
      return createRequestedPaymentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createRupaOrderPayload_possibleTypes: string[] = ['createRupaOrderPayload']
    export const iscreateRupaOrderPayload = (obj?: { __typename?: any } | null): obj is createRupaOrderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateRupaOrderPayload"')
      return createRupaOrderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSavedFilterPayload_possibleTypes: string[] = ['createSavedFilterPayload']
    export const iscreateSavedFilterPayload = (obj?: { __typename?: any } | null): obj is createSavedFilterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSavedFilterPayload"')
      return createSavedFilterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSentDirectMessagePayload_possibleTypes: string[] = ['createSentDirectMessagePayload']
    export const iscreateSentDirectMessagePayload = (obj?: { __typename?: any } | null): obj is createSentDirectMessagePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSentDirectMessagePayload"')
      return createSentDirectMessagePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSentFaxPayload_possibleTypes: string[] = ['createSentFaxPayload']
    export const iscreateSentFaxPayload = (obj?: { __typename?: any } | null): obj is createSentFaxPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSentFaxPayload"')
      return createSentFaxPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSmartPhrasePayload_possibleTypes: string[] = ['createSmartPhrasePayload']
    export const iscreateSmartPhrasePayload = (obj?: { __typename?: any } | null): obj is createSmartPhrasePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSmartPhrasePayload"')
      return createSmartPhrasePayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSmokingStatusPayload_possibleTypes: string[] = ['createSmokingStatusPayload']
    export const iscreateSmokingStatusPayload = (obj?: { __typename?: any } | null): obj is createSmokingStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSmokingStatusPayload"')
      return createSmokingStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createStripeCustomerDetailPayload_possibleTypes: string[] = ['createStripeCustomerDetailPayload']
    export const iscreateStripeCustomerDetailPayload = (obj?: { __typename?: any } | null): obj is createStripeCustomerDetailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateStripeCustomerDetailPayload"')
      return createStripeCustomerDetailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSubscriptionPayload_possibleTypes: string[] = ['createSubscriptionPayload']
    export const iscreateSubscriptionPayload = (obj?: { __typename?: any } | null): obj is createSubscriptionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSubscriptionPayload"')
      return createSubscriptionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createSuperBillPayload_possibleTypes: string[] = ['createSuperBillPayload']
    export const iscreateSuperBillPayload = (obj?: { __typename?: any } | null): obj is createSuperBillPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateSuperBillPayload"')
      return createSuperBillPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createTagPayload_possibleTypes: string[] = ['createTagPayload']
    export const iscreateTagPayload = (obj?: { __typename?: any } | null): obj is createTagPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateTagPayload"')
      return createTagPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createTaskPayload_possibleTypes: string[] = ['createTaskPayload']
    export const iscreateTaskPayload = (obj?: { __typename?: any } | null): obj is createTaskPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateTaskPayload"')
      return createTaskPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createUniqueDeviceIdentifierPayload_possibleTypes: string[] = ['createUniqueDeviceIdentifierPayload']
    export const iscreateUniqueDeviceIdentifierPayload = (obj?: { __typename?: any } | null): obj is createUniqueDeviceIdentifierPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateUniqueDeviceIdentifierPayload"')
      return createUniqueDeviceIdentifierPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createVisitorPayload_possibleTypes: string[] = ['createVisitorPayload']
    export const iscreateVisitorPayload = (obj?: { __typename?: any } | null): obj is createVisitorPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateVisitorPayload"')
      return createVisitorPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createWebhookPayload_possibleTypes: string[] = ['createWebhookPayload']
    export const iscreateWebhookPayload = (obj?: { __typename?: any } | null): obj is createWebhookPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateWebhookPayload"')
      return createWebhookPayload_possibleTypes.includes(obj.__typename)
    }
    


    const createZusPayload_possibleTypes: string[] = ['createZusPayload']
    export const iscreateZusPayload = (obj?: { __typename?: any } | null): obj is createZusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iscreateZusPayload"')
      return createZusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAcceptedInsurancePlanPayload_possibleTypes: string[] = ['deleteAcceptedInsurancePlanPayload']
    export const isdeleteAcceptedInsurancePlanPayload = (obj?: { __typename?: any } | null): obj is deleteAcceptedInsurancePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAcceptedInsurancePlanPayload"')
      return deleteAcceptedInsurancePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAllergySensitivityPayload_possibleTypes: string[] = ['deleteAllergySensitivityPayload']
    export const isdeleteAllergySensitivityPayload = (obj?: { __typename?: any } | null): obj is deleteAllergySensitivityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAllergySensitivityPayload"')
      return deleteAllergySensitivityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteApiKeyPayload_possibleTypes: string[] = ['deleteApiKeyPayload']
    export const isdeleteApiKeyPayload = (obj?: { __typename?: any } | null): obj is deleteApiKeyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteApiKeyPayload"')
      return deleteApiKeyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAppleHealthPayload_possibleTypes: string[] = ['deleteAppleHealthPayload']
    export const isdeleteAppleHealthPayload = (obj?: { __typename?: any } | null): obj is deleteAppleHealthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAppleHealthPayload"')
      return deleteAppleHealthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAppointmentPayload_possibleTypes: string[] = ['deleteAppointmentPayload']
    export const isdeleteAppointmentPayload = (obj?: { __typename?: any } | null): obj is deleteAppointmentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAppointmentPayload"')
      return deleteAppointmentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAppointmentTypeCptCodePayload_possibleTypes: string[] = ['deleteAppointmentTypeCptCodePayload']
    export const isdeleteAppointmentTypeCptCodePayload = (obj?: { __typename?: any } | null): obj is deleteAppointmentTypeCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAppointmentTypeCptCodePayload"')
      return deleteAppointmentTypeCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAppointmentTypePayload_possibleTypes: string[] = ['deleteAppointmentTypePayload']
    export const isdeleteAppointmentTypePayload = (obj?: { __typename?: any } | null): obj is deleteAppointmentTypePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAppointmentTypePayload"')
      return deleteAppointmentTypePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAutoTaskGeneratorPayload_possibleTypes: string[] = ['deleteAutoTaskGeneratorPayload']
    export const isdeleteAutoTaskGeneratorPayload = (obj?: { __typename?: any } | null): obj is deleteAutoTaskGeneratorPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAutoTaskGeneratorPayload"')
      return deleteAutoTaskGeneratorPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteAvailabilityPayload_possibleTypes: string[] = ['deleteAvailabilityPayload']
    export const isdeleteAvailabilityPayload = (obj?: { __typename?: any } | null): obj is deleteAvailabilityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteAvailabilityPayload"')
      return deleteAvailabilityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteBillingItemPayload_possibleTypes: string[] = ['deleteBillingItemPayload']
    export const isdeleteBillingItemPayload = (obj?: { __typename?: any } | null): obj is deleteBillingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteBillingItemPayload"')
      return deleteBillingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCarePlanConnectionPayload_possibleTypes: string[] = ['deleteCarePlanConnectionPayload']
    export const isdeleteCarePlanConnectionPayload = (obj?: { __typename?: any } | null): obj is deleteCarePlanConnectionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCarePlanConnectionPayload"')
      return deleteCarePlanConnectionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCarePlanPayload_possibleTypes: string[] = ['deleteCarePlanPayload']
    export const isdeleteCarePlanPayload = (obj?: { __typename?: any } | null): obj is deleteCarePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCarePlanPayload"')
      return deleteCarePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCms1500Payload_possibleTypes: string[] = ['deleteCms1500Payload']
    export const isdeleteCms1500Payload = (obj?: { __typename?: any } | null): obj is deleteCms1500Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCms1500Payload"')
      return deleteCms1500Payload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCognitiveStatusPayload_possibleTypes: string[] = ['deleteCognitiveStatusPayload']
    export const isdeleteCognitiveStatusPayload = (obj?: { __typename?: any } | null): obj is deleteCognitiveStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCognitiveStatusPayload"')
      return deleteCognitiveStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCommentPayload_possibleTypes: string[] = ['deleteCommentPayload']
    export const isdeleteCommentPayload = (obj?: { __typename?: any } | null): obj is deleteCommentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCommentPayload"')
      return deleteCommentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteConversationMembershipPayload_possibleTypes: string[] = ['deleteConversationMembershipPayload']
    export const isdeleteConversationMembershipPayload = (obj?: { __typename?: any } | null): obj is deleteConversationMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteConversationMembershipPayload"')
      return deleteConversationMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCourseBenefitPayload_possibleTypes: string[] = ['deleteCourseBenefitPayload']
    export const isdeleteCourseBenefitPayload = (obj?: { __typename?: any } | null): obj is deleteCourseBenefitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCourseBenefitPayload"')
      return deleteCourseBenefitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCourseGroupPayload_possibleTypes: string[] = ['deleteCourseGroupPayload']
    export const isdeleteCourseGroupPayload = (obj?: { __typename?: any } | null): obj is deleteCourseGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCourseGroupPayload"')
      return deleteCourseGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCourseItemPayload_possibleTypes: string[] = ['deleteCourseItemPayload']
    export const isdeleteCourseItemPayload = (obj?: { __typename?: any } | null): obj is deleteCourseItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCourseItemPayload"')
      return deleteCourseItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCourseMembershipPayload_possibleTypes: string[] = ['deleteCourseMembershipPayload']
    export const isdeleteCourseMembershipPayload = (obj?: { __typename?: any } | null): obj is deleteCourseMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCourseMembershipPayload"')
      return deleteCourseMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCoursePayload_possibleTypes: string[] = ['deleteCoursePayload']
    export const isdeleteCoursePayload = (obj?: { __typename?: any } | null): obj is deleteCoursePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCoursePayload"')
      return deleteCoursePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCustomEmailPayload_possibleTypes: string[] = ['deleteCustomEmailPayload']
    export const isdeleteCustomEmailPayload = (obj?: { __typename?: any } | null): obj is deleteCustomEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCustomEmailPayload"')
      return deleteCustomEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCustomFoodPayload_possibleTypes: string[] = ['deleteCustomFoodPayload']
    export const isdeleteCustomFoodPayload = (obj?: { __typename?: any } | null): obj is deleteCustomFoodPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCustomFoodPayload"')
      return deleteCustomFoodPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCustomModuleFormPayload_possibleTypes: string[] = ['deleteCustomModuleFormPayload']
    export const isdeleteCustomModuleFormPayload = (obj?: { __typename?: any } | null): obj is deleteCustomModuleFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCustomModuleFormPayload"')
      return deleteCustomModuleFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteCustomModulePayload_possibleTypes: string[] = ['deleteCustomModulePayload']
    export const isdeleteCustomModulePayload = (obj?: { __typename?: any } | null): obj is deleteCustomModulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteCustomModulePayload"')
      return deleteCustomModulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteDexcomConnectionPayload_possibleTypes: string[] = ['deleteDexcomConnectionPayload']
    export const isdeleteDexcomConnectionPayload = (obj?: { __typename?: any } | null): obj is deleteDexcomConnectionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteDexcomConnectionPayload"')
      return deleteDexcomConnectionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteDocumentPayload_possibleTypes: string[] = ['deleteDocumentPayload']
    export const isdeleteDocumentPayload = (obj?: { __typename?: any } | null): obj is deleteDocumentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteDocumentPayload"')
      return deleteDocumentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteDosespotPayload_possibleTypes: string[] = ['deleteDosespotPayload']
    export const isdeleteDosespotPayload = (obj?: { __typename?: any } | null): obj is deleteDosespotPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteDosespotPayload"')
      return deleteDosespotPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteEntryPayload_possibleTypes: string[] = ['deleteEntryPayload']
    export const isdeleteEntryPayload = (obj?: { __typename?: any } | null): obj is deleteEntryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteEntryPayload"')
      return deleteEntryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteExternalCalendarPayload_possibleTypes: string[] = ['deleteExternalCalendarPayload']
    export const isdeleteExternalCalendarPayload = (obj?: { __typename?: any } | null): obj is deleteExternalCalendarPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteExternalCalendarPayload"')
      return deleteExternalCalendarPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteFamilyHistoryPayload_possibleTypes: string[] = ['deleteFamilyHistoryPayload']
    export const isdeleteFamilyHistoryPayload = (obj?: { __typename?: any } | null): obj is deleteFamilyHistoryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteFamilyHistoryPayload"')
      return deleteFamilyHistoryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteFitbitPayload_possibleTypes: string[] = ['deleteFitbitPayload']
    export const isdeleteFitbitPayload = (obj?: { __typename?: any } | null): obj is deleteFitbitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteFitbitPayload"')
      return deleteFitbitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteFolderPayload_possibleTypes: string[] = ['deleteFolderPayload']
    export const isdeleteFolderPayload = (obj?: { __typename?: any } | null): obj is deleteFolderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteFolderPayload"')
      return deleteFolderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteFormAnswerGroupPayload_possibleTypes: string[] = ['deleteFormAnswerGroupPayload']
    export const isdeleteFormAnswerGroupPayload = (obj?: { __typename?: any } | null): obj is deleteFormAnswerGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteFormAnswerGroupPayload"')
      return deleteFormAnswerGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteFunctionalStatusPayload_possibleTypes: string[] = ['deleteFunctionalStatusPayload']
    export const isdeleteFunctionalStatusPayload = (obj?: { __typename?: any } | null): obj is deleteFunctionalStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteFunctionalStatusPayload"')
      return deleteFunctionalStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteGoalHistoryPayload_possibleTypes: string[] = ['deleteGoalHistoryPayload']
    export const isdeleteGoalHistoryPayload = (obj?: { __typename?: any } | null): obj is deleteGoalHistoryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteGoalHistoryPayload"')
      return deleteGoalHistoryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteGoalPayload_possibleTypes: string[] = ['deleteGoalPayload']
    export const isdeleteGoalPayload = (obj?: { __typename?: any } | null): obj is deleteGoalPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteGoalPayload"')
      return deleteGoalPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteGoogleFitPayload_possibleTypes: string[] = ['deleteGoogleFitPayload']
    export const isdeleteGoogleFitPayload = (obj?: { __typename?: any } | null): obj is deleteGoogleFitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteGoogleFitPayload"')
      return deleteGoogleFitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteHealthConcernPayload_possibleTypes: string[] = ['deleteHealthConcernPayload']
    export const isdeleteHealthConcernPayload = (obj?: { __typename?: any } | null): obj is deleteHealthConcernPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteHealthConcernPayload"')
      return deleteHealthConcernPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteImplantableDeviceUserPayload_possibleTypes: string[] = ['deleteImplantableDeviceUserPayload']
    export const isdeleteImplantableDeviceUserPayload = (obj?: { __typename?: any } | null): obj is deleteImplantableDeviceUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteImplantableDeviceUserPayload"')
      return deleteImplantableDeviceUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteInsuranceAuthorizationPayload_possibleTypes: string[] = ['deleteInsuranceAuthorizationPayload']
    export const isdeleteInsuranceAuthorizationPayload = (obj?: { __typename?: any } | null): obj is deleteInsuranceAuthorizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteInsuranceAuthorizationPayload"')
      return deleteInsuranceAuthorizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteInsurancePlanPayload_possibleTypes: string[] = ['deleteInsurancePlanPayload']
    export const isdeleteInsurancePlanPayload = (obj?: { __typename?: any } | null): obj is deleteInsurancePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteInsurancePlanPayload"')
      return deleteInsurancePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteLocationPayload_possibleTypes: string[] = ['deleteLocationPayload']
    export const isdeleteLocationPayload = (obj?: { __typename?: any } | null): obj is deleteLocationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteLocationPayload"')
      return deleteLocationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteMealPayload_possibleTypes: string[] = ['deleteMealPayload']
    export const isdeleteMealPayload = (obj?: { __typename?: any } | null): obj is deleteMealPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteMealPayload"')
      return deleteMealPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteNotePayload_possibleTypes: string[] = ['deleteNotePayload']
    export const isdeleteNotePayload = (obj?: { __typename?: any } | null): obj is deleteNotePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteNotePayload"')
      return deleteNotePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteNotificationContactPayload_possibleTypes: string[] = ['deleteNotificationContactPayload']
    export const isdeleteNotificationContactPayload = (obj?: { __typename?: any } | null): obj is deleteNotificationContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteNotificationContactPayload"')
      return deleteNotificationContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOfferingCouponPayload_possibleTypes: string[] = ['deleteOfferingCouponPayload']
    export const isdeleteOfferingCouponPayload = (obj?: { __typename?: any } | null): obj is deleteOfferingCouponPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOfferingCouponPayload"')
      return deleteOfferingCouponPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOfferingPayload_possibleTypes: string[] = ['deleteOfferingPayload']
    export const isdeleteOfferingPayload = (obj?: { __typename?: any } | null): obj is deleteOfferingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOfferingPayload"')
      return deleteOfferingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOnboardingFlowPayload_possibleTypes: string[] = ['deleteOnboardingFlowPayload']
    export const isdeleteOnboardingFlowPayload = (obj?: { __typename?: any } | null): obj is deleteOnboardingFlowPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOnboardingFlowPayload"')
      return deleteOnboardingFlowPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOnboardingItemPayload_possibleTypes: string[] = ['deleteOnboardingItemPayload']
    export const isdeleteOnboardingItemPayload = (obj?: { __typename?: any } | null): obj is deleteOnboardingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOnboardingItemPayload"')
      return deleteOnboardingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOrganizationCptCodePayload_possibleTypes: string[] = ['deleteOrganizationCptCodePayload']
    export const isdeleteOrganizationCptCodePayload = (obj?: { __typename?: any } | null): obj is deleteOrganizationCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOrganizationCptCodePayload"')
      return deleteOrganizationCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOrganizationInfoPayload_possibleTypes: string[] = ['deleteOrganizationInfoPayload']
    export const isdeleteOrganizationInfoPayload = (obj?: { __typename?: any } | null): obj is deleteOrganizationInfoPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOrganizationInfoPayload"')
      return deleteOrganizationInfoPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteOrganizationMembershipPayload_possibleTypes: string[] = ['deleteOrganizationMembershipPayload']
    export const isdeleteOrganizationMembershipPayload = (obj?: { __typename?: any } | null): obj is deleteOrganizationMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteOrganizationMembershipPayload"')
      return deleteOrganizationMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deletePermissionTemplatePayload_possibleTypes: string[] = ['deletePermissionTemplatePayload']
    export const isdeletePermissionTemplatePayload = (obj?: { __typename?: any } | null): obj is deletePermissionTemplatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeletePermissionTemplatePayload"')
      return deletePermissionTemplatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deletePreferredMedicalCodePayload_possibleTypes: string[] = ['deletePreferredMedicalCodePayload']
    export const isdeletePreferredMedicalCodePayload = (obj?: { __typename?: any } | null): obj is deletePreferredMedicalCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeletePreferredMedicalCodePayload"')
      return deletePreferredMedicalCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteProcedurePayload_possibleTypes: string[] = ['deleteProcedurePayload']
    export const isdeleteProcedurePayload = (obj?: { __typename?: any } | null): obj is deleteProcedurePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteProcedurePayload"')
      return deleteProcedurePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteProductPayload_possibleTypes: string[] = ['deleteProductPayload']
    export const isdeleteProductPayload = (obj?: { __typename?: any } | null): obj is deleteProductPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteProductPayload"')
      return deleteProductPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteProviderCptCodePayload_possibleTypes: string[] = ['deleteProviderCptCodePayload']
    export const isdeleteProviderCptCodePayload = (obj?: { __typename?: any } | null): obj is deleteProviderCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteProviderCptCodePayload"')
      return deleteProviderCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteReceivedFaxPayload_possibleTypes: string[] = ['deleteReceivedFaxPayload']
    export const isdeleteReceivedFaxPayload = (obj?: { __typename?: any } | null): obj is deleteReceivedFaxPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteReceivedFaxPayload"')
      return deleteReceivedFaxPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteRecommendationPayload_possibleTypes: string[] = ['deleteRecommendationPayload']
    export const isdeleteRecommendationPayload = (obj?: { __typename?: any } | null): obj is deleteRecommendationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteRecommendationPayload"')
      return deleteRecommendationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteReferralPayload_possibleTypes: string[] = ['deleteReferralPayload']
    export const isdeleteReferralPayload = (obj?: { __typename?: any } | null): obj is deleteReferralPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteReferralPayload"')
      return deleteReferralPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteReferringPhysicianPayload_possibleTypes: string[] = ['deleteReferringPhysicianPayload']
    export const isdeleteReferringPhysicianPayload = (obj?: { __typename?: any } | null): obj is deleteReferringPhysicianPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteReferringPhysicianPayload"')
      return deleteReferringPhysicianPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteRequestedFormPayload_possibleTypes: string[] = ['deleteRequestedFormPayload']
    export const isdeleteRequestedFormPayload = (obj?: { __typename?: any } | null): obj is deleteRequestedFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteRequestedFormPayload"')
      return deleteRequestedFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteRequestedPaymentPayload_possibleTypes: string[] = ['deleteRequestedPaymentPayload']
    export const isdeleteRequestedPaymentPayload = (obj?: { __typename?: any } | null): obj is deleteRequestedPaymentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteRequestedPaymentPayload"')
      return deleteRequestedPaymentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteSavedFilterPayload_possibleTypes: string[] = ['deleteSavedFilterPayload']
    export const isdeleteSavedFilterPayload = (obj?: { __typename?: any } | null): obj is deleteSavedFilterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteSavedFilterPayload"')
      return deleteSavedFilterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteShapaConnectionPayload_possibleTypes: string[] = ['deleteShapaConnectionPayload']
    export const isdeleteShapaConnectionPayload = (obj?: { __typename?: any } | null): obj is deleteShapaConnectionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteShapaConnectionPayload"')
      return deleteShapaConnectionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteSmartPhrasePayload_possibleTypes: string[] = ['deleteSmartPhrasePayload']
    export const isdeleteSmartPhrasePayload = (obj?: { __typename?: any } | null): obj is deleteSmartPhrasePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteSmartPhrasePayload"')
      return deleteSmartPhrasePayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteSmokingStatusPayload_possibleTypes: string[] = ['deleteSmokingStatusPayload']
    export const isdeleteSmokingStatusPayload = (obj?: { __typename?: any } | null): obj is deleteSmokingStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteSmokingStatusPayload"')
      return deleteSmokingStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteStripeCustomerDetailPayload_possibleTypes: string[] = ['deleteStripeCustomerDetailPayload']
    export const isdeleteStripeCustomerDetailPayload = (obj?: { __typename?: any } | null): obj is deleteStripeCustomerDetailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteStripeCustomerDetailPayload"')
      return deleteStripeCustomerDetailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteSuperBillPayload_possibleTypes: string[] = ['deleteSuperBillPayload']
    export const isdeleteSuperBillPayload = (obj?: { __typename?: any } | null): obj is deleteSuperBillPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteSuperBillPayload"')
      return deleteSuperBillPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteTagPayload_possibleTypes: string[] = ['deleteTagPayload']
    export const isdeleteTagPayload = (obj?: { __typename?: any } | null): obj is deleteTagPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteTagPayload"')
      return deleteTagPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteTaskPayload_possibleTypes: string[] = ['deleteTaskPayload']
    export const isdeleteTaskPayload = (obj?: { __typename?: any } | null): obj is deleteTaskPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteTaskPayload"')
      return deleteTaskPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteUniqueDeviceIdentifierPayload_possibleTypes: string[] = ['deleteUniqueDeviceIdentifierPayload']
    export const isdeleteUniqueDeviceIdentifierPayload = (obj?: { __typename?: any } | null): obj is deleteUniqueDeviceIdentifierPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteUniqueDeviceIdentifierPayload"')
      return deleteUniqueDeviceIdentifierPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteUserGroupPayload_possibleTypes: string[] = ['deleteUserGroupPayload']
    export const isdeleteUserGroupPayload = (obj?: { __typename?: any } | null): obj is deleteUserGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteUserGroupPayload"')
      return deleteUserGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteWebhookPayload_possibleTypes: string[] = ['deleteWebhookPayload']
    export const isdeleteWebhookPayload = (obj?: { __typename?: any } | null): obj is deleteWebhookPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteWebhookPayload"')
      return deleteWebhookPayload_possibleTypes.includes(obj.__typename)
    }
    


    const deleteWithingsConnectionPayload_possibleTypes: string[] = ['deleteWithingsConnectionPayload']
    export const isdeleteWithingsConnectionPayload = (obj?: { __typename?: any } | null): obj is deleteWithingsConnectionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdeleteWithingsConnectionPayload"')
      return deleteWithingsConnectionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const destroyAnnouncementPayload_possibleTypes: string[] = ['destroyAnnouncementPayload']
    export const isdestroyAnnouncementPayload = (obj?: { __typename?: any } | null): obj is destroyAnnouncementPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdestroyAnnouncementPayload"')
      return destroyAnnouncementPayload_possibleTypes.includes(obj.__typename)
    }
    


    const destroyFaxAcctInfoPayload_possibleTypes: string[] = ['destroyFaxAcctInfoPayload']
    export const isdestroyFaxAcctInfoPayload = (obj?: { __typename?: any } | null): obj is destroyFaxAcctInfoPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdestroyFaxAcctInfoPayload"')
      return destroyFaxAcctInfoPayload_possibleTypes.includes(obj.__typename)
    }
    


    const destroyMedicationPayload_possibleTypes: string[] = ['destroyMedicationPayload']
    export const isdestroyMedicationPayload = (obj?: { __typename?: any } | null): obj is destroyMedicationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdestroyMedicationPayload"')
      return destroyMedicationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const destroyRecurringFormPayload_possibleTypes: string[] = ['destroyRecurringFormPayload']
    export const isdestroyRecurringFormPayload = (obj?: { __typename?: any } | null): obj is destroyRecurringFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdestroyRecurringFormPayload"')
      return destroyRecurringFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const dismissAllAnnouncementsPayload_possibleTypes: string[] = ['dismissAllAnnouncementsPayload']
    export const isdismissAllAnnouncementsPayload = (obj?: { __typename?: any } | null): obj is dismissAllAnnouncementsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdismissAllAnnouncementsPayload"')
      return dismissAllAnnouncementsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const dismissAnnouncementPayload_possibleTypes: string[] = ['dismissAnnouncementPayload']
    export const isdismissAnnouncementPayload = (obj?: { __typename?: any } | null): obj is dismissAnnouncementPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdismissAnnouncementPayload"')
      return dismissAnnouncementPayload_possibleTypes.includes(obj.__typename)
    }
    


    const dosespotSSOPayload_possibleTypes: string[] = ['dosespotSSOPayload']
    export const isdosespotSSOPayload = (obj?: { __typename?: any } | null): obj is dosespotSSOPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdosespotSSOPayload"')
      return dosespotSSOPayload_possibleTypes.includes(obj.__typename)
    }
    


    const dummyUserPayload_possibleTypes: string[] = ['dummyUserPayload']
    export const isdummyUserPayload = (obj?: { __typename?: any } | null): obj is dummyUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isdummyUserPayload"')
      return dummyUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const editAvailabilityPayload_possibleTypes: string[] = ['editAvailabilityPayload']
    export const iseditAvailabilityPayload = (obj?: { __typename?: any } | null): obj is editAvailabilityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "iseditAvailabilityPayload"')
      return editAvailabilityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const enableGoogleIntegrationsPayload_possibleTypes: string[] = ['enableGoogleIntegrationsPayload']
    export const isenableGoogleIntegrationsPayload = (obj?: { __typename?: any } | null): obj is enableGoogleIntegrationsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isenableGoogleIntegrationsPayload"')
      return enableGoogleIntegrationsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const enableSelfSignupPayload_possibleTypes: string[] = ['enableSelfSignupPayload']
    export const isenableSelfSignupPayload = (obj?: { __typename?: any } | null): obj is enableSelfSignupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isenableSelfSignupPayload"')
      return enableSelfSignupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const expireWebhookSignaturePayload_possibleTypes: string[] = ['expireWebhookSignaturePayload']
    export const isexpireWebhookSignaturePayload = (obj?: { __typename?: any } | null): obj is expireWebhookSignaturePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isexpireWebhookSignaturePayload"')
      return expireWebhookSignaturePayload_possibleTypes.includes(obj.__typename)
    }
    


    const exportClientEhiPayload_possibleTypes: string[] = ['exportClientEhiPayload']
    export const isexportClientEhiPayload = (obj?: { __typename?: any } | null): obj is exportClientEhiPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isexportClientEhiPayload"')
      return exportClientEhiPayload_possibleTypes.includes(obj.__typename)
    }
    


    const exportToTemplatePayload_possibleTypes: string[] = ['exportToTemplatePayload']
    export const isexportToTemplatePayload = (obj?: { __typename?: any } | null): obj is exportToTemplatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isexportToTemplatePayload"')
      return exportToTemplatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const fullscript_possibleTypes: string[] = ['fullscript']
    export const isfullscript = (obj?: { __typename?: any } | null): obj is fullscript => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isfullscript"')
      return fullscript_possibleTypes.includes(obj.__typename)
    }
    


    const generateChartingPdfPayload_possibleTypes: string[] = ['generateChartingPdfPayload']
    export const isgenerateChartingPdfPayload = (obj?: { __typename?: any } | null): obj is generateChartingPdfPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isgenerateChartingPdfPayload"')
      return generateChartingPdfPayload_possibleTypes.includes(obj.__typename)
    }
    


    const mergeClientsPayload_possibleTypes: string[] = ['mergeClientsPayload']
    export const ismergeClientsPayload = (obj?: { __typename?: any } | null): obj is mergeClientsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "ismergeClientsPayload"')
      return mergeClientsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const parseCcdaDocumentPayload_possibleTypes: string[] = ['parseCcdaDocumentPayload']
    export const isparseCcdaDocumentPayload = (obj?: { __typename?: any } | null): obj is parseCcdaDocumentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isparseCcdaDocumentPayload"')
      return parseCcdaDocumentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const removeAppliedTagPayload_possibleTypes: string[] = ['removeAppliedTagPayload']
    export const isremoveAppliedTagPayload = (obj?: { __typename?: any } | null): obj is removeAppliedTagPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isremoveAppliedTagPayload"')
      return removeAppliedTagPayload_possibleTypes.includes(obj.__typename)
    }
    


    const removeDraftPayload_possibleTypes: string[] = ['removeDraftPayload']
    export const isremoveDraftPayload = (obj?: { __typename?: any } | null): obj is removeDraftPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isremoveDraftPayload"')
      return removeDraftPayload_possibleTypes.includes(obj.__typename)
    }
    


    const removeUserFromGroupCarePlanPayload_possibleTypes: string[] = ['removeUserFromGroupCarePlanPayload']
    export const isremoveUserFromGroupCarePlanPayload = (obj?: { __typename?: any } | null): obj is removeUserFromGroupCarePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isremoveUserFromGroupCarePlanPayload"')
      return removeUserFromGroupCarePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const resendSentFaxPayload_possibleTypes: string[] = ['resendSentFaxPayload']
    export const isresendSentFaxPayload = (obj?: { __typename?: any } | null): obj is resendSentFaxPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isresendSentFaxPayload"')
      return resendSentFaxPayload_possibleTypes.includes(obj.__typename)
    }
    


    const resetPasswordPayload_possibleTypes: string[] = ['resetPasswordPayload']
    export const isresetPasswordPayload = (obj?: { __typename?: any } | null): obj is resetPasswordPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isresetPasswordPayload"')
      return resetPasswordPayload_possibleTypes.includes(obj.__typename)
    }
    


    const restoreVersionsPayload_possibleTypes: string[] = ['restoreVersionsPayload']
    export const isrestoreVersionsPayload = (obj?: { __typename?: any } | null): obj is restoreVersionsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isrestoreVersionsPayload"')
      return restoreVersionsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const resyncRupaLabOrdersPayload_possibleTypes: string[] = ['resyncRupaLabOrdersPayload']
    export const isresyncRupaLabOrdersPayload = (obj?: { __typename?: any } | null): obj is resyncRupaLabOrdersPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isresyncRupaLabOrdersPayload"')
      return resyncRupaLabOrdersPayload_possibleTypes.includes(obj.__typename)
    }
    


    const revokeTokenPayload_possibleTypes: string[] = ['revokeTokenPayload']
    export const isrevokeTokenPayload = (obj?: { __typename?: any } | null): obj is revokeTokenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isrevokeTokenPayload"')
      return revokeTokenPayload_possibleTypes.includes(obj.__typename)
    }
    


    const runEligibilityCheckMutationPayload_possibleTypes: string[] = ['runEligibilityCheckMutationPayload']
    export const isrunEligibilityCheckMutationPayload = (obj?: { __typename?: any } | null): obj is runEligibilityCheckMutationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isrunEligibilityCheckMutationPayload"')
      return runEligibilityCheckMutationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const sendCarePlanEmailPayload_possibleTypes: string[] = ['sendCarePlanEmailPayload']
    export const issendCarePlanEmailPayload = (obj?: { __typename?: any } | null): obj is sendCarePlanEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issendCarePlanEmailPayload"')
      return sendCarePlanEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const shareAnswersAsDocumentPayload_possibleTypes: string[] = ['shareAnswersAsDocumentPayload']
    export const isshareAnswersAsDocumentPayload = (obj?: { __typename?: any } | null): obj is shareAnswersAsDocumentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isshareAnswersAsDocumentPayload"')
      return shareAnswersAsDocumentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const shareCoursePayload_possibleTypes: string[] = ['shareCoursePayload']
    export const isshareCoursePayload = (obj?: { __typename?: any } | null): obj is shareCoursePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isshareCoursePayload"')
      return shareCoursePayload_possibleTypes.includes(obj.__typename)
    }
    


    const shareCustomModuleFormPayload_possibleTypes: string[] = ['shareCustomModuleFormPayload']
    export const isshareCustomModuleFormPayload = (obj?: { __typename?: any } | null): obj is shareCustomModuleFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isshareCustomModuleFormPayload"')
      return shareCustomModuleFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const signInPayload_possibleTypes: string[] = ['signInPayload']
    export const issignInPayload = (obj?: { __typename?: any } | null): obj is signInPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issignInPayload"')
      return signInPayload_possibleTypes.includes(obj.__typename)
    }
    


    const signUpPayload_possibleTypes: string[] = ['signUpPayload']
    export const issignUpPayload = (obj?: { __typename?: any } | null): obj is signUpPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "issignUpPayload"')
      return signUpPayload_possibleTypes.includes(obj.__typename)
    }
    


    const toggleCarePlanStatusForSpecificUserPayload_possibleTypes: string[] = ['toggleCarePlanStatusForSpecificUserPayload']
    export const istoggleCarePlanStatusForSpecificUserPayload = (obj?: { __typename?: any } | null): obj is toggleCarePlanStatusForSpecificUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "istoggleCarePlanStatusForSpecificUserPayload"')
      return toggleCarePlanStatusForSpecificUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const unblockIpAddressPayload_possibleTypes: string[] = ['unblockIpAddressPayload']
    export const isunblockIpAddressPayload = (obj?: { __typename?: any } | null): obj is unblockIpAddressPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isunblockIpAddressPayload"')
      return unblockIpAddressPayload_possibleTypes.includes(obj.__typename)
    }
    


    const unlockChartingNotePayload_possibleTypes: string[] = ['unlockChartingNotePayload']
    export const isunlockChartingNotePayload = (obj?: { __typename?: any } | null): obj is unlockChartingNotePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isunlockChartingNotePayload"')
      return unlockChartingNotePayload_possibleTypes.includes(obj.__typename)
    }
    


    const unsubscribeFromNotificationPayload_possibleTypes: string[] = ['unsubscribeFromNotificationPayload']
    export const isunsubscribeFromNotificationPayload = (obj?: { __typename?: any } | null): obj is unsubscribeFromNotificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isunsubscribeFromNotificationPayload"')
      return unsubscribeFromNotificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAddendumPayload_possibleTypes: string[] = ['updateAddendumPayload']
    export const isupdateAddendumPayload = (obj?: { __typename?: any } | null): obj is updateAddendumPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAddendumPayload"')
      return updateAddendumPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAllergySensitivityPayload_possibleTypes: string[] = ['updateAllergySensitivityPayload']
    export const isupdateAllergySensitivityPayload = (obj?: { __typename?: any } | null): obj is updateAllergySensitivityPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAllergySensitivityPayload"')
      return updateAllergySensitivityPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAnnouncementPayload_possibleTypes: string[] = ['updateAnnouncementPayload']
    export const isupdateAnnouncementPayload = (obj?: { __typename?: any } | null): obj is updateAnnouncementPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAnnouncementPayload"')
      return updateAnnouncementPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAppleHealthPayload_possibleTypes: string[] = ['updateAppleHealthPayload']
    export const isupdateAppleHealthPayload = (obj?: { __typename?: any } | null): obj is updateAppleHealthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAppleHealthPayload"')
      return updateAppleHealthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAppointmentInclusionPayload_possibleTypes: string[] = ['updateAppointmentInclusionPayload']
    export const isupdateAppointmentInclusionPayload = (obj?: { __typename?: any } | null): obj is updateAppointmentInclusionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAppointmentInclusionPayload"')
      return updateAppointmentInclusionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAppointmentPayload_possibleTypes: string[] = ['updateAppointmentPayload']
    export const isupdateAppointmentPayload = (obj?: { __typename?: any } | null): obj is updateAppointmentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAppointmentPayload"')
      return updateAppointmentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAppointmentSettingPayload_possibleTypes: string[] = ['updateAppointmentSettingPayload']
    export const isupdateAppointmentSettingPayload = (obj?: { __typename?: any } | null): obj is updateAppointmentSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAppointmentSettingPayload"')
      return updateAppointmentSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAppointmentTypeCptCodePayload_possibleTypes: string[] = ['updateAppointmentTypeCptCodePayload']
    export const isupdateAppointmentTypeCptCodePayload = (obj?: { __typename?: any } | null): obj is updateAppointmentTypeCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAppointmentTypeCptCodePayload"')
      return updateAppointmentTypeCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAppointmentTypePayload_possibleTypes: string[] = ['updateAppointmentTypePayload']
    export const isupdateAppointmentTypePayload = (obj?: { __typename?: any } | null): obj is updateAppointmentTypePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAppointmentTypePayload"')
      return updateAppointmentTypePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAutoTaskGeneratorPayload_possibleTypes: string[] = ['updateAutoTaskGeneratorPayload']
    export const isupdateAutoTaskGeneratorPayload = (obj?: { __typename?: any } | null): obj is updateAutoTaskGeneratorPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAutoTaskGeneratorPayload"')
      return updateAutoTaskGeneratorPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateAutomatedInsuranceBillingSettingPayload_possibleTypes: string[] = ['updateAutomatedInsuranceBillingSettingPayload']
    export const isupdateAutomatedInsuranceBillingSettingPayload = (obj?: { __typename?: any } | null): obj is updateAutomatedInsuranceBillingSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateAutomatedInsuranceBillingSettingPayload"')
      return updateAutomatedInsuranceBillingSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateBillingItemPayload_possibleTypes: string[] = ['updateBillingItemPayload']
    export const isupdateBillingItemPayload = (obj?: { __typename?: any } | null): obj is updateBillingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateBillingItemPayload"')
      return updateBillingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateBrandPayload_possibleTypes: string[] = ['updateBrandPayload']
    export const isupdateBrandPayload = (obj?: { __typename?: any } | null): obj is updateBrandPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateBrandPayload"')
      return updateBrandPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateByTemplatePayload_possibleTypes: string[] = ['updateByTemplatePayload']
    export const isupdateByTemplatePayload = (obj?: { __typename?: any } | null): obj is updateByTemplatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateByTemplatePayload"')
      return updateByTemplatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCalendarViewSettingPayload_possibleTypes: string[] = ['updateCalendarViewSettingPayload']
    export const isupdateCalendarViewSettingPayload = (obj?: { __typename?: any } | null): obj is updateCalendarViewSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCalendarViewSettingPayload"')
      return updateCalendarViewSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCampaignPayload_possibleTypes: string[] = ['updateCampaignPayload']
    export const isupdateCampaignPayload = (obj?: { __typename?: any } | null): obj is updateCampaignPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCampaignPayload"')
      return updateCampaignPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCarePlanPayload_possibleTypes: string[] = ['updateCarePlanPayload']
    export const isupdateCarePlanPayload = (obj?: { __typename?: any } | null): obj is updateCarePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCarePlanPayload"')
      return updateCarePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateChangeHealthAccountPayload_possibleTypes: string[] = ['updateChangeHealthAccountPayload']
    export const isupdateChangeHealthAccountPayload = (obj?: { __typename?: any } | null): obj is updateChangeHealthAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateChangeHealthAccountPayload"')
      return updateChangeHealthAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateChargeBackPayload_possibleTypes: string[] = ['updateChargeBackPayload']
    export const isupdateChargeBackPayload = (obj?: { __typename?: any } | null): obj is updateChargeBackPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateChargeBackPayload"')
      return updateChargeBackPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateChatSettingPayload_possibleTypes: string[] = ['updateChatSettingPayload']
    export const isupdateChatSettingPayload = (obj?: { __typename?: any } | null): obj is updateChatSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateChatSettingPayload"')
      return updateChatSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateClientPayload_possibleTypes: string[] = ['updateClientPayload']
    export const isupdateClientPayload = (obj?: { __typename?: any } | null): obj is updateClientPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateClientPayload"')
      return updateClientPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCms1500Payload_possibleTypes: string[] = ['updateCms1500Payload']
    export const isupdateCms1500Payload = (obj?: { __typename?: any } | null): obj is updateCms1500Payload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCms1500Payload"')
      return updateCms1500Payload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCognitiveStatusPayload_possibleTypes: string[] = ['updateCognitiveStatusPayload']
    export const isupdateCognitiveStatusPayload = (obj?: { __typename?: any } | null): obj is updateCognitiveStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCognitiveStatusPayload"')
      return updateCognitiveStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateConversationMembershipPayload_possibleTypes: string[] = ['updateConversationMembershipPayload']
    export const isupdateConversationMembershipPayload = (obj?: { __typename?: any } | null): obj is updateConversationMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateConversationMembershipPayload"')
      return updateConversationMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateConversationPayload_possibleTypes: string[] = ['updateConversationPayload']
    export const isupdateConversationPayload = (obj?: { __typename?: any } | null): obj is updateConversationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateConversationPayload"')
      return updateConversationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCourseGroupPayload_possibleTypes: string[] = ['updateCourseGroupPayload']
    export const isupdateCourseGroupPayload = (obj?: { __typename?: any } | null): obj is updateCourseGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCourseGroupPayload"')
      return updateCourseGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCourseItemPayload_possibleTypes: string[] = ['updateCourseItemPayload']
    export const isupdateCourseItemPayload = (obj?: { __typename?: any } | null): obj is updateCourseItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCourseItemPayload"')
      return updateCourseItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCourseMembershipPayload_possibleTypes: string[] = ['updateCourseMembershipPayload']
    export const isupdateCourseMembershipPayload = (obj?: { __typename?: any } | null): obj is updateCourseMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCourseMembershipPayload"')
      return updateCourseMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCoursePayload_possibleTypes: string[] = ['updateCoursePayload']
    export const isupdateCoursePayload = (obj?: { __typename?: any } | null): obj is updateCoursePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCoursePayload"')
      return updateCoursePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCustomEmailPayload_possibleTypes: string[] = ['updateCustomEmailPayload']
    export const isupdateCustomEmailPayload = (obj?: { __typename?: any } | null): obj is updateCustomEmailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCustomEmailPayload"')
      return updateCustomEmailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCustomFoodPayload_possibleTypes: string[] = ['updateCustomFoodPayload']
    export const isupdateCustomFoodPayload = (obj?: { __typename?: any } | null): obj is updateCustomFoodPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCustomFoodPayload"')
      return updateCustomFoodPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCustomModuleFormPayload_possibleTypes: string[] = ['updateCustomModuleFormPayload']
    export const isupdateCustomModuleFormPayload = (obj?: { __typename?: any } | null): obj is updateCustomModuleFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCustomModuleFormPayload"')
      return updateCustomModuleFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateCustomModulePayload_possibleTypes: string[] = ['updateCustomModulePayload']
    export const isupdateCustomModulePayload = (obj?: { __typename?: any } | null): obj is updateCustomModulePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateCustomModulePayload"')
      return updateCustomModulePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateDocumentPayload_possibleTypes: string[] = ['updateDocumentPayload']
    export const isupdateDocumentPayload = (obj?: { __typename?: any } | null): obj is updateDocumentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateDocumentPayload"')
      return updateDocumentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateEntryPayload_possibleTypes: string[] = ['updateEntryPayload']
    export const isupdateEntryPayload = (obj?: { __typename?: any } | null): obj is updateEntryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateEntryPayload"')
      return updateEntryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateExternalCalendarPayload_possibleTypes: string[] = ['updateExternalCalendarPayload']
    export const isupdateExternalCalendarPayload = (obj?: { __typename?: any } | null): obj is updateExternalCalendarPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateExternalCalendarPayload"')
      return updateExternalCalendarPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFamilyHistoryPayload_possibleTypes: string[] = ['updateFamilyHistoryPayload']
    export const isupdateFamilyHistoryPayload = (obj?: { __typename?: any } | null): obj is updateFamilyHistoryPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFamilyHistoryPayload"')
      return updateFamilyHistoryPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFaxAcctInfoPayload_possibleTypes: string[] = ['updateFaxAcctInfoPayload']
    export const isupdateFaxAcctInfoPayload = (obj?: { __typename?: any } | null): obj is updateFaxAcctInfoPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFaxAcctInfoPayload"')
      return updateFaxAcctInfoPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFeatureTogglePayload_possibleTypes: string[] = ['updateFeatureTogglePayload']
    export const isupdateFeatureTogglePayload = (obj?: { __typename?: any } | null): obj is updateFeatureTogglePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFeatureTogglePayload"')
      return updateFeatureTogglePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFitbitPayload_possibleTypes: string[] = ['updateFitbitPayload']
    export const isupdateFitbitPayload = (obj?: { __typename?: any } | null): obj is updateFitbitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFitbitPayload"')
      return updateFitbitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFolderPayload_possibleTypes: string[] = ['updateFolderPayload']
    export const isupdateFolderPayload = (obj?: { __typename?: any } | null): obj is updateFolderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFolderPayload"')
      return updateFolderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFormAnswerGroupPayload_possibleTypes: string[] = ['updateFormAnswerGroupPayload']
    export const isupdateFormAnswerGroupPayload = (obj?: { __typename?: any } | null): obj is updateFormAnswerGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFormAnswerGroupPayload"')
      return updateFormAnswerGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateFunctionalStatusPayload_possibleTypes: string[] = ['updateFunctionalStatusPayload']
    export const isupdateFunctionalStatusPayload = (obj?: { __typename?: any } | null): obj is updateFunctionalStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateFunctionalStatusPayload"')
      return updateFunctionalStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateGoalPayload_possibleTypes: string[] = ['updateGoalPayload']
    export const isupdateGoalPayload = (obj?: { __typename?: any } | null): obj is updateGoalPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateGoalPayload"')
      return updateGoalPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateGoogleFitPayload_possibleTypes: string[] = ['updateGoogleFitPayload']
    export const isupdateGoogleFitPayload = (obj?: { __typename?: any } | null): obj is updateGoogleFitPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateGoogleFitPayload"')
      return updateGoogleFitPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateGroupCarePlanPayload_possibleTypes: string[] = ['updateGroupCarePlanPayload']
    export const isupdateGroupCarePlanPayload = (obj?: { __typename?: any } | null): obj is updateGroupCarePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateGroupCarePlanPayload"')
      return updateGroupCarePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateHealthConcernPayload_possibleTypes: string[] = ['updateHealthConcernPayload']
    export const isupdateHealthConcernPayload = (obj?: { __typename?: any } | null): obj is updateHealthConcernPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateHealthConcernPayload"')
      return updateHealthConcernPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateHumanPayload_possibleTypes: string[] = ['updateHumanPayload']
    export const isupdateHumanPayload = (obj?: { __typename?: any } | null): obj is updateHumanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateHumanPayload"')
      return updateHumanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateImmunizationPayload_possibleTypes: string[] = ['updateImmunizationPayload']
    export const isupdateImmunizationPayload = (obj?: { __typename?: any } | null): obj is updateImmunizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateImmunizationPayload"')
      return updateImmunizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateImplantableDeviceUserPayload_possibleTypes: string[] = ['updateImplantableDeviceUserPayload']
    export const isupdateImplantableDeviceUserPayload = (obj?: { __typename?: any } | null): obj is updateImplantableDeviceUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateImplantableDeviceUserPayload"')
      return updateImplantableDeviceUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateInsuranceAuthorizationPayload_possibleTypes: string[] = ['updateInsuranceAuthorizationPayload']
    export const isupdateInsuranceAuthorizationPayload = (obj?: { __typename?: any } | null): obj is updateInsuranceAuthorizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateInsuranceAuthorizationPayload"')
      return updateInsuranceAuthorizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateInsurancePlanPayload_possibleTypes: string[] = ['updateInsurancePlanPayload']
    export const isupdateInsurancePlanPayload = (obj?: { __typename?: any } | null): obj is updateInsurancePlanPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateInsurancePlanPayload"')
      return updateInsurancePlanPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateLabOrderPayload_possibleTypes: string[] = ['updateLabOrderPayload']
    export const isupdateLabOrderPayload = (obj?: { __typename?: any } | null): obj is updateLabOrderPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateLabOrderPayload"')
      return updateLabOrderPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateLocationPayload_possibleTypes: string[] = ['updateLocationPayload']
    export const isupdateLocationPayload = (obj?: { __typename?: any } | null): obj is updateLocationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateLocationPayload"')
      return updateLocationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateMealPayload_possibleTypes: string[] = ['updateMealPayload']
    export const isupdateMealPayload = (obj?: { __typename?: any } | null): obj is updateMealPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateMealPayload"')
      return updateMealPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateMedicationPayload_possibleTypes: string[] = ['updateMedicationPayload']
    export const isupdateMedicationPayload = (obj?: { __typename?: any } | null): obj is updateMedicationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateMedicationPayload"')
      return updateMedicationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateNotePayload_possibleTypes: string[] = ['updateNotePayload']
    export const isupdateNotePayload = (obj?: { __typename?: any } | null): obj is updateNotePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateNotePayload"')
      return updateNotePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateNoteSchedulerPayload_possibleTypes: string[] = ['updateNoteSchedulerPayload']
    export const isupdateNoteSchedulerPayload = (obj?: { __typename?: any } | null): obj is updateNoteSchedulerPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateNoteSchedulerPayload"')
      return updateNoteSchedulerPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateNotificationContactPayload_possibleTypes: string[] = ['updateNotificationContactPayload']
    export const isupdateNotificationContactPayload = (obj?: { __typename?: any } | null): obj is updateNotificationContactPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateNotificationContactPayload"')
      return updateNotificationContactPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateNotificationPayload_possibleTypes: string[] = ['updateNotificationPayload']
    export const isupdateNotificationPayload = (obj?: { __typename?: any } | null): obj is updateNotificationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateNotificationPayload"')
      return updateNotificationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateNotificationSettingPayload_possibleTypes: string[] = ['updateNotificationSettingPayload']
    export const isupdateNotificationSettingPayload = (obj?: { __typename?: any } | null): obj is updateNotificationSettingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateNotificationSettingPayload"')
      return updateNotificationSettingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOfferingPayload_possibleTypes: string[] = ['updateOfferingPayload']
    export const isupdateOfferingPayload = (obj?: { __typename?: any } | null): obj is updateOfferingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOfferingPayload"')
      return updateOfferingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOfficeallySftpAccountPayload_possibleTypes: string[] = ['updateOfficeallySftpAccountPayload']
    export const isupdateOfficeallySftpAccountPayload = (obj?: { __typename?: any } | null): obj is updateOfficeallySftpAccountPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOfficeallySftpAccountPayload"')
      return updateOfficeallySftpAccountPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOnboardingFlowPayload_possibleTypes: string[] = ['updateOnboardingFlowPayload']
    export const isupdateOnboardingFlowPayload = (obj?: { __typename?: any } | null): obj is updateOnboardingFlowPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOnboardingFlowPayload"')
      return updateOnboardingFlowPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOnboardingItemPayload_possibleTypes: string[] = ['updateOnboardingItemPayload']
    export const isupdateOnboardingItemPayload = (obj?: { __typename?: any } | null): obj is updateOnboardingItemPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOnboardingItemPayload"')
      return updateOnboardingItemPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOrgOwnerPayload_possibleTypes: string[] = ['updateOrgOwnerPayload']
    export const isupdateOrgOwnerPayload = (obj?: { __typename?: any } | null): obj is updateOrgOwnerPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOrgOwnerPayload"')
      return updateOrgOwnerPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOrganizationCptCodePayload_possibleTypes: string[] = ['updateOrganizationCptCodePayload']
    export const isupdateOrganizationCptCodePayload = (obj?: { __typename?: any } | null): obj is updateOrganizationCptCodePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOrganizationCptCodePayload"')
      return updateOrganizationCptCodePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOrganizationMemberPayload_possibleTypes: string[] = ['updateOrganizationMemberPayload']
    export const isupdateOrganizationMemberPayload = (obj?: { __typename?: any } | null): obj is updateOrganizationMemberPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOrganizationMemberPayload"')
      return updateOrganizationMemberPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOrganizationMembershipPayload_possibleTypes: string[] = ['updateOrganizationMembershipPayload']
    export const isupdateOrganizationMembershipPayload = (obj?: { __typename?: any } | null): obj is updateOrganizationMembershipPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOrganizationMembershipPayload"')
      return updateOrganizationMembershipPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateOrganizationPayload_possibleTypes: string[] = ['updateOrganizationPayload']
    export const isupdateOrganizationPayload = (obj?: { __typename?: any } | null): obj is updateOrganizationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateOrganizationPayload"')
      return updateOrganizationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updatePermissionTemplatePayload_possibleTypes: string[] = ['updatePermissionTemplatePayload']
    export const isupdatePermissionTemplatePayload = (obj?: { __typename?: any } | null): obj is updatePermissionTemplatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdatePermissionTemplatePayload"')
      return updatePermissionTemplatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updatePolicyMutationPayload_possibleTypes: string[] = ['updatePolicyMutationPayload']
    export const isupdatePolicyMutationPayload = (obj?: { __typename?: any } | null): obj is updatePolicyMutationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdatePolicyMutationPayload"')
      return updatePolicyMutationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateProcedurePayload_possibleTypes: string[] = ['updateProcedurePayload']
    export const isupdateProcedurePayload = (obj?: { __typename?: any } | null): obj is updateProcedurePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateProcedurePayload"')
      return updateProcedurePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateProductPayload_possibleTypes: string[] = ['updateProductPayload']
    export const isupdateProductPayload = (obj?: { __typename?: any } | null): obj is updateProductPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateProductPayload"')
      return updateProductPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateProviderCptCodesPayload_possibleTypes: string[] = ['updateProviderCptCodesPayload']
    export const isupdateProviderCptCodesPayload = (obj?: { __typename?: any } | null): obj is updateProviderCptCodesPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateProviderCptCodesPayload"')
      return updateProviderCptCodesPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateReceivedFaxPayload_possibleTypes: string[] = ['updateReceivedFaxPayload']
    export const isupdateReceivedFaxPayload = (obj?: { __typename?: any } | null): obj is updateReceivedFaxPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateReceivedFaxPayload"')
      return updateReceivedFaxPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateRecommendationPayload_possibleTypes: string[] = ['updateRecommendationPayload']
    export const isupdateRecommendationPayload = (obj?: { __typename?: any } | null): obj is updateRecommendationPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateRecommendationPayload"')
      return updateRecommendationPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateRecurringFormPayload_possibleTypes: string[] = ['updateRecurringFormPayload']
    export const isupdateRecurringFormPayload = (obj?: { __typename?: any } | null): obj is updateRecurringFormPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateRecurringFormPayload"')
      return updateRecurringFormPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateReferralPayload_possibleTypes: string[] = ['updateReferralPayload']
    export const isupdateReferralPayload = (obj?: { __typename?: any } | null): obj is updateReferralPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateReferralPayload"')
      return updateReferralPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateReferringPhysicianPayload_possibleTypes: string[] = ['updateReferringPhysicianPayload']
    export const isupdateReferringPhysicianPayload = (obj?: { __typename?: any } | null): obj is updateReferringPhysicianPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateReferringPhysicianPayload"')
      return updateReferringPhysicianPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateRequestedPaymentPayload_possibleTypes: string[] = ['updateRequestedPaymentPayload']
    export const isupdateRequestedPaymentPayload = (obj?: { __typename?: any } | null): obj is updateRequestedPaymentPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateRequestedPaymentPayload"')
      return updateRequestedPaymentPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateSavedFilterPayload_possibleTypes: string[] = ['updateSavedFilterPayload']
    export const isupdateSavedFilterPayload = (obj?: { __typename?: any } | null): obj is updateSavedFilterPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateSavedFilterPayload"')
      return updateSavedFilterPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateSmartPhrasePayload_possibleTypes: string[] = ['updateSmartPhrasePayload']
    export const isupdateSmartPhrasePayload = (obj?: { __typename?: any } | null): obj is updateSmartPhrasePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateSmartPhrasePayload"')
      return updateSmartPhrasePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateSmokingStatusPayload_possibleTypes: string[] = ['updateSmokingStatusPayload']
    export const isupdateSmokingStatusPayload = (obj?: { __typename?: any } | null): obj is updateSmokingStatusPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateSmokingStatusPayload"')
      return updateSmokingStatusPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateStatePayload_possibleTypes: string[] = ['updateStatePayload']
    export const isupdateStatePayload = (obj?: { __typename?: any } | null): obj is updateStatePayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateStatePayload"')
      return updateStatePayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateStripeCustomerDetailPayload_possibleTypes: string[] = ['updateStripeCustomerDetailPayload']
    export const isupdateStripeCustomerDetailPayload = (obj?: { __typename?: any } | null): obj is updateStripeCustomerDetailPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateStripeCustomerDetailPayload"')
      return updateStripeCustomerDetailPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateStripeVerificationDetailsPayload_possibleTypes: string[] = ['updateStripeVerificationDetailsPayload']
    export const isupdateStripeVerificationDetailsPayload = (obj?: { __typename?: any } | null): obj is updateStripeVerificationDetailsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateStripeVerificationDetailsPayload"')
      return updateStripeVerificationDetailsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateSubscriptionPayload_possibleTypes: string[] = ['updateSubscriptionPayload']
    export const isupdateSubscriptionPayload = (obj?: { __typename?: any } | null): obj is updateSubscriptionPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateSubscriptionPayload"')
      return updateSubscriptionPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateSuperBillPayload_possibleTypes: string[] = ['updateSuperBillPayload']
    export const isupdateSuperBillPayload = (obj?: { __typename?: any } | null): obj is updateSuperBillPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateSuperBillPayload"')
      return updateSuperBillPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateTagPayload_possibleTypes: string[] = ['updateTagPayload']
    export const isupdateTagPayload = (obj?: { __typename?: any } | null): obj is updateTagPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateTagPayload"')
      return updateTagPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateTaskPayload_possibleTypes: string[] = ['updateTaskPayload']
    export const isupdateTaskPayload = (obj?: { __typename?: any } | null): obj is updateTaskPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateTaskPayload"')
      return updateTaskPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateUniqueDeviceIdentifierPayload_possibleTypes: string[] = ['updateUniqueDeviceIdentifierPayload']
    export const isupdateUniqueDeviceIdentifierPayload = (obj?: { __typename?: any } | null): obj is updateUniqueDeviceIdentifierPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateUniqueDeviceIdentifierPayload"')
      return updateUniqueDeviceIdentifierPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateUserAppointmentPricingPayload_possibleTypes: string[] = ['updateUserAppointmentPricingPayload']
    export const isupdateUserAppointmentPricingPayload = (obj?: { __typename?: any } | null): obj is updateUserAppointmentPricingPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateUserAppointmentPricingPayload"')
      return updateUserAppointmentPricingPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateUserGroupPayload_possibleTypes: string[] = ['updateUserGroupPayload']
    export const isupdateUserGroupPayload = (obj?: { __typename?: any } | null): obj is updateUserGroupPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateUserGroupPayload"')
      return updateUserGroupPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateUserPayload_possibleTypes: string[] = ['updateUserPayload']
    export const isupdateUserPayload = (obj?: { __typename?: any } | null): obj is updateUserPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateUserPayload"')
      return updateUserPayload_possibleTypes.includes(obj.__typename)
    }
    


    const updateWebhookPayload_possibleTypes: string[] = ['updateWebhookPayload']
    export const isupdateWebhookPayload = (obj?: { __typename?: any } | null): obj is updateWebhookPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isupdateWebhookPayload"')
      return updateWebhookPayload_possibleTypes.includes(obj.__typename)
    }
    


    const uploadBatchToCandidHealthPayload_possibleTypes: string[] = ['uploadBatchToCandidHealthPayload']
    export const isuploadBatchToCandidHealthPayload = (obj?: { __typename?: any } | null): obj is uploadBatchToCandidHealthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuploadBatchToCandidHealthPayload"')
      return uploadBatchToCandidHealthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const uploadBatchToChangeHealthPayload_possibleTypes: string[] = ['uploadBatchToChangeHealthPayload']
    export const isuploadBatchToChangeHealthPayload = (obj?: { __typename?: any } | null): obj is uploadBatchToChangeHealthPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuploadBatchToChangeHealthPayload"')
      return uploadBatchToChangeHealthPayload_possibleTypes.includes(obj.__typename)
    }
    


    const uploadBatchToOfficeallyPayload_possibleTypes: string[] = ['uploadBatchToOfficeallyPayload']
    export const isuploadBatchToOfficeallyPayload = (obj?: { __typename?: any } | null): obj is uploadBatchToOfficeallyPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuploadBatchToOfficeallyPayload"')
      return uploadBatchToOfficeallyPayload_possibleTypes.includes(obj.__typename)
    }
    


    const uploadToIntegrationsPayload_possibleTypes: string[] = ['uploadToIntegrationsPayload']
    export const isuploadToIntegrationsPayload = (obj?: { __typename?: any } | null): obj is uploadToIntegrationsPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isuploadToIntegrationsPayload"')
      return uploadToIntegrationsPayload_possibleTypes.includes(obj.__typename)
    }
    


    const validateVerificationTokenPayload_possibleTypes: string[] = ['validateVerificationTokenPayload']
    export const isvalidateVerificationTokenPayload = (obj?: { __typename?: any } | null): obj is validateVerificationTokenPayload => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isvalidateVerificationTokenPayload"')
      return validateVerificationTokenPayload_possibleTypes.includes(obj.__typename)
    }
    

export const enumApiKeyOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const
}

export const enumAppliedTagOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   UNSORTED: 'UNSORTED' as const
}

export const enumAppointmentOrderKeys = {
   DATE_ASC: 'DATE_ASC' as const,
   DATE_DESC: 'DATE_DESC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UNSORTED: 'UNSORTED' as const
}

export const enumAppointmentTypeOrderKeys = {
   POSITION_ASC: 'POSITION_ASC' as const,
   POSITION_DESC: 'POSITION_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumBillingItemOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   AMOUNT_PAID_DESC: 'AMOUNT_PAID_DESC' as const,
   AMOUNT_PAID_ASC: 'AMOUNT_PAID_ASC' as const,
   PATIENT_FIRST_NAME_ASC: 'PATIENT_FIRST_NAME_ASC' as const,
   PATIENT_FIRST_NAME_DESC: 'PATIENT_FIRST_NAME_DESC' as const,
   PROVIDER_FIRST_NAME_ASC: 'PROVIDER_FIRST_NAME_ASC' as const,
   PROVIDER_FIRST_NAME_DESC: 'PROVIDER_FIRST_NAME_DESC' as const,
   METHOD_ASC: 'METHOD_ASC' as const,
   METHOD_DESC: 'METHOD_DESC' as const,
   STATE_ASC: 'STATE_ASC' as const,
   STATE_DESC: 'STATE_DESC' as const
}

export const enumCarePlanOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   CLIENT_FIRST_NAME_DESC: 'CLIENT_FIRST_NAME_DESC' as const,
   CLIENT_FIRST_NAME_ASC: 'CLIENT_FIRST_NAME_ASC' as const,
   DEACTIVATED_DESC: 'DEACTIVATED_DESC' as const,
   DEACTIVATED_ASC: 'DEACTIVATED_ASC' as const
}

export const enumChargeBackOrderKeys = {
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const
}

export const enumCms1500OrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   PRIMARY_PLAN_NAME_ASC: 'PRIMARY_PLAN_NAME_ASC' as const,
   PRIMARY_PLAN_NAME_DESC: 'PRIMARY_PLAN_NAME_DESC' as const,
   PATIENT_LAST_NAME_ASC: 'PATIENT_LAST_NAME_ASC' as const,
   PATIENT_LAST_NAME_DESC: 'PATIENT_LAST_NAME_DESC' as const,
   SERVICE_DATE_ASC: 'SERVICE_DATE_ASC' as const,
   SERVICE_DATE_DESC: 'SERVICE_DATE_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumConversationMembershipOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   CONVERSATION_CREATED_AT_ASC: 'CONVERSATION_CREATED_AT_ASC' as const,
   CONVERSATION_CREATED_AT_DESC: 'CONVERSATION_CREATED_AT_DESC' as const,
   CONVERSATION_UPDATED_AT_ASC: 'CONVERSATION_UPDATED_AT_ASC' as const,
   CONVERSATION_UPDATED_AT_DESC: 'CONVERSATION_UPDATED_AT_DESC' as const
}

export const enumCustomModuleFormOrderKeys = {
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   USER_LAST_NAME_DESC: 'USER_LAST_NAME_DESC' as const,
   USER_LAST_NAME_ASC: 'USER_LAST_NAME_ASC' as const,
   TYPE_ASC: 'TYPE_ASC' as const,
   TYPE_DESC: 'TYPE_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumDocumentOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const
}

export const enumDrugAllergenTypeEnum = {
   INGREDIENT: 'INGREDIENT' as const,
   CLASS: 'CLASS' as const
}

export const enumEntryOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   METRIC_STAT_ASC: 'METRIC_STAT_ASC' as const,
   METRIC_STAT_DESC: 'METRIC_STAT_DESC' as const,
   THIRD_PARTY_SOURCE_ASC: 'THIRD_PARTY_SOURCE_ASC' as const,
   THIRD_PARTY_SOURCE_DESC: 'THIRD_PARTY_SOURCE_DESC' as const,
   UNSORTED: 'UNSORTED' as const
}

export const enumFolderOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const
}

export const enumFormAnswerGroupOrderKeys = {
   RECORD_CREATED_AT_ASC: 'RECORD_CREATED_AT_ASC' as const,
   RECORD_CREATED_AT_DESC: 'RECORD_CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UNSORTED: 'UNSORTED' as const
}

export const enumFormHistoryAction = {
   created: 'created' as const,
   edited: 'edited' as const,
   opened: 'opened' as const,
   completed: 'completed' as const,
   skipped: 'skipped' as const
}

export const enumFormHistorySourceable = {
   RequestedFormCompletion: 'RequestedFormCompletion' as const,
   OnboardingItem: 'OnboardingItem' as const
}

export const enumFormStatus = {
   incomplete: 'incomplete' as const,
   completed: 'completed' as const,
   not_started: 'not_started' as const
}

export const enumFormType = {
   requested_forms: 'requested_forms' as const,
   recurring_forms: 'recurring_forms' as const,
   intake_forms: 'intake_forms' as const
}

export const enumGoalOrderKeys = {
   START_DATE_ASC: 'START_DATE_ASC' as const,
   START_DATE_DESC: 'START_DATE_DESC' as const,
   FREQUENCY_ASC: 'FREQUENCY_ASC' as const,
   FREQUENCY_DESC: 'FREQUENCY_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   DUE_DATE_ASC: 'DUE_DATE_ASC' as const,
   DUE_DATE_DESC: 'DUE_DATE_DESC' as const,
   DUE_DATE_START_DATE_DESC: 'DUE_DATE_START_DATE_DESC' as const
}

export const enumIcdCodeOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   CODE_ASC: 'CODE_ASC' as const,
   CODE_DESC: 'CODE_DESC' as const,
   FAVORITES_ASC: 'FAVORITES_ASC' as const,
   FAVORITES_DESC: 'FAVORITES_DESC' as const
}

export const enumIndividualClientNoteOrderKeys = {
   ATTENDED_DESC: 'ATTENDED_DESC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumIndividualClientNoteSorting = {
   ATTENDED_DESC: 'ATTENDED_DESC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumInsurancePlanOrderKeys = {
   ACCEPTED: 'ACCEPTED' as const,
   PAYER_NAME_ASC: 'PAYER_NAME_ASC' as const
}

export const enumIntakeFlowOrderKeys = {
   DATE_ASC: 'DATE_ASC' as const,
   DATE_DESC: 'DATE_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   TYPE_ASC: 'TYPE_ASC' as const,
   TYPE_DESC: 'TYPE_DESC' as const,
   REQUEST_DATE_ASC: 'REQUEST_DATE_ASC' as const,
   REQUEST_DATE_DESC: 'REQUEST_DATE_DESC' as const,
   COMPLETE_DATE_ASC: 'COMPLETE_DATE_ASC' as const,
   COMPLETE_DATE_DESC: 'COMPLETE_DATE_DESC' as const
}

export const enumLabOrderOrderKeys = {
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   LAB_ASC: 'LAB_ASC' as const,
   LAB_DESC: 'LAB_DESC' as const,
   APPT_ASC: 'APPT_ASC' as const,
   APPT_DESC: 'APPT_DESC' as const,
   CLIENT_LAST_NAME_ASC: 'CLIENT_LAST_NAME_ASC' as const,
   CLIENT_LAST_NAME_DESC: 'CLIENT_LAST_NAME_DESC' as const,
   PROVIDER_LAST_NAME_ASC: 'PROVIDER_LAST_NAME_ASC' as const,
   PROVIDER_LAST_NAME_DESC: 'PROVIDER_LAST_NAME_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumMfaType = {
   SMS: 'SMS' as const,
   EMAIL: 'EMAIL' as const
}

export const enumMonographFormat = {
   HTML: 'HTML' as const,
   XML: 'XML' as const
}

export const enumNoteOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumNotificationOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumOfferingCouponOrderKeys = {
   CODE_ASC: 'CODE_ASC' as const,
   CODE_DESC: 'CODE_DESC' as const,
   TYPE_ASC: 'TYPE_ASC' as const,
   TYPE_DESC: 'TYPE_DESC' as const,
   APPLIES_TO_ASC: 'APPLIES_TO_ASC' as const,
   APPLIES_TO_DESC: 'APPLIES_TO_DESC' as const,
   AMOUNT_ASC: 'AMOUNT_ASC' as const,
   AMOUNT_DESC: 'AMOUNT_DESC' as const,
   EXPIRES_AT_ASC: 'EXPIRES_AT_ASC' as const,
   EXPIRES_AT_DESC: 'EXPIRES_AT_DESC' as const,
   TOTAL_USAGE_ASC: 'TOTAL_USAGE_ASC' as const,
   TOTAL_USAGE_DESC: 'TOTAL_USAGE_DESC' as const
}

export const enumOfferingOrderKeys = {
   SET_ORDER: 'SET_ORDER' as const,
   PRICE_ASC: 'PRICE_ASC' as const,
   PRICE_DESC: 'PRICE_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   BEST_SELLER: 'BEST_SELLER' as const
}

export const enumOnboardingFlowOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   FORMS_COUNT_ASC: 'FORMS_COUNT_ASC' as const,
   FORMS_COUNT_DESC: 'FORMS_COUNT_DESC' as const
}

export const enumOrganizationMembershipOrderKeys = {
   LAST_NAME_ASC: 'LAST_NAME_ASC' as const,
   LAST_NAME_DESC: 'LAST_NAME_DESC' as const,
   FIRST_NAME_ASC: 'FIRST_NAME_ASC' as const,
   FIRST_NAME_DESC: 'FIRST_NAME_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   TYPE_ASC: 'TYPE_ASC' as const,
   TYPE_DESC: 'TYPE_DESC' as const,
   POSITION_ASC: 'POSITION_ASC' as const
}

export const enumOrganizationMembershipRole = {
   STANDARD: 'STANDARD' as const,
   SUPPORT: 'SUPPORT' as const
}

export const enumProductOrderKeys = {
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   QUANTITY_ASC: 'QUANTITY_ASC' as const,
   QUANTITY_DESC: 'QUANTITY_DESC' as const,
   PRICE_ASC: 'PRICE_ASC' as const,
   PRICE_DESC: 'PRICE_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumReceivedDirectMessageOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumReceivedFaxOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NUMBER_ASC: 'NUMBER_ASC' as const,
   NUMBER_DESC: 'NUMBER_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumReferringPhysicianOrderKeys = {
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   BUSINESS_NAME_ASC: 'BUSINESS_NAME_ASC' as const,
   BUSINESS_NAME_DESC: 'BUSINESS_NAME_DESC' as const,
   SPECIALITY_ASC: 'SPECIALITY_ASC' as const,
   SPECIALITY_DESC: 'SPECIALITY_DESC' as const,
   CITY_ASC: 'CITY_ASC' as const,
   CITY_DESC: 'CITY_DESC' as const,
   CLIENTS_REFERRED_ASC: 'CLIENTS_REFERRED_ASC' as const,
   CLIENTS_REFERRED_DESC: 'CLIENTS_REFERRED_DESC' as const
}

export const enumRequestedPaymentOrderKeys = {
   CLIENT_NAME_ASC: 'CLIENT_NAME_ASC' as const,
   CLIENT_NAME_DESC: 'CLIENT_NAME_DESC' as const,
   PROVIDER_NAME_ASC: 'PROVIDER_NAME_ASC' as const,
   PROVIDER_NAME_DESC: 'PROVIDER_NAME_DESC' as const,
   PRICE_ASC: 'PRICE_ASC' as const,
   PRICE_DESC: 'PRICE_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   TYPE_ASC: 'TYPE_ASC' as const,
   TYPE_DESC: 'TYPE_DESC' as const,
   INVOICE_ID_ASC: 'INVOICE_ID_ASC' as const,
   INVOICE_ID_DESC: 'INVOICE_ID_DESC' as const
}

export const enumSentDirectMessageOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumSentFaxOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NUMBER_ASC: 'NUMBER_ASC' as const,
   NUMBER_DESC: 'NUMBER_DESC' as const,
   STATUS: 'STATUS' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   CLIENT_LAST_NAME_ASC: 'CLIENT_LAST_NAME_ASC' as const,
   CLIENT_LAST_NAME_DESC: 'CLIENT_LAST_NAME_DESC' as const,
   SENDER_LAST_NAME_ASC: 'SENDER_LAST_NAME_ASC' as const,
   SENDER_LAST_NAME_DESC: 'SENDER_LAST_NAME_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumSentWebhookOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   EVENT_TYPE_ASC: 'EVENT_TYPE_ASC' as const,
   EVENT_TYPE_DESC: 'EVENT_TYPE_DESC' as const,
   URL_ASC: 'URL_ASC' as const,
   URL_DESC: 'URL_DESC' as const
}

export const enumSignedStreamName = {
   NOTES: 'NOTES' as const,
   CONVERSATION_MEMBERSHIPS: 'CONVERSATION_MEMBERSHIPS' as const
}

export const enumStripeCustomerDetailOrderKeys = {
   EXPIRATION_DATE_DESC: 'EXPIRATION_DATE_DESC' as const,
   EXPIRATION_DATE_ASC: 'EXPIRATION_DATE_ASC' as const,
   PATIENT_FIRST_NAME_ASC: 'PATIENT_FIRST_NAME_ASC' as const,
   PATIENT_FIRST_NAME_DESC: 'PATIENT_FIRST_NAME_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumSuperBillOrderKeys = {
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   SERVICE_DATE_ASC: 'SERVICE_DATE_ASC' as const,
   SERVICE_DATE_DESC: 'SERVICE_DATE_DESC' as const,
   AMOUNT_PAID_ASC: 'AMOUNT_PAID_ASC' as const,
   AMOUNT_PAID_DESC: 'AMOUNT_PAID_DESC' as const,
   AMOUNT_BILLED_ASC: 'AMOUNT_BILLED_ASC' as const,
   AMOUNT_BILLED_DESC: 'AMOUNT_BILLED_DESC' as const,
   STATUS: 'STATUS' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const
}

export const enumTagOrderKeys = {
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   ACTIVE_USERS_DESC: 'ACTIVE_USERS_DESC' as const,
   ACTIVE_USERS_ASC: 'ACTIVE_USERS_ASC' as const,
   ADDED_BY_DESC: 'ADDED_BY_DESC' as const,
   ADDED_BY_ASC: 'ADDED_BY_ASC' as const,
   ORG_MEMBERS_ASC: 'ORG_MEMBERS_ASC' as const,
   ORG_MEMBERS_DESC: 'ORG_MEMBERS_DESC' as const
}

export const enumTaskOrderKeys = {
   TASK_ASC: 'TASK_ASC' as const,
   TASK_DESC: 'TASK_DESC' as const,
   CREATOR_ASC: 'CREATOR_ASC' as const,
   CREATOR_DESC: 'CREATOR_DESC' as const,
   ASSIGNEE_ASC: 'ASSIGNEE_ASC' as const,
   ASSIGNEE_DESC: 'ASSIGNEE_DESC' as const,
   CREATED_ASC: 'CREATED_ASC' as const,
   CREATED_DESC: 'CREATED_DESC' as const,
   PRIORITY_ASC: 'PRIORITY_ASC' as const,
   PRIORITY_DESC: 'PRIORITY_DESC' as const,
   DUE_DATE_ASC: 'DUE_DATE_ASC' as const,
   DUE_DATE_DESC: 'DUE_DATE_DESC' as const,
   CLIENT_NAME_DESC: 'CLIENT_NAME_DESC' as const,
   CLIENT_NAME_ASC: 'CLIENT_NAME_ASC' as const,
   COMPLETED_AT_ASC: 'COMPLETED_AT_ASC' as const,
   COMPLETED_AT_DESC: 'COMPLETED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const
}

export const enumTransferOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   AMOUNT_DESC: 'AMOUNT_DESC' as const,
   AMOUNT_ASC: 'AMOUNT_ASC' as const,
   STATUS_DESC: 'STATUS_DESC' as const,
   STATUS_ASC: 'STATUS_ASC' as const,
   EXPECTED_TO_HAPPEN_ASC: 'EXPECTED_TO_HAPPEN_ASC' as const,
   EXPECTED_TO_HAPPEN_DESC: 'EXPECTED_TO_HAPPEN_DESC' as const,
   TRANSACTIONS_COUNT_ASC: 'TRANSACTIONS_COUNT_ASC' as const,
   TRANSACTIONS_COUNT_DESC: 'TRANSACTIONS_COUNT_DESC' as const
}

export const enumUserGroupOrderKeys = {
   INVITE_CODE_ASC: 'INVITE_CODE_ASC' as const,
   INVITE_CODE_DESC: 'INVITE_CODE_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   NAME_ASC: 'NAME_ASC' as const,
   NAME_DESC: 'NAME_DESC' as const,
   USERS_COUNT_ASC: 'USERS_COUNT_ASC' as const,
   USERS_COUNT_DESC: 'USERS_COUNT_DESC' as const
}

export const enumUserOrderKeys = {
   EMAIL_ASC: 'EMAIL_ASC' as const,
   EMAIL_DESC: 'EMAIL_DESC' as const,
   FIRST_NAME_ASC: 'FIRST_NAME_ASC' as const,
   FIRST_NAME_DESC: 'FIRST_NAME_DESC' as const,
   LAST_NAME_DESC: 'LAST_NAME_DESC' as const,
   LAST_NAME_ASC: 'LAST_NAME_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   UPDATED_AT_DESC: 'UPDATED_AT_DESC' as const,
   UPDATED_AT_ASC: 'UPDATED_AT_ASC' as const,
   GROUP_NAME_ASC: 'GROUP_NAME_ASC' as const,
   GROUP_NAME_DESC: 'GROUP_NAME_DESC' as const,
   PROVIDER_NAME_ASC: 'PROVIDER_NAME_ASC' as const,
   PROVIDER_NAME_DESC: 'PROVIDER_NAME_DESC' as const,
   NEXT_APPT_DATE_ASC: 'NEXT_APPT_DATE_ASC' as const,
   NEXT_APPT_DATE_DESC: 'NEXT_APPT_DATE_DESC' as const
}

export const enumWebhookOrderKeys = {
   CREATED_AT_ASC: 'CREATED_AT_ASC' as const,
   CREATED_AT_DESC: 'CREATED_AT_DESC' as const,
   EVENT_TYPE_ASC: 'EVENT_TYPE_ASC' as const,
   EVENT_TYPE_DESC: 'EVENT_TYPE_DESC' as const,
   URL_ASC: 'URL_ASC' as const,
   URL_DESC: 'URL_DESC' as const
}
